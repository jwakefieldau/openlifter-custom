{"version":3,"sources":["components/lifting/LiftingHeader.module.scss","components/lifting/LiftingView.module.scss","components/meet-setup/ColorPicker.module.scss","components/results/ResultsView.module.scss","components/flight-order/OneFlightOrder.module.scss","components/lifting/BarLoad.module.scss","components/lifting/LiftingTable.module.scss","components/common/ContentArea.module.scss","serviceWorker.js","translations/index.ts","components/translations/OpenLifterIntlProvider.tsx","components/translations/LanguageSelector.tsx","actions/languageActions.ts","actions/globalActions.ts","types/utils.ts","logic/units.ts","logic/strings.ts","versions.ts","reducers/versionsReducer.ts","logic/date.ts","constants/plateColors.ts","reducers/meetReducer.ts","logic/entry.ts","reducers/registrationReducer.ts","reducers/liftingReducer.ts","reducers/rootReducer.ts","reducers/languageReducer.ts","components/home/NewMeetModal.tsx","components/ErrorModal.tsx","containers/HomeContainer.tsx","components/ValidatedInput.tsx","actions/meetSetupActions.ts","components/meet-setup/MeetDate.tsx","components/common/NumberInput.tsx","components/meet-setup/MeetLength.tsx","components/meet-setup/PlatformCount.tsx","components/meet-setup/PlatformCounts.tsx","components/meet-setup/AutoFillRules.tsx","components/meet-setup/DivisionSelect.tsx","components/meet-setup/WeightClassesSelect.tsx","components/meet-setup/BarAndCollarsWeightKg.tsx","components/meet-setup/ColorPicker.tsx","components/meet-setup/PlateInput.tsx","components/meet-setup/Plates.tsx","components/common/YesNoButton.tsx","components/meet-setup/MeetSetup.tsx","containers/MeetSetupContainer.tsx","components/registration/LifterTable.tsx","components/translations/LocalizedString.tsx","validation/iso8601Date.ts","validation/positiveInteger.ts","actions/registrationActions.ts","components/registration/LifterRow.tsx","components/registration/NewButton.tsx","logic/export/csv.ts","logic/parsers.ts","logic/export/registrations.ts","components/debug/RandomizeHelpers.ts","components/registration/RegistrationView.tsx","logic/import/registration-csv.ts","containers/RegistrationContainer.tsx","components/weighins/LifterTable.tsx","actions/liftingActions.ts","components/weighins/WeightInput.tsx","components/weighins/LifterRow.tsx","components/weighins/WeighinsView.tsx","containers/WeighinsContainer.tsx","logic/barLoad.ts","components/lifting/BarLoad.tsx","components/lifting/LeftCard.tsx","components/lifting/AttemptInput.tsx","logic/coefficients/ah.ts","logic/coefficients/dots.ts","logic/coefficients/foster-mcculloch.ts","logic/coefficients/schwartzmalone.ts","logic/coefficients/wilks.ts","logic/coefficients/glossbrenner.ts","logic/coefficients/goodlift.ts","logic/coefficients/ipf.ts","logic/coefficients/reshel.ts","logic/coefficients/wilks2020.ts","logic/coefficients/coefficients.ts","logic/coefficients/bodyweight-multiple.ts","logic/coefficients/nasa.ts","logic/liftingOrder.ts","logic/divisionPlace.ts","components/lifting/LiftingTable.tsx","components/lifting/LiftingFooter.tsx","components/lifting/LiftingHeader.tsx","components/lifting/ColumnWidth.tsx","components/lifting/LiftingView.tsx","containers/LiftingContainer.tsx","components/flight-order/OneFlightOrder.tsx","components/flight-order/FlightOrderView.tsx","containers/FlightOrderContainer.tsx","components/results/ByDivision.tsx","logic/pointsPlace.ts","components/results/ByPoints.tsx","logic/export/oplcsv.ts","logic/export/usapl.ts","components/results/ResultsView.tsx","containers/ResultsContainer.tsx","components/debug/RandomizeMeetSetup.tsx","components/debug/RandomizeRegistration.tsx","components/debug/RandomizeWeighins.tsx","components/debug/RandomizeLifting.tsx","components/debug/StateTools.tsx","containers/DebugContainer.tsx","containers/AboutContainer.tsx","containers/RootContainer.tsx","components/Navigation.tsx","store.ts","App.tsx","index.tsx","components/lifting/LiftingFooter.module.scss","components/lifting/LeftCard.module.scss"],"names":["module","exports","Boolean","window","location","hostname","match","languages","de","el","eo","en","es","et","fr","hr","it","lt","nl","pt","ru","tr","uk","OpenLifterIntlProvider","language","this","props","Error","messages","translations","locale","defaultLocale","children","React","connect","state","languageOptions","value","LanguageSelector","FormControl","as","onChange","changeLanguage","className","Component","dispatch","event","type","currentTarget","overwriteStore","store","isString","assertString","result","assertFlight","flight","kg2lbs","kg","lbs2kg","lbs","string2number","s","Number","replace","displayWeight","weight","lang","undefined","rounded","Math","round","Intl","NumberFormat","useGrouping","maximumFractionDigits","format","displayWeightOnePlace","truncated","trunc","displayPoints","points","minimumFractionDigits","displayNumber","number","displayPlaceOrdinal","entry","sex","getString","id","localizeEquipment","equipment","delocalizeEquipment","text","localizeEvent","delocalizeEvent","localizeFlight","delocalizeFlight","localizeSex","delocalizeSex","localizeWeightClassStr","wtcls","isSHW","endsWith","asNumber","getDefaultLanguage","navigator","i","length","releaseVersion","process","initialState","stateVersion","localDateToIso8601","d","year","getFullYear","month","getMonth","day","getDate","yearStr","String","monthStr","dayStr","PlateColors","PLATE_DEFAULT_BLACK","PLATE_DEFAULT_WHITE","PLATE_DEFAULT_BLUE","PLATE_DEFAULT_GREEN","PLATE_DEFAULT_GRAY","PLATE_DEFAULT_RED","PLATE_DEFAULT_YELLOW","PLATE_DEFAULT_ORANGE","PLATE_DEFAULT_PINK","PLATE_DEFAULT_PURPLE","defaultPlatesKg","weightKg","pairCount","color","defaultPlatesLbs","name","country","city","federation","date","Date","lengthDays","platformsOnDays","divisions","weightClassesKgMen","weightClassesKgWomen","weightClassesKgMx","formula","ageCoefficients","combineSleevesAndWraps","combineSingleAndMulti","allow4thAttempts","inKg","showAlternateUnits","squatBarAndCollarsWeightKg","benchBarAndCollarsWeightKg","deadliftBarAndCollarsWeightKg","plates","getWeightClassStr","classes","bodyweightKg","wtclsStrKg2Lbs","kgcls","shw","floor","getWeightClassLbsStr","newDefaultEntry","platform","birthDate","age","intendedWeightClassKg","events","lot","memberId","paid","team","guest","notes","squatRackInfo","benchRackInfo","squatKg","benchKg","deadliftKg","squatStatus","benchStatus","deadliftStatus","getAge","meetDate","split","map","my","mm","md","by","bm","bd","years","getBest5SquatKg","best3SquatKg","max","getBest5BenchKg","best3BenchKg","getBest5DeadliftKg","best3DeadliftKg","getProjectedTotalKg","best3Squat","best3Bench","best3Dead","getProjectedEventTotalKg","includes","getBest3SquatKg","getBest3BenchKg","getBest3DeadliftKg","getFinalTotalKg","getFinalEventTotalKg","getLiftersOnDay","entries","filter","liftToAttemptFieldName","lift","liftToStatusFieldName","entryHasLifted","liftingPresentOnPlatform","nextEntryId","lookup","overrideAttempt","overrideEntryId","columnDivisionWidthPx","combineReducers","versions","action","meet","numDays","diff","newPlatformsOnDays","slice","push","count","defaultPlates","defaultBar","classesKg","index","findIndex","p","newPlates","changes","newState","Object","assign","registration","obj","overwriteDefaults","newEntry","previousEntry","entryId","item","attemptOneIndexed","field","newEntries","oldEntry","newarray","newfields","success","status","fieldStatus","platformEntries","e","updatedEntries","lotNumbers","lifting","attempt","combined","NewMeetModal","Modal","show","onHide","close","Header","closeButton","Title","defaultMessage","values","meetName","Body","Footer","Button","onClick","variant","to","defaultStore","rootReducer","ErrorModal","title","error","centerConsole","maxWidth","marginRight","marginLeft","buttonMargin","marginBottom","HomeContainer","handleLoadClick","loadhelper","document","getElementById","click","handleNewClick","setState","showNewMeetModal","closeConfirmModal","closeErrorModal","handleLoadFileInput","loadHelper","HTMLInputElement","files","selectedFile","redux","rememberThis","reader","FileReader","onload","errored","JSON","parse","target","err","readAsText","handleSaveClick","meetname","stringify","blob","Blob","saveAs","renderContinueButton","block","style","bind","newMeetButton","betaWarning","wrongVersion","dataReleaseVersion","warning","oldVersion","thisVersion","Card","styles","contentArea","alt","src","width","margin","display","Container","Row","Col","href","otherVersion","rel","textAlign","releaseDate","accept","BirthDateInput","validate","handleKeyDown","key","blur","handleChange","handleBlur","initialValue","onSuccess","validation","maybeLabel","label","Form","Label","Group","keepMargin","Control","placeholder","disabled","onKeyDown","onBlur","isValid","isInvalid","setDivisions","setLengthDays","setPlatformsOnDays","setWeightClasses","updateMeet","registerLocale","zh_CN","MeetDate","initialDate","parseInt","setFullYear","iso8601ToLocalDate","FormGroup","dateFormat","selected","setMeetDate","inline","NumberInput","num","handleDecrement","handleStep","step","handleIncrement","n","multiple","abs","ceil","InputGroup","Prepend","borderRight","onMouseDown","icon","faMinus","Append","borderLeft","faPlus","MeetLength","isInteger","days","PlatformCount","PlatformCounts","createPlatformInputs","inputs","traditionalDefaults","bpDefaults","gpcDefaults","rpsDefaults","spfDefaults","upaDefaults","usaplDefaults","uspaDefaults","uspcDefaults","wabdlDefaults","wpDefaults","wpcDefaults","wppoDefaults","wrpfDefaults","AutoFillRules","handleSelectChange","selectedOption","handleClick","stringTraditional","stringBP","stringGPC","stringRPS","stringSPF","stringUPA","stringUSAPL","stringUSPA","stringUSPC","stringWABDL","stringWP","stringWPC","stringWPPO","stringWRPF","components","DropdownIndicator","DivisionSelect","maybeUpdateRedux","objarray","Array","handleInputChange","inputValue","preventDefault","newValue","division","isMulti","menuIsOpen","onInputChange","createOption","WeightClassesSelect","isNaN","isFinite","sort","a","b","c","selectClassesBySex","ownProps","BarAndCollarsWeightKg","getInitialBarAndCollarsWeightKg","setBarAndCollarsWeightKg","getLiftLabel","ColorPicker","clearTimeout","timeoutId","displayColorPicker","handleMouseLeave","setTimeout","handleMouseEnter","clientX","hex","toUpperCase","colors","picker","Popper","placement","ref","onTop","data-placement","triangle","onMouseLeave","onMouseEnter","swatch","background","PlateInput","Plates","validateAmountInput","widget","asNum","updateHandler","amount","isNumber","setPlateConfig","renderWeightRow","plateRows","unitId","stringPlate","Table","striped","size","hover","YesNoButton","ButtonGroup","active","setValue","no","yes","MeetSetup","validateRequiredText","ticker","stringMeetName","stringFederation","stringCountry","stringStateProvince","stringCityTown","stringKilograms","stringPounds","stringMensClasses","stringWomensClasses","stringMxClasses","stringAH","stringBodyweightMultiple","stringDots","stringGlossbrenner","stringIPFGLPoints","stringIPFPoints","stringNASAPoints","stringSchwartzMalone","stringTotal","stringWilks","stringWilks2020","stringNone","stringFosterMcCulloch","stringNo","stringYes","stringAlsoKilograms","stringAlsoPounds","ValidatedInput","setMeetName","setFederation","setCountry","setCity","setFormula","setAgeCoefficients","setCombineSleevesAndWraps","setCombineSingleAndMulti","setAllow4thAttempts","setInKg","setShowAlternateUnits","fed","bool","assertFormula","assertAgeCoefficients","MeetSetupContainer","LifterTable","LifterRow","rowRenderer","renderRows","LocalizedString","Consumer","intl","validateEuropeanDate","pieces","onlyNumbers","validatePositiveInteger","inclusiveMax","startsWith","newRegistration","deleteRegistration","updateRegistration","updateRegistrationMemberId","updateRegistrationBirthDate","updateRegistrationAge","updateRegistrationCountry","updateRegistrationState","updateRegistrationGuest","updateRegistrationTeam","updateRegistrationInstagram","instagram","updateRegistrationNotes","validateAge","pos","selectedDay","deleteRegistrationClick","updateRegistrationDay","updateRegistrationPlatform","updateRegistrationFlight","updateRegistrationName","updateRegistrationSex","updateRegistrationLot","updateRegistrationDivisions","updateRegistrationEvents","updateRegistrationEquipment","assertSex","dayOptions","platformOptions","divisionOptions","selectedDivisions","selectedEvents","gridStyle","padding","stringState","stringBirthDatePlaceholder","stringMemberIdPlaceholder","stringSelectPlaceholder","eventOptions","overflow","minWidth","toString","menuPlacement","options","isClearable","min","Text","NewButton","csvString","x","trim","csvDate","iso8601","getSpreadsheetColumnName","alphabet","acc","mod","remainder","Csv","fieldnames","rows","indexOf","namelist","concat","j","splice","removeColumnByIndex","empty","removeEmptyColumns","lines","row","headers","join","strRows","parseInteger","charcode","charCodeAt","parseEuropeanDate","boolToYesNo","randomString","random","substr","randomInt","randomFixedPoint","fixedPoints","power","pow","randomAttemptWithMin","randomAttempt","globalImportKind","RegistrationView","handleDownloadCsvTemplateClick","csv","division1","division2","division3","event1","event2","event3","birthdate","memberid","appendColumns","makeExampleRegistrationsCsv","global","filename","handleExportCsvClick","division_template","event_template","col_day","col_platform","col_flight","col_name","col_sex","col_equipment","col_division1","col_event1","col_birthdate","col_age","col_squatRackInfo","col_benchRackInfo","col_memberid","col_country","col_state","col_lot","col_guest","col_team","col_instagram","col_notes","fill","column","prevIndex","insertColumn","makeRegistrationsCsv","handleOverwriteClick","handleSequentialLotNumbersClick","updateLotNumbers","handleRandomLotNumbersClick","handleRemoveLotNumbersClick","manipulation","_entry","array","numElements","switchIndex","temp","shuffle","assignLotNumbers","handleAppendClick","maybeError","fromString","maybeEntries","col_division2","col_division3","col_division4","col_division5","col_event2","col_event3","col_event4","col_event5","MANDATORY_FIELDNAMES","OPTIONAL_FIELDNAMES","colname","allfields","iname","jname","errprefix_template","fieldname","val","rowstr","errprefix","integer","platforms","m","f","mx","bare","sleeves","wraps","single","multi","evt","sbd","sb","sd","loadRegistrations","entryIds","alert","onloadstart","isLoadingFiles","onloadend","numEntries","dropdownIconStyle","faSpinner","spin","vertical","DropdownButton","Dropdown","Item","faSort","faRandom","faTimes","RegistrationContainer","inLiftingPage","renderHeader","shortStyle","bodyweightId","squatId","benchId","deadliftId","enterAttempt","markLift","WeightInput","weightNum","weightStr","multipleOf","updateRegistrationSquatRackInfo","updateRegistrationBenchRackInfo","validateRack","hasSquat","hasBench","hasDeadlift","disableSquatWeight","disableBenchWeight","disableDeadliftWeight","ageStr","WeighinsView","getNumDaysFromEntries","max_day","dayCards","lifters","dayNumber","WeighinsContainer","safeKg2Lbs","selectPlates","loadingKg","barAndCollarsWeightKg","loadingAny","barAndCollarsWeightAny","platesAny","sortedPlates","sideWeightKg","loading","weightAny","isAlreadyLoaded","findWeightFrom","startFrom","kgToStyleMap","Map","kg50","kg25","kg20","kg15","kg10","kg5","kg2p5","kg1p25","kg1","kg0p75","kg0p5","kg0p25","lbsToStyleMap","lbs100","lbs55","lbs45","lbs35","lbs25","lbs10","lbs5","lbs2p5","lbs1p25","lbs0p5","weightTextMap","weightAnyToText","get","PlatesDiv","weightLbs","divs","plateCount","showCounter","plate","counter","is_light","backgroundColor","opacity","border","RackInfoDiv","rackInfo","container","bar","collar","LeftCard","getBarLoadProps","fieldKg","idx","getBarAndCollarsWeightKg","current","currentEntryId","next","nextAttemptOneIndexed","weightKgText","weightLbsText","currentLoading","nextLoading","relativeTo","finger","loadedPlate","makeLoadingRelative","nextEntryName","nextBarLoad","loadingBar","nextText","lifter","barArea","attemptTemplate","activeCard","attemptText","AttemptInput","asKg","prevAttemptOneIndexed","prevWeightKg","prevStatus","fixups","lastGoodValue","attemptInput","ah","totalKg","adjusted","log10","ahMen","ahWomen","dotsPoly","x2","x3","dots","dotsMen","dotsWomen","AGE_COEFFICIENTS","fosterMcCulloch","schwartz_coefficient","malone_coefficient","wilksPoly","x4","wilksMen","wilksWomen","glossbrenner","glossbrenner_coefficient_men","glossbrenner_coefficient_women","PARAMETERS","M","Sleeves","SBD","B","F","S","D","reshel","normalized","reshelMen","reshelWomen","wilks2020Poly","wilks2020","wilks2020Men","wilks2020Women","getPoints","bodyweight_multiple","normalizedEquipment","normalizedSex","params","denom","exp","glp","goodlift","bw_log","log","ipfpoints","nasapoints","schwartzmalone","wilks","getAgeAdjustedPoints","getNextAttemptNumberForEntry","weightsKg","statuses","MAX_ATTEMPTS","getMaxAttemptNumberForEntry","compareEntriesByAttempt","aKg","bKg","orderEntriesByAttempt","getLiftingOrder","entriesInFlight","earliestAttemptOneIndexed","latestAttemptOneIndexed","getActiveAttemptNumber","orderedEntries","attemptZeroIndexed","existsNextAttempt","existsPrevAttempt","byNextAttempt","byThisAttempt","byPrevAttempt","notLifting","prototype","orderEntriesForAttempt","getCurrentEntryId","nextEntryInfo","currentEntryIndex","hasAttempt","notTaken","getNextEntryInfo","categoryToKey","category","keyToCategory","getLastSuccessfulLift","getLastSuccessfulAttempt","sortByPlaceInCategory","clonedEntries","aTotal","bTotal","aLastSuccessfulLift","bLastSuccessfulLift","aLastSuccessfulLiftIndex","bLastSuccessfulLiftIndex","aLastSuccessfulAttempt","bLastSuccessfulAttempt","getEventSortOrder","ev","getEquipmentSortOrder","eq","getSexSortOrder","mapSexToClasses","men","women","getAllResults","categoryMap","classesForSex","weightClassStr","numDivisions","dividx","evidx","catEntries","set","results","catA","catB","aSex","bSex","aEvent","bEvent","aEquipment","bEquipment","aIsSHW","bIsSHW","sortCategoryResults","getFinalResults","globalFocusAttemptInputId","globalHighestAttemptInputAttempt","LiftingTable","renderBest3AttemptField","columnType","best3","lightestFailed","nolift","renderAttemptField","wStr","displayStr","attemptInputCell","maybeNegative","anyPreviousAttemptTaken","currentAndHasPrevious","nextAndTookLast","meetState","renderCell","categoryResults","cell","textCell","bw","bwStr","weightClass","firstDiv","spacerCell","ordinal","columns","cells","col","rowClassName","getColumnHeaderLabel","useProjected","highlightColumn","smallCell","nameCell","divisionCell","activeColumn","liftingtable","LiftingFooter","handleDayChange","setLiftingGroup","handlePlatformChange","handleFlightChange","handleLiftChange","assertLift","handleAttemptChange","handleLifterChange","setFocusAttemptInputTimeout","elem","focus","handleOnMouseEnter","activeElement","HTMLElement","handleGoodLift","handleNoLift","hasFullscreenElement","doc","fullscreenElement","webkitFullscreenElement","mozFullscreenElement","msFullscreenElement","exitFullscreen","webkitExitFullscreen","mozExitFullscreen","msExitFullscreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullscreen","msRequestFullscreen","handleFullscreen","liftingView","makeLifterOptions","lifterOptions","numPlatforms","dayTemplate","platformTemplate","liftOptions","flightOptions","flightTemplate","flightsOnPlatform","attemptOptions","footer","leftControls","selector","rightControls","toggleReplaceTableWithWeighins","fullscreen","noLift","goodLift","LiftingHeader","lifterName","info","infoBuilder","header","logo","height","ColumnWidth","fieldName","setTableInfo","pattern","LiftingView","replaceTableWithWeighins","now","rightElement","middleParentContainer","leftCardContainer","rightCardContainer","entriesOnPlatform","flights","LiftingContainer","OneFlightOrder","getOrderBy","entriesForLift","position","bySquat","byBench","byDeadlift","maxRows","builder","content","renderName","leftDivider","getColumnHeader","FlightOrderView","updateDay","updatePlatform","handlePrint","print","selectorStyle","shownEntries","knownFlights","flightOrders","FlightOrderContainer","ByDivision","renderEntryRow","place","pointsStr","squat","bench","deadlift","weightTemplate","weightString","mapSexToLabel","renderCategoryResults","eqpstr","units","marginTop","categoryCards","panel","sortByFormulaPlaceInCategory","indexMap","memoizedPoints","aIndex","bIndex","aPoints","bPoints","getAllRankings","sortPointsCategoryResults","ByPoints","rank","firstDivision","total","categoryString","agePointsCategory","addEntriesRow","cls","unit","finalEventTotalKg","standardizeEquipment","exportAsOplCsv","meetCsv","rules","makeMeetCsv","entriesCsv","squatFieldnames","benchFieldnames","deadliftFieldnames","meet_date","makeEntriesCsv","addDataRow","hasDL","makeBirthDate","translateEvent","globalMergeDay","globalMergePlatform","ResultsView","makeDayOptions","justDayTemplate","handleByChange","assertValidResultsBy","handleExportAsOplCsvClick","handleExportAsUSAPLCsvClick","exportAsUSAPLCsv","handleExportPlatformClick","exportname","handleMergePlatformClick","mergePlatform","makePlatformMergeButtons","platformsHaveLifted","ret","platformsOnDay","getWhetherPlatformsHaveLifted","combineTemplate","mergeTemplate","exportTemplate","forms","liftedOnDay","buttons","lifted","marginStyle","actionTemplate","daySelector","dropdown","CardDeck","fontWeight","controlCard","ResultsContainer","NonsenseFederations","NonsenseDivisions","RandomizeMeetSetupButton","randomizeMeetSetup","numClassesMen","numClassesWomen","classesMen","classesWomen","classesMx","div","age_lower","age_upper","NonsenseFirstNames","NonsenseLastNames","RandomizeRegistrationButton","deleteExistingRegistrations","generateEntries","randomizeRegistration","numLifters","sexes","isGuest","teams","equipmentSelect","divisionsUpperBound","divchooser","choice","FLIGHTCHARS","numFlights","RandomizeWeighinsButton","randomizeWeighins","safety","RandomizeLiftingButton","randomizeLifting","setLiftsForLift","firstAttempt","secondAttempt","thirdAttempt","StateTools","reInitializeRedux","localStorage","clear","reload","RandomizeMeetSetup","RandomizeRegistration","RandomizeWeighins","RandomizeLifting","DebugContainer","AboutContainer","RootContainer","search","Navigation","Navbar","sticky","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","exact","Link","persistConfig","storage","persistedReducer","persistReducer","App","createStore","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","configureStore","basename","path","component","rootElement","ReactDOM","render","serviceWorker","ready","then","unregister"],"mappings":"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,OACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QAEFC,mBAAoB,CAAC,GAAI,GAAI,GAAI,KAAM,GAAI,KAAM,GAAI,IAAK,IAAK,IAAK,KACpEC,qBAAsB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,KAAM,GAAI,KAAM,IAC3DC,kBAAmB,CAAC,GAAI,GAAI,GAAI,KAAM,GAAI,KAAM,GAAI,IAAK,IAAK,IAAK,KACnEC,QAAS,QACTC,gBAAiB,kBACjBC,wBAAwB,EACxBC,uBAAuB,EACvBC,kBAAkB,GAGdqR,GAAiC,CACrC7R,UAAW,CACT,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OAEFC,mBAAoB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,KAClDC,qBAAsB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACnDC,kBAAmB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,KACjDC,QAAS,gBACTC,gBAAiB,kBACjBC,wBAAwB,EACxBC,uBAAuB,EACvBC,kBAAkB,GAGdsR,GAAkC,CACtC9R,UAAW,CACT,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SAEFC,mBAAoB,CAAC,GAAI,GAAI,KAAM,GAAI,KAAM,GAAI,IAAK,IAAK,IAAK,KAChEC,qBAAsB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,KAAM,GAAI,KAAM,GAAI,KAC/DC,kBAAmB,CAAC,GAAI,GAAI,KAAM,GAAI,KAAM,GAAI,IAAK,IAAK,IAAK,KAC/DC,QAAS,eACTC,gBAAiB,kBACjBC,wBAAwB,EACxBC,uBAAuB,EACvBC,kBAAkB,GAGduR,GAAkC,CACtmBAAoB,CAAC,GAAI,GAAI,GAAI,KAAM,GAAI,KAAM,GAAI,IAAK,IAAK,IAAK,IAAK,KACzEC,qBAAsB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,KAAM,GAAI,KAAM,GAAI,IAAK,KACpEC,kBAAmB,CAAC,GAAI,GAAI,GAAI,KAAM,GAAI,KAAM,GAAI,IAAK,IAAK,IAAK,IAAK,KACxEC,QAAS,QACTC,gBAAiB,kBACjBC,wBAAwB,EACxBC,uBAAuB,EACvBC,kBAAkB,GAGdwR,GAAkC,CACtChS,UAAW,CACT,OACA,WACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,OACA,MACA,YAEFC,mBAAoB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,KAAM,GAAI,KAAM,GAAI,IAAK,IAAK,IAAK,IAAK,KACjFC,qBAAsB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,KAAM,GAAI,KAAM,GAAI,IAAK,KACpEC,kBAAmB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,KAAM,GAAI,KAAM,GAAI,IAAK,IAAK,IAAK,IAAK,KAChFC,QAAS,kBACTC,gBAAiB,kBACjBC,wBAAwB,EACxBC,uBAAuB,EACvBC,kBAAkB,GAGdyR,GAAkC,CACtCjS,UAAW,CACT,KACA,QACA,MACA,SACA,KACA,QACA,MACA,SACA,OACA,UACA,MACA,SACA,OACA,UACA,QACA,WACA,MACA,SACA,OACA,UACA,QACA,WACA,MACA,SACA,OACA,UACA,QACA,WACA,MACA,SACA,OACA,UACA,QACA,WACA,MACA,SACA,OACA,UACA,QACA,WACA,MACA,SACA,OACA,UACA,QACA,WACA,MACA,SACA,OACA,UACA,QACA,WACA,MACA,SACA,OACA,UACA,QACA,WACA,MACA,SACA,OACA,UACA,QACA,WACA,MACA,SACA,OACA,UACA,QACA,WACA,KACA,QACA,MACA,SACA,OACA,UACA,OACA,UACA,KACA,QACA,MACA,SACA,OACA,UACA,MACA,SACA,OACA,UACA,QACA,WACA,MACA,SACA,OACA,UACA,QACA,WACA,MACA,SACA,OACA,UACA,QACA,WACA,MACA,SACA,OACA,UACA,QACA,WACA,KACA,QACA,MACA,SACA,KACA,QACA,MACA,SACA,OACA,UACA,MACA,SACA,OACA,UACA,QACA,WACA,MACA,SACA,OACA,UACA,QACA,WACA,MACA,SACA,OACA,UACA,QACA,WACA,MACA,SACA,OACA,UACA,QACA,WACA,MACA,SACA,OACA,UACA,QACA,WACA,MACA,SACA,OACA,UACA,QACA,WACA,MACA,SACA,OACA,UACA,QACA,WACA,MACA,SACA,OACA,UACA,QACA,WACA,MACA,SACA,OACA,UACA,QACA,WACA,MACA,SACA,OACA,UACA,QACA,WACA,KACA,QACA,MACA,SACA,OACA,UACA,OACA,UACA,KACA,QACA,MACA,SACA,OACA,UACA,MACA,SACA,OACA,UACA,QACA,WACA,MACA,SACA,OACA,UACA,QACA,WACA,MACA,SACA,OACA,UACA,QACA,WACA,MACA,SACA,OACA,UACA,QACA,YAEFC,mBAAoB,CAAC,GAAI,GAAI,GAAI,KAAM,GAAI,KAAM,GAAI,IAAK,IAAK,IAAK,KACpEC,qBAAsB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,KAAM,GAAI,KAAM,IAC3DC,kBAAmB,CAAC,GAAI,GAAI,GAAI,KAAM,GAAI,KAAM,GAAI,IAAK,IAAK,IAAK,KACnEC,QAAS,kBACTC,gBAAiB,kBACjBC,wBAAwB,EACxBC,uBAAuB,EACvBC,kBAAkB,GAGd0R,GAAoC,CACxClS,UAAW,CACT,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,OACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,MACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,OACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OAEFC,mBAAoB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,KAClDC,qBAAsB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACnDC,kBAAmB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,KACjDC,QAAS,gBACTC,gBAAiB,kBACjBC,wBAAwB,EACxBC,uBAAuB,EACvBC,kBAAkB,GAGd2R,GAAmC,CACvCnS,UAAW,CACT,OACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QAEFC,mBAAoB,CAAC,GAAI,GAAI,GAAI,KAAM,GAAI,KAAM,GAAI,IAAK,IAAK,IAAK,KACpEC,qBAAsB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,KAAM,GAAI,KAAM,IAC3DC,kBAAmB,CAAC,GAAI,GAAI,GAAI,KAAM,GAAI,KAAM,GAAI,IAAK,IAAK,IAAK,KACnEC,QAAS,OACTC,gBAAiB,kBACjBC,wBAAwB,EACxBC,uBAAuB,EACvBC,kBAAkB,GAGd4R,GAAmC,CACvCpS,UAAW,CACT,OACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QAEFC,mBAAoB,CAAC,GAAI,GAAI,GAAI,KAAM,GAAI,KAAM,GAAI,IAAK,IAAK,IAAK,KACpEC,qBAAsB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,KAAM,GAAI,KAAM,GAAI,IAAK,KACpEC,kBAAmB,CAAC,GAAI,GAAI,GAAI,KAAM,GAAI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ACN,IAAK,IACL,IAAK,KACH,OA9BC,SAAiB+E,GAQtB,OAAOyvB,IAPI,QACD,aACC,YACD,YACC,UAEMz1B,KAAKuI,IAAIvI,KAAK6jB,IAAI7d,EAAc,KAAQ,KAuB9C6vB,CAAQ7vB,GAAgBovB,EACjC,IAAK,IACH,OArBC,SAAmBpvB,GAQxB,OAAOyvB,IAPI,UACD,aACC,YACD,YACC,SAEMz1B,KAAKuI,IAAIvI,KAAK6jB,IAAI7d,EAAc,KAAQ,KAc9C8vB,CAAU9vB,GAAgBovB,EACnC,QAEE,OAAO,ICxDPW,GAAmB,CAEvB,EACA,EACA,EACA,EACA,EAIA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAIA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAMA,KACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,MACA,MACA,MACA,KACA,KACA,MACA,MACA,MACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KAIA,MACA,MACA,KACA,MACA,MACA,MACA,MACA,KACA,MACA,MAEA,MACA,MACA,KACA,MACA,MACA,IACA,MACA,MACA,MACA,OAIWC,GAAkB,SAACvvB,GAC9B,OAAKhH,OAAO4W,UAAU5P,IAAQA,GAAO,GAKjCA,EAAMsvB,GAAiBzzB,OAJlB,EAQFyzB,GAAiBtvB,ICrGbwvB,GAAuB,SAACjwB,GACnC,IAAMqvB,EAAWr1B,KAAK6jB,IAAI7jB,KAAKuI,IAAIvC,EAAc,IAAO,KAExD,GAAIqvB,GAAY,IAAO,CAQrB,OAPW,QACA,QAAWA,EACX,OAAUr1B,KAAKsmB,IAAI,IAAO,GAAKtmB,KAAKsmB,IAAI+O,EAAU,GAClD,QAAWr1B,KAAKsmB,IAAI,IAAO,GAAKtmB,KAAKsmB,IAAI+O,EAAU,GACnD,QAAWr1B,KA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","file":"static/js/main.833c7dcb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"LiftingHeader_header__2Pk1F\",\"lifterName\":\"LiftingHeader_lifterName__1qG9U\",\"info\":\"LiftingHeader_info__3ki1L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"liftingView\":\"LiftingView_liftingView__3jkAD\",\"middleParentContainer\":\"LiftingView_middleParentContainer__phIzS\",\"leftCardContainer\":\"LiftingView_leftCardContainer__11qT9\",\"rightCardContainer\":\"LiftingView_rightCardContainer__1cE_N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"swatch\":\"ColorPicker_swatch__1NGvM\",\"color\":\"ColorPicker_color__2ssCe\",\"onTop\":\"ColorPicker_onTop__3vT6O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controlPanel\":\"ResultsView_controlPanel__1lJcj\",\"dropdown\":\"ResultsView_dropdown__22LqW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftDivider\":\"OneFlightOrder_leftDivider__1uGqE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"BarLoad_container__vG2Sa\",\"rackInfo\":\"BarLoad_rackInfo__3YHf9\",\"bar\":\"BarLoad_bar__LH3LX\",\"kg50\":\"BarLoad_kg50__3EiQ8\",\"kg25\":\"BarLoad_kg25__55pKG\",\"kg20\":\"BarLoad_kg20__3He2N\",\"kg15\":\"BarLoad_kg15__a4ahw\",\"kg10\":\"BarLoad_kg10__13zLE\",\"kg5\":\"BarLoad_kg5__13FN5\",\"kg2p5\":\"BarLoad_kg2p5__1la8c\",\"kg1p25\":\"BarLoad_kg1p25__3Fxn-\",\"kg1\":\"BarLoad_kg1__1xr0D\",\"kg0p75\":\"BarLoad_kg0p75__3Yh2L\",\"kg0p5\":\"BarLoad_kg0p5__1akN1\",\"kg0p25\":\"BarLoad_kg0p25__1fL2N\",\"lbs100\":\"BarLoad_lbs100__Xal5c\",\"lbs55\":\"BarLoad_lbs55__2VyVW\",\"lbs45\":\"BarLoad_lbs45__V-hpp\",\"lbs35\":\"BarLoad_lbs35__20Mng\",\"lbs25\":\"BarLoad_lbs25__2tFAd\",\"lbs10\":\"BarLoad_lbs10__2PR2L\",\"lbs5\":\"BarLoad_lbs5__1d2s8\",\"lbs2p5\":\"BarLoad_lbs2p5__1ExEx\",\"lbs1p25\":\"BarLoad_lbs1p25__1U0wG\",\"lbs0p5\":\"BarLoad_lbs0p5__1BogG\",\"collar\":\"BarLoad_collar__x3u3S\",\"error\":\"BarLoad_error__1gIJ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"liftingtable\":\"LiftingTable_liftingtable__1jgNy\",\"textCell\":\"LiftingTable_textCell__3g2S0\",\"smallCell\":\"LiftingTable_smallCell__3VH8V\",\"spacerCell\":\"LiftingTable_spacerCell__2j6l0\",\"activeColumn\":\"LiftingTable_activeColumn__nxiEl\",\"attemptInputCell\":\"LiftingTable_attemptInputCell__23Nmi\",\"current\":\"LiftingTable_current__1CC0r\",\"goodlift\":\"LiftingTable_goodlift__29yoM\",\"nolift\":\"LiftingTable_nolift__WTzVv\",\"attemptInput\":\"LiftingTable_attemptInput__3-8A3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentArea\":\"ContentArea_contentArea__VOJJU\"};","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2020 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport de from \"./de.json\";\nimport el from \"./el.json\";\nimport eo from \"./eo.json\";\nimport en from \"./en.json\";\nimport es from \"./es.json\";\nimport et from \"./et.json\";\nimport fr from \"./fr.json\";\nimport hr from \"./hr.json\";\nimport it from \"./it.json\";\nimport lt from \"./lt.json\";\nimport nl from \"./nl.json\";\nimport pt from \"./pt.json\";\nimport ru from \"./ru.json\";\nimport tr from \"./tr.json\";\nimport uk from \"./uk.json\";\nimport zh_Hans from \"./zh-Hans.json\";\n\nconst languages = { de, el, eo, en, es, et, fr, hr, it, lt, nl, pt, ru, tr, uk, \"zh-Hans\": zh_Hans };\nexport default languages;\n","// vim: set ts=2 sts=2 sw=2 et:\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { IntlProvider } from \"react-intl\";\nimport translations from \"../../translations\";\n\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { Language } from \"../../types/dataTypes\";\n\ninterface StateProps {\n  language: Language;\n}\n\ntype Props = StateProps & { children?: React.ReactNode };\n\nclass OpenLifterIntlProvider extends React.Component<Props> {\n  render() {\n    const language = this.props.language;\n    if (typeof language !== \"string\") {\n      throw new Error(\"language is not a string\");\n    }\n\n    // Load our translations from the json files\n    // TODO: This typing could be nicer, we should be able to state that es/eo = {}, en = undefined\n    const messages = (translations as any)[language];\n\n    return (\n      // This is going to wrap any children passed to this component with an IntlProvider\n      // This will put translations of all of our child components in our app\n      <IntlProvider locale={language} defaultLocale=\"en\" key={language} messages={messages}>\n        {this.props.children}\n      </IntlProvider>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  language: state.language,\n});\n\nexport default connect(mapStateToProps, () => {})(OpenLifterIntlProvider);\n","// vim: set ts=2 sts=2 sw=2 et:\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport FormControl from \"react-bootstrap/FormControl\";\n\nimport { changeLanguage } from \"../../actions/languageActions\";\nimport { Language } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\n\nimport { Dispatch } from \"redux\";\n\ninterface StateProps {\n  language: Language;\n}\n\ninterface DispatchProps {\n  changeLanguage: (event: React.BaseSyntheticEvent) => any;\n}\n\ntype Props = StateProps & DispatchProps;\n\n// TODO: Can we get these from the i18n lib somehow?\nconst languageOptions = [\n  <option key=\"de\" value=\"de\">\n    Deutsch (de)\n  </option>,\n  <option key=\"el\" value=\"el\">\n    Ελληνικά (el)\n  </option>,\n  <option key=\"en\" value=\"en\">\n    English (en)\n  </option>,\n  <option key=\"eo\" value=\"eo\">\n    Esperanto (eo)\n  </option>,\n  <option key=\"es\" value=\"es\">\n    Español (es)\n  </option>,\n  <option key=\"et\" value=\"et\">\n    Eesti keel (et)\n  </option>,\n  <option key=\"fr\" value=\"fr\">\n    Français (fr)\n  </option>,\n  <option key=\"hr\" value=\"hr\">\n    Hrvatski (hr)\n  </option>,\n  <option key=\"it\" value=\"it\">\n    Italiano (it)\n  </option>,\n  <option key=\"lt\" value=\"lt\">\n    Lietuvių (lt)\n  </option>,\n  <option key=\"nl\" value=\"nl\">\n    Nederlands (nl)\n  </option>,\n  <option key=\"pt\" value=\"pt\">\n    Português (pt)\n  </option>,\n  <option key=\"ru\" value=\"ru\">\n    Русский (ru)\n  </option>,\n  <option key=\"tr\" value=\"tr\">\n    Türkçe (tr)\n  </option>,\n  <option key=\"uk\" value=\"uk\">\n    Українська (uk)\n  </option>,\n  <option key=\"zh-Hans\" value=\"zh-Hans\">\n    简体中文 (zh-Hans)\n  </option>,\n];\n\nclass LanguageSelector extends React.Component<Props> {\n  render() {\n    return (\n      <FormControl\n        as=\"select\"\n        value={this.props.language}\n        onChange={this.props.changeLanguage}\n        className=\"custom-select\"\n      >\n        {languageOptions}\n      </FormControl>\n    );\n  }\n}\n\n// Allows react component to subscribe to redux state updates\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  language: state.language,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    // TODO: Can we make this more type safe and avoid the cast?\n    changeLanguage: (event: React.BaseSyntheticEvent) =>\n      dispatch(changeLanguage(event.currentTarget.value as Language)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LanguageSelector);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { ChangeLanguageAction } from \"../types/actionTypes\";\nimport { Language } from \"../types/dataTypes\";\n\nexport const changeLanguage = (language: Language): ChangeLanguageAction => {\n  return {\n    type: \"CHANGE_LANGUAGE\",\n    language,\n  };\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { OverwriteStoreAction } from \"../types/actionTypes\";\nimport { GlobalState } from \"../types/stateTypes\";\n\n// Overwrites the entire Redux store, handled separately by each reducer.\n// This is used to implement \"Load from File\" functionality.\nexport const overwriteStore = (store: GlobalState): OverwriteStoreAction => {\n  return {\n    type: \"OVERWRITE_STORE\",\n    store: store,\n  };\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines all the project-wide shared Redux state types in a single place.\n//\n// Because the Redux store is immutable, all types are internally prefixed\n// with the \"readonly \" covariant type, which makes them immutable.\n\nimport { AgeCoefficients, Flight, Formula, Lift, Sex } from \"./dataTypes\";\n\n// This is purely used by the type system to raise a compile error when\n// we are trying to perform an exhaustive check (eg in a switch).\n// This allows us to have a compile time error, but also have graceful runtime fallback.\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function checkExhausted(value: never): void {}\n\n// Convenience function to narrow a variables type down to a string\nexport function isString(value: any): value is string {\n  return typeof value === \"string\";\n}\n\n// Throws an error if value isn't a string, narrows the type if it is.\nexport function assertString(value: any): value is string {\n  const result = isString(value);\n  if (!result) {\n    throw new Error(`Expected a string, but got ${value}`);\n  }\n  return result;\n}\n\n// Throws an error if value isn't a number, narrows the type if it is.\nexport function assertNumber(value: any): value is number {\n  const result = typeof value === \"number\";\n  if (!result) {\n    throw new Error(`Expected a number, but got ${value}`);\n  }\n  return result;\n}\n\n// Throws an error if value isn't a a valid flight, narrows the type if it is.\nexport function assertFlight(value: string): value is Flight {\n  const flight: Flight = value as Flight;\n  switch (flight) {\n    case \"A\":\n    case \"B\":\n    case \"C\":\n    case \"D\":\n    case \"E\":\n    case \"F\":\n    case \"G\":\n    case \"H\":\n    case \"I\":\n    case \"J\":\n    case \"K\":\n    case \"L\":\n    case \"M\":\n    case \"N\":\n    case \"O\":\n    case \"P\":\n      return true;\n    default:\n      checkExhausted(flight);\n      throw new Error(`Expected a string which corresponds to a Flight, got \"${value}\"`);\n  }\n}\n\n// Throws an error if value isn't a a valid flight, narrows the type if it is.\nexport function assertSex(value: string): value is Sex {\n  const sex = value as Sex;\n  switch (sex) {\n    case \"M\":\n    case \"F\":\n    case \"Mx\":\n      return true;\n    default:\n      checkExhausted(sex);\n      throw new Error(`Expected a string which corresponds to a Sex, got \"${value}\"`);\n  }\n}\n\nexport function assertLift(value: string): value is Lift {\n  const lift = value as Lift;\n  switch (lift) {\n    case \"S\":\n    case \"B\":\n    case \"D\":\n      return true;\n    default:\n      checkExhausted(lift);\n      throw new Error(`Expected a string which corresponds to a Lift, got \"${value}\"`);\n  }\n}\n\nexport function assertAgeCoefficients(value: string): value is AgeCoefficients {\n  const coefficient = value as AgeCoefficients;\n  switch (coefficient) {\n    case \"FosterMcCulloch\":\n    case \"None\":\n      return true;\n    default:\n      checkExhausted(coefficient);\n      throw new Error(`Expected a string which corresponds to a valid AgeCoefficients, got \"${value}\"`);\n  }\n}\n\nexport function assertFormula(value: string): value is Formula {\n  const formula = value as Formula;\n  switch (formula) {\n    case \"AH\":\n    case \"Bodyweight Multiple\":\n    case \"Dots\":\n    case \"Glossbrenner\":\n    case \"IPF GL Points\":\n    case \"IPF Points\":\n    case \"NASA Points\":\n    case \"Reshel\":\n    case \"Schwartz/Malone\":\n    case \"Total\":\n    case \"Wilks\":\n    case \"Wilks2020\":\n      return true;\n    default:\n      checkExhausted(formula);\n      throw new Error(`Expected a string which corresponds to a Formula, got \"${value}\"`);\n  }\n}\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { Entry, Language } from \"../types/dataTypes\";\n\n// Defines operations for converting between different units, usually\n// pounds and kg.\n\nexport const kg2lbs = (kg: number): number => {\n  return kg * 2.20462262;\n};\n\nexport const lbs2kg = (lbs: number): number => {\n  return lbs / 2.20462262;\n};\n\n// Converts a displayed String to a Number, even if that string is localized.\nexport const string2number = (s: string): number => {\n  return Number(s.replace(\",\", \".\"));\n};\n\n// Renders a weight (kg or lbs) for display, rounding to two decimal places,\n// hiding unnecessary zeros on the right.\n//\n// This rounding behavior eliminates all the visual inconsistencies of lbs->kg\n// conversion -- for example, how 112.5lbs isn't representable exactly in kg.\nexport const displayWeight = (weight: number, lang?: Language): string => {\n  const locale = lang === undefined ? \"en\" : lang;\n\n  // This matches the OpenPowerlifting WeightKg::as_lbs() conversion logic.\n  // First, round to the hundredth place, stored as an integer.\n  let rounded = Math.round(weight * 100);\n\n  // If the fractional part is close to another tenth, add a correction.\n  // This happens due to floating-point imprecision.\n  if (rounded % 10 === 9) {\n    // Add 0.01 (still stored as an integer).\n    rounded += 1;\n  }\n\n  // Convert back to normal floating-point without truncation.\n  rounded = rounded / 100;\n\n  return new Intl.NumberFormat(locale, { useGrouping: false, maximumFractionDigits: 2 }).format(rounded);\n};\n\n// Renders a weight (kg or lbs) for display, truncating to one decimal place.\n// hiding unnecessary zeros on the right.\nexport const displayWeightOnePlace = (weight: number, lang?: Language): string => {\n  const locale = lang === undefined ? \"en\" : lang;\n\n  // This matches the OpenPowerlifting WeightKg::as_lbs() conversion logic.\n  // First, round to the hundredth place, stored as an integer.\n  let rounded = Math.round(weight * 100);\n\n  // If the fractional part is close to another tenth, add a correction.\n  // This happens due to floating-point imprecision.\n  if (rounded % 10 === 9) {\n    // Add 0.01 (still stored as an integer).\n    rounded += 1;\n  }\n\n  // Truncate to the tenth place, then convert back to normal floating-point.\n  const truncated = Math.trunc(rounded / 10) / 10;\n\n  return new Intl.NumberFormat(locale, { useGrouping: false, maximumFractionDigits: 1 }).format(truncated);\n};\n\n// Points display with two fixed decimal places (including zeros).\nexport const displayPoints = (points: number, lang: Language): string => {\n  return new Intl.NumberFormat(lang, {\n    useGrouping: false,\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n  }).format(points);\n};\n\n// Display a generic number that is neither a weight nor points.\n// This is intended for things like ages, day numbers, etc.\nexport const displayNumber = (number: number, lang: Language): string => {\n  // Grouping should not be used: otherwise ',' is ambiguous as a separator.\n  return new Intl.NumberFormat(lang, { useGrouping: false }).format(number);\n};\n\n// Display an ordinal number representing a place.\n// In Spanish, Portuguese, and Italian, the ordinal differs based on the lifter's Sex.\nexport const displayPlaceOrdinal = (number: number, entry: Entry, lang: Language): string => {\n  switch (lang) {\n    case \"es\":\n    case \"pt\":\n      return displayNumber(number, lang) + (entry.sex === \"F\" ? \"ª\" : \"º\");\n    default:\n      return displayNumber(number, lang);\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Gets translation strings directly given the current language, without\n// having to thread the IntlContext everywhere.\n//\n// This works because we store the language in the Redux store in addition\n// to in the React context.\n\nimport translations from \"../translations\";\nimport { Equipment, Event, Flight, Language, Sex, TranslationId } from \"../types/dataTypes\";\nimport { checkExhausted } from \"../types/utils\";\nimport { displayWeight } from \"./units\";\n\n// Fetches a simple string from the translations store. No formatting is performed.\nexport const getString = (id: TranslationId, lang: Language): string => {\n  return translations[lang][id];\n};\n\n// Localizes an Equipment value.\nexport const localizeEquipment = (equipment: Equipment, language: Language): string => {\n  switch (equipment) {\n    case \"Bare\":\n      return getString(\"equipment.bare\", language);\n    case \"Sleeves\":\n      return getString(\"equipment.sleeves\", language);\n    case \"Wraps\":\n      return getString(\"equipment.wraps\", language);\n    case \"Single-ply\":\n      return getString(\"equipment.single-ply\", language);\n    case \"Multi-ply\":\n      return getString(\"equipment.multi-ply\", language);\n    case \"Unlimited\":\n      return getString(\"equipment.unlimited\", language);\n    default:\n      checkExhausted(equipment);\n      return \"\";\n  }\n};\n\n// Delocalizes an Equipment value.\nexport const delocalizeEquipment = (text: string, language: Language): Equipment => {\n  if (text === getString(\"equipment.bare\", language)) return \"Bare\";\n  if (text === getString(\"equipment.sleeves\", language)) return \"Sleeves\";\n  if (text === getString(\"equipment.wraps\", language)) return \"Wraps\";\n  if (text === getString(\"equipment.single-ply\", language)) return \"Single-ply\";\n  if (text === getString(\"equipment.multi-ply\", language)) return \"Multi-ply\";\n  if (text === getString(\"equipment.unlimited\", language)) return \"Unlimited\";\n  throw new Error(\"Failed to delocalize Equipment: \" + text);\n};\n\n// Localizes an Event value.\nexport const localizeEvent = (event: Event, language: Language): string => {\n  switch (event) {\n    case \"S\":\n      return getString(\"event.s\", language);\n    case \"B\":\n      return getString(\"event.b\", language);\n    case \"D\":\n      return getString(\"event.d\", language);\n    case \"SB\":\n      return getString(\"event.sb\", language);\n    case \"SD\":\n      return getString(\"event.sd\", language);\n    case \"BD\":\n      return getString(\"event.bd\", language);\n    case \"SBD\":\n      return getString(\"event.sbd\", language);\n    default:\n      checkExhausted(event);\n      return \"\";\n  }\n};\n\n// Delocalizes an Event value.\nexport const delocalizeEvent = (text: string, language: Language): Event => {\n  if (text === getString(\"event.s\", language)) return \"S\";\n  if (text === getString(\"event.b\", language)) return \"B\";\n  if (text === getString(\"event.d\", language)) return \"D\";\n  if (text === getString(\"event.sb\", language)) return \"SB\";\n  if (text === getString(\"event.sd\", language)) return \"SD\";\n  if (text === getString(\"event.bd\", language)) return \"BD\";\n  if (text === getString(\"event.sbd\", language)) return \"SBD\";\n  throw new Error(\"Failed to delocalize Event: \" + text);\n};\n\n// Localizes a Flight value.\nexport const localizeFlight = (flight: Flight, language: Language): string => {\n  switch (flight) {\n    case \"A\":\n      return getString(\"flight.a\", language);\n    case \"B\":\n      return getString(\"flight.b\", language);\n    case \"C\":\n      return getString(\"flight.c\", language);\n    case \"D\":\n      return getString(\"flight.d\", language);\n    case \"E\":\n      return getString(\"flight.e\", language);\n    case \"F\":\n      return getString(\"flight.f\", language);\n    case \"G\":\n      return getString(\"flight.g\", language);\n    case \"H\":\n      return getString(\"flight.h\", language);\n    case \"I\":\n      return getString(\"flight.i\", language);\n    case \"J\":\n      return getString(\"flight.j\", language);\n    case \"K\":\n      return getString(\"flight.k\", language);\n    case \"L\":\n      return getString(\"flight.l\", language);\n    case \"M\":\n      return getString(\"flight.m\", language);\n    case \"N\":\n      return getString(\"flight.n\", language);\n    case \"O\":\n      return getString(\"flight.o\", language);\n    case \"P\":\n      return getString(\"flight.p\", language);\n    default:\n      checkExhausted(flight);\n      return \"\";\n  }\n};\n\n// Delocalizes a Flight value.\nexport const delocalizeFlight = (text: string, language: Language): Flight => {\n  // The \"A\" character gets special handling for the benefit of Cyrillic.\n  // Latin \"A\" and Cyrillic \"A\" are visually identical, but differ in encoding.\n  if (text === getString(\"flight.a\", language) || text === \"A\") return \"A\";\n\n  if (text === getString(\"flight.b\", language)) return \"B\";\n  if (text === getString(\"flight.c\", language)) return \"C\";\n  if (text === getString(\"flight.d\", language)) return \"D\";\n  if (text === getString(\"flight.e\", language)) return \"E\";\n  if (text === getString(\"flight.f\", language)) return \"F\";\n  if (text === getString(\"flight.g\", language)) return \"G\";\n  if (text === getString(\"flight.h\", language)) return \"H\";\n  if (text === getString(\"flight.i\", language)) return \"I\";\n  if (text === getString(\"flight.j\", language)) return \"J\";\n  if (text === getString(\"flight.k\", language)) return \"K\";\n  if (text === getString(\"flight.l\", language)) return \"L\";\n  if (text === getString(\"flight.m\", language)) return \"M\";\n  if (text === getString(\"flight.n\", language)) return \"N\";\n  if (text === getString(\"flight.o\", language)) return \"O\";\n  if (text === getString(\"flight.p\", language)) return \"P\";\n  throw new Error(\"Failed to delocalize Flight: \" + text);\n};\n\n// Localizes a Sex value.\nexport const localizeSex = (sex: Sex, language: Language): string => {\n  switch (sex) {\n    case \"M\":\n      return getString(\"sex.m\", language);\n    case \"F\":\n      return getString(\"sex.f\", language);\n    case \"Mx\":\n      return getString(\"sex.mx\", language);\n    default:\n      checkExhausted(sex);\n      return \"\";\n  }\n};\n\n// Delocalizes a Sex value.\nexport const delocalizeSex = (text: string, language: Language): Sex => {\n  if (text === getString(\"sex.m\", language)) return \"M\";\n  if (text === getString(\"sex.f\", language)) return \"F\";\n  if (text === getString(\"sex.mx\", language)) return \"Mx\";\n  throw new Error(\"Failed to delocalize Sex: \" + text);\n};\n\n// Localizes a Category weightclass string.\n// This is used by the Flight Order and Results pages.\nexport const localizeWeightClassStr = (wtcls: string, language: Language): string => {\n  const isSHW = wtcls.endsWith(\"+\");\n  const asNumber = Number(wtcls.replace(\"+\", \"\"));\n  if (asNumber === 0) return \"\";\n  return displayWeight(asNumber, language) + (isSHW ? \"+\" : \"\");\n};\n\n// Negotiates the default language with the navigator, if possible.\nexport const getDefaultLanguage = (): Language => {\n  const defaultLanguage: Language = \"en\";\n\n  // Make sure that we're in a modern browser.\n  if (typeof navigator !== \"object\" || typeof navigator.languages !== \"object\") {\n    return defaultLanguage;\n  }\n\n  // Iterate over the available languages looking for the first match.\n  const languages: ReadonlyArray<string> = navigator.languages;\n  for (let i = 0; i < languages.length; ++i) {\n    const language = languages[i];\n    if (language in translations) {\n      return language as Language;\n    }\n  }\n\n  return defaultLanguage;\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Versioning for the global State object.\n//\n// Incrementing the version string breaks compatibility between implementations,\n// with the expectation that a converter will be automatically applied if possible,\n// such that a version of OpenLifter that internally uses version \"B\" can still\n// load files written in version \"A\", by means of auto-upgrading.\n//\n// This string is stored on the GlobalState as the property \"versions.stateVersion\".\n// Each save file thereby reports its own version.\nexport const stateVersion: string = \"0\";\n\n// Versioning for the OpenLifter project as a whole.\n//\n// This is safely incrementable on *releases*. Its function is exclusively to alert\n// users to \"automatic\" upgrades of the software, and it is reported explicitly\n// on the Home page.\n//\n// Changing this version does *not* represent data incompatibilities; for that,\n// please use the \"stateVersion\".\n//\n// This string is stored on the GlobalState as the property \"versions.releaseVersion\".\n//\n// It's defined by the '.env' file in the project root, which references\n// the package.json variable 'version'.\nexport const releaseVersion: string =\n  typeof process.env.REACT_APP_VERSION === \"string\" ? process.env.REACT_APP_VERSION : \"[undefined REACT_APP_VERSION]\";\n\n// Strictly-presentational representation of when the releaseVersion was changed.\n// Update this concurrently with modifying the releaseVersion.\n// This value is not stored in the state: it's purely informational.\nexport const releaseDate: string = \"2021-07-03\";\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// See comments in src/versions.js.\n\nimport { stateVersion, releaseVersion } from \"../versions\";\nimport { OverwriteStoreAction } from \"../types/actionTypes\";\nimport { VersionsState } from \"../types/stateTypes\";\n\nconst initialState: VersionsState = {\n  stateVersion,\n  releaseVersion,\n};\n\ntype Action = OverwriteStoreAction;\n\nexport default function versionReducer(state: VersionsState = initialState, action: Action): VersionsState {\n  switch (action.type) {\n    case \"OVERWRITE_STORE\":\n      return action.store.versions;\n\n    default:\n      return state;\n  }\n}\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines logic for working with Dates, which is trickier than you might expect:\n// the global state wants strings in YYYY-MM-DD, date objects get created from\n// strings in UTC time, and React widgets create Dates in local time.\n\nexport const iso8601ToLocalDate = (s: string): Date => {\n  const [yearStr, monthStr, dayStr] = s.split(\"-\");\n\n  const year = parseInt(yearStr, 10);\n  const month = parseInt(monthStr, 10);\n  const day = parseInt(dayStr, 10);\n\n  const d = new Date();\n  d.setFullYear(year, month - 1, day);\n  return d;\n};\n\nexport const localDateToIso8601 = (d: Date): string => {\n  const year: number = d.getFullYear();\n  const month: number = d.getMonth() + 1;\n  const day: number = d.getDate();\n\n  const yearStr = String(year);\n  let monthStr = String(month);\n  if (monthStr.length === 1) {\n    monthStr = \"0\" + monthStr;\n  }\n  let dayStr = String(day);\n  if (dayStr.length === 1) {\n    dayStr = \"0\" + dayStr;\n  }\n\n  return yearStr + \"-\" + monthStr + \"-\" + dayStr;\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Color codes must be in upper-case to match the ColorPicker output.\nexport const PlateColors = {\n  PLATE_DEFAULT_BLACK: \"#000000\",\n  PLATE_DEFAULT_WHITE: \"#FFFFFF\",\n  PLATE_DEFAULT_BLUE: \"#4990E2\",\n  PLATE_DEFAULT_GREEN: \"#2AB003\",\n  PLATE_DEFAULT_GRAY: \"#575757\",\n  PLATE_DEFAULT_RED: \"#FF0000\",\n  PLATE_DEFAULT_YELLOW: \"#FFEF2A\",\n  PLATE_DEFAULT_ORANGE: \"#F25A1D\",\n  PLATE_DEFAULT_PINK: \"#E81FA5\",\n  PLATE_DEFAULT_PURPLE: \"#9B16F2\",\n};\n\nexport type PlateColorsType = keyof typeof PlateColors;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { localDateToIso8601 } from \"../logic/date\";\nimport { kg2lbs, lbs2kg, displayWeight } from \"../logic/units\";\nimport { PlateColors } from \"../constants/plateColors\";\n\nimport { MeetSetupAction, OverwriteStoreAction } from \"../types/actionTypes\";\nimport { Language, Plate } from \"../types/dataTypes\";\nimport { MeetState } from \"../types/stateTypes\";\nimport { checkExhausted } from \"../types/utils\";\n\nconst defaultPlatformsOnDay = 1;\n\nconst defaultBarAndCollarsWeightKg = 25; // Assuming metal 2.5kg collars.\nconst defaultBarAndCollarsWeightLbs = 45; // Assuming plastic collars.\n\n// Default kg plates, allowing for increments of 0.5kg.\nconst defaultPlatesKg: ReadonlyArray<Plate> = [\n  { weightKg: 50, pairCount: 0, color: PlateColors.PLATE_DEFAULT_GREEN },\n  { weightKg: 25, pairCount: 8, color: PlateColors.PLATE_DEFAULT_RED },\n  { weightKg: 20, pairCount: 1, color: PlateColors.PLATE_DEFAULT_BLUE },\n  { weightKg: 15, pairCount: 1, color: PlateColors.PLATE_DEFAULT_YELLOW },\n  { weightKg: 10, pairCount: 1, color: PlateColors.PLATE_DEFAULT_GREEN },\n  { weightKg: 5, pairCount: 1, color: PlateColors.PLATE_DEFAULT_BLACK },\n  { weightKg: 2.5, pairCount: 1, color: PlateColors.PLATE_DEFAULT_BLACK },\n  { weightKg: 2, pairCount: 0, color: PlateColors.PLATE_DEFAULT_BLUE },\n  { weightKg: 1.5, pairCount: 0, color: PlateColors.PLATE_DEFAULT_YELLOW },\n  { weightKg: 1.25, pairCount: 1, color: PlateColors.PLATE_DEFAULT_BLACK },\n  { weightKg: 1, pairCount: 1, color: PlateColors.PLATE_DEFAULT_BLUE },\n  { weightKg: 0.75, pairCount: 1, color: PlateColors.PLATE_DEFAULT_RED },\n  { weightKg: 0.5, pairCount: 1, color: PlateColors.PLATE_DEFAULT_GREEN },\n  { weightKg: 0.25, pairCount: 1, color: PlateColors.PLATE_DEFAULT_BLUE },\n];\n\n// Default lbs plates, allowing for increments of 1lb.\nconst defaultPlatesLbs: ReadonlyArray<Plate> = [\n  { weightKg: lbs2kg(100), pairCount: 0, color: PlateColors.PLATE_DEFAULT_GREEN },\n  { weightKg: lbs2kg(55), pairCount: 0, color: PlateColors.PLATE_DEFAULT_RED },\n  { weightKg: lbs2kg(45), pairCount: 8, color: PlateColors.PLATE_DEFAULT_GRAY },\n  { weightKg: lbs2kg(35), pairCount: 0, color: PlateColors.PLATE_DEFAULT_GRAY },\n  { weightKg: lbs2kg(25), pairCount: 1, color: PlateColors.PLATE_DEFAULT_GRAY },\n  { weightKg: lbs2kg(10), pairCount: 2, color: PlateColors.PLATE_DEFAULT_GRAY },\n  { weightKg: lbs2kg(5), pairCount: 1, color: PlateColors.PLATE_DEFAULT_GRAY },\n  { weightKg: lbs2kg(2.5), pairCount: 1, color: PlateColors.PLATE_DEFAULT_GRAY },\n  { weightKg: lbs2kg(1.25), pairCount: 1, color: PlateColors.PLATE_DEFAULT_GRAY },\n  { weightKg: lbs2kg(0.5), pairCount: 2, color: PlateColors.PLATE_DEFAULT_GRAY },\n];\n\nconst initialState: MeetState = {\n  // Sanction information.\n  name: \"\",\n  country: \"\",\n  state: \"\",\n  city: \"\",\n  federation: \"\",\n  date: localDateToIso8601(new Date()),\n  lengthDays: 1,\n  platformsOnDays: [defaultPlatformsOnDay],\n\n  // Competition Rules.\n  divisions: [],\n  weightClassesKgMen: [],\n  weightClassesKgWomen: [],\n  weightClassesKgMx: [],\n  formula: \"Wilks\",\n  ageCoefficients: \"FosterMcCulloch\",\n  combineSleevesAndWraps: false,\n  combineSingleAndMulti: false,\n  allow4thAttempts: true,\n\n  // Weights and Loading Setup.\n  inKg: true,\n  showAlternateUnits: true,\n  squatBarAndCollarsWeightKg: defaultBarAndCollarsWeightKg,\n  benchBarAndCollarsWeightKg: defaultBarAndCollarsWeightKg,\n  deadliftBarAndCollarsWeightKg: defaultBarAndCollarsWeightKg,\n  plates: defaultPlatesKg,\n};\n\n// Given a sorted list of weight classes (in kg) and a bodyweight (in kg),\n// return a string describing the weight class.\nexport const getWeightClassStr = (\n  classes: ReadonlyArray<number>,\n  bodyweightKg: number,\n  language?: Language\n): string => {\n  if (bodyweightKg === 0) return \"\";\n  if (classes.length === 0) return \"\";\n\n  for (let i = 0; i < classes.length; i++) {\n    if (bodyweightKg <= classes[i]) {\n      return displayWeight(classes[i], language);\n    }\n  }\n  return displayWeight(classes[classes.length - 1], language) + \"+\";\n};\n\n// Converts a kg weightclass to pounds.\n//\n// For example, the 90kg class is technically 198.41lbs,\n// but this will return \"198\".\nexport const wtclsStrKg2Lbs = (kgcls: string): string => {\n  const shw: boolean = kgcls.endsWith(\"+\");\n  const asNumber = Number(kgcls.replace(\"+\", \"\"));\n\n  // Convert to pounds and round down.\n  let truncated = Math.floor(kg2lbs(asNumber));\n\n  // This works for everything but the 183 class, which\n  // rounds down to 182.\n  if (truncated === 182) {\n    truncated = 183;\n  }\n\n  return shw ? String(truncated) + \"+\" : String(truncated);\n};\n\n// Given a sorted list of weight classes (in kg) and a bodyweight (in kg),\n// return a string describing the weight class.\n//\n// This is a separate method because it turns out that many exact translations\n// of kilo values are not what the audience expects for traditionally-reported\n// pounds classes. So a bunch of rounding must occur.\nexport const getWeightClassLbsStr = (classes: ReadonlyArray<number>, bodyweightKg: number): string => {\n  if (bodyweightKg === 0) return \"\";\n  if (classes.length === 0) return \"\";\n\n  for (let i = 0; i < classes.length; i++) {\n    if (bodyweightKg <= classes[i]) {\n      return wtclsStrKg2Lbs(String(classes[i]));\n    }\n  }\n  return wtclsStrKg2Lbs(String(classes[classes.length - 1])) + \"+\";\n};\n\ntype Action = MeetSetupAction | OverwriteStoreAction;\n\nexport default function meetReducer(state: MeetState = initialState, action: Action): MeetState {\n  switch (action.type) {\n    case \"SET_MEET_NAME\":\n      return { ...state, name: action.name };\n\n    case \"SET_FORMULA\":\n      return { ...state, formula: action.formula };\n\n    case \"SET_FEDERATION\":\n      return { ...state, federation: action.federation };\n\n    case \"SET_DIVISIONS\":\n      return { ...state, divisions: action.divisions };\n\n    case \"SET_MEET_DATE\":\n      return { ...state, date: action.date };\n\n    case \"SET_LENGTH_DAYS\": {\n      const numDays = Number(action.length);\n\n      if (numDays >= state.platformsOnDays.length) {\n        const diff = numDays - state.platformsOnDays.length;\n\n        const newPlatformsOnDays: Array<number> = state.platformsOnDays.slice();\n        for (let i = 0; i < diff; i++) {\n          newPlatformsOnDays.push(defaultPlatformsOnDay);\n        }\n\n        return { ...state, lengthDays: numDays, platformsOnDays: newPlatformsOnDays };\n      }\n      return { ...state, lengthDays: numDays };\n    }\n\n    case \"SET_PLATFORM_COUNT\": {\n      const day = Number(action.day);\n      const count = Number(action.count);\n\n      const newPlatformsOnDays: Array<number> = state.platformsOnDays.slice();\n      newPlatformsOnDays[day - 1] = count;\n      return { ...state, platformsOnDays: newPlatformsOnDays };\n    }\n\n    case \"SET_IN_KG\": {\n      // Changing the units also changes the loading, so re-initialize from defaults.\n      const defaultPlates = action.inKg ? defaultPlatesKg : defaultPlatesLbs;\n      const defaultBar = action.inKg ? defaultBarAndCollarsWeightKg : lbs2kg(defaultBarAndCollarsWeightLbs);\n      return {\n        ...state,\n        inKg: action.inKg,\n        plates: defaultPlates,\n        squatBarAndCollarsWeightKg: defaultBar,\n        benchBarAndCollarsWeightKg: defaultBar,\n        deadliftBarAndCollarsWeightKg: defaultBar,\n      };\n    }\n\n    case \"SET_WEIGHTCLASSES\": {\n      const sex = action.sex;\n      const classesKg = action.classesKg;\n      switch (sex) {\n        case \"M\":\n          return { ...state, weightClassesKgMen: classesKg };\n        case \"F\":\n          return { ...state, weightClassesKgWomen: classesKg };\n        case \"Mx\":\n          return { ...state, weightClassesKgMx: classesKg };\n        default:\n          checkExhausted(sex);\n          return state;\n      }\n    }\n\n    case \"SET_BAR_AND_COLLARS_WEIGHT_KG\": {\n      switch (action.lift) {\n        case \"S\":\n          return { ...state, squatBarAndCollarsWeightKg: action.weightKg };\n        case \"B\":\n          return { ...state, benchBarAndCollarsWeightKg: action.weightKg };\n        case \"D\":\n          return { ...state, deadliftBarAndCollarsWeightKg: action.weightKg };\n        default:\n          checkExhausted(action.lift);\n          return state;\n      }\n    }\n\n    case \"SET_PLATE_CONFIG\": {\n      const { weightKg, pairCount, color } = action;\n\n      // Find the index of the object in the platesOnSide array by comparing weights.\n      const index = state.plates.findIndex((p) => p.weightKg === weightKg);\n\n      // Clone the array.\n      const newPlates: Array<Plate> = state.plates.slice();\n\n      // Replace with a new object in the new array.\n      newPlates[index] = { weightKg, pairCount, color };\n\n      return { ...state, plates: newPlates };\n    }\n\n    case \"UPDATE_MEET\": {\n      const changes = action.changes;\n\n      // Make a new MeetState with just the changes overwritten.\n      const newState = Object.assign({}, state);\n      return Object.assign(newState, changes);\n    }\n\n    case \"OVERWRITE_STORE\":\n      return action.store.meet;\n\n    default:\n      checkExhausted(action);\n      return state;\n  }\n}\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines logic for creating and working with Entry objects.\n\nimport { Entry, Lift, Event, FieldKg, FieldStatus } from \"../types/dataTypes\";\nimport { checkExhausted } from \"../types/utils\";\n\n// Length of {squat,bench,deadlift}{Kg,Status} in each Entry.\nexport const MAX_ATTEMPTS = 5;\n\nexport const newDefaultEntry = (id: number): Entry => {\n  return {\n    // Bookkeeping internal information for OpenLifter.\n    id: id, // The global unique ID of this registration.\n\n    // Information about when the lifter is scheduled to lift.\n    day: 1, // The day on which the lifter is lifting.\n    platform: 1, // The platform on which the lifter is lifting.\n    flight: \"A\", // The flight in which the lifter is lifting.\n\n    // Information about the lifter themselves.\n    name: \"\", // The lifter's name.\n    sex: \"M\", // The lifter's sex.\n    birthDate: \"\", // The lifter's birthdate (YYYY-MM-DD).\n    age: 0, // The lifter's age in years\n    country: \"\", // Lifter's home country, or blank.\n    state: \"\", // Lifter's home state, or blank.\n    intendedWeightClassKg: \"\", // The weightclass for which the lifter registered.\n    equipment: \"Sleeves\", // The equipment category for which the lifter registered.\n    divisions: [], // A list of divisions the lifter entered.\n    events: [], // A list of events the lifter entered.\n\n    // Metadata about the lifter, assigned by the meet director.\n    lot: 0, // The lifter's lot number, for breaking ties in lifting order.\n    memberId: \"\", // Optional federation MemberID, for reporting in results.\n    paid: false, // Used by the meet director for tracking whether the lifter paid.\n    team: \"\", // Optional. Only used in the final results export.\n    guest: false, // Optional. Marks the lifter as a guest, who cannot place in rankings.\n    notes: \"\", // Free-form text for the meet director to use as a scratchpad.\n\n    // Information added on the \"Weigh-ins\" page.\n    // But we might as well track it in this object.\n    bodyweightKg: 0.0,\n    squatRackInfo: \"\", // A freeform string for the benefit of the loaders.\n    benchRackInfo: \"\", // A freeform string for the benefit of the loaders.\n\n    // Lifting information. Weights always stored internally in kg.\n    squatKg: [0.0, 0.0, 0.0, 0.0, 0.0],\n    benchKg: [0.0, 0.0, 0.0, 0.0, 0.0],\n    deadliftKg: [0.0, 0.0, 0.0, 0.0, 0.0],\n\n    // Lifting information, success state:\n    //  -1 => No Lift.\n    //   0 => Not Yet Done.\n    //   1 => Good Lift.\n    //\n    // Note that this system has the property where corresponding (kg*status)\n    // produces the SquatXKg as expected by the main OpenPowerlifting CSV format.\n    squatStatus: [0, 0, 0, 0, 0],\n    benchStatus: [0, 0, 0, 0, 0],\n    deadliftStatus: [0, 0, 0, 0, 0],\n  };\n};\n\n// Gets the lifter's age, possibly by inferring it from birthDate.\n// If the age couldn't be determined, returns 0.\nexport const getAge = (entry: Entry, meetDate: string): number => {\n  // If the user overrode the Age manually, just take that.\n  if (entry.age > 0) return entry.age;\n\n  // If no birthDate is provided, nothing more can be done.\n  if (entry.birthDate === \"\") return 0;\n\n  // Infer the age given {meetDate, birthDate, day}.\n  let [my, mm, md] = meetDate.split(\"-\").map((s) => Number(s));\n  const [by, bm, bd] = entry.birthDate.split(\"-\").map((s) => Number(s));\n\n  // Advance the day counter if necessary.\n  // FIXME: This logic assumes that each month has exactly 31 days.\n  if (entry.day > 1) {\n    md += entry.day - 1;\n    if (md > 31) {\n      md -= 31;\n      mm += 1;\n    }\n    if (mm > 12) {\n      md -= 12;\n      my += 1;\n    }\n  }\n\n  const years = my - by;\n  if (years <= 0) return 0;\n\n  // If their birthday occurred in the most recent year, just diff years.\n  if (bm < mm || (bm === mm && bd <= md)) {\n    return years;\n  }\n\n  // Otherwise, their birthday did not occur yet, so this year doesn't count.\n  return years - 1;\n};\n\n// Gets the best squat, including extra attempts that don't count for the total.\nexport const getBest5SquatKg = (entry: Entry): number => {\n  let best3SquatKg = 0.0;\n  for (let i = 0; i < MAX_ATTEMPTS; i++) {\n    if (entry.squatStatus[i] === 1) {\n      best3SquatKg = Math.max(best3SquatKg, entry.squatKg[i]);\n    }\n  }\n  return best3SquatKg;\n};\n\n// Gets the best bench, including extra attempts that don't count for the total.\nexport const getBest5BenchKg = (entry: Entry): number => {\n  let best3BenchKg = 0.0;\n  for (let i = 0; i < MAX_ATTEMPTS; i++) {\n    if (entry.benchStatus[i] === 1) {\n      best3BenchKg = Math.max(best3BenchKg, entry.benchKg[i]);\n    }\n  }\n  return best3BenchKg;\n};\n\n// Gets the best deadlift, including extra attempts that don't count for the total.\nexport const getBest5DeadliftKg = (entry: Entry): number => {\n  let best3DeadliftKg = 0.0;\n  for (let i = 0; i < MAX_ATTEMPTS; i++) {\n    if (entry.deadliftStatus[i] === 1) {\n      best3DeadliftKg = Math.max(best3DeadliftKg, entry.deadliftKg[i]);\n    }\n  }\n  return best3DeadliftKg;\n};\n\n// The ProjectedTotal optimistically assumes that lifters will get *first* attempts\n// that have not yet been taken. It is used for calculating a total while lifters\n// are still squatting and benching.\n//\n// 2nd and 3rd attempts are treated normally, where they only count toward the\n// total if they have been successful.\nexport const getProjectedTotalKg = (entry: Entry): number => {\n  let best3Squat = 0.0;\n  if (entry.squatStatus[0] >= 0) best3Squat = Math.max(best3Squat, entry.squatKg[0]);\n  if (entry.squatStatus[1] > 0) best3Squat = Math.max(best3Squat, entry.squatKg[1]);\n  if (entry.squatStatus[2] > 0) best3Squat = Math.max(best3Squat, entry.squatKg[2]);\n\n  let best3Bench = 0.0;\n  if (entry.benchStatus[0] >= 0) best3Bench = Math.max(best3Bench, entry.benchKg[0]);\n  if (entry.benchStatus[1] > 0) best3Bench = Math.max(best3Bench, entry.benchKg[1]);\n  if (entry.benchStatus[2] > 0) best3Bench = Math.max(best3Bench, entry.benchKg[2]);\n\n  let best3Dead = 0.0;\n  if (entry.deadliftStatus[0] >= 0) best3Dead = Math.max(best3Dead, entry.deadliftKg[0]);\n  if (entry.deadliftStatus[1] > 0) best3Dead = Math.max(best3Dead, entry.deadliftKg[1]);\n  if (entry.deadliftStatus[2] > 0) best3Dead = Math.max(best3Dead, entry.deadliftKg[2]);\n\n  // If there was no attempted success for a single lift, return zero.\n  if (best3Squat === 0 && entry.squatStatus[0] === -1) return 0.0;\n  if (best3Bench === 0 && entry.benchStatus[0] === -1) return 0.0;\n  if (best3Dead === 0 && entry.deadliftStatus[0] === -1) return 0.0;\n\n  return best3Squat + best3Bench + best3Dead;\n};\n\nexport const getProjectedEventTotalKg = (entry: Entry, event: Event): number => {\n  let best3Squat = 0.0;\n  if (event.includes(\"S\")) {\n    if (entry.squatStatus[0] >= 0) best3Squat = Math.max(best3Squat, entry.squatKg[0]);\n    if (entry.squatStatus[1] > 0) best3Squat = Math.max(best3Squat, entry.squatKg[1]);\n    if (entry.squatStatus[2] > 0) best3Squat = Math.max(best3Squat, entry.squatKg[2]);\n  }\n\n  let best3Bench = 0.0;\n  if (event.includes(\"B\")) {\n    if (entry.benchStatus[0] >= 0) best3Bench = Math.max(best3Bench, entry.benchKg[0]);\n    if (entry.benchStatus[1] > 0) best3Bench = Math.max(best3Bench, entry.benchKg[1]);\n    if (entry.benchStatus[2] > 0) best3Bench = Math.max(best3Bench, entry.benchKg[2]);\n  }\n\n  let best3Dead = 0.0;\n  if (event.includes(\"D\")) {\n    if (entry.deadliftStatus[0] >= 0) best3Dead = Math.max(best3Dead, entry.deadliftKg[0]);\n    if (entry.deadliftStatus[1] > 0) best3Dead = Math.max(best3Dead, entry.deadliftKg[1]);\n    if (entry.deadliftStatus[2] > 0) best3Dead = Math.max(best3Dead, entry.deadliftKg[2]);\n  }\n\n  // If there was no attempted success for a single lift, return zero.\n  if (best3Squat === 0 && entry.squatStatus[0] === -1) return 0.0;\n  if (best3Bench === 0 && entry.benchStatus[0] === -1) return 0.0;\n  if (best3Dead === 0 && entry.deadliftStatus[0] === -1) return 0.0;\n\n  return best3Squat + best3Bench + best3Dead;\n};\n\nexport const getBest3SquatKg = (entry: Entry): number => {\n  let best3Squat = 0.0;\n  if (entry.squatStatus[0] > 0) best3Squat = Math.max(best3Squat, entry.squatKg[0]);\n  if (entry.squatStatus[1] > 0) best3Squat = Math.max(best3Squat, entry.squatKg[1]);\n  if (entry.squatStatus[2] > 0) best3Squat = Math.max(best3Squat, entry.squatKg[2]);\n  return best3Squat;\n};\n\nexport const getBest3BenchKg = (entry: Entry): number => {\n  let best3Bench = 0.0;\n  if (entry.benchStatus[0] > 0) best3Bench = Math.max(best3Bench, entry.benchKg[0]);\n  if (entry.benchStatus[1] > 0) best3Bench = Math.max(best3Bench, entry.benchKg[1]);\n  if (entry.benchStatus[2] > 0) best3Bench = Math.max(best3Bench, entry.benchKg[2]);\n  return best3Bench;\n};\n\nexport const getBest3DeadliftKg = (entry: Entry): number => {\n  let best3Dead = 0.0;\n  if (entry.deadliftStatus[0] > 0) best3Dead = Math.max(best3Dead, entry.deadliftKg[0]);\n  if (entry.deadliftStatus[1] > 0) best3Dead = Math.max(best3Dead, entry.deadliftKg[1]);\n  if (entry.deadliftStatus[2] > 0) best3Dead = Math.max(best3Dead, entry.deadliftKg[2]);\n  return best3Dead;\n};\n\n// The Total is the sum of best of the first 3 attempts of each lift.\nexport const getFinalTotalKg = (entry: Entry): number => {\n  const best3Squat = getBest3SquatKg(entry);\n  const best3Bench = getBest3BenchKg(entry);\n  const best3Dead = getBest3DeadliftKg(entry);\n\n  // If there was no attempted success for a single lift, return zero.\n  if (best3Squat === 0 && entry.squatStatus[0] === -1) return 0.0;\n  if (best3Bench === 0 && entry.benchStatus[0] === -1) return 0.0;\n  if (best3Dead === 0 && entry.deadliftStatus[0] === -1) return 0.0;\n\n  return best3Squat + best3Bench + best3Dead;\n};\n\n// Restricts the total calculation to just for the specified Event.\nexport const getFinalEventTotalKg = (entry: Entry, event: Event): number => {\n  let best3Squat = 0.0;\n  if (event.includes(\"S\")) {\n    best3Squat = getBest3SquatKg(entry);\n    if (best3Squat === 0) return 0.0;\n  }\n\n  let best3Bench = 0.0;\n  if (event.includes(\"B\")) {\n    best3Bench = getBest3BenchKg(entry);\n    if (best3Bench === 0) return 0.0;\n  }\n\n  let best3Dead = 0.0;\n  if (event.includes(\"D\")) {\n    best3Dead = getBest3DeadliftKg(entry);\n    if (best3Dead === 0) return 0.0;\n  }\n\n  return best3Squat + best3Bench + best3Dead;\n};\n\n// Filter entries to only get lifters that are lifting on a given day\nexport const getLiftersOnDay = (entries: ReadonlyArray<Entry>, day: number): Array<Entry> => {\n  if (!entries) {\n    return [];\n  }\n  return entries.filter((entry) => {\n    return entry.day === day;\n  });\n};\n\n// Convert a lift like \"S\" to the kg array field name, like \"squatKg\".\nexport const liftToAttemptFieldName = (lift: Lift): FieldKg => {\n  switch (lift) {\n    case \"S\":\n      return \"squatKg\";\n    case \"B\":\n      return \"benchKg\";\n    case \"D\":\n      return \"deadliftKg\";\n    default:\n      checkExhausted(lift);\n      return \"squatKg\";\n  }\n};\n\n// Convert a lift like \"S\" to the status array field name, like \"squatStatus\".\nexport const liftToStatusFieldName = (lift: Lift): FieldStatus => {\n  switch (lift) {\n    case \"S\":\n      return \"squatStatus\";\n    case \"B\":\n      return \"benchStatus\";\n    case \"D\":\n      return \"deadliftStatus\";\n    default:\n      checkExhausted(lift);\n      return \"squatStatus\";\n  }\n};\n\n// Whether the Entry has taken any attempts.\nexport const entryHasLifted = (entry: Entry): boolean => {\n  if (entry.squatStatus[0] !== 0) return true;\n  if (entry.benchStatus[0] !== 0) return true;\n  if (entry.deadliftStatus[0] !== 0) return true;\n  return false;\n};\n\n// Whether any Entry has taken any attempts on the given (day, platform). O(n).\nexport const liftingPresentOnPlatform = (entries: ReadonlyArray<Entry>, day: number, platform: number): boolean => {\n  for (let i = 0; i < entries.length; i++) {\n    const entry = entries[i];\n    if (entry.day !== day || entry.platform !== platform) continue;\n    if (entryHasLifted(entry)) return true;\n  }\n  return false;\n};\n\n// Given an array of how many platforms are on each day and the Entries,\n// returns an array of arrays of booleans, such that array[day-1][platform-1] is\n// true iff at least one Entry corresponding to that (day, platform) has\n// taken an attempt.\nexport const getWhetherPlatformsHaveLifted = (\n  platformsOnDays: ReadonlyArray<number>,\n  entries: ReadonlyArray<Entry>\n): Array<Array<boolean>> => {\n  const ret = [];\n  for (let day = 1; day <= platformsOnDays.length; day++) {\n    const platformsOnDay = platformsOnDays[day - 1];\n    const acc = [];\n    for (let platform = 1; platform <= platformsOnDay; platform++) {\n      acc.push(liftingPresentOnPlatform(entries, day, platform));\n    }\n    ret.push(acc);\n  }\n  return ret;\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { newDefaultEntry, liftToAttemptFieldName, liftToStatusFieldName } from \"../logic/entry\";\nimport { RegistrationAction, OverwriteStoreAction, EnterAttemptAction, MarkLiftAction } from \"../types/actionTypes\";\nimport { Entry, Lift, FieldKg } from \"../types/dataTypes\";\nimport { RegistrationState } from \"../types/stateTypes\";\nimport { checkExhausted } from \"../types/utils\";\n\nconst initialState: RegistrationState = {\n  // The next unique ID to assign.\n  //\n  // This is stored in global state to handle the case of deleting registration\n  // rows during the course of lifting.\n  //\n  // A large number is used as the initial value to make it clear that this is\n  // specifically not an index into the `entries` array.\n  nextEntryId: 5000,\n\n  // Entry objects in the order they appear on the Registration page.\n  // This array owns all registration information.\n  entries: [],\n\n  // Hash from unique ID to `entries` array index.\n  //\n  // This is for the benefit of pages other than the Registration page.\n  // Because the sort order of the `entries` array can change arbitrarily,\n  // the other pages remember globally-unique identifiers for each registration,\n  // instead of a simple array index.\n  //\n  // This lookup table allows mapping those identifiers to whatever\n  // the current location of that data is in the canonical `entries` store.\n  lookup: {},\n};\n\ntype Action = RegistrationAction | EnterAttemptAction | MarkLiftAction | OverwriteStoreAction;\n\ntype NumberLookup = {\n  [id: number]: number;\n};\n\nexport default function registrationReducer(\n  state: RegistrationState = initialState,\n  action: Action\n): RegistrationState {\n  switch (action.type) {\n    case \"NEW_REGISTRATION\": {\n      // The object provides optional properties that can overwrite the default.\n      // Although the UI doesn't pass properties this way, debugging code does.\n      const obj = action.overwriteDefaults;\n\n      // Generate an entries array with one more item (without modifying the orginal).\n      // Object.assign() allows `obj` to overwrite defaults if present.\n      const entries: Array<Entry> = state.entries.slice();\n      const newEntry = newDefaultEntry(state.nextEntryId);\n\n      // If a previous entry exists, pre-populate some information from it.\n      if (entries.length > 0) {\n        const previousEntry = entries[entries.length - 1];\n        newEntry.day = previousEntry.day;\n        newEntry.platform = previousEntry.platform;\n        newEntry.flight = previousEntry.flight;\n      }\n\n      // Overwrite any newEntry properties with those given in obj.\n      entries.push(Object.assign(newEntry, obj));\n\n      // Since a new entry was added, generate a new 'lookup' object,\n      // mapping from the globally-unique EntryId to the array index.\n      // Specify type explicitly here so that we can mutate it\n      const lookup: NumberLookup = Object.assign({}, state.lookup);\n      lookup[state.nextEntryId] = entries.length - 1;\n\n      return {\n        ...state,\n        nextEntryId: state.nextEntryId + 1,\n        entries: entries,\n        lookup: lookup,\n      };\n    }\n\n    case \"DELETE_REGISTRATION\": {\n      const entryId = action.entryId;\n\n      // Generate an entries array without the given item.\n      const entries: Array<Entry> = state.entries.filter((item) => item.id !== entryId);\n\n      // Since the entry was deleted from anywhere in the array,\n      // construct a new lookup table from scratch.\n      const lookup: NumberLookup = {};\n\n      for (let i = 0; i < entries.length; i++) {\n        const entry = entries[i];\n        lookup[entry.id] = i;\n      }\n\n      return {\n        ...state,\n        entries: entries,\n        lookup: lookup,\n      };\n    }\n\n    case \"UPDATE_REGISTRATION\": {\n      const entryId = action.entryId;\n      const changes = action.changes;\n\n      // Clone the entries array, since one entry will reference a new object.\n      const entries: Array<Entry> = state.entries.slice();\n\n      // Make a new object with just the changes overwritten,\n      // and reference that object from the new array.\n      const index = entries.findIndex((obj) => obj.id === entryId);\n      const newEntry = Object.assign({}, entries[index]);\n      entries[index] = Object.assign(newEntry, changes);\n\n      return {\n        ...state,\n        entries: entries,\n      };\n    }\n\n    case \"ENTER_ATTEMPT\": {\n      // Action parameters, with expected types.\n      const entryId = Number(action.entryId);\n      const lift: Lift = action.lift;\n      const attemptOneIndexed = Number(action.attemptOneIndexed);\n      const weightKg = Number(action.weightKg);\n\n      const field: FieldKg = liftToAttemptFieldName(lift);\n\n      // Clone the entries array, since one slot will reference a new object.\n      const newEntries: Array<Entry> = state.entries.slice();\n      const index = newEntries.findIndex((obj) => obj.id === entryId);\n      const oldEntry = newEntries[index];\n\n      // Make a copy of the attempts array containing the new attempt.\n      const newarray = oldEntry[field].slice();\n      newarray[attemptOneIndexed - 1] = weightKg;\n\n      // Put that new attempts array into an object so we can use Object.assign().\n      const newfields: Partial<Entry> = {};\n      newfields[field] = newarray;\n\n      // Make a new entry from the old entry, with the attempts field overwritten.\n      newEntries[index] = Object.assign(oldEntry, newfields);\n\n      return {\n        ...state,\n        entries: newEntries,\n      };\n    }\n\n    case \"MARK_LIFT\": {\n      const entryId = Number(action.entryId);\n      const lift: Lift = action.lift;\n      const attemptOneIndexed = Number(action.attemptOneIndexed);\n      const success = Boolean(action.success);\n\n      // Map true to '1' and false to '-1'.\n      const status = success === true ? 1 : -1;\n\n      const fieldStatus = liftToStatusFieldName(lift);\n\n      // Clone the entries array, since one slot will reference a new object.\n      const newEntries: Array<Entry> = state.entries.slice();\n      const index = newEntries.findIndex((obj) => obj.id === entryId);\n      const oldEntry = newEntries[index];\n\n      // Make a copy of the status array containing the new status.\n      const newarray = oldEntry[fieldStatus].slice();\n      newarray[attemptOneIndexed - 1] = status;\n\n      // Put that new array into an object so we can use Object.assign().\n      const newfields: Partial<Entry> = {};\n      newfields[fieldStatus] = newarray;\n\n      // Make a new entry from the old entry, with the status field overwritten.\n      const newEntry = Object.assign({}, oldEntry);\n      newEntries[index] = Object.assign(newEntry, newfields);\n\n      return {\n        ...state,\n        entries: newEntries,\n      };\n    }\n\n    // Caused by clicking a \"Merge\" button on the Results page.\n    case \"MERGE_PLATFORM\": {\n      const day: number = action.day;\n      const platform: number = action.platform;\n      const platformEntries: ReadonlyArray<Entry> = action.platformEntries;\n\n      // Filter out state entries assigned to the merged (day, platform).\n      const newEntries = state.entries.filter((e) => {\n        return !(e.day === day && e.platform === platform);\n      });\n\n      // Get the nextEntryId: the merged entries will be reassigned IDs.\n      let nextEntryId: number = state.nextEntryId;\n\n      // For each incoming Entry, copy the object, assign a new ID,\n      // and place it in the newEntries array.\n      for (let i = 0; i < platformEntries.length; i++) {\n        const entry: Entry = Object.assign({}, platformEntries[i]);\n        entry.id = nextEntryId++;\n        newEntries.push(entry);\n      }\n\n      // Generate an entirely new lookup table.\n      const lookup: NumberLookup = {};\n      for (let i = 0; i < newEntries.length; i++) {\n        lookup[newEntries[i].id] = i;\n      }\n\n      // Return a new object with the new components replaced.\n      return {\n        ...state,\n        nextEntryId: nextEntryId,\n        entries: newEntries,\n        lookup: lookup,\n      };\n    }\n\n    case \"OVERWRITE_STORE\":\n      return action.store.registration;\n\n    case \"ASSIGN_LOT_NUMBERS\":\n      // Clone & assign entry with its new lot number.\n      const updatedEntries = state.entries.map((entry, index) => ({ ...entry, lot: action.lotNumbers[index] }));\n\n      return {\n        ...state,\n        entries: updatedEntries,\n      };\n\n    default:\n      checkExhausted(action);\n      return state;\n  }\n}\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Lifting state only tracks manual overrides.\n//\n// Outside of overrides, the state of the meet is fully-calculated by the LiftingView.\n//\n// For safety, correctness, and ease of understanding, the state of the meet is\n// intentionally *not* stored in the global state. It is continuously recalculated.\n//\n// Please do not attempt to store meet state in the Redux store!\n\nimport {\n  MarkLiftAction,\n  SetLiftingGroupAction,\n  OverrideAttemptAction,\n  OverrideEntryIdAction,\n  OverwriteStoreAction,\n  SetTableInfoAction,\n} from \"../types/actionTypes\";\nimport { LiftingState } from \"../types/stateTypes\";\nimport { checkExhausted } from \"../types/utils\";\n\nconst initialState: LiftingState = {\n  // Specifies the initial settings for the control widgets on the lifting page.\n  // The intention is that the score table sets these manually.\n  day: 1,\n  platform: 1,\n  flight: \"A\",\n  lift: \"S\",\n\n  // These properties are normally calculated, but exist here as a mechanism\n  // for a one-shot override of the normal logic. After being handled,\n  // they are unset.\n  overrideAttempt: null, // Allows selecting an attempt, even if it's completed.\n  overrideEntryId: null, // Allows selecting a lifter, even if they've already gone.\n\n  // Presentational configuration.\n  columnDivisionWidthPx: 90,\n};\n\ntype Action =\n  | MarkLiftAction\n  | SetLiftingGroupAction\n  | OverrideAttemptAction\n  | OverrideEntryIdAction\n  | OverwriteStoreAction\n  | SetTableInfoAction;\n\nexport default function liftingReducer(state: LiftingState = initialState, action: Action): LiftingState {\n  switch (action.type) {\n    case \"MARK_LIFT\": {\n      // Unset any overrides, returning to normal lifting flow.\n      return { ...state, overrideAttempt: null, overrideEntryId: null };\n    }\n\n    case \"SET_LIFTING_GROUP\":\n      return {\n        // Keep all the UI customization stuff.\n        ...state,\n\n        // Change all the real state stuff.\n        day: action.day,\n        platform: action.platform,\n        flight: action.flight,\n        lift: action.lift,\n\n        // If the group changes, unset any overrides.\n        overrideAttempt: null,\n        overrideEntryId: null,\n      };\n\n    case \"OVERRIDE_ATTEMPT\":\n      return { ...state, overrideAttempt: action.attempt };\n\n    case \"OVERRIDE_ENTRY_ID\":\n      return { ...state, overrideEntryId: action.entryId };\n\n    case \"OVERWRITE_STORE\":\n      return action.store.lifting;\n\n    case \"SET_TABLE_INFO\": {\n      const changes = action.changes;\n\n      // As a safeguard, ensure that fields unrelated to customization\n      // are not overwritten by this action.\n\n      // Make a new object that's state + changes, with changes taking priority.\n      const combined = Object.assign({}, state);\n      Object.assign(combined, changes);\n\n      // Source from this new combined object, with fields unrelated to customization\n      // deferring to the original state.\n      //\n      // So that means:\n      //  - Fields unrelated to customization will be the same as in 'state'.\n      //  - Customization fields will be from 'combined', which includes all fields\n      //    and allowed the 'changes' object to overwrite any of them.\n      return {\n        ...combined,\n\n        day: state.day,\n        platform: state.platform,\n        flight: state.flight,\n        lift: state.lift,\n\n        overrideAttempt: state.overrideAttempt,\n        overrideEntryId: state.overrideEntryId,\n      };\n    }\n\n    default:\n      checkExhausted(action);\n      return state;\n  }\n}\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { combineReducers } from \"redux\";\n\nimport versionsReducer from \"./versionsReducer\";\nimport languageReducer from \"./languageReducer\";\nimport meetReducer from \"./meetReducer\";\nimport registrationReducer from \"./registrationReducer\";\nimport liftingReducer from \"./liftingReducer\";\n\n// Using combineReducers() guarantees that each part of the state object\n// fully bears the responsibility of managing itself by only sending a\n// subset of the state to the reducer.\n//\n// For example, the meetReducer() receives a new 'state' object\n// equal to 'state.meet' from the root. Because there is no way to access\n// the root state object from a child state object, the meetReducer() is\n// fully-encapsulated, allowing for sane reasoning about effects on global state.\nexport default combineReducers({\n  versions: versionsReducer,\n  language: languageReducer,\n  meet: meetReducer,\n  registration: registrationReducer,\n  lifting: liftingReducer,\n});\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { ChangeLanguageAction, OverwriteStoreAction } from \"../types/actionTypes\";\nimport { Language } from \"../types/dataTypes\";\nimport { checkExhausted } from \"../types/utils\";\n\ntype Action = ChangeLanguageAction | OverwriteStoreAction;\n\nexport default function languageReducer(state: Language = \"en\", action: Action): Language {\n  switch (action.type) {\n    case \"CHANGE_LANGUAGE\":\n      return action.language;\n\n    case \"OVERWRITE_STORE\":\n      return action.store.language;\n\n    default:\n      checkExhausted(action);\n      return state;\n  }\n}\n","// vim: set ts=2 sts=2 sw=2 et:\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// The confirmation modal that pops up when the \"New Meet\" button is clicked.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\n\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nimport { getString } from \"../../logic/strings\";\n\nimport { overwriteStore } from \"../../actions/globalActions\";\nimport rootReducer from \"../../reducers/rootReducer\";\n\nimport { Language } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { Dispatch } from \"redux\";\n\ninterface OwnProps {\n  show: boolean;\n  close: () => void;\n}\n\ninterface StateProps {\n  name: string;\n  language: Language;\n}\n\ninterface DispatchProps {\n  overwriteStore: (language: Language) => void;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nclass NewMeetModal extends React.Component<Props> {\n  render() {\n    return (\n      <Modal show={this.props.show} onHide={this.props.close}>\n        <Modal.Header closeButton>\n          <Modal.Title>\n            <FormattedMessage\n              id=\"home.new-meet-popup-title\"\n              defaultMessage=\"OK to clear {meetName}?\"\n              values={{ meetName: this.props.name }}\n            />\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>\n            <FormattedMessage\n              id=\"home.new-meet-popup-message-clear\"\n              defaultMessage=\"Starting a new meet will clear all unsaved data from {meetName}.\"\n              values={{ meetName: this.props.name }}\n            />\n          </p>\n          <p>\n            <FormattedMessage\n              id=\"home.new-meet-popup-message-sure\"\n              defaultMessage=\"Are you sure you want to continue?\"\n            />\n          </p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={this.props.close} variant=\"light\">\n            {getString(\"common.button-close\", this.props.language)}\n          </Button>\n          <LinkContainer to=\"/meet-setup\">\n            <Button onClick={() => this.props.overwriteStore(this.props.language)} variant=\"primary\">\n              {getString(\"common.button-continue\", this.props.language)}\n            </Button>\n          </LinkContainer>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => {\n  return {\n    name: state.meet.name,\n    language: state.language,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    overwriteStore: (language: Language) => {\n      // Calling the combined root reducer with an empty object results in the child reducers\n      // being invoked with no argument, so they return their default states.\n      // We cast here since this is not how the reducer is really intended to work\n      const defaultStore = rootReducer({ language: language } as GlobalState, \"OVERWRITE_STORE\" as any);\n      dispatch(overwriteStore(defaultStore));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewMeetModal);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Shows a popup with an error message.\n// This exists because Chrome only allows window.alert() to execute once,\n// because Chrome is bad and Google should feel bad.\n//\n// This is intended only for use with buttons that load external resources,\n// like save files and CSV registration importation files.\n//\n// Regular old errors in widgets should be reported by setting their\n// validationState.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\n\ninterface OwnProps {\n  error: string;\n  title: string;\n  show: boolean;\n  close: () => void;\n}\n\ntype Props = OwnProps;\n\nclass ErrorModal extends React.Component<Props> {\n  render() {\n    return (\n      <Modal show={this.props.show} onHide={this.props.close}>\n        <Modal.Header closeButton>\n          <Modal.Title>{this.props.title}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>{this.props.error}</p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"info\" onClick={this.props.close}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport default connect(null, null)(ErrorModal);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nimport { saveAs } from \"file-saver\";\n\nimport { FormattedMessage } from \"react-intl\";\nimport LanguageSelector from \"../components/translations/LanguageSelector\";\nimport { overwriteStore } from \"../actions/globalActions\";\n\nimport NewMeetModal from \"../components/home/NewMeetModal\";\nimport ErrorModal from \"../components/ErrorModal\";\n\nimport { getString } from \"../logic/strings\";\n\nimport { stateVersion, releaseVersion, releaseDate } from \"../versions\";\n\nimport styles from \"../components/common/ContentArea.module.scss\";\n\nimport { GlobalState } from \"../types/stateTypes\";\nimport { Dispatch } from \"redux\";\n\n// Temporary CSS, just for prototyping.\nconst centerConsole = { maxWidth: 700, marginRight: \"auto\", marginLeft: \"auto\" };\n\ninterface StateProps {\n  redux: GlobalState;\n}\n\ninterface DispatchProps {\n  overwriteStore: (store: GlobalState) => void;\n}\n\ninterface InternalState {\n  showNewMeetModal: boolean;\n  // Controls the ErrorModal popup. Shown when error !== \"\".\n  error: string;\n}\n\ntype Props = StateProps & DispatchProps;\n\n// Gets links and buttons to have the same vertical spacing.\nconst buttonMargin = { marginBottom: \"8px\" };\n\nclass HomeContainer extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n    this.handleLoadClick = this.handleLoadClick.bind(this);\n    this.handleNewClick = this.handleNewClick.bind(this);\n    this.closeConfirmModal = this.closeConfirmModal.bind(this);\n    this.closeErrorModal = this.closeErrorModal.bind(this);\n    this.handleLoadFileInput = this.handleLoadFileInput.bind(this);\n    this.handleSaveClick = this.handleSaveClick.bind(this);\n    this.renderContinueButton = this.renderContinueButton.bind(this);\n\n    this.state = { showNewMeetModal: false, error: \"\" };\n  }\n\n  // The file input is hidden, and we want to use a button to activate it.\n  // This event handler is just a proxy to call the *real* event handler.\n  handleLoadClick = () => {\n    const loadhelper = document.getElementById(\"loadhelper\");\n    if (loadhelper !== null) {\n      loadhelper.click();\n    }\n  };\n\n  // When we click the new meet button\n  // Open the popover modal to confirm the user is willing to delete any current progress\n  handleNewClick = () => {\n    this.setState({ showNewMeetModal: true });\n  };\n\n  // Close the new meet confirmation modal\n  closeConfirmModal = () => {\n    this.setState({ showNewMeetModal: false });\n  };\n\n  closeErrorModal = () => {\n    this.setState({ error: \"\" });\n  };\n\n  // Called when a file is selected.\n  handleLoadFileInput = () => {\n    // Load the element and make sure it's an HTMLInputElement.\n    const loadHelper = document.getElementById(\"loadhelper\");\n    if (loadHelper === null || !(loadHelper instanceof HTMLInputElement) || loadHelper.files === null) {\n      return;\n    }\n\n    const selectedFile = loadHelper.files[0];\n    const language = this.props.redux.language;\n    const rememberThis = this;\n\n    const reader = new FileReader();\n    reader.onload = function (event: any) {\n      let errored = false;\n      try {\n        const obj = JSON.parse(event.target.result);\n\n        // Basic error checking, make sure it's the right format.\n        if (\n          obj.language === undefined ||\n          obj.meet === undefined ||\n          obj.registration === undefined ||\n          obj.lifting === undefined\n        ) {\n          errored = true;\n        } else {\n          rememberThis.props.overwriteStore(obj);\n        }\n      } catch (err) {\n        errored = true;\n      }\n\n      if (errored) {\n        const error = getString(\"error.invalid-openlifter\", language);\n        rememberThis.setState({ error: error });\n      }\n    };\n    reader.readAsText(selectedFile);\n  };\n\n  handleSaveClick = () => {\n    let meetname = this.props.redux.meet.name;\n    if (meetname === \"\") {\n      meetname = getString(\"common.unnamed-filename\", this.props.redux.language);\n    }\n    meetname = meetname.replace(/ /g, \"-\");\n\n    const state = JSON.stringify(this.props.redux);\n    const blob = new Blob([state], { type: \"application/json;charset=utf-8\" });\n    saveAs(blob, meetname + \".openlifter\");\n  };\n\n  renderContinueButton = () => {\n    const meetname = this.props.redux.meet.name;\n    if (meetname === \"\") {\n      // Unnamed or unstarted meet, so don't render a continue button\n      return;\n    }\n    return (\n      <LinkContainer to=\"/meet-setup\">\n        <Button variant=\"primary\" block style={buttonMargin}>\n          <FormattedMessage\n            id=\"home.button-continue\"\n            defaultMessage=\"Continue {meetName}\"\n            values={{ meetName: meetname }}\n          />\n        </Button>\n      </LinkContainer>\n    );\n  };\n\n  render() {\n    let newMeetButton = (\n      <Button variant=\"primary\" block onClick={this.handleNewClick} style={buttonMargin}>\n        <FormattedMessage id=\"home.button-new-meet\" defaultMessage=\"New Meet\" />\n      </Button>\n    );\n\n    // If no meet is active, make the button just a LinkContainer.\n    if (!this.props.redux.meet.name) {\n      newMeetButton = <LinkContainer to=\"/meet-setup\">{newMeetButton}</LinkContainer>;\n    }\n\n    const isBeta: boolean = releaseVersion.includes(\"eta\");\n    let betaWarning = null;\n    if (isBeta === true) {\n      betaWarning = (\n        <h3>\n          <p>\n            <FormattedMessage\n              id=\"home.beta-warning\"\n              defaultMessage=\"This is the in-development, next version of OpenLifter. The internal data format is unstable. Do not use this to run competitions!\"\n            />\n          </p>\n        </h3>\n      );\n    }\n\n    const wrongVersion: boolean = this.props.redux.versions.stateVersion !== stateVersion;\n    const dataReleaseVersion = this.props.redux.versions.releaseVersion;\n\n    const language = this.props.redux.language;\n\n    let warning = null;\n    if (wrongVersion === true) {\n      warning = (\n        <h3>\n          <p>\n            <b>{getString(\"common.danger-allcaps\", language)}</b>\n          </p>\n          <p>\n            <FormattedMessage\n              id=\"home.wrong-version-warning\"\n              defaultMessage=\"The loaded meet was made in OpenLifter {oldVersion}. That format is incompatible with OpenLifter {thisVersion}.\"\n              values={{ oldVersion: dataReleaseVersion, thisVersion: releaseVersion }}\n            />\n          </p>\n        </h3>\n      );\n    }\n\n    return (\n      <Card style={centerConsole} className={styles.contentArea}>\n        <NewMeetModal show={this.state.showNewMeetModal} close={this.closeConfirmModal} />\n        <ErrorModal\n          error={this.state.error}\n          title={getString(\"home.error-load-popup-title\", language)}\n          show={this.state.error !== \"\"}\n          close={this.closeErrorModal}\n        />\n\n        <Card.Header>\n          <img alt=\"ATC\" src=\"atc-logo.png\" style={{ width: \"50%\", margin: \"auto\", display: \"block\" }} />\n          {betaWarning}\n        </Card.Header>\n\n        <Card.Body>\n          <Container>\n            <Row>{warning}</Row>\n            <Row style={buttonMargin}>\n              <Col md={8}>\n                {wrongVersion === false ? (\n                  this.renderContinueButton()\n                ) : (\n                  <a href={\"https://www.openlifter.com/releases/\" + dataReleaseVersion}>\n                    <Button variant=\"success\" block>\n                      <FormattedMessage\n                        id=\"home.button-switch-version\"\n                        defaultMessage=\"Switch to OpenLifter {otherVersion}\"\n                        values={{ otherVersion: dataReleaseVersion }}\n                      />\n                    </Button>\n                  </a>\n                )}\n              </Col>\n              <Col md={4}>\n                <LanguageSelector />\n              </Col>\n            </Row>\n\n            <Row>\n              <Col md={8}>\n                <div>\n                  {newMeetButton}\n\n                  <Button variant=\"warning\" block onClick={this.handleLoadClick} style={buttonMargin}>\n                    <FormattedMessage id=\"home.button-load-from-file\" defaultMessage=\"Load from File\" />\n                  </Button>\n                  <Button variant=\"success\" block onClick={this.handleSaveClick} style={buttonMargin}>\n                    <FormattedMessage id=\"home.button-save-tofile\" defaultMessage=\"Save to File\" />\n                  </Button>\n                </div>\n              </Col>\n\n              <Col md={4}>\n                <a\n                  href=\"https://gitlab.com/openpowerlifting/openlifter/issues/new\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  <Button variant=\"outline-secondary\" block style={buttonMargin}>\n                    <FormattedMessage id=\"home.button-report-issue\" defaultMessage=\"Report an Issue\" />\n                  </Button>\n                </a>\n                <a href=\"https://www.openlifter.com/support\" rel=\"noopener noreferrer\" target=\"_blank\">\n                  <Button variant=\"outline-secondary\" block style={buttonMargin}>\n                    <FormattedMessage id=\"home.button-support\" defaultMessage=\"Official Support\" />\n                  </Button>\n                </a>\n                <a href=\"https://gitlab.com/openpowerlifting/openlifter\" rel=\"noopener noreferrer\" target=\"_blank\">\n                  <Button variant=\"outline-secondary\" block style={buttonMargin}>\n                    <FormattedMessage id=\"home.button-source\" defaultMessage=\"Full Source Code\" />\n                  </Button>\n                </a>\n                <LinkContainer to=\"/about\">\n                  <Button variant=\"outline-secondary\" block style={buttonMargin}>\n                    <FormattedMessage id=\"home.button-credits\" defaultMessage=\"Credits and License\" />\n                  </Button>\n                </LinkContainer>\n              </Col>\n            </Row>\n          </Container>\n        </Card.Body>\n\n        <Card.Footer>\n          <h4 style={{ textAlign: \"center\" }}>\n            <FormattedMessage\n              id=\"home.version-date\"\n              defaultMessage=\"Version {releaseVersion}, {releaseDate}.\"\n              values={{\n                releaseVersion: releaseVersion,\n                releaseDate: releaseDate,\n              }}\n            />\n          </h4>\n        </Card.Footer>\n\n        <input\n          id=\"loadhelper\"\n          type=\"file\"\n          accept=\".openlifter,.openlifter.txt\"\n          style={{ display: \"none\" }}\n          onChange={this.handleLoadFileInput}\n        />\n      </Card>\n    );\n  }\n}\n\n// Because we want to save the state, separate it out specifically\n// into a \"redux\" prop. Otherwise it gets contaminated by other props.\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  redux: {\n    ...state,\n  },\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    overwriteStore: (store) => dispatch(overwriteStore(store)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeContainer);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// This defines a generic text input that colors itself based upon a validation\n// function passed in OwnProps. On blur, an onSuccess() callback is called\n// if validation passes; otherwise, the text input reverts to the initial state.\n\nimport React from \"react\";\n\nimport Form from \"react-bootstrap/Form\";\n\nimport { Validation } from \"../types/dataTypes\";\nimport { assertString } from \"../types/utils\";\n\ninterface OwnProps {\n  type?: string; // The type of input, such as \"text\" or \"number\". Defaults to \"text\".\n  label?: string; // Form label text, shown above the input.\n  initialValue: string;\n  placeholder?: string;\n  disabled?: boolean;\n  validate: (value?: string) => Validation;\n  onSuccess: (value: string) => void;\n\n  // By default, the bottom margin is removed so that this can be used in tables.\n  // Setting this to true adds the margin back. Defaults to false.\n  keepMargin?: boolean;\n}\n\ntype Props = Readonly<OwnProps>;\n\ninterface InternalState {\n  value: string;\n}\n\nclass BirthDateInput extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    this.validate = this.validate.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n\n    this.state = {\n      value: props.initialValue,\n    };\n  }\n\n  validate = (): Validation => {\n    return this.props.validate(this.state.value);\n  };\n\n  handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === \"Enter\") {\n      event.currentTarget.blur();\n    }\n  };\n\n  handleChange = (event: React.BaseSyntheticEvent) => {\n    if (assertString(event.currentTarget.value)) {\n      this.setState({ value: event.currentTarget.value });\n    }\n  };\n\n  handleBlur = () => {\n    if (this.validate() === \"error\") {\n      this.setState({ value: this.props.initialValue });\n      return;\n    }\n\n    if (this.props.initialValue !== this.state.value) {\n      this.props.onSuccess(this.state.value);\n    }\n  };\n\n  render() {\n    const validation: Validation = this.validate();\n    const maybeLabel = this.props.label ? <Form.Label>{this.props.label}</Form.Label> : undefined;\n\n    return (\n      <Form.Group style={this.props.keepMargin === true ? undefined : { marginBottom: 0 }}>\n        {maybeLabel}\n        <Form.Control\n          type={this.props.type ? this.props.type : \"text\"}\n          placeholder={this.props.placeholder}\n          disabled={this.props.disabled === true ? true : undefined}\n          value={this.state.value}\n          onKeyDown={this.handleKeyDown}\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n          isValid={validation === \"success\"}\n          isInvalid={validation === \"error\"}\n          className={validation === \"warning\" ? \"is-warning\" : undefined}\n        />\n      </Form.Group>\n    );\n  }\n}\n\nexport default BirthDateInput;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport {\n  SetMeetNameAction,\n  SetFormulaAction,\n  SetFederationAction,\n  SetDivisionsAction,\n  SetMeetDateAction,\n  SetLengthDaysAction,\n  SetPlatformsOnDaysAction,\n  SetInKgAction,\n  SetWeightClassesAction,\n  SetBarAndCollarsWeightKgAction,\n  SetPlateConfigAction,\n  UpdateMeetAction,\n} from \"../types/actionTypes\";\nimport { Formula, Lift, Sex } from \"../types/dataTypes\";\nimport { MeetState } from \"../types/stateTypes\";\n\nexport const setMeetName = (name: string): SetMeetNameAction => {\n  return {\n    type: \"SET_MEET_NAME\",\n    name,\n  };\n};\n\nexport const setFormula = (formula: Formula): SetFormulaAction => {\n  return {\n    type: \"SET_FORMULA\",\n    formula,\n  };\n};\n\nexport const setFederation = (federation: string): SetFederationAction => {\n  return {\n    type: \"SET_FEDERATION\",\n    federation,\n  };\n};\n\nexport const setDivisions = (divisions: ReadonlyArray<string>): SetDivisionsAction => {\n  return {\n    type: \"SET_DIVISIONS\",\n    divisions,\n  };\n};\n\nexport const setMeetDate = (date: string): SetMeetDateAction => {\n  return {\n    type: \"SET_MEET_DATE\",\n    date,\n  };\n};\n\nexport const setLengthDays = (length: number): SetLengthDaysAction => {\n  return {\n    type: \"SET_LENGTH_DAYS\",\n    length,\n  };\n};\n\nexport const setPlatformsOnDays = (day: number, count: number): SetPlatformsOnDaysAction => {\n  return {\n    type: \"SET_PLATFORM_COUNT\",\n    day: day,\n    count: count,\n  };\n};\n\nexport const setInKg = (inKg: boolean): SetInKgAction => {\n  return {\n    type: \"SET_IN_KG\",\n    inKg,\n  };\n};\n\nexport const setWeightClasses = (sex: Sex, classesKg: ReadonlyArray<number>): SetWeightClassesAction => {\n  return {\n    type: \"SET_WEIGHTCLASSES\",\n    sex: sex,\n    classesKg: classesKg,\n  };\n};\n\nexport const setBarAndCollarsWeightKg = (lift: Lift, weightKg: number): SetBarAndCollarsWeightKgAction => {\n  return {\n    type: \"SET_BAR_AND_COLLARS_WEIGHT_KG\",\n    lift: lift,\n    weightKg: weightKg,\n  };\n};\n\nexport const setPlateConfig = (weightKg: number, pairCount: number, color: string): SetPlateConfigAction => {\n  return {\n    type: \"SET_PLATE_CONFIG\",\n    weightKg,\n    pairCount,\n    color,\n  };\n};\n\nexport const updateMeet = (obj: Partial<MeetState>): UpdateMeetAction => {\n  return {\n    type: \"UPDATE_MEET\",\n    changes: obj,\n  };\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the MeetDate date picker.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport DatePicker from \"react-datepicker\";\nimport { registerLocale } from \"react-datepicker\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Form from \"react-bootstrap/Form\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\n\nimport { setMeetDate } from \"../../actions/meetSetupActions\";\nimport { iso8601ToLocalDate, localDateToIso8601 } from \"../../logic/date\";\n\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { Language } from \"../../types/dataTypes\";\nimport { Dispatch } from \"redux\";\n\n// The react-datepicker gets locale information from the \"date-fns\" package.\n// In order for it to understand what our Languages are, we have to register\n// those locales. The react-datepicker provides a helper function to do this.\nimport de from \"date-fns/locale/de\";\nimport el from \"date-fns/locale/el\";\nimport eo from \"date-fns/locale/eo\";\nimport es from \"date-fns/locale/es\";\nimport et from \"date-fns/locale/et\";\nimport fr from \"date-fns/locale/fr\";\nimport hr from \"date-fns/locale/hr\";\nimport it from \"date-fns/locale/it\";\nimport lt from \"date-fns/locale/lt\";\nimport nl from \"date-fns/locale/nl\";\nimport pt from \"date-fns/locale/pt\";\nimport ru from \"date-fns/locale/ru\";\nimport tr from \"date-fns/locale/tr\";\nimport uk from \"date-fns/locale/uk\";\nimport zh_CN from \"date-fns/locale/zh-CN\";\n\n// Register the date-fns/locales with the DatePicker.\nregisterLocale(\"de\", de);\nregisterLocale(\"el\", el);\nregisterLocale(\"eo\", eo);\nregisterLocale(\"es\", es);\nregisterLocale(\"et\", et);\nregisterLocale(\"fr\", fr);\nregisterLocale(\"hr\", hr);\nregisterLocale(\"it\", it);\nregisterLocale(\"lt\", lt);\nregisterLocale(\"nl\", nl);\nregisterLocale(\"pt\", pt);\nregisterLocale(\"ru\", ru);\nregisterLocale(\"tr\", tr);\nregisterLocale(\"uk\", uk);\nregisterLocale(\"zh-Hans\", zh_CN);\n\ninterface StateProps {\n  date: string;\n  language: Language;\n}\n\ninterface DispatchProps {\n  setMeetDate: (date: Date) => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\nclass MeetDate extends React.Component<Props> {\n  render() {\n    // The DatePicker manipulates a Date object in local time.\n    const initialDate: Date = iso8601ToLocalDate(this.props.date);\n\n    return (\n      <FormGroup>\n        <Form.Label>\n          <FormattedMessage id=\"meet-setup.start-date\" defaultMessage=\"Start Date\" />\n        </Form.Label>\n        <div style={{ textAlign: \"center\" }}>\n          <DatePicker\n            dateFormat=\"yyyy-MM-dd\"\n            selected={initialDate}\n            onChange={this.props.setMeetDate}\n            inline\n            locale={this.props.language}\n          />\n        </div>\n      </FormGroup>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  date: state.meet.date,\n  language: state.language,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    setMeetDate: (date) => {\n      dispatch(setMeetDate(localDateToIso8601(date)));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MeetDate);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// This is a generic number input with a minus and a plus surrounding it.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMinus, faPlus } from \"@fortawesome/free-solid-svg-icons\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\n\nimport { string2number, displayNumber } from \"../../logic/units\";\n\nimport { assertString } from \"../../types/utils\";\nimport { Language, Validation } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\n\ninterface OwnProps {\n  initialValue: number; // Starting value when rendering the widget.\n\n  // Properties related to validation.\n  step: number; // Amount with which +/- buttons should increment or decrement.\n  validate: (n: number) => Validation; // Verifies that the number is valid.\n  onChange: (n: number) => void; // Callback. Only validated numbers are reported.\n\n  // Properties related to display.\n  label?: JSX.Element | string; // A label to display on the element.\n  marginBottom?: string; // Allows overriding margin (Forms by default have margins).\n}\n\ninterface StateProps {\n  language: Language;\n}\n\ntype Props = OwnProps & StateProps;\n\ninterface InternalState {\n  value: string;\n}\n\nclass NumberInput extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    // Handles manual text entry.\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n\n    // Handles the +/- buttons on the side of the input.\n    this.handleDecrement = this.handleDecrement.bind(this);\n    this.handleIncrement = this.handleIncrement.bind(this);\n    this.handleStep = this.handleStep.bind(this);\n\n    // Internal state, for purposes of validation.\n    // To avoid confusion (auto-rounding) when typing, just store a string.\n    this.state = {\n      value: displayNumber(props.initialValue, props.language),\n    };\n  }\n\n  // Used when the user manually types into the input box.\n  handleChange = (event: React.BaseSyntheticEvent): void => {\n    const value = event.currentTarget.value;\n    if (assertString(value)) {\n      this.setState({ value: value });\n    }\n  };\n\n  // Used when the user removes focus from the input box.\n  handleBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n    const num: number = string2number(event.currentTarget.value);\n    if (this.props.validate(num) !== \"error\") {\n      this.props.onChange(num);\n    }\n  };\n\n  handleDecrement = (): void => {\n    this.handleStep(this.props.step * -1);\n  };\n\n  handleIncrement = (): void => {\n    this.handleStep(this.props.step);\n  };\n\n  handleStep = (step: number): void => {\n    let n: number = string2number(this.state.value) + step;\n\n    // Make sure that the new value is a multiple of the step.\n    const multiple = Math.abs(step);\n    if (step > 0) {\n      n = Math.floor(n / multiple) * multiple;\n    } else {\n      n = Math.ceil(n / multiple) * multiple;\n    }\n\n    if (this.props.validate(n) !== \"error\") {\n      this.setState({ value: displayNumber(n, this.props.language) });\n      this.props.onChange(n);\n    }\n  };\n\n  render() {\n    const validation: Validation = this.props.validate(string2number(this.state.value));\n\n    return (\n      <Form.Group style={{ marginBottom: `${this.props.marginBottom || undefined}` }}>\n        {this.props.label && <Form.Label>{this.props.label}</Form.Label>}\n        <InputGroup>\n          <InputGroup.Prepend>\n            <Button variant=\"outline-secondary\" style={{ borderRight: \"0px\" }} onMouseDown={this.handleDecrement}>\n              <FontAwesomeIcon icon={faMinus} />\n            </Button>\n          </InputGroup.Prepend>\n          <Form.Control\n            value={this.state.value}\n            onChange={this.handleChange}\n            onBlur={this.handleBlur}\n            isValid={validation === \"success\"}\n            isInvalid={validation === \"error\"}\n            className={validation === \"warning\" ? \"is-warning\" : undefined}\n          />\n          <InputGroup.Append>\n            <Button variant=\"outline-secondary\" style={{ borderLeft: \"0px\" }} onMouseDown={this.handleIncrement}>\n              <FontAwesomeIcon icon={faPlus} />\n            </Button>\n          </InputGroup.Append>\n        </InputGroup>\n      </Form.Group>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => {\n  return {\n    language: state.language,\n  };\n};\n\nexport default connect(mapStateToProps)(NumberInput);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport NumberInput from \"../common/NumberInput\";\n\nimport { setLengthDays } from \"../../actions/meetSetupActions\";\n\nimport { Validation } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\n\ninterface StateProps {\n  lengthDays: number;\n}\n\ninterface DispatchProps {\n  setLengthDays: (days: number) => any;\n}\n\ntype Props = StateProps & DispatchProps;\n\ninterface InternalState {\n  initialValue: number;\n}\n\nclass MeetLength extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    this.validate = this.validate.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      initialValue: this.props.lengthDays,\n    };\n  }\n\n  validate = (n: number): Validation => {\n    if (!Number.isInteger(n) || n <= 0 || n > 14) {\n      return \"error\";\n    }\n    return \"success\";\n  };\n\n  handleChange = (n: number): void => {\n    if (this.validate(n)) {\n      this.props.setLengthDays(n);\n    }\n  };\n\n  render() {\n    return (\n      <NumberInput\n        initialValue={this.state.initialValue}\n        step={1}\n        validate={this.validate}\n        onChange={this.handleChange}\n        label={<FormattedMessage id=\"meet-setup.length-days\" defaultMessage=\"Days of Lifting\" />}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  lengthDays: state.meet.lengthDays,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    setLengthDays: (days) => dispatch(setLengthDays(days)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MeetLength);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport { setPlatformsOnDays } from \"../../actions/meetSetupActions\";\n\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { Validation } from \"../../types/dataTypes\";\nimport { Dispatch } from \"redux\";\nimport NumberInput from \"../common/NumberInput\";\n\ninterface OwnProps {\n  day: number;\n}\n\ninterface StateProps {\n  platformsOnDays: ReadonlyArray<number>;\n}\n\ninterface DispatchProps {\n  setPlatformsOnDays: (day: number, count: number) => void;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\ninterface InternalState {\n  initialValue: number;\n}\n\nclass PlatformCount extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    this.validate = this.validate.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      initialValue: this.props.platformsOnDays[this.props.day - 1],\n    };\n  }\n\n  validate = (n: number): Validation => {\n    if (!Number.isInteger(n) || n <= 0 || n > 20) {\n      return \"error\";\n    }\n    return \"success\";\n  };\n\n  handleChange = (n: number): void => {\n    if (this.validate(n) === \"success\") {\n      this.props.setPlatformsOnDays(this.props.day, n);\n    }\n  };\n\n  render() {\n    return (\n      <NumberInput\n        initialValue={this.state.initialValue}\n        step={1}\n        validate={this.validate}\n        onChange={this.handleChange}\n        label={\n          <FormattedMessage\n            id=\"meet-setup.platforms-on-day\"\n            defaultMessage=\"Platforms on Day {number}\"\n            values={{\n              number: this.props.day,\n            }}\n          />\n        }\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  platformsOnDays: state.meet.platformsOnDays,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    setPlatformsOnDays: (day, count) => dispatch(setPlatformsOnDays(day, count)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlatformCount);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport PlatformCount from \"./PlatformCount\";\n\nimport { GlobalState } from \"../../types/stateTypes\";\n\ninterface StateProps {\n  lengthDays: number;\n}\n\ntype Props = StateProps;\n\nclass PlatformCounts extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n    this.createPlatformInputs = this.createPlatformInputs.bind(this);\n  }\n\n  createPlatformInputs = () => {\n    const inputs = [];\n    const lengthDays = this.props.lengthDays;\n    for (let i = 1; i <= lengthDays; ++i) {\n      inputs.push(<PlatformCount key={i} day={i} />);\n    }\n    return inputs;\n  };\n\n  render() {\n    return <div>{this.createPlatformInputs()}</div>;\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  lengthDays: state.meet.lengthDays,\n});\n\nexport default connect(mapStateToProps)(PlatformCounts);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Provides widgets that overwrite rules with federation defaults.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\n\nimport { getString } from \"../../logic/strings\";\n\nimport { updateMeet } from \"../../actions/meetSetupActions\";\n\nimport { GlobalState, MeetState } from \"../../types/stateTypes\";\nimport { Language } from \"../../types/dataTypes\";\nimport { checkExhausted } from \"../../types/utils\";\nimport { Dispatch } from \"redux\";\n\ninterface StateProps {\n  federation: string;\n  language: Language;\n}\n\ninterface DispatchProps {\n  updateMeet: (changes: Partial<MeetState>) => void;\n}\n\ninterface OwnProps {\n  // Used by the MeetSetup component to cause component updates.\n  onChange: () => void;\n}\n\ntype Props = StateProps & DispatchProps & OwnProps;\n\ntype AutoFillOption =\n  | \"Traditional\"\n  | \"BP\"\n  | \"GPC\"\n  | \"RPS\"\n  | \"SPF\"\n  | \"UPA\"\n  | \"USAPL\"\n  | \"USPA\"\n  | \"USPC\"\n  | \"WABDL\"\n  | \"WP\"\n  | \"WPC\"\n  | \"WPPO\"\n  | \"WRPF\";\n\ninterface InternalState {\n  selectedOption: AutoFillOption;\n}\n\nconst traditionalDefaults: Partial<MeetState> = {\n  divisions: [\n    \"Open\",\n    \"Youth\",\n    \"T13-15\",\n    \"T16-17\",\n    \"T18-19\",\n    \"J20-23\",\n    \"S35-39\",\n    \"M40-44\",\n    \"M45-49\",\n    \"M50-54\",\n    \"M55-59\",\n    \"M60-64\",\n    \"M65-69\",\n    \"M70-74\",\n    \"M75-79\",\n    \"M80+\",\n  ],\n  weightClassesKgMen: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  weightClassesKgWomen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90],\n  weightClassesKgMx: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  formula: \"Wilks\",\n  ageCoefficients: \"FosterMcCulloch\",\n  combineSleevesAndWraps: false,\n  combineSingleAndMulti: false,\n  allow4thAttempts: true,\n};\n\nconst bpDefaults: Partial<MeetState> = {\n  divisions: [\n    \"MR-O\",\n    \"MR-Sj\",\n    \"MR-Jr\",\n    \"MR-M1\",\n    \"MR-M2\",\n    \"MR-M3\",\n    \"MR-M4\",\n    \"MR-M5\",\n    \"MR-G\",\n    \"FR-O\",\n    \"FR-Sj\",\n    \"FR-Jr\",\n    \"FR-M1\",\n    \"FR-M2\",\n    \"FR-M3\",\n    \"FR-M4\",\n    \"FR-M5\",\n    \"FR-G\",\n    \"M-O\",\n    \"M-Sj\",\n    \"M-Jr\",\n    \"M-M1\",\n    \"M-M2\",\n    \"M-M3\",\n    \"M-M4\",\n    \"M-M5\",\n    \"M-G\",\n    \"F-O\",\n    \"F-Sj\",\n    \"F-Jr\",\n    \"F-M1\",\n    \"F-M2\",\n    \"F-M3\",\n    \"F-M4\",\n    \"F-M5\",\n    \"F-G\",\n  ],\n  weightClassesKgMen: [53, 59, 66, 74, 83, 93, 105, 120],\n  weightClassesKgWomen: [43, 47, 52, 57, 63, 69, 76, 84],\n  weightClassesKgMx: [53, 59, 66, 74, 83, 93, 105, 120],\n  formula: \"IPF GL Points\",\n  ageCoefficients: \"FosterMcCulloch\",\n  combineSleevesAndWraps: false,\n  combineSingleAndMulti: false,\n  allow4thAttempts: false,\n};\n\nconst gpcDefaults: Partial<MeetState> = {\n  divisions: [\n    \"F-JE\",\n    \"F-JR\",\n    \"F-M1E\",\n    \"F-M1R\",\n    \"F-M2E\",\n    \"F-M2R\",\n    \"F-M3E\",\n    \"F-M3R\",\n    \"F-M4E\",\n    \"F-M4R\",\n    \"F-M5E\",\n    \"F-M5R\",\n    \"F-M6E\",\n    \"F-M6R\",\n    \"F-M7E\",\n    \"F-M7R\",\n    \"F-M8E\",\n    \"F-M8R\",\n    \"F-M9E\",\n    \"F-M9R\",\n    \"F-OE\",\n    \"F-OR\",\n    \"F-SME\",\n    \"F-SMR\",\n    \"F-T1E\",\n    \"F-T1R\",\n    \"F-T2E\",\n    \"F-T2R\",\n    \"F-T3E\",\n    \"F-T3R\",\n    \"M-JE\",\n    \"M-JR\",\n    \"M-M1E\",\n    \"M-M1R\",\n    \"M-M2E\",\n    \"M-M2R\",\n    \"M-M3E\",\n    \"M-M3R\",\n    \"M-M4E\",\n    \"M-M4R\",\n    \"M-M5E\",\n    \"M-M5R\",\n    \"M-M6E\",\n    \"M-M6R\",\n    \"M-M7E\",\n    \"M-M7R\",\n    \"M-M8E\",\n    \"M-M8R\",\n    \"M-M9E\",\n    \"M-M9R\",\n    \"M-OE\",\n    \"M-OR\",\n    \"M-SME\",\n    \"M-SMR\",\n    \"M-T1E\",\n    \"M-T1R\",\n    \"M-T2E\",\n    \"M-T2R\",\n    \"M-T3E\",\n    \"M-T3R\",\n  ],\n  weightClassesKgMen: [56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  weightClassesKgWomen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90, 110],\n  weightClassesKgMx: [56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  formula: \"Glossbrenner\",\n  ageCoefficients: \"FosterMcCulloch\",\n  combineSleevesAndWraps: true,\n  combineSingleAndMulti: true,\n  allow4thAttempts: true,\n};\n\nconst rpsDefaults: Partial<MeetState> = {\n  divisions: [\n    // Raw Classic (Bare), Amateur.\n    \"RC-Y-A\",\n    \"RC-T14-A\",\n    \"RC-T16-A\",\n    \"RC-T18-A\",\n    \"RC-J20-A\",\n    \"RC-O-A\",\n    \"RC-S33-A\",\n    \"RC-M40-A\",\n    \"RC-M45-A\",\n    \"RC-M50-A\",\n    \"RC-M55-A\",\n    \"RC-M60-A\",\n    \"RC-M65-A\",\n    \"RC-M70-A\",\n    \"RC-M75-A\",\n    \"RC-M80-A\",\n    \"RC-M85-A\",\n    \"RC-M90-A\",\n    \"RC-M95-A\",\n    \"RC-M100-A\",\n    \"RC-PF-A\",\n    \"RC-MIL-A\",\n    \"RC-CF-A\",\n    \"RC-AA-A\",\n\n    // Raw Classic (Bare), Pro.\n    \"RC-Y-P\",\n    \"RC-T14-P\",\n    \"RC-T16-P\",\n    \"RC-T18-P\",\n    \"RC-J20-P\",\n    \"RC-O-P\",\n    \"RC-S33-P\",\n    \"RC-M40-P\",\n    \"RC-M45-P\",\n    \"RC-M50-P\",\n    \"RC-M55-P\",\n    \"RC-M60-P\",\n    \"RC-M65-P\",\n    \"RC-M70-P\",\n    \"RC-M75-P\",\n    \"RC-M80-P\",\n    \"RC-M85-P\",\n    \"RC-M90-P\",\n    \"RC-M95-P\",\n    \"RC-M100-P\",\n    \"RC-PF-P\",\n    \"RC-MIL-P\",\n    \"RC-CF-P\",\n    \"RC-AA-P\",\n\n    // Raw Classic (Bare), Elite.\n    \"RC-Y-E\",\n    \"RC-T14-E\",\n    \"RC-T16-E\",\n    \"RC-T18-E\",\n    \"RC-J20-E\",\n    \"RC-O-E\",\n    \"RC-S33-E\",\n    \"RC-M40-E\",\n    \"RC-M45-E\",\n    \"RC-M50-E\",\n    \"RC-M55-E\",\n    \"RC-M60-E\",\n    \"RC-M65-E\",\n    \"RC-M70-E\",\n    \"RC-M75-E\",\n    \"RC-M80-E\",\n    \"RC-M85-E\",\n    \"RC-M90-E\",\n    \"RC-M95-E\",\n    \"RC-M100-E\",\n    \"RC-PF-E\",\n    \"RC-MIL-E\",\n    \"RC-CF-E\",\n    \"RC-AA-E\",\n\n    // Raw Modern (Sleeves + Wraps), Amateur.\n    \"RM-Y-A\",\n    \"RM-T14-A\",\n    \"RM-T16-A\",\n    \"RM-T18-A\",\n    \"RM-J20-A\",\n    \"RM-O-A\",\n    \"RM-S33-A\",\n    \"RM-M40-A\",\n    \"RM-M45-A\",\n    \"RM-M50-A\",\n    \"RM-M55-A\",\n    \"RM-M60-A\",\n    \"RM-M65-A\",\n    \"RM-M70-A\",\n    \"RM-M75-A\",\n    \"RM-M80-A\",\n    \"RM-M85-A\",\n    \"RM-M90-A\",\n    \"RM-M95-A\",\n    \"RM-M100-A\",\n    \"RM-PF-A\",\n    \"RM-MIL-A\",\n    \"RM-CF-A\",\n    \"RM-AA-A\",\n\n    // Raw Modern (Sleeves + Wraps), Pro.\n    \"RM-Y-P\",\n    \"RM-T14-P\",\n    \"RM-T16-P\",\n    \"RM-T18-P\",\n    \"RM-J20-P\",\n    \"RM-O-P\",\n    \"RM-S33-P\",\n    \"RM-M40-P\",\n    \"RM-M45-P\",\n    \"RM-M50-P\",\n    \"RM-M55-P\",\n    \"RM-M60-P\",\n    \"RM-M65-P\",\n    \"RM-M70-P\",\n    \"RM-M75-P\",\n    \"RM-M80-P\",\n    \"RM-M85-P\",\n    \"RM-M90-P\",\n    \"RM-M95-P\",\n    \"RM-M100-P\",\n    \"RM-PF-P\",\n    \"RM-MIL-P\",\n    \"RM-CF-P\",\n    \"RM-AA-P\",\n\n    // Raw Modern (Sleeves + Wraps), Elite.\n    \"RM-Y-E\",\n    \"RM-T14-E\",\n    \"RM-T16-E\",\n    \"RM-T18-E\",\n    \"RM-J20-E\",\n    \"RM-O-E\",\n    \"RM-S33-E\",\n    \"RM-M40-E\",\n    \"RM-M45-E\",\n    \"RM-M50-E\",\n    \"RM-M55-E\",\n    \"RM-M60-E\",\n    \"RM-M65-E\",\n    \"RM-M70-E\",\n    \"RM-M75-E\",\n    \"RM-M80-E\",\n    \"RM-M85-E\",\n    \"RM-M90-E\",\n    \"RM-M95-E\",\n    \"RM-M100-E\",\n    \"RM-PF-E\",\n    \"RM-MIL-E\",\n    \"RM-CF-E\",\n    \"RM-AA-E\",\n\n    // Single-ply, Amateur.\n    \"SP-Y-A\",\n    \"SP-T14-A\",\n    \"SP-T16-A\",\n    \"SP-T18-A\",\n    \"SP-J20-A\",\n    \"SP-O-A\",\n    \"SP-S33-A\",\n    \"SP-M40-A\",\n    \"SP-M45-A\",\n    \"SP-M50-A\",\n    \"SP-M55-A\",\n    \"SP-M60-A\",\n    \"SP-M65-A\",\n    \"SP-M70-A\",\n    \"SP-M75-A\",\n    \"SP-M80-A\",\n    \"SP-M85-A\",\n    \"SP-M90-A\",\n    \"SP-M95-A\",\n    \"SP-M100-A\",\n    \"SP-PF-A\",\n    \"SP-MIL-A\",\n    \"SP-CF-A\",\n    \"SP-AA-A\",\n\n    // Single-ply, Pro.\n    \"SP-Y-P\",\n    \"SP-T14-P\",\n    \"SP-T16-P\",\n    \"SP-T18-P\",\n    \"SP-J20-P\",\n    \"SP-O-P\",\n    \"SP-S33-P\",\n    \"SP-M40-P\",\n    \"SP-M45-P\",\n    \"SP-M50-P\",\n    \"SP-M55-P\",\n    \"SP-M60-P\",\n    \"SP-M65-P\",\n    \"SP-M70-P\",\n    \"SP-M75-P\",\n    \"SP-M80-P\",\n    \"SP-M85-P\",\n    \"SP-M90-P\",\n    \"SP-M95-P\",\n    \"SP-M100-P\",\n    \"SP-PF-P\",\n    \"SP-MIL-P\",\n    \"SP-CF-P\",\n    \"SP-AA-P\",\n\n    // Single-ply, Elite.\n    \"SP-Y-E\",\n    \"SP-T14-E\",\n    \"SP-T16-E\",\n    \"SP-T18-E\",\n    \"SP-J20-E\",\n    \"SP-O-E\",\n    \"SP-S33-E\",\n    \"SP-M40-E\",\n    \"SP-M45-E\",\n    \"SP-M50-E\",\n    \"SP-M55-E\",\n    \"SP-M60-E\",\n    \"SP-M65-E\",\n    \"SP-M70-E\",\n    \"SP-M75-E\",\n    \"SP-M80-E\",\n    \"SP-M85-E\",\n    \"SP-M90-E\",\n    \"SP-M95-E\",\n    \"SP-M100-E\",\n    \"SP-PF-E\",\n    \"SP-MIL-E\",\n    \"SP-CF-E\",\n    \"SP-AA-E\",\n\n    // Multi-ply, Amateur.\n    \"MP-Y-A\",\n    \"MP-T14-A\",\n    \"MP-T16-A\",\n    \"MP-T18-A\",\n    \"MP-J20-A\",\n    \"MP-O-A\",\n    \"MP-S33-A\",\n    \"MP-M40-A\",\n    \"MP-M45-A\",\n    \"MP-M50-A\",\n    \"MP-M55-A\",\n    \"MP-M60-A\",\n    \"MP-M65-A\",\n    \"MP-M70-A\",\n    \"MP-M75-A\",\n    \"MP-M80-A\",\n    \"MP-M85-A\",\n    \"MP-M90-A\",\n    \"MP-M95-A\",\n    \"MP-M100-A\",\n    \"MP-PF-A\",\n    \"MP-MIL-A\",\n    \"MP-CF-A\",\n    \"MP-AA-A\",\n\n    // Multi-ply, Pro.\n    \"MP-Y-P\",\n    \"MP-T14-P\",\n    \"MP-T16-P\",\n    \"MP-T18-P\",\n    \"MP-J20-P\",\n    \"MP-O-P\",\n    \"MP-S33-P\",\n    \"MP-M40-P\",\n    \"MP-M45-P\",\n    \"MP-M50-P\",\n    \"MP-M55-P\",\n    \"MP-M60-P\",\n    \"MP-M65-P\",\n    \"MP-M70-P\",\n    \"MP-M75-P\",\n    \"MP-M80-P\",\n    \"MP-M85-P\",\n    \"MP-M90-P\",\n    \"MP-M95-P\",\n    \"MP-M100-P\",\n    \"MP-PF-P\",\n    \"MP-MIL-P\",\n    \"MP-CF-P\",\n    \"MP-AA-P\",\n\n    // Multi-ply, Elite.\n    \"MP-Y-E\",\n    \"MP-T14-E\",\n    \"MP-T16-E\",\n    \"MP-T18-E\",\n    \"MP-J20-E\",\n    \"MP-O-E\",\n    \"MP-S33-E\",\n    \"MP-M40-E\",\n    \"MP-M45-E\",\n    \"MP-M50-E\",\n    \"MP-M55-E\",\n    \"MP-M60-E\",\n    \"MP-M65-E\",\n    \"MP-M70-E\",\n    \"MP-M75-E\",\n    \"MP-M80-E\",\n    \"MP-M85-E\",\n    \"MP-M90-E\",\n    \"MP-M95-E\",\n    \"MP-M100-E\",\n    \"MP-PF-E\",\n    \"MP-MIL-E\",\n    \"MP-CF-E\",\n    \"MP-AA-E\",\n  ],\n  weightClassesKgMen: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 118, 125, 140],\n  weightClassesKgWomen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90, 100, 110],\n  weightClassesKgMx: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 118, 125, 140],\n  formula: \"Wilks\",\n  ageCoefficients: \"FosterMcCulloch\",\n  combineSleevesAndWraps: true,\n  combineSingleAndMulti: false,\n  allow4thAttempts: true,\n};\n\nconst spfDefaults: Partial<MeetState> = {\n  divisions: [\n    \"Open\",\n    \"Pre-Teen\",\n    \"T13-15\",\n    \"T16-17\",\n    \"T18-19\",\n    \"J20-23\",\n    \"S33-39\",\n    \"M40-44\",\n    \"M45-49\",\n    \"M50-54\",\n    \"M55-59\",\n    \"M60-64\",\n    \"M65-69\",\n    \"M70-74\",\n    \"M75-79\",\n    \"G80+\",\n    \"FPM\",\n    \"Crossfit\",\n  ],\n  weightClassesKgMen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 118, 125, 140],\n  weightClassesKgWomen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90, 100, 110],\n  weightClassesKgMx: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 118, 125, 140],\n  formula: \"Schwartz/Malone\",\n  ageCoefficients: \"FosterMcCulloch\",\n  combineSleevesAndWraps: false,\n  combineSingleAndMulti: false,\n  allow4thAttempts: true,\n};\n\nconst upaDefaults: Partial<MeetState> = {\n  divisions: [\n    \"FG\",\n    \"FG-AD\",\n    \"FGR\",\n    \"FGR-AD\",\n    \"FJ\",\n    \"FJ-AD\",\n    \"FJR\",\n    \"FJR-AD\",\n    \"FJRE\",\n    \"FJRE-AD\",\n    \"FM1\",\n    \"FM1-AD\",\n    \"FM1R\",\n    \"FM1R-AD\",\n    \"FM1RE\",\n    \"FM1RE-AD\",\n    \"FM2\",\n    \"FM2-AD\",\n    \"FM2R\",\n    \"FM2R-AD\",\n    \"FM2RE\",\n    \"FM2RE-AD\",\n    \"FM3\",\n    \"FM3-AD\",\n    \"FM3R\",\n    \"FM3R-AD\",\n    \"FM3RE\",\n    \"FM3RE-AD\",\n    \"FM4\",\n    \"FM4-AD\",\n    \"FM4R\",\n    \"FM4R-AD\",\n    \"FM4RE\",\n    \"FM4RE-AD\",\n    \"FM5\",\n    \"FM5-AD\",\n    \"FM5R\",\n    \"FM5R-AD\",\n    \"FM5RE\",\n    \"FM5RE-AD\",\n    \"FM6\",\n    \"FM6-AD\",\n    \"FM6R\",\n    \"FM6R-AD\",\n    \"FM6RE\",\n    \"FM6RE-AD\",\n    \"FM7\",\n    \"FM7-AD\",\n    \"FM7R\",\n    \"FM7R-AD\",\n    \"FM7RE\",\n    \"FM7RE-AD\",\n    \"FM8\",\n    \"FM8-AD\",\n    \"FM8R\",\n    \"FM8R-AD\",\n    \"FM8RE\",\n    \"FM8RE-AD\",\n    \"FM9\",\n    \"FM9-AD\",\n    \"FM9R\",\n    \"FM9R-AD\",\n    \"FM9RE\",\n    \"FM9RE-AD\",\n    \"FMX\",\n    \"FMX-AD\",\n    \"FMXR\",\n    \"FMXR-AD\",\n    \"FMXRE\",\n    \"FMXRE-AD\",\n    \"FO\",\n    \"FO-AD\",\n    \"FOR\",\n    \"FOR-AD\",\n    \"FORE\",\n    \"FORE-AD\",\n    \"FPFR\",\n    \"FPFR-AD\",\n    \"FS\",\n    \"FS-AD\",\n    \"FSR\",\n    \"FSR-AD\",\n    \"FSRE\",\n    \"FSRE-AD\",\n    \"FT1\",\n    \"FT1-AD\",\n    \"FT1R\",\n    \"FT1R-AD\",\n    \"FT1RE\",\n    \"FT1RE-AD\",\n    \"FT2\",\n    \"FT2-AD\",\n    \"FT2R\",\n    \"FT2R-AD\",\n    \"FT2RE\",\n    \"FT2RE-AD\",\n    \"FT3\",\n    \"FT3-AD\",\n    \"FT3R\",\n    \"FT3R-AD\",\n    \"FT3RE\",\n    \"FT3RE-AD\",\n    \"FTX\",\n    \"FTX-AD\",\n    \"FTXR\",\n    \"FTXR-AD\",\n    \"FTXRE\",\n    \"FTXRE-AD\",\n    \"MG\",\n    \"MG-AD\",\n    \"MGR\",\n    \"MGR-AD\",\n    \"MJ\",\n    \"MJ-AD\",\n    \"MJR\",\n    \"MJR-AD\",\n    \"MJRE\",\n    \"MJRE-AD\",\n    \"MM1\",\n    \"MM1-AD\",\n    \"MM1R\",\n    \"MM1R-AD\",\n    \"MM1RE\",\n    \"MM1RE-AD\",\n    \"MM2\",\n    \"MM2-AD\",\n    \"MM2R\",\n    \"MM2R-AD\",\n    \"MM2RE\",\n    \"MM2RE-AD\",\n    \"MM3\",\n    \"MM3-AD\",\n    \"MM3R\",\n    \"MM3R-AD\",\n    \"MM3RE\",\n    \"MM3RE-AD\",\n    \"MM4\",\n    \"MM4-AD\",\n    \"MM4R\",\n    \"MM4R-AD\",\n    \"MM4RE\",\n    \"MM4RE-AD\",\n    \"MM5\",\n    \"MM5-AD\",\n    \"MM5R\",\n    \"MM5R-AD\",\n    \"MM5RE\",\n    \"MM5RE-AD\",\n    \"MM6\",\n    \"MM6-AD\",\n    \"MM6R\",\n    \"MM6R-AD\",\n    \"MM6RE\",\n    \"MM6RE-AD\",\n    \"MM7\",\n    \"MM7-AD\",\n    \"MM7R\",\n    \"MM7R-AD\",\n    \"MM7RE\",\n    \"MM7RE-AD\",\n    \"MM8\",\n    \"MM8-AD\",\n    \"MM8R\",\n    \"MM8R-AD\",\n    \"MM8RE\",\n    \"MM8RE-AD\",\n    \"MM9\",\n    \"MM9-AD\",\n    \"MM9R\",\n    \"MM9R-AD\",\n    \"MM9RE\",\n    \"MM9RE-AD\",\n    \"MMX\",\n    \"MMX-AD\",\n    \"MMXR\",\n    \"MMXR-AD\",\n    \"MMXRE\",\n    \"MMXRE-AD\",\n    \"MO\",\n    \"MO-AD\",\n    \"MOR\",\n    \"MOR-AD\",\n    \"MORE\",\n    \"MORE-AD\",\n    \"MPFR\",\n    \"MPFR-AD\",\n    \"MS\",\n    \"MS-AD\",\n    \"MSR\",\n    \"MSR-AD\",\n    \"MSRE\",\n    \"MSRE-AD\",\n    \"MT1\",\n    \"MT1-AD\",\n    \"MT1R\",\n    \"MT1R-AD\",\n    \"MT1RE\",\n    \"MT1RE-AD\",\n    \"MT2\",\n    \"MT2-AD\",\n    \"MT2R\",\n    \"MT2R-AD\",\n    \"MT2RE\",\n    \"MT2RE-AD\",\n    \"MT3\",\n    \"MT3-AD\",\n    \"MT3R\",\n    \"MT3R-AD\",\n    \"MT3RE\",\n    \"MT3RE-AD\",\n    \"MTX\",\n    \"MTX-AD\",\n    \"MTXR\",\n    \"MTXR-AD\",\n    \"MTXRE\",\n    \"MTXRE-AD\",\n  ],\n  weightClassesKgMen: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  weightClassesKgWomen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90],\n  weightClassesKgMx: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  formula: \"Schwartz/Malone\",\n  ageCoefficients: \"FosterMcCulloch\",\n  combineSleevesAndWraps: true,\n  combineSingleAndMulti: true,\n  allow4thAttempts: true,\n};\n\nconst usaplDefaults: Partial<MeetState> = {\n  divisions: [\n    \"MR-O\",\n    \"MR-Y\",\n    \"MR-Y1\",\n    \"MR-Y2\",\n    \"MR-Y3\",\n    \"MR-T1\",\n    \"MR-T2\",\n    \"MR-T3\",\n    \"MR-Jr\",\n    \"MR-M1a\",\n    \"MR-M1b\",\n    \"MR-M2a\",\n    \"MR-M2b\",\n    \"MR-M3a\",\n    \"MR-M3b\",\n    \"MR-M4a\",\n    \"MR-M4b\",\n    \"MR-M5a\",\n    \"MR-M5b\",\n    \"MR-M6a\",\n    \"MR-M6b\",\n    \"MR-G\",\n    \"M-O\",\n    \"M-Y\",\n    \"M-Y1\",\n    \"M-Y2\",\n    \"M-Y3\",\n    \"M-T1\",\n    \"M-T2\",\n    \"M-T3\",\n    \"M-Jr\",\n    \"M-M1a\",\n    \"M-M1b\",\n    \"M-M2a\",\n    \"M-M2b\",\n    \"M-M3a\",\n    \"M-M3b\",\n    \"M-M4a\",\n    \"M-M4b\",\n    \"M-M5a\",\n    \"M-M5b\",\n    \"M-M6a\",\n    \"M-M6b\",\n    \"M-G\",\n    \"FR-O\",\n    \"FR-Y\",\n    \"FR-Y1\",\n    \"FR-Y2\",\n    \"FR-Y3\",\n    \"FR-T1\",\n    \"FR-T2\",\n    \"FR-T3\",\n    \"FR-Jr\",\n    \"FR-M1a\",\n    \"FR-M1b\",\n    \"FR-M2a\",\n    \"FR-M2b\",\n    \"FR-M3a\",\n    \"FR-M3b\",\n    \"FR-M4a\",\n    \"FR-M4b\",\n    \"FR-M5a\",\n    \"FR-M5b\",\n    \"FR-M6a\",\n    \"FR-M6b\",\n    \"FR-G\",\n    \"F-O\",\n    \"F-Y\",\n    \"F-Y1\",\n    \"F-Y2\",\n    \"F-Y3\",\n    \"F-T1\",\n    \"F-T2\",\n    \"F-T3\",\n    \"F-Jr\",\n    \"F-M1a\",\n    \"F-M1b\",\n    \"F-M2a\",\n    \"F-M2b\",\n    \"F-M3a\",\n    \"F-M3b\",\n    \"F-M4a\",\n    \"F-M4b\",\n    \"F-M5a\",\n    \"F-M5b\",\n    \"F-M6a\",\n    \"F-M6b\",\n    \"F-G\",\n  ],\n  weightClassesKgMen: [53, 59, 66, 74, 83, 93, 105, 120],\n  weightClassesKgWomen: [43, 47, 52, 57, 63, 69, 76, 84],\n  weightClassesKgMx: [53, 59, 66, 74, 83, 93, 105, 120],\n  formula: \"IPF GL Points\",\n  ageCoefficients: \"FosterMcCulloch\",\n  combineSleevesAndWraps: false,\n  combineSingleAndMulti: false,\n  allow4thAttempts: false,\n};\n\nconst uspaDefaults: Partial<MeetState> = {\n  divisions: [\n    \"Open\",\n    \"Y4-12\",\n    \"J13-15\",\n    \"J16-17\",\n    \"J18-19\",\n    \"J20-23\",\n    \"S35-39\",\n    \"M40-44\",\n    \"M45-49\",\n    \"M50-54\",\n    \"M55-59\",\n    \"M60-64\",\n    \"M65-69\",\n    \"M70-74\",\n    \"M75-79\",\n    \"M80+\",\n  ],\n  weightClassesKgMen: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  weightClassesKgWomen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90],\n  weightClassesKgMx: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  formula: \"Dots\",\n  ageCoefficients: \"FosterMcCulloch\",\n  combineSleevesAndWraps: false,\n  combineSingleAndMulti: false,\n  allow4thAttempts: true,\n};\n\nconst uspcDefaults: Partial<MeetState> = {\n  divisions: [\n    \"Open\",\n    \"J10-12\",\n    \"J13-15\",\n    \"J16-17\",\n    \"J18-19\",\n    \"J20-23\",\n    \"S35-39\",\n    \"M40-44\",\n    \"M45-49\",\n    \"M50-54\",\n    \"M55-59\",\n    \"M60-64\",\n    \"M65-69\",\n    \"M70-74\",\n    \"M75-79\",\n    \"M80+\",\n  ],\n  weightClassesKgMen: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  weightClassesKgWomen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90, 100, 110],\n  weightClassesKgMx: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  formula: \"Wilks2020\",\n  ageCoefficients: \"FosterMcCulloch\",\n  combineSleevesAndWraps: false,\n  combineSingleAndMulti: false,\n  allow4thAttempts: true,\n};\n\nconst wabdlDefaults: Partial<MeetState> = {\n  divisions: [\n    \"Open\",\n    \"T12-13\",\n    \"T14-15\",\n    \"T16-17\",\n    \"T18-19\",\n    \"J20-25\",\n    \"S33-39\",\n    \"M40-46\",\n    \"M47-53\",\n    \"M54-60\",\n    \"M61-67\",\n    \"M68-74\",\n    \"M75-79\",\n    \"M80-84\",\n    \"M85-89\",\n    \"M90+\",\n  ],\n  weightClassesKgMen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 117.5, 125, 140],\n  weightClassesKgWomen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90, 100],\n  weightClassesKgMx: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 117.5, 125, 140],\n  formula: \"Schwartz/Malone\",\n  ageCoefficients: \"FosterMcCulloch\",\n  combineSleevesAndWraps: false,\n  combineSingleAndMulti: false,\n  allow4thAttempts: true,\n};\n\nconst wpDefaults: Partial<MeetState> = {\n  divisions: [\n    \"Open\",\n    \"Y14-17\",\n    \"J18-23\",\n    \"S33-39\",\n    \"M40-46\",\n    \"M47-53\",\n    \"M54-60\",\n    \"M61-67\",\n    \"M68-74\",\n    \"M75-79\",\n    \"M80-84\",\n    \"M85-89\",\n    \"M90+\",\n  ],\n  weightClassesKgMen: [62, 69, 77, 85, 94, 105, 120],\n  weightClassesKgWomen: [48, 53, 58, 64, 72, 84, 100],\n  weightClassesKgMx: [62, 69, 77, 85, 94, 105, 120],\n  formula: \"Wilks2020\",\n  ageCoefficients: \"FosterMcCulloch\",\n  combineSleevesAndWraps: false,\n  combineSingleAndMulti: false,\n  allow4thAttempts: false,\n};\n\nconst wpcDefaults: Partial<MeetState> = {\n  divisions: [\n    \"F_GCR\",\n    \"F_GCR_A\",\n    \"F_GEM\",\n    \"F_GEM_A\",\n    \"F_GES\",\n    \"F_GES_A\",\n    \"F_GR\",\n    \"F_GR_A\",\n    \"F_JCR\",\n    \"F_JCR_A\",\n    \"F_JEM\",\n    \"F_JEM_A\",\n    \"F_JES\",\n    \"F_JES_A\",\n    \"F_JR\",\n    \"F_JR_A\",\n    \"F_MCR_1\",\n    \"F_MCR_1_A\",\n    \"F_MCR_2\",\n    \"F_MCR_2_A\",\n    \"F_MCR_3\",\n    \"F_MCR_3_A\",\n    \"F_MCR_4\",\n    \"F_MCR_4_A\",\n    \"F_MCR_5\",\n    \"F_MCR_5_A\",\n    \"F_MCR_6\",\n    \"F_MCR_6_A\",\n    \"F_MCR_7\",\n    \"F_MCR_7_A\",\n    \"F_MCR_8\",\n    \"F_MCR_8_A\",\n    \"F_MCR_9\",\n    \"F_MCR_9_A\",\n    \"F_MCR_X\",\n    \"F_MCR_X_A\",\n    \"F_MEM_1\",\n    \"F_MEM_1_A\",\n    \"F_MEM_2\",\n    \"F_MEM_2_A\",\n    \"F_MEM_3\",\n    \"F_MEM_3_A\",\n    \"F_MEM_4\",\n    \"F_MEM_4_A\",\n    \"F_MEM_5\",\n    \"F_MEM_5_A\",\n    \"F_MEM_6\",\n    \"F_MEM_6_A\",\n    \"F_MEM_7\",\n    \"F_MEM_7_A\",\n    \"F_MEM_8\",\n    \"F_MEM_8_A\",\n    \"F_MEM_9\",\n    \"F_MEM_9_A\",\n    \"F_MEM_X\",\n    \"F_MEM_X_A\",\n    \"F_MES_1\",\n    \"F_MES_1_A\",\n    \"F_MES_2\",\n    \"F_MES_2_A\",\n    \"F_MES_3\",\n    \"F_MES_3_A\",\n    \"F_MES_4\",\n    \"F_MES_4_A\",\n    \"F_MES_5\",\n    \"F_MES_5_A\",\n    \"F_MES_6\",\n    \"F_MES_6_A\",\n    \"F_MES_7\",\n    \"F_MES_7_A\",\n    \"F_MES_8\",\n    \"F_MES_8_A\",\n    \"F_MES_9\",\n    \"F_MES_9_A\",\n    \"F_MES_X\",\n    \"F_MES_X_A\",\n    \"F_MR_1\",\n    \"F_MR_1_A\",\n    \"F_MR_2\",\n    \"F_MR_2_A\",\n    \"F_MR_3\",\n    \"F_MR_3_A\",\n    \"F_MR_4\",\n    \"F_MR_4_A\",\n    \"F_MR_5\",\n    \"F_MR_5_A\",\n    \"F_MR_6\",\n    \"F_MR_6_A\",\n    \"F_MR_7\",\n    \"F_MR_7_A\",\n    \"F_MR_8\",\n    \"F_MR_8_A\",\n    \"F_MR_9\",\n    \"F_MR_9_A\",\n    \"F_MR_X\",\n    \"F_MR_X_A\",\n    \"F_NEM\",\n    \"F_NR\",\n    \"F_OCR\",\n    \"F_OCR_A\",\n    \"F_OEM\",\n    \"F_OEM_A\",\n    \"F_OES\",\n    \"F_OES_A\",\n    \"F_OR\",\n    \"F_OR_A\",\n    \"F_SCR\",\n    \"F_SCR_A\",\n    \"F_SEM\",\n    \"F_SEM_A\",\n    \"F_SES\",\n    \"F_SES_A\",\n    \"F_SOR\",\n    \"F_SOR_A\",\n    \"F_SR\",\n    \"F_SR_A\",\n    \"F_TCR_1\",\n    \"F_TCR_1_A\",\n    \"F_TCR_2\",\n    \"F_TCR_2_A\",\n    \"F_TCR_3\",\n    \"F_TCR_3_A\",\n    \"F_TCR_X\",\n    \"F_TCR_X_A\",\n    \"F_TEM_1\",\n    \"F_TEM_1_A\",\n    \"F_TEM_2\",\n    \"F_TEM_2_A\",\n    \"F_TEM_3\",\n    \"F_TEM_3_A\",\n    \"F_TEM_X\",\n    \"F_TEM_X_A\",\n    \"F_TES_1\",\n    \"F_TES_1_A\",\n    \"F_TES_2\",\n    \"F_TES_2_A\",\n    \"F_TES_3\",\n    \"F_TES_3_A\",\n    \"F_TES_X\",\n    \"F_TES_X_A\",\n    \"F_TR_1\",\n    \"F_TR_1_A\",\n    \"F_TR_2\",\n    \"F_TR_2_A\",\n    \"F_TR_3\",\n    \"F_TR_3_A\",\n    \"F_TR_X\",\n    \"F_TR_X_A\",\n    \"F_YCR\",\n    \"F_YCR_A\",\n    \"F_YEM\",\n    \"F_YEM_A\",\n    \"F_YES\",\n    \"F_YES_A\",\n    \"F_YR\",\n    \"F_YR_A\",\n    \"M_GCR\",\n    \"M_GCR_A\",\n    \"M_GEM\",\n    \"M_GEM_A\",\n    \"M_GES\",\n    \"M_GES_A\",\n    \"M_GR\",\n    \"M_GR_A\",\n    \"M_JCR\",\n    \"M_JCR_A\",\n    \"M_JEM\",\n    \"M_JEM_A\",\n    \"M_JES\",\n    \"M_JES_A\",\n    \"M_JR\",\n    \"M_JR_A\",\n    \"M_MCR_1\",\n    \"M_MCR_1_A\",\n    \"M_MCR_2\",\n    \"M_MCR_2_A\",\n    \"M_MCR_3\",\n    \"M_MCR_3_A\",\n    \"M_MCR_4\",\n    \"M_MCR_4_A\",\n    \"M_MCR_5\",\n    \"M_MCR_5_A\",\n    \"M_MCR_6\",\n    \"M_MCR_6_A\",\n    \"M_MCR_7\",\n    \"M_MCR_7_A\",\n    \"M_MCR_8\",\n    \"M_MCR_8_A\",\n    \"M_MCR_9\",\n    \"M_MCR_9_A\",\n    \"M_MCR_X\",\n    \"M_MCR_X_A\",\n    \"M_MEM_1\",\n    \"M_MEM_1_A\",\n    \"M_MEM_2\",\n    \"M_MEM_2_A\",\n    \"M_MEM_3\",\n    \"M_MEM_3_A\",\n    \"M_MEM_4\",\n    \"M_MEM_4_A\",\n    \"M_MEM_5\",\n    \"M_MEM_5_A\",\n    \"M_MEM_6\",\n    \"M_MEM_6_A\",\n    \"M_MEM_7\",\n    \"M_MEM_7_A\",\n    \"M_MEM_8\",\n    \"M_MEM_8_A\",\n    \"M_MEM_9\",\n    \"M_MEM_9_A\",\n    \"M_MEM_X\",\n    \"M_MEM_X_A\",\n    \"M_MES_1\",\n    \"M_MES_1_A\",\n    \"M_MES_2\",\n    \"M_MES_2_A\",\n    \"M_MES_3\",\n    \"M_MES_3_A\",\n    \"M_MES_4\",\n    \"M_MES_4_A\",\n    \"M_MES_5\",\n    \"M_MES_5_A\",\n    \"M_MES_6\",\n    \"M_MES_6_A\",\n    \"M_MES_7\",\n    \"M_MES_7_A\",\n    \"M_MES_8\",\n    \"M_MES_8_A\",\n    \"M_MES_9\",\n    \"M_MES_9_A\",\n    \"M_MES_X\",\n    \"M_MES_X_A\",\n    \"M_MR_1\",\n    \"M_MR_1_A\",\n    \"M_MR_2\",\n    \"M_MR_2_A\",\n    \"M_MR_3\",\n    \"M_MR_3_A\",\n    \"M_MR_4\",\n    \"M_MR_4_A\",\n    \"M_MR_5\",\n    \"M_MR_5_A\",\n    \"M_MR_6\",\n    \"M_MR_6_A\",\n    \"M_MR_7\",\n    \"M_MR_7_A\",\n    \"M_MR_8\",\n    \"M_MR_8_A\",\n    \"M_MR_9\",\n    \"M_MR_9_A\",\n    \"M_MR_X\",\n    \"M_MR_X_A\",\n    \"M_NEM\",\n    \"M_NEM_A\",\n    \"M_NR\",\n    \"M_NR_A\",\n    \"M_OCR\",\n    \"M_OCR_A\",\n    \"M_OEM\",\n    \"M_OEM_A\",\n    \"M_OES\",\n    \"M_OES_A\",\n    \"M_OR\",\n    \"M_OR_A\",\n    \"M_PFEM\",\n    \"M_PFEM_A\",\n    \"M_PFR_A\",\n    \"M_SCR\",\n    \"M_SCR_A\",\n    \"M_SEM\",\n    \"M_SEM_A\",\n    \"M_SES\",\n    \"M_SES_A\",\n    \"M_SOEM\",\n    \"M_SOEM_A\",\n    \"M_SOR\",\n    \"M_SOR_A\",\n    \"M_SR\",\n    \"M_SR_A\",\n    \"M_TCR_1\",\n    \"M_TCR_1_A\",\n    \"M_TCR_2\",\n    \"M_TCR_2_A\",\n    \"M_TCR_3\",\n    \"M_TCR_3_A\",\n    \"M_TCR_X\",\n    \"M_TCR_X_A\",\n    \"M_TEM_1\",\n    \"M_TEM_1_A\",\n    \"M_TEM_2\",\n    \"M_TEM_2_A\",\n    \"M_TEM_3\",\n    \"M_TEM_3_A\",\n    \"M_TEM_X\",\n    \"M_TEM_X_A\",\n    \"M_TES_1\",\n    \"M_TES_1_A\",\n    \"M_TES_2\",\n    \"M_TES_2_A\",\n    \"M_TES_3\",\n    \"M_TES_3_A\",\n    \"M_TES_X\",\n    \"M_TES_X_A\",\n    \"M_TR_1\",\n    \"M_TR_1_A\",\n    \"M_TR_2\",\n    \"M_TR_2_A\",\n    \"M_TR_3\",\n    \"M_TR_3_A\",\n    \"M_TR_X\",\n    \"M_TR_X_A\",\n    \"M_YCR\",\n    \"M_YCR_A\",\n    \"M_YEM\",\n    \"M_YEM_A\",\n    \"M_YR\",\n    \"M_YR_A\",\n  ],\n  weightClassesKgMen: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  weightClassesKgWomen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90],\n  weightClassesKgMx: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  formula: \"Glossbrenner\",\n  ageCoefficients: \"FosterMcCulloch\",\n  combineSleevesAndWraps: true,\n  combineSingleAndMulti: true,\n  allow4thAttempts: true,\n};\n\nconst wppoDefaults: Partial<MeetState> = {\n  divisions: [\"Open\", \"J15-20\"],\n  weightClassesKgMen: [49, 54, 59, 65, 72, 80, 88, 97, 107],\n  weightClassesKgWomen: [41, 45, 50, 55, 61, 67, 73, 79, 86],\n  weightClassesKgMx: [49, 54, 59, 65, 72, 80, 88, 97, 107],\n  formula: \"AH\",\n  ageCoefficients: \"None\",\n  combineSleevesAndWraps: false,\n  combineSingleAndMulti: false,\n  allow4thAttempts: true,\n\n  showAlternateUnits: false,\n};\n\nconst wrpfDefaults: Partial<MeetState> = {\n  divisions: [\n    \"J8-9\",\n    \"J10-11\",\n    \"J12-13\",\n    \"J14-16\",\n    \"J17-19\",\n    \"J20-23\",\n    \"Open\",\n    \"S35-39\",\n    \"M40-44\",\n    \"M45-49\",\n    \"M50-54\",\n    \"M55-59\",\n    \"M60-64\",\n    \"M65-69\",\n    \"M70-74\",\n    \"M75-79\",\n    \"M80+\",\n  ],\n  weightClassesKgMen: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  weightClassesKgWomen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90],\n  weightClassesKgMx: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  formula: \"Wilks\",\n  ageCoefficients: \"FosterMcCulloch\",\n  combineSleevesAndWraps: false,\n  combineSingleAndMulti: false,\n  allow4thAttempts: true,\n};\n\nclass AutoFillRules extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n    this.state = {\n      selectedOption: \"Traditional\",\n    };\n  }\n\n  handleSelectChange = (event: React.BaseSyntheticEvent) => {\n    const value = event.currentTarget.value as AutoFillOption;\n    // Only handle any valid values & assist the compiler in giving us a compile error if AutoFillOption has more values added\n    switch (value) {\n      case \"Traditional\":\n      case \"BP\":\n      case \"GPC\":\n      case \"RPS\":\n      case \"SPF\":\n      case \"UPA\":\n      case \"USPA\":\n      case \"USPC\":\n      case \"USAPL\":\n      case \"WABDL\":\n      case \"WP\":\n      case \"WPC\":\n      case \"WPPO\":\n      case \"WRPF\":\n        this.setState({ selectedOption: value });\n        break;\n\n      default:\n        checkExhausted(value);\n        throw new Error(`Expected a value that corresponds to an AutoFillOption, instead got \"${value}\"`);\n    }\n  };\n\n  handleClick = () => {\n    switch (this.state.selectedOption) {\n      case \"Traditional\":\n        this.props.updateMeet(traditionalDefaults);\n        this.props.onChange();\n        return;\n      case \"BP\":\n        this.props.updateMeet(bpDefaults);\n        this.props.onChange();\n        return;\n      case \"GPC\":\n        this.props.updateMeet(gpcDefaults);\n        this.props.onChange();\n        return;\n      case \"RPS\":\n        this.props.updateMeet(rpsDefaults);\n        this.props.onChange();\n        return;\n      case \"SPF\":\n        this.props.updateMeet(spfDefaults);\n        this.props.onChange();\n        return;\n      case \"UPA\":\n        this.props.updateMeet(upaDefaults);\n        this.props.onChange();\n        return;\n      case \"USAPL\":\n        this.props.updateMeet(usaplDefaults);\n        this.props.onChange();\n        return;\n      case \"USPA\":\n        this.props.updateMeet(uspaDefaults);\n        this.props.onChange();\n        return;\n      case \"USPC\":\n        this.props.updateMeet(uspcDefaults);\n        this.props.onChange();\n        return;\n      case \"WABDL\":\n        this.props.updateMeet(wabdlDefaults);\n        this.props.onChange();\n        return;\n      case \"WP\":\n        this.props.updateMeet(wpDefaults);\n        this.props.onChange();\n        return;\n      case \"WPC\":\n        this.props.updateMeet(wpcDefaults);\n        this.props.onChange();\n        return;\n      case \"WPPO\":\n        this.props.updateMeet(wppoDefaults);\n        this.props.onChange();\n        return;\n      case \"WRPF\":\n        this.props.updateMeet(wrpfDefaults);\n        this.props.onChange();\n        return;\n      default:\n        checkExhausted(this.state.selectedOption);\n        return;\n    }\n  };\n\n  render() {\n    const lang = this.props.language;\n\n    const stringTraditional = getString(\"meet-setup.rules-traditional\", lang);\n    const stringBP = getString(\"meet-setup.rules-bp\", lang);\n    const stringGPC = getString(\"meet-setup.rules-gpc\", lang);\n    const stringRPS = getString(\"meet-setup.rules-rps\", lang);\n    const stringSPF = getString(\"meet-setup.rules-spf\", lang);\n    const stringUPA = getString(\"meet-setup.rules-upa\", lang);\n    const stringUSAPL = getString(\"meet-setup.rules-usapl\", lang);\n    const stringUSPA = getString(\"meet-setup.rules-uspa\", lang);\n    const stringUSPC = getString(\"meet-setup.rules-uspc\", lang);\n    const stringWABDL = getString(\"meet-setup.rules-wabdl\", lang);\n    const stringWP = getString(\"meet-setup.rules-wp\", lang);\n    const stringWPC = getString(\"meet-setup.rules-wpc\", lang);\n    const stringWPPO = getString(\"meet-setup.rules-wppo\", lang);\n    const stringWRPF = getString(\"meet-setup.rules-wrpf\", lang);\n\n    return (\n      <div>\n        <FormGroup>\n          <Form.Label>\n            <FormattedMessage id=\"meet-setup.label-auto-fill-rules\" defaultMessage=\"Auto-Fill Rules\" />\n          </Form.Label>\n          <div>\n            <FormControl\n              as=\"select\"\n              onChange={this.handleSelectChange}\n              value={this.state.selectedOption}\n              style={{ width: \"70%\", display: \"inline-block\" }}\n              className=\"custom-select\"\n            >\n              <option key=\"Traditional\" value=\"Traditional\">\n                {stringTraditional}\n              </option>\n              <option key=\"BP\" value=\"BP\">\n                {stringBP}\n              </option>\n              <option key=\"GPC\" value=\"GPC\">\n                {stringGPC}\n              </option>\n              <option key=\"RPS\" value=\"RPS\">\n                {stringRPS}\n              </option>\n              <option key=\"SPF\" value=\"SPF\">\n                {stringSPF}\n              </option>\n              <option key=\"UPA\" value=\"UPA\">\n                {stringUPA}\n              </option>\n              <option key=\"USAPL\" value=\"USAPL\">\n                {stringUSAPL}\n              </option>\n              <option key=\"USPA\" value=\"USPA\">\n                {stringUSPA}\n              </option>\n              <option key=\"USPC\" value=\"USPC\">\n                {stringUSPC}\n              </option>\n              <option key=\"WABDL\" value=\"WABDL\">\n                {stringWABDL}\n              </option>\n              <option key=\"WP\" value=\"WP\">\n                {stringWP}\n              </option>\n              <option key=\"WPC\" value=\"WPC\">\n                {stringWPC}\n              </option>\n              <option key=\"WPPO\" value=\"WPPO\">\n                {stringWPPO}\n              </option>\n              <option key=\"WRPF\" value=\"WRPF\">\n                {stringWRPF}\n              </option>\n            </FormControl>\n\n            <Button onClick={this.handleClick} variant=\"primary\" style={{ width: \"25%\", marginLeft: \"5%\" }}>\n              <FormattedMessage id=\"meet-setup.button-autofill\" defaultMessage=\"Auto-Fill\" />\n            </Button>\n          </div>\n        </FormGroup>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  federation: state.meet.federation,\n  language: state.language,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    updateMeet: (changes) => dispatch(updateMeet(changes)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AutoFillRules);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Form from \"react-bootstrap/Form\";\n\nimport CreatableSelect from \"react-select/creatable\";\n\nimport { getString } from \"../../logic/strings\";\n\nimport { setDivisions } from \"../../actions/meetSetupActions\";\n\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { Language } from \"../../types/dataTypes\";\nimport { Dispatch } from \"redux\";\n\nconst components = {\n  DropdownIndicator: null,\n};\n\ninterface OptionType {\n  label: string;\n  value: string;\n}\n\nconst createOption = (label: string): OptionType => ({\n  label,\n  value: label,\n});\n\ninterface StateProps {\n  divisions: ReadonlyArray<string>;\n  language: Language;\n}\n\ninterface DispatchProps {\n  setDivisions: (divisions: ReadonlyArray<string>) => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\ninterface InternalState {\n  inputValue: string;\n  value: Array<OptionType>;\n}\n\nclass DivisionSelect extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    const objarray = [];\n    for (let i = 0; i < props.divisions.length; i++) {\n      const division = props.divisions[i];\n      objarray.push({ value: division, label: division });\n    }\n\n    this.state = {\n      inputValue: \"\",\n      value: objarray,\n    };\n\n    this.maybeUpdateRedux = this.maybeUpdateRedux.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  // Updates the Redux store if a division was added or removed.\n  // Since updates are synchronous, we can simply check length.\n  maybeUpdateRedux = (objarray: Array<OptionType>): void => {\n    // objarray is a list of {value: \"foo\", label: \"foo\"} objects.\n    if (objarray.length === this.props.divisions.length) {\n      return;\n    }\n\n    // The divisions changed: save to Redux.\n    const divisions = [];\n    for (let i = 0; i < objarray.length; i++) {\n      divisions.push(objarray[i].label);\n    }\n    this.props.setDivisions(divisions);\n  };\n\n  // Handles the case of deleting an existing division.\n  handleChange = (value: any): void => {\n    if (value instanceof Array) {\n      this.setState({ value: value });\n      this.maybeUpdateRedux(value);\n    } else if (value === null) {\n      this.setState({ value: [] });\n      this.maybeUpdateRedux([]);\n    }\n  };\n\n  // Reflects the current typing status in the state.\n  handleInputChange = (inputValue: string): void => {\n    this.setState({ inputValue: inputValue });\n  };\n\n  // Handles the case of creating a new division.\n  handleKeyDown = (event: React.KeyboardEvent<HTMLElement>): void => {\n    const { inputValue, value } = this.state;\n    if (!inputValue) return;\n    if (event.key === \"Enter\" || event.key === \"Tab\") {\n      // Disallow creating redundant divisions.\n      for (let i = 0; i < value.length; i++) {\n        if (value[i].label === inputValue) {\n          // Silently drop the redundant division.\n          this.setState({ inputValue: \"\" });\n          event.preventDefault();\n          return;\n        }\n      }\n\n      const newValue = [...value, createOption(inputValue)];\n      this.setState({\n        inputValue: \"\",\n        value: newValue,\n      });\n      this.maybeUpdateRedux(newValue);\n      event.preventDefault();\n    }\n  };\n\n  render() {\n    const { inputValue, value } = this.state;\n    const placeholder = getString(\"meet-setup.divisions-placeholder\", this.props.language);\n    return (\n      <Form.Group>\n        <Form.Label>\n          <FormattedMessage id=\"meet-setup.divisions-label\" defaultMessage=\"Divisions (prefer short codes!)\" />\n        </Form.Label>\n        <CreatableSelect\n          components={components}\n          inputValue={inputValue}\n          isMulti\n          menuIsOpen={false}\n          onChange={this.handleChange}\n          onInputChange={this.handleInputChange}\n          onKeyDown={this.handleKeyDown}\n          placeholder={placeholder}\n          value={value}\n        />\n      </Form.Group>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  divisions: state.meet.divisions,\n  language: state.language,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    setDivisions: (divisions) => dispatch(setDivisions(divisions)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DivisionSelect);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Form from \"react-bootstrap/Form\";\n\nimport CreatableSelect from \"react-select/creatable\";\n\nimport { getString } from \"../../logic/strings\";\nimport { string2number, displayWeight } from \"../../logic/units\";\n\nimport { setWeightClasses } from \"../../actions/meetSetupActions\";\n\nimport { Language, Sex } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { checkExhausted } from \"../../types/utils\";\nimport { Dispatch } from \"redux\";\n\nconst components = {\n  DropdownIndicator: null,\n};\n\ntype OptionType = {\n  label: string;\n  value: string;\n};\n\nconst createOption = (label: string): OptionType => ({\n  label,\n  value: label.replace(\",\", \".\"),\n});\n\ninterface OwnProps {\n  label: string;\n  sex: Sex;\n}\n\ninterface StateProps {\n  classes: ReadonlyArray<number>;\n  language: Language;\n}\n\ninterface DispatchProps {\n  setWeightClasses: (sex: Sex, classesKg: ReadonlyArray<number>) => void;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\ninterface InternalState {\n  inputValue: string;\n  value: Array<OptionType>;\n}\n\nclass WeightClassesSelect extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    const objarray: Array<OptionType> = [];\n    for (let i = 0; i < props.classes.length; i++) {\n      const c = displayWeight(props.classes[i], props.language);\n      objarray.push(createOption(c));\n    }\n\n    this.state = {\n      inputValue: \"\",\n      value: objarray,\n    };\n\n    this.maybeUpdateRedux = this.maybeUpdateRedux.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  // Updates the Redux store if a weightclass was added or removed.\n  // Since updates are synchronous, we can simply check length.\n  maybeUpdateRedux = (objarray: Array<OptionType>): void => {\n    if (objarray.length === this.props.classes.length) {\n      return;\n    }\n\n    // The classes changed: save to Redux.\n    const classes = [];\n    for (let i = 0; i < objarray.length; i++) {\n      classes.push(Number(objarray[i].value));\n    }\n    this.props.setWeightClasses(this.props.sex, classes);\n  };\n\n  handleChange = (value: any): void => {\n    if (value instanceof Array) {\n      this.setState({ value: value });\n      this.maybeUpdateRedux(value);\n    } else if (value === null) {\n      this.setState({ value: [] });\n      this.maybeUpdateRedux([]);\n    }\n  };\n\n  // Reflects the current typing status in the state.\n  handleInputChange = (inputValue: string): void => {\n    this.setState({ inputValue: inputValue });\n  };\n\n  // Handles the case of creating a new weightclass.\n  handleKeyDown = (event: React.KeyboardEvent<HTMLElement>): void => {\n    const { inputValue, value } = this.state;\n    if (!inputValue) return;\n    if (event.key === \"Enter\" || event.key === \"Tab\") {\n      const asNumber = string2number(inputValue);\n\n      // Disallow creating non-numeric inputs.\n      if (isNaN(asNumber) || !isFinite(asNumber)) {\n        this.setState({ inputValue: \"\" });\n        event.preventDefault();\n        return;\n      }\n\n      // Disallow negative inputs.\n      // The string check is for negative zero.\n      if (asNumber < 0 || inputValue.includes(\"-\")) {\n        this.setState({ inputValue: \"\" });\n        event.preventDefault();\n        return;\n      }\n\n      // Disallow creating redundant classes.\n      for (let i = 0; i < value.length; i++) {\n        if (string2number(value[i].label) === asNumber) {\n          // Silently drop the redundant weightclass.\n          this.setState({ inputValue: \"\" });\n          event.preventDefault();\n          return;\n        }\n      }\n\n      // Sort the new value into the array.\n      let newValue = [...value, createOption(inputValue)];\n      newValue = newValue.sort((a, b) => Number(a.value) - Number(b.value));\n\n      this.setState({\n        inputValue: \"\",\n        value: newValue,\n      });\n      this.maybeUpdateRedux(newValue);\n      event.preventDefault();\n    }\n  };\n\n  render() {\n    const { inputValue, value } = this.state;\n    const placeholder = getString(\"meet-setup.placeholder-classes\", this.props.language);\n\n    return (\n      <Form.Group>\n        <Form.Label>{this.props.label}</Form.Label>\n        <CreatableSelect\n          components={components}\n          inputValue={inputValue}\n          isMulti\n          menuIsOpen={false}\n          onChange={this.handleChange}\n          onInputChange={this.handleInputChange}\n          onKeyDown={this.handleKeyDown}\n          placeholder={placeholder}\n          value={value}\n        />\n      </Form.Group>\n    );\n  }\n}\n\nconst selectClassesBySex = (sex: Sex, state: GlobalState): ReadonlyArray<number> => {\n  switch (sex) {\n    case \"M\":\n      return state.meet.weightClassesKgMen;\n    case \"F\":\n      return state.meet.weightClassesKgWomen;\n    case \"Mx\":\n      return state.meet.weightClassesKgMx;\n    default:\n      checkExhausted(sex);\n      return state.meet.weightClassesKgMen;\n  }\n};\n\nconst mapStateToProps = (state: GlobalState, ownProps: OwnProps): StateProps => {\n  return {\n    classes: selectClassesBySex(ownProps.sex, state),\n    language: state.language,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    setWeightClasses: (sex, classesKg) => dispatch(setWeightClasses(sex, classesKg)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeightClassesSelect);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { setBarAndCollarsWeightKg } from \"../../actions/meetSetupActions\";\nimport { getString } from \"../../logic/strings\";\nimport { kg2lbs, lbs2kg } from \"../../logic/units\";\n\nimport { Language, Lift, Validation } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { checkExhausted } from \"../../types/utils\";\nimport { Dispatch } from \"redux\";\nimport { SetBarAndCollarsWeightKgAction } from \"../../types/actionTypes\";\nimport NumberInput from \"../common/NumberInput\";\n\ninterface OwnProps {\n  lift: Lift;\n}\n\ninterface StateProps {\n  inKg: boolean;\n  squatBarAndCollarsWeightKg: number;\n  benchBarAndCollarsWeightKg: number;\n  deadliftBarAndCollarsWeightKg: number;\n  language: Language;\n}\n\ninterface DispatchProps {\n  setBarAndCollarsWeightKg: (lift: Lift, weight: number) => SetBarAndCollarsWeightKgAction;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\ninterface InternalState {\n  initialValue: number;\n}\n\nclass BarAndCollarsWeightKg extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    this.validate = this.validate.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n    const weight = this.getInitialBarAndCollarsWeightKg(this.props.lift);\n\n    this.state = {\n      initialValue: this.props.inKg ? weight : kg2lbs(weight),\n    };\n  }\n\n  getInitialBarAndCollarsWeightKg = (lift: Lift): number => {\n    switch (lift) {\n      case \"S\":\n        return this.props.squatBarAndCollarsWeightKg;\n      case \"B\":\n        return this.props.benchBarAndCollarsWeightKg;\n      case \"D\":\n        return this.props.deadliftBarAndCollarsWeightKg;\n      default:\n        checkExhausted(lift);\n        return 0;\n    }\n  };\n\n  validate = (n: number): Validation => {\n    // Don't use isInteger() since decimals are allowed.\n    if (isNaN(n) || !isFinite(n) || n < 5 || n > 1000) {\n      return \"error\";\n    }\n    return \"success\";\n  };\n\n  handleChange = (n: number) => {\n    if (this.validate(n) === \"success\") {\n      const weight = this.props.inKg ? n : lbs2kg(n);\n      this.props.setBarAndCollarsWeightKg(this.props.lift, weight);\n    }\n  };\n\n  getLiftLabel = (lift: Lift, inKg: boolean, language: Language): string => {\n    switch (lift) {\n      case \"S\":\n        if (inKg) {\n          return getString(\"meet-setup.bar-weight-squat-kg\", language);\n        } else {\n          return getString(\"meet-setup.bar-weight-squat-lbs\", language);\n        }\n      case \"B\":\n        if (inKg) {\n          return getString(\"meet-setup.bar-weight-bench-kg\", language);\n        } else {\n          return getString(\"meet-setup.bar-weight-bench-lbs\", language);\n        }\n      case \"D\":\n        if (inKg) {\n          return getString(\"meet-setup.bar-weight-deadlift-kg\", language);\n        } else {\n          return getString(\"meet-setup.bar-weight-deadlift-lbs\", language);\n        }\n      default:\n        checkExhausted(lift);\n        return \"\";\n    }\n  };\n\n  render() {\n    return (\n      <NumberInput\n        initialValue={this.state.initialValue}\n        step={2.5}\n        validate={this.validate}\n        onChange={this.handleChange}\n        label={this.getLiftLabel(this.props.lift, this.props.inKg, this.props.language)}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  inKg: state.meet.inKg,\n  squatBarAndCollarsWeightKg: state.meet.squatBarAndCollarsWeightKg,\n  benchBarAndCollarsWeightKg: state.meet.benchBarAndCollarsWeightKg,\n  deadliftBarAndCollarsWeightKg: state.meet.deadliftBarAndCollarsWeightKg,\n  language: state.language,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    setBarAndCollarsWeightKg: (lift: Lift, weightKg: number) => dispatch(setBarAndCollarsWeightKg(lift, weightKg)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BarAndCollarsWeightKg);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines a widget for selecting a plate color.\n\nimport React from \"react\";\nimport { ColorResult, TwitterPicker } from \"react-color\";\n\nimport { PlateColors } from \"../../constants/plateColors\";\n\nimport styles from \"./ColorPicker.module.scss\";\nimport * as Popper from \"react-popper\";\n\ninterface OwnProps {\n  color: string;\n  onChange: (color: string) => void;\n}\n\ntype Props = OwnProps;\n\ninterface InternalState {\n  displayColorPicker: boolean;\n  color: string;\n\n  // Handle returned by setTimeout() for the timeout that closes the color\n  // selector popup after the mouse leaves and time has elapsed.\n  timeoutId: any;\n}\n\nclass ColorPicker extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      displayColorPicker: false,\n      color: props.color,\n      timeoutId: null,\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleMouseLeave = this.handleMouseLeave.bind(this);\n    this.handleMouseEnter = this.handleMouseEnter.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleClick = () => {\n    clearTimeout(this.state.timeoutId);\n    this.setState({ displayColorPicker: !this.state.displayColorPicker, timeoutId: null });\n  };\n\n  handleMouseLeave = () => {\n    // Close the popup after a second has elapsed.\n    // This gives the user a chance to bring the mouse back into the popup.\n    const timeoutId = setTimeout(() => {\n      this.setState({ displayColorPicker: false, timeoutId: null });\n    }, 1000);\n    this.setState({ timeoutId: timeoutId });\n  };\n\n  handleMouseEnter = () => {\n    // Prevent any close-popup timeout from executing.\n    if (this.state.timeoutId !== null) {\n      clearTimeout(this.state.timeoutId);\n      this.setState({ timeoutId: null });\n    }\n  };\n\n  handleChange = (color: ColorResult, event: any) => {\n    // @types/react-color doesn't define an event for onChange but it is published in\n    // their documentation: https://casesandberg.github.io/react-color/#api-onChange\n    // If the event was a MouseEvent|TouchEvent (i.e they clicked a swatch) we assume\n    // that the user wants the panel to close immediately.\n    const displayColorPicker = event.clientX === undefined;\n    const hex = color.hex.toUpperCase();\n    this.setState({ displayColorPicker, color: hex });\n    this.props.onChange(hex);\n  };\n\n  render() {\n    const colors = Object.values(PlateColors);\n    let picker = null;\n    if (this.state.displayColorPicker) {\n      picker = (\n        <Popper.Popper placement=\"bottom-end\">\n          {({ ref, style, placement }) => (\n            <div ref={ref} style={style} className={styles.onTop} data-placement={placement}>\n              <TwitterPicker\n                color={this.state.color}\n                colors={colors}\n                triangle=\"hide\"\n                onChange={this.handleChange as any}\n              />\n            </div>\n          )}\n        </Popper.Popper>\n      );\n    }\n\n    return (\n      <Popper.Manager>\n        <div onMouseLeave={this.handleMouseLeave} onMouseEnter={this.handleMouseEnter}>\n          <Popper.Reference>\n            {({ ref }) => (\n              <div ref={ref} className={styles.swatch} onClick={this.handleClick}>\n                <div className={styles.color} style={{ background: this.state.color }} />\n              </div>\n            )}\n          </Popper.Reference>\n          {picker}\n        </div>\n      </Popper.Manager>\n    );\n  }\n}\n\nexport default ColorPicker;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Displays the selector for determining how many plates are available\n// to loaders on one side, and what color it is, for a single plate weight.\n\nimport React, { FunctionComponent } from \"react\";\n\nimport NumberInput from \"../common/NumberInput\";\nimport ColorPicker from \"./ColorPicker\";\n\nimport { Validation } from \"../../types/dataTypes\";\n\ninterface Props {\n  id: string;\n  weightKg: number;\n  displayWeight: string; // What kind of a plate this is.\n  pairCount: number;\n  color: string;\n  onChange: (weightKg: number, id: string, amount: number, color: string) => void;\n}\n\nconst validate = (n: number): Validation => {\n  if (!Number.isInteger(n) || n < 0 || n > 50) {\n    return \"error\";\n  }\n  return \"success\";\n};\n\nconst PlateInput: FunctionComponent<Props> = (props) => {\n  return (\n    <tr key={props.id}>\n      <td>{props.displayWeight}</td>\n      <td>\n        <div style={{ maxWidth: \"130px\" }}>\n          <NumberInput\n            initialValue={props.pairCount}\n            step={1}\n            validate={validate}\n            onChange={(count) => props.onChange(props.weightKg, props.id, count, props.color)}\n            marginBottom=\"0px\"\n          />\n        </div>\n      </td>\n      <td>\n        <ColorPicker\n          color={props.color}\n          onChange={(color) => props.onChange(props.weightKg, props.id, props.pairCount, color)}\n        />\n      </td>\n    </tr>\n  );\n};\n\nexport default PlateInput;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Displays the selector for determining how many plates are available\n// to loaders on one side.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Table from \"react-bootstrap/Table\";\n\nimport { setPlateConfig } from \"../../actions/meetSetupActions\";\n\nimport { getString } from \"../../logic/strings\";\nimport { displayWeight, kg2lbs } from \"../../logic/units\";\n\nimport { Language, Plate } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { Dispatch } from \"redux\";\nimport { isString } from \"../../types/utils\";\nimport { isNumber } from \"util\";\nimport PlateInput from \"./PlateInput\";\n\ninterface StateProps {\n  inKg: boolean;\n  plates: ReadonlyArray<Plate>;\n  language: Language;\n}\n\ninterface DispatchProps {\n  setPlateConfig: (weight: number, amount: number, color: string) => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\nclass Plates extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    this.validateAmountInput = this.validateAmountInput.bind(this);\n    this.updateHandler = this.updateHandler.bind(this);\n  }\n\n  validateAmountInput: (id: string) => \"error\" | null | undefined = (id) => {\n    const widget: any = document.getElementById(id);\n\n    // This can happen because the FormGroup is created before the widget exists.\n    if (widget === null) return;\n    const value = widget.value;\n\n    if (value === undefined) return \"error\";\n\n    // Ensure that the value is an integer in a reasonable range.\n    const asNum = Number(value);\n    if (Math.floor(asNum) !== asNum) return \"error\";\n    if (asNum < 0 || asNum > 20) return \"error\";\n    if (String(asNum) !== value) return \"error\";\n\n    return null;\n  };\n\n  updateHandler = (weightKg: number, id: string, amount: string | number | string[] | undefined, color: string) => {\n    if (!isString(amount) && !isNumber(amount)) {\n      throw new Error(`Expected either a string or a number, but got ${amount}`);\n    }\n\n    if (this.validateAmountInput(id) === \"error\") {\n      // Although no state is set, this is used to trigger the FormGroup\n      // to re-query the validationState on change.\n      return this.setState({});\n    }\n\n    this.props.setPlateConfig(weightKg, Number(amount), color);\n  };\n\n  renderWeightRow = (weightKg: number, amount: number, color: string) => {\n    // The input event value isn't passed by the event, so we assign a unique ID\n    // and then just search the whole document for it.\n    const id = \"weight\" + String(weightKg);\n    const weight = this.props.inKg ? weightKg : kg2lbs(weightKg);\n\n    return (\n      <PlateInput\n        id={id}\n        key={id}\n        weightKg={weightKg}\n        displayWeight={displayWeight(weight, this.props.language)}\n        pairCount={amount}\n        color={color}\n        onChange={this.updateHandler}\n      />\n    );\n  };\n\n  render() {\n    const plateRows = this.props.plates.map((obj: Plate) =>\n      this.renderWeightRow(obj.weightKg, obj.pairCount, obj.color)\n    );\n    const unitId = this.props.inKg ? \"meet-setup.plates-kg\" : \"meet-setup.plates-lbs\";\n    const stringPlate = getString(unitId, this.props.language);\n\n    return (\n      <div>\n        <Table striped size=\"sm\" hover style={{ margin: \"0px\" }}>\n          <thead>\n            <tr>\n              <th>{stringPlate}</th>\n              <th>\n                <FormattedMessage id=\"meet-setup.plates-num-pairs\" defaultMessage=\"Pairs of Plates\" />\n              </th>\n              <th>\n                <FormattedMessage id=\"meet-setup.plates-color\" defaultMessage=\"Color\" />\n              </th>\n            </tr>\n          </thead>\n          <tbody>{plateRows}</tbody>\n        </Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  inKg: state.meet.inKg,\n  plates: state.meet.plates,\n  language: state.language,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    setPlateConfig: (weightKg, amount, color) => dispatch(setPlateConfig(weightKg, amount, color)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Plates);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n//\n// This is a split Yes/No button\n\nimport React, { FunctionComponent } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Button from \"react-bootstrap/Button\";\n\ninterface Props {\n  value: boolean;\n  setValue: (bool: boolean) => void;\n  label: JSX.Element | string;\n  yes: string;\n  no: string;\n}\n\nconst YesNoButton: FunctionComponent<Props> = (props) => {\n  return (\n    <Form.Group>\n      <Form.Label>{props.label}</Form.Label>\n      <ButtonGroup style={{ width: \"100%\" }}>\n        <Button active={!props.value} variant=\"outline-secondary\" onClick={() => props.setValue(false)}>\n          {props.no}\n        </Button>\n        <Button active={props.value} variant=\"outline-secondary\" onClick={() => props.setValue(true)}>\n          {props.yes}\n        </Button>\n      </ButtonGroup>\n    </Form.Group>\n  );\n};\n\nexport default YesNoButton;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Card from \"react-bootstrap/Card\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\nimport Row from \"react-bootstrap/Row\";\n\nimport ValidatedInput from \"../ValidatedInput\";\n\nimport MeetDate from \"./MeetDate\";\nimport MeetLength from \"./MeetLength\";\nimport PlatformCounts from \"./PlatformCounts\";\nimport AutoFillRules from \"./AutoFillRules\";\nimport DivisionSelect from \"./DivisionSelect\";\nimport WeightClassesSelect from \"./WeightClassesSelect\";\nimport BarAndCollarsWeightKg from \"./BarAndCollarsWeightKg\";\nimport Plates from \"./Plates\";\nimport YesNoButton from \"../common/YesNoButton\";\n\nimport { getString } from \"../../logic/strings\";\nimport { updateMeet, setInKg } from \"../../actions/meetSetupActions\";\n\nimport { GlobalState, MeetState } from \"../../types/stateTypes\";\nimport { Dispatch } from \"redux\";\nimport { assertString, assertFormula, assertAgeCoefficients } from \"../../types/utils\";\nimport { Language, Validation } from \"../../types/dataTypes\";\n\ninterface StateProps {\n  meet: MeetState;\n  language: Language;\n}\n\ninterface DispatchProps {\n  setMeetName: (name: string) => void;\n  setCountry: (country: string) => void;\n  setState: (state: string) => void;\n  setCity: (city: string) => void;\n  setFederation: (fed: string) => void;\n  setCombineSleevesAndWraps: (bool: boolean) => void;\n  setCombineSingleAndMulti: (bool: boolean) => void;\n  setAllow4thAttempts: (bool: boolean) => void;\n  setInKg: (bool: boolean) => void;\n  setShowAlternateUnits: (bool: boolean) => void;\n  setFormula: (event: React.BaseSyntheticEvent) => void;\n  setAgeCoefficients: (event: React.BaseSyntheticEvent) => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\ninterface InternalState {\n  // This is a number used to derive a `key` for many widgets.\n  // Incrementing the ticker can be used to force a re-render.\n  // This is used to re-render things after the \"Auto-Fill\" button is pressed.\n  ticker: number;\n}\n\nclass MeetSetup extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      ticker: 0,\n    };\n  }\n\n  validateRequiredText = (value?: string): Validation => {\n    if (!value) return \"warning\";\n    if (value.includes('\"')) return \"error\";\n    return \"success\";\n  };\n\n  render() {\n    // This is used as a key to force unit-dependent components to re-initialize state.\n    const inKg = String(this.props.meet.inKg);\n    const language = this.props.language;\n\n    const stringMeetName = getString(\"meet-setup.meet-name\", language);\n    const stringFederation = getString(\"common.federation\", language);\n    const stringCountry = getString(\"common.country\", language);\n    const stringStateProvince = getString(\"meet-setup.state-province\", language);\n    const stringCityTown = getString(\"meet-setup.city-town\", language);\n\n    const stringKilograms = getString(\"common.kilograms\", language);\n    const stringPounds = getString(\"common.pounds\", language);\n\n    const stringMensClasses = getString(\"meet-setup.label-classes-men\", language);\n    const stringWomensClasses = getString(\"meet-setup.label-classes-women\", language);\n    const stringMxClasses = getString(\"meet-setup.label-classes-mx\", language);\n\n    const stringAH = getString(\"formula.ah\", language);\n    const stringBodyweightMultiple = getString(\"formula.bodyweight-multiple\", language);\n    const stringDots = getString(\"formula.dots\", language);\n    const stringGlossbrenner = getString(\"formula.glossbrenner\", language);\n    const stringIPFGLPoints = getString(\"formula.ipf-gl-points\", language);\n    const stringIPFPoints = getString(\"formula.ipf-points\", language);\n    const stringNASAPoints = getString(\"formula.nasa-points\", language);\n    // const stringReshel = getString(\"formula.reshel\", language);\n    const stringSchwartzMalone = getString(\"formula.schwartz-malone\", language);\n    const stringTotal = getString(\"formula.total\", language);\n    const stringWilks = getString(\"formula.wilks\", language);\n    const stringWilks2020 = getString(\"formula.wilks2020\", language);\n    const stringNone = getString(\"age-coefficients.none\", language);\n    const stringFosterMcCulloch = getString(\"age-coefficients.foster-mcculloch\", language);\n    const stringNo = getString(\"common.response-no\", language);\n    const stringYes = getString(\"common.response-yes\", language);\n\n    const stringAlsoKilograms = getString(\"meet-setup.label-also-show-kilograms\", language);\n    const stringAlsoPounds = getString(\"meet-setup.label-also-show-pounds\", language);\n\n    return (\n      <Container>\n        <Row>\n          <Col md={4}>\n            <Card>\n              <Card.Header>\n                <FormattedMessage id=\"meet-setup.header-sanction-info\" defaultMessage=\"Sanction Information\" />\n              </Card.Header>\n              <Card.Body>\n                <ValidatedInput\n                  label={stringMeetName}\n                  placeholder={stringMeetName}\n                  initialValue={this.props.meet.name}\n                  validate={this.validateRequiredText}\n                  onSuccess={this.props.setMeetName}\n                  keepMargin={true}\n                />\n                <ValidatedInput\n                  label={stringFederation}\n                  placeholder={stringFederation}\n                  initialValue={this.props.meet.federation}\n                  validate={this.validateRequiredText}\n                  onSuccess={this.props.setFederation}\n                  keepMargin={true}\n                />\n                <ValidatedInput\n                  label={stringCountry}\n                  placeholder={stringCountry}\n                  initialValue={this.props.meet.country}\n                  validate={this.validateRequiredText}\n                  onSuccess={this.props.setCountry}\n                  keepMargin={true}\n                />\n                <ValidatedInput\n                  label={stringStateProvince}\n                  placeholder={stringStateProvince}\n                  initialValue={this.props.meet.state}\n                  validate={this.validateRequiredText}\n                  onSuccess={this.props.setState}\n                  keepMargin={true}\n                />\n                <ValidatedInput\n                  label={stringCityTown}\n                  placeholder={stringCityTown}\n                  initialValue={this.props.meet.city}\n                  validate={this.validateRequiredText}\n                  onSuccess={this.props.setCity}\n                  keepMargin={true}\n                />\n                <MeetDate />\n                <MeetLength />\n                <PlatformCounts />\n              </Card.Body>\n            </Card>\n          </Col>\n\n          <Col md={4}>\n            <Card>\n              <Card.Header>\n                <FormattedMessage id=\"meet-setup.header-rules\" defaultMessage=\"Competition Rules\" />\n              </Card.Header>\n              <Card.Body>\n                <AutoFillRules onChange={() => this.setState({ ticker: this.state.ticker + 1 })} />\n                <DivisionSelect key={this.state.ticker + \"-divselect\"} />\n                <WeightClassesSelect sex=\"M\" label={stringMensClasses} key={this.state.ticker + \"-M\"} />\n                <WeightClassesSelect sex=\"F\" label={stringWomensClasses} key={this.state.ticker + \"-F\"} />\n                <WeightClassesSelect sex=\"Mx\" label={stringMxClasses} key={this.state.ticker + \"-Mx\"} />\n\n                <FormGroup key={this.state.ticker + \"-formula\"}>\n                  <Form.Label>\n                    <FormattedMessage id=\"meet-setup.formula\" defaultMessage=\"Best Lifter Formula\" />\n                  </Form.Label>\n                  <FormControl\n                    as=\"select\"\n                    value={this.props.meet.formula}\n                    onChange={this.props.setFormula}\n                    className=\"custom-select\"\n                  >\n                    <option value=\"AH\">{stringAH}</option>\n                    <option value=\"Bodyweight Multiple\">{stringBodyweightMultiple}</option>\n                    <option value=\"Dots\">{stringDots}</option>\n                    <option value=\"Glossbrenner\">{stringGlossbrenner}</option>\n                    <option value=\"IPF GL Points\">{stringIPFGLPoints}</option>\n                    <option value=\"IPF Points\">{stringIPFPoints}</option>\n                    <option value=\"NASA Points\">{stringNASAPoints}</option>\n                    <option value=\"Schwartz/Malone\">{stringSchwartzMalone}</option>\n                    <option value=\"Total\">{stringTotal}</option>\n                    <option value=\"Wilks\">{stringWilks}</option>\n                    <option value=\"Wilks2020\">{stringWilks2020}</option>\n                  </FormControl>\n                </FormGroup>\n\n                <FormGroup key={this.state.ticker + \"-ageCoefficients\"}>\n                  <Form.Label>\n                    <FormattedMessage\n                      id=\"meet-setup.age-coefficients\"\n                      defaultMessage=\"Age Coefficients for Best Juniors/Masters Lifter\"\n                    />\n                  </Form.Label>\n                  <FormControl\n                    as=\"select\"\n                    value={this.props.meet.ageCoefficients}\n                    onChange={this.props.setAgeCoefficients}\n                    className=\"custom-select\"\n                  >\n                    <option key=\"None\" value=\"None\">\n                      {stringNone}\n                    </option>\n                    <option key=\"FosterMcCulloch\" value=\"FosterMcCulloch\">\n                      {stringFosterMcCulloch}\n                    </option>\n                  </FormControl>\n                </FormGroup>\n\n                <FormGroup key={this.state.ticker + \"-sleeves-wraps\"}>\n                  <YesNoButton\n                    label={\n                      <FormattedMessage\n                        id=\"meet-setup.combine-sleeves-wraps\"\n                        defaultMessage=\"Should Sleeves and Wraps be combined for placing?\"\n                      />\n                    }\n                    value={this.props.meet.combineSleevesAndWraps}\n                    setValue={this.props.setCombineSleevesAndWraps}\n                    yes={stringYes}\n                    no={stringNo}\n                  />\n                </FormGroup>\n\n                <FormGroup key={this.state.ticker + \"-single-multi\"}>\n                  <YesNoButton\n                    label={\n                      <FormattedMessage\n                        id=\"meet-setup.combine-single-multi\"\n                        defaultMessage=\"Should Single-ply and Multi-ply be combined for placing?\"\n                      />\n                    }\n                    value={this.props.meet.combineSingleAndMulti}\n                    setValue={this.props.setCombineSingleAndMulti}\n                    yes={stringYes}\n                    no={stringNo}\n                  />\n                </FormGroup>\n\n                <FormGroup key={this.state.ticker + \"-4th-attempts\"}>\n                  <YesNoButton\n                    label={\n                      <FormattedMessage\n                        id=\"meet-setup.allow-4th-attempts\"\n                        defaultMessage=\"Can lifters take 4th attempts for records?\"\n                      />\n                    }\n                    value={this.props.meet.allow4thAttempts}\n                    setValue={this.props.setAllow4thAttempts}\n                    yes={stringYes}\n                    no={stringNo}\n                  />\n                </FormGroup>\n              </Card.Body>\n            </Card>\n          </Col>\n\n          <Col md={4}>\n            <Card>\n              <Card.Header>\n                <FormattedMessage id=\"meet-setup.header-loading\" defaultMessage=\"Weights and Loading\" />\n              </Card.Header>\n              <Card.Body>\n                <FormGroup>\n                  <YesNoButton\n                    label={\n                      <FormattedMessage\n                        id=\"meet-setup.units\"\n                        defaultMessage=\"In what units are attempts and bodyweights?\"\n                      />\n                    }\n                    value={this.props.meet.inKg}\n                    setValue={this.props.setInKg}\n                    yes={stringKilograms}\n                    no={stringPounds}\n                  />\n                </FormGroup>\n\n                <FormGroup>\n                  <YesNoButton\n                    label={this.props.meet.inKg ? stringAlsoPounds : stringAlsoKilograms}\n                    value={this.props.meet.showAlternateUnits}\n                    setValue={this.props.setShowAlternateUnits}\n                    yes={stringYes}\n                    no={stringNo}\n                  />\n                </FormGroup>\n\n                <BarAndCollarsWeightKg key={\"S\" + inKg} lift=\"S\" />\n                <BarAndCollarsWeightKg key={\"B\" + inKg} lift=\"B\" />\n                <BarAndCollarsWeightKg key={\"D\" + inKg} lift=\"D\" />\n                <Plates />\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  meet: state.meet,\n  language: state.language,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  setMeetName: (name: string) => dispatch(updateMeet({ name: name })),\n  setCountry: (country: string) => dispatch(updateMeet({ country: country })),\n  setState: (state: string) => dispatch(updateMeet({ state: state })),\n  setCity: (city: string) => dispatch(updateMeet({ city: city })),\n  setFederation: (fed: string) => dispatch(updateMeet({ federation: fed })),\n  setCombineSleevesAndWraps: (bool) => dispatch(updateMeet({ combineSleevesAndWraps: bool })),\n  setCombineSingleAndMulti: (bool) => dispatch(updateMeet({ combineSingleAndMulti: bool })),\n  setAllow4thAttempts: (bool) => dispatch(updateMeet({ allow4thAttempts: bool })),\n  setInKg: (bool) => dispatch(setInKg(bool)),\n  setShowAlternateUnits: (bool) => dispatch(updateMeet({ showAlternateUnits: bool })),\n  setFormula: (event) =>\n    assertString(event.currentTarget.value) &&\n    assertFormula(event.currentTarget.value) &&\n    dispatch(updateMeet({ formula: event.currentTarget.value })),\n  setAgeCoefficients: (event) =>\n    assertString(event.currentTarget.value) &&\n    assertAgeCoefficients(event.currentTarget.value) &&\n    dispatch(updateMeet({ ageCoefficients: event.currentTarget.value })),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MeetSetup);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from \"react\";\n\nimport MeetSetup from \"../components/meet-setup/MeetSetup\";\nimport styles from \"../components/common/ContentArea.module.scss\";\n\nclass MeetSetupContainer extends React.Component<{}> {\n  render() {\n    return (\n      <div className={styles.contentArea}>\n        <MeetSetup />\n      </div>\n    );\n  }\n}\n\nexport default MeetSetupContainer;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the table of LifterRows\n// Generalized to accept a rowRenderer component, so that different pages\n// can render different row level items, while re-using the logic in this component\n// to handle rendering one row per lifter\n// This is the parent component that determines how many rows to render,\n// what data each row should see, etc.\n\nimport React from \"react\";\n\nimport { Entry } from \"../../types/dataTypes\";\n\ninterface OwnProps {\n  entries: ReadonlyArray<Entry>;\n  rowRenderer: any;\n}\n\ntype Props = OwnProps;\n\nconst LifterTable: React.FC<Props> = (props) => {\n  const renderRows = () => {\n    const LifterRow = props.rowRenderer;\n    const { entries } = props;\n    return entries.map((entry) => <LifterRow key={entry.id} id={entry.id} />);\n  };\n\n  return <div>{renderRows()}</div>;\n};\n\nexport default LifterTable;\n","// vim: set ts=2 sts=2 sw=2 et:\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// This provides an alternative interface to react-intl's <FormattedMessage/>.\n//\n// FormattedMessage defines a *new* internationalizable message.\n// In contrast, LocalizedString fetches an *existing* message from the same store\n// and reports it as a simple string (with no formatting or parsing).\n//\n// This enables reuse of translations, so long as the IDs are stable.\n\nimport React from \"react\";\nimport { IntlContext } from \"react-intl\";\n\nimport { TranslationId } from \"../../types/dataTypes\";\n\ninterface OwnProps {\n  id: TranslationId; // As listed in 'src/translations/en.json'.\n}\n\ntype Props = OwnProps;\n\nclass LocalizedString extends React.Component<Props> {\n  render() {\n    return (\n      <IntlContext.Consumer>\n        {(intl) => {\n          return intl.messages[this.props.id];\n        }}\n      </IntlContext.Consumer>\n    );\n  }\n}\n\nexport default LocalizedString;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { Validation } from \"../types/dataTypes\";\n\n// Validates a string date in the ISO8601 \"YYYY-MM-DD\" format.\nexport const validateIso8601Date = (s?: string): Validation => {\n  if (typeof s !== \"string\") return \"error\";\n\n  if (s === \"\") return null;\n  if (s.length !== \"YYYY-MM-DD\".length) return \"error\";\n\n  const pieces: Array<string> = s.split(\"-\");\n  if (pieces.length !== 3) return \"error\";\n\n  const [yearStr, monthStr, dayStr] = pieces;\n\n  // Ensure that the strings only contain numbers, because the Number() constructor\n  // will ignore whitespace.\n  const onlyNumbers = /^[0-9]+$/;\n\n  if (!yearStr.match(onlyNumbers)) return \"error\";\n  if (!monthStr.match(onlyNumbers)) return \"error\";\n  if (!dayStr.match(onlyNumbers)) return \"error\";\n\n  const year = Number(yearStr);\n  const month = Number(monthStr);\n  const day = Number(dayStr);\n\n  if (isNaN(year) || isNaN(month) || isNaN(day)) return \"error\";\n  if (year <= 0 || month <= 0 || month > 12 || day <= 0 || day > 31) return \"error\";\n\n  // Disallow dates that are out of the plausible range for powerlifting.\n  if (year < 1880 || year >= new Date().getFullYear() + 2) return \"error\";\n\n  return \"success\";\n};\n\n// Validates a string date in the European DD-MM-YYYY format.\nexport const validateEuropeanDate = (s?: string): Validation => {\n  if (typeof s !== \"string\") return \"error\";\n\n  if (s === \"\") return null;\n  if (s.length !== \"DD-MM-YYYY\".length) return \"error\";\n\n  const pieces: Array<string> = s.split(\"-\");\n  if (pieces.length !== 3) return \"error\";\n\n  const [dayStr, monthStr, yearStr] = pieces;\n\n  // Ensure that the strings only contain numbers, because the Number() constructor\n  // will ignore whitespace.\n  const onlyNumbers = /^[0-9]+$/;\n\n  if (!dayStr.match(onlyNumbers)) return \"error\";\n  if (!monthStr.match(onlyNumbers)) return \"error\";\n  if (!yearStr.match(onlyNumbers)) return \"error\";\n\n  const year = Number(yearStr);\n  const month = Number(monthStr);\n  const day = Number(dayStr);\n\n  if (isNaN(year) || isNaN(month) || isNaN(day)) return \"error\";\n  if (year <= 0 || month <= 0 || month > 12 || day <= 0 || day > 31) return \"error\";\n\n  // Disallow dates that are out of the plausible range for powerlifting.\n  if (year < 1880 || year >= new Date().getFullYear() + 2) return \"error\";\n\n  return \"success\";\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { Validation } from \"../types/dataTypes\";\n\n// Validates a simple positive integer.\nexport const validatePositiveInteger = (s?: string, inclusiveMax?: number): Validation => {\n  if (typeof s !== \"string\") return \"error\";\n\n  if (s === \"\") return null;\n\n  // Ensure that the string only contains numbers, because the Number() constructor\n  // will ignore whitespace.\n  const onlyNumbers = /^[0-9]+$/;\n  if (!s.match(onlyNumbers)) return \"error\";\n\n  // The number shouldn't start with an unnecessary zero.\n  if (s.startsWith(\"0\")) return \"error\";\n\n  const n = Number(s);\n\n  // Ensure the number is a positive integer.\n  if (isNaN(n)) return \"error\";\n  if (!Number.isInteger(n)) return \"error\";\n  if (n <= 0) return \"error\";\n\n  // Allow an optional inclusive upper bound check.\n  if (typeof inclusiveMax === \"number\") {\n    if (n > inclusiveMax) return \"error\";\n  }\n\n  return \"success\";\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport {\n  NewRegistrationAction,\n  DeleteRegistrationAction,\n  UpdateRegistrationAction,\n  MergePlatformAction,\n  AssignLotNumbersAction,\n} from \"../types/actionTypes\";\nimport { Entry } from \"../types/dataTypes\";\n\n// Adds a blank (or default-initalized) row to the registrations table.\nexport const newRegistration = (obj: Partial<Entry>): NewRegistrationAction => {\n  return {\n    type: \"NEW_REGISTRATION\",\n    overwriteDefaults: obj,\n  };\n};\n\n// Deletes an existing entry from the registrations table.\n//\n// Corresponding data from the registration is *not* deleted, for example\n// from the lifting page, but because the state.registrations.lookups map\n// will no longer find an associated entry given a global unique EntryId,\n// the data will simply stop being displayed.\n//\n// The global ID from the deleted entry is not recycled.\nexport const deleteRegistration = (entryId: number): DeleteRegistrationAction => {\n  return {\n    type: \"DELETE_REGISTRATION\",\n    entryId: entryId,\n  };\n};\n\n// Updates an existing entry in the registrations table.\n//\n// Because there are a lot of fields in a single entry, for the sake of\n// simplicity, this is a general method that knows how to update the\n// existing entry object with whatever has changed, as passed\n// through object properties.\nexport const updateRegistration = (entryId: number, obj: Partial<Entry>): UpdateRegistrationAction => {\n  return {\n    type: \"UPDATE_REGISTRATION\",\n    entryId: entryId,\n    changes: obj,\n  };\n};\n\n// Deletes all entries assigned to a given (day, platform), and then adds entries\n// assigned to that (day, platform) from a foreign save state.\nexport const mergePlatform = (day: number, platform: number, platformEntries: Array<Entry>): MergePlatformAction => {\n  return {\n    type: \"MERGE_PLATFORM\",\n    day: day,\n    platform: platform,\n    platformEntries: platformEntries,\n  };\n};\n\nexport const assignLotNumbers = (lotNumbers: number[]): AssignLotNumbersAction => {\n  return {\n    type: \"ASSIGN_LOT_NUMBERS\",\n    lotNumbers,\n  };\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines a row in the LifterTable on the Registration page.\n// This provides a bunch of widgets, each of which correspond to\n// the state of a single entry.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Row from \"react-bootstrap/Row\";\n\nimport Select from \"react-select\";\n\nimport { getString, localizeEvent } from \"../../logic/strings\";\nimport { displayNumber, string2number } from \"../../logic/units\";\nimport LocalizedString from \"../translations/LocalizedString\";\nimport ValidatedInput from \"../ValidatedInput\";\n\nimport { validateEuropeanDate } from \"../../validation/iso8601Date\";\nimport { validatePositiveInteger } from \"../../validation/positiveInteger\";\n\nimport { deleteRegistration, updateRegistration } from \"../../actions/registrationActions\";\nimport { checkExhausted, assertString, assertFlight, assertSex } from \"../../types/utils\";\nimport { Entry, Equipment, Language, Validation } from \"../../types/dataTypes\";\nimport { Dispatch } from \"redux\";\nimport { GlobalState, MeetState } from \"../../types/stateTypes\";\n\ninterface OwnProps {\n  id: number;\n}\n\ninterface StateProps {\n  meet: MeetState;\n  entry: Entry;\n  language: Language;\n}\n\ninterface DispatchProps {\n  deleteRegistration: (entryId: number) => void;\n  updateRegistration: (entryId: number, obj: Partial<Entry>) => void;\n}\n\ninterface InternalState {\n  selectedDay: number;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nclass LifterRow extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    // Store the Day in state to update the Platform options when the Day changes.\n    // Store the Birth Date in state to re-render when a new date is selected\n    this.state = {\n      selectedDay: props.entry.day,\n    };\n\n    this.deleteRegistrationClick = this.deleteRegistrationClick.bind(this);\n    this.updateRegistrationDay = this.updateRegistrationDay.bind(this);\n    this.updateRegistrationPlatform = this.updateRegistrationPlatform.bind(this);\n    this.updateRegistrationFlight = this.updateRegistrationFlight.bind(this);\n    this.updateRegistrationName = this.updateRegistrationName.bind(this);\n    this.updateRegistrationSex = this.updateRegistrationSex.bind(this);\n    this.updateRegistrationLot = this.updateRegistrationLot.bind(this);\n    this.updateRegistrationMemberId = this.updateRegistrationMemberId.bind(this);\n    this.updateRegistrationBirthDate = this.updateRegistrationBirthDate.bind(this);\n    this.updateRegistrationAge = this.updateRegistrationAge.bind(this);\n    this.updateRegistrationCountry = this.updateRegistrationCountry.bind(this);\n    this.updateRegistrationState = this.updateRegistrationState.bind(this);\n    this.updateRegistrationDivisions = this.updateRegistrationDivisions.bind(this);\n    this.updateRegistrationEvents = this.updateRegistrationEvents.bind(this);\n    this.updateRegistrationEquipment = this.updateRegistrationEquipment.bind(this);\n    this.updateRegistrationGuest = this.updateRegistrationGuest.bind(this);\n    this.updateRegistrationTeam = this.updateRegistrationTeam.bind(this);\n    this.updateRegistrationInstagram = this.updateRegistrationInstagram.bind(this);\n    this.updateRegistrationNotes = this.updateRegistrationNotes.bind(this);\n  }\n\n  deleteRegistrationClick() {\n    this.props.deleteRegistration(this.props.id);\n  }\n\n  updateRegistrationDay(event: React.BaseSyntheticEvent) {\n    const day = Number(event.currentTarget.value);\n    const entry = this.props.entry;\n\n    // Also check whether the platform is now impossible.\n    let platform = entry.platform;\n    if (platform > this.props.meet.platformsOnDays[day - 1]) {\n      platform = 1; // This matches the default behavior of the select element.\n    }\n\n    if (entry.day !== day) {\n      this.setState({ selectedDay: day });\n      this.props.updateRegistration(this.props.id, { day: day, platform: platform });\n    }\n  }\n\n  updateRegistrationPlatform(event: React.BaseSyntheticEvent) {\n    const platform = Number(event.currentTarget.value);\n    if (this.props.entry.platform !== platform) {\n      this.props.updateRegistration(this.props.id, { platform: platform });\n    }\n  }\n\n  updateRegistrationFlight(event: React.BaseSyntheticEvent) {\n    const value = event.currentTarget.value;\n    if (this.props.entry.flight !== value && assertString(value) && assertFlight(value)) {\n      this.props.updateRegistration(this.props.id, { flight: value });\n    }\n  }\n\n  updateRegistrationName(event: React.BaseSyntheticEvent) {\n    const name = event.currentTarget.value;\n    if (this.props.entry.name !== name && assertString(name)) {\n      this.props.updateRegistration(this.props.id, { name: name });\n    }\n  }\n\n  updateRegistrationSex(event: React.BaseSyntheticEvent) {\n    const sex = event.currentTarget.value;\n    if (this.props.entry.sex !== sex && assertString(sex) && assertSex(sex)) {\n      this.props.updateRegistration(this.props.id, { sex: sex });\n    }\n  }\n\n  updateRegistrationLot(event: React.BaseSyntheticEvent & { currentTarget: { value: string } }) {\n    const asNumber = string2number(event.currentTarget.value);\n    if (asNumber >= 0 && asNumber !== this.props.entry.lot) {\n      this.props.updateRegistration(this.props.id, { lot: asNumber });\n    }\n  }\n\n  updateRegistrationMemberId = (event: React.BaseSyntheticEvent) => {\n    const memberId = event.currentTarget.value;\n    if (this.props.entry.memberId !== memberId && typeof memberId === \"string\") {\n      this.props.updateRegistration(this.props.id, { memberId: memberId });\n    }\n  };\n\n  updateRegistrationBirthDate = (birthDate: string) => {\n    if (this.props.entry.birthDate !== birthDate) {\n      this.props.updateRegistration(this.props.id, { birthDate: birthDate });\n    }\n  };\n\n  updateRegistrationAge = (age: string) => {\n    const num = string2number(age);\n    if (this.props.entry.age !== num) {\n      this.props.updateRegistration(this.props.id, { age: num });\n    }\n  };\n\n  updateRegistrationCountry = (country: string) => {\n    if (this.props.entry.country !== country) {\n      this.props.updateRegistration(this.props.id, { country: country });\n    }\n  };\n\n  updateRegistrationState = (state: string) => {\n    if (this.props.entry.state !== state) {\n      this.props.updateRegistration(this.props.id, { state: state });\n    }\n  };\n\n  updateRegistrationDivisions(value: any) {\n    if (value instanceof Array) {\n      // Since updates are synchronous, we can just compare lengths.\n      if (value.length !== this.props.entry.divisions.length) {\n        const divisions = [];\n        for (let i = 0; i < value.length; i++) {\n          divisions.push(value[i].value);\n        }\n        this.props.updateRegistration(this.props.id, { divisions: divisions });\n      }\n    } else if (value === null) {\n      // Null happens when the list has been cleared fully.\n      if (this.props.entry.divisions.length > 0) {\n        this.props.updateRegistration(this.props.id, { divisions: [] });\n      }\n    }\n  }\n\n  updateRegistrationEvents(value: any) {\n    if (value instanceof Array) {\n      // Since updates are synchronous, we can just compare lengths.\n      if (value.length !== this.props.entry.events.length) {\n        const events = [];\n        for (let i = 0; i < value.length; i++) {\n          events.push(value[i].value);\n        }\n        this.props.updateRegistration(this.props.id, { events: events });\n      }\n    } else if (value === null) {\n      // Null happens when the list has been cleared fully.\n      if (this.props.entry.events.length > 0) {\n        this.props.updateRegistration(this.props.id, { events: [] });\n      }\n    }\n  }\n\n  updateRegistrationEquipment(event: React.BaseSyntheticEvent) {\n    const equipment = event.currentTarget.value as Equipment;\n    if (this.props.entry.equipment !== equipment) {\n      // Ensure value is something we expect & assist the compiler in helping us\n      switch (equipment) {\n        case \"Bare\":\n        case \"Sleeves\":\n        case \"Wraps\":\n        case \"Single-ply\":\n        case \"Multi-ply\":\n        case \"Unlimited\":\n          this.props.updateRegistration(this.props.id, { equipment: equipment });\n          break;\n        default:\n          checkExhausted(equipment);\n          break;\n      }\n    }\n  }\n\n  updateRegistrationGuest = (event: React.BaseSyntheticEvent) => {\n    if (event.currentTarget.value === \"true\") {\n      this.props.updateRegistration(this.props.id, { guest: true });\n    } else {\n      this.props.updateRegistration(this.props.id, { guest: false });\n    }\n  };\n\n  updateRegistrationTeam = (event: React.BaseSyntheticEvent) => {\n    if (assertString(event.currentTarget.value)) {\n      this.props.updateRegistration(this.props.id, { team: event.currentTarget.value });\n    }\n  };\n\n  updateRegistrationInstagram = (event: React.BaseSyntheticEvent) => {\n    if (assertString(event.currentTarget.value)) {\n      this.props.updateRegistration(this.props.id, { instagram: event.currentTarget.value });\n    }\n  };\n\n  updateRegistrationNotes = (event: React.BaseSyntheticEvent) => {\n    if (assertString(event.currentTarget.value)) {\n      this.props.updateRegistration(this.props.id, { notes: event.currentTarget.value });\n    }\n  };\n\n  // FIXME: Could be shared with weighins logic.\n  validateAge = (value?: string): Validation => {\n    if (value === \"\") return null;\n\n    const pos: Validation = validatePositiveInteger(value);\n    if (pos === \"success\") {\n      // Complain a little if the age is implausible.\n      const n = Number(value);\n      if (n <= 4 || n > 100) return \"warning\";\n    }\n    return pos;\n  };\n\n  render() {\n    const entry = this.props.entry;\n    const language = this.props.language;\n\n    const dayOptions = [];\n    for (let i = 1; i <= this.props.meet.lengthDays; i++) {\n      dayOptions.push(\n        <option value={i} key={i}>\n          {i}\n        </option>\n      );\n    }\n\n    const platformOptions = [];\n    for (let i = 1; i <= this.props.meet.platformsOnDays[entry.day - 1]; i++) {\n      platformOptions.push(\n        <option value={i} key={i}>\n          {i}\n        </option>\n      );\n    }\n\n    const divisionOptions = [];\n    for (let i = 0; i < this.props.meet.divisions.length; i++) {\n      const division = this.props.meet.divisions[i];\n      divisionOptions.push({ value: division, label: division });\n    }\n\n    const selectedDivisions = [];\n    for (let i = 0; i < entry.divisions.length; i++) {\n      const division = entry.divisions[i];\n      selectedDivisions.push({ value: division, label: division });\n    }\n\n    const selectedEvents = [];\n    for (let i = 0; i < entry.events.length; i++) {\n      const event = entry.events[i];\n      selectedEvents.push({ value: event, label: localizeEvent(event, language) });\n    }\n\n    const gridStyle = { padding: \"0px\", margin: \"0px\" };\n\n    const stringCountry = getString(\"common.country\", language);\n    const stringState = getString(\"registration.state-province\", language);\n    const stringBirthDatePlaceholder = getString(\"registration.birthdate-placeholder\", language);\n    const stringMemberIdPlaceholder = getString(\"registration.member-id-placeholder\", language);\n    const stringSelectPlaceholder = getString(\"common.select-placeholder\", language);\n\n    const eventOptions = [\n      { value: \"S\", label: getString(\"event.s\", language) },\n      { value: \"B\", label: getString(\"event.b\", language) },\n      { value: \"D\", label: getString(\"event.d\", language) },\n      { value: \"BD\", label: getString(\"event.bd\", language) },\n      { value: \"SBD\", label: getString(\"event.sbd\", language) },\n      { value: \"SB\", label: getString(\"event.sb\", language) },\n      { value: \"SD\", label: getString(\"event.sd\", language) },\n    ];\n\n    return (\n      <Card style={{ overflow: \"visible\", marginBottom: \"17px\" }}>\n        <Card.Header style={{ display: \"flex\" }}>\n          <Form.Control type=\"text\" placeholder=\"\" value={entry.name} onChange={this.updateRegistrationName} />\n          <Button\n            onClick={this.deleteRegistrationClick}\n            variant=\"danger\"\n            style={{ marginLeft: \"15px\", minWidth: \"100px\" }}\n          >\n            <LocalizedString id=\"registration.button-delete\" />\n          </Button>\n        </Card.Header>\n        <Card.Body>\n          <Container style={gridStyle}>\n            <Row>\n              {/* Day */}\n              <Col md={1}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.day-label\" defaultMessage=\"Day\" />\n                  </Form.Label>\n                  <Form.Control\n                    value={this.state.selectedDay.toString()}\n                    as=\"select\"\n                    onChange={this.updateRegistrationDay}\n                    className=\"custom-select\"\n                  >\n                    {dayOptions}\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n\n              {/* Platform */}\n              <Col md={1}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.platform-label\" defaultMessage=\"Platform\" />\n                  </Form.Label>\n                  <Form.Control\n                    value={entry.platform.toString()}\n                    as=\"select\"\n                    onChange={this.updateRegistrationPlatform}\n                    className=\"custom-select\"\n                  >\n                    {platformOptions}\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n\n              {/* Flight */}\n              <Col md={1}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.flight-label\" defaultMessage=\"Flight\" />\n                  </Form.Label>\n                  <Form.Control\n                    value={entry.flight}\n                    as=\"select\"\n                    onChange={this.updateRegistrationFlight}\n                    className=\"custom-select\"\n                  >\n                    <option value=\"A\">{getString(\"flight.a\", language)}</option>\n                    <option value=\"B\">{getString(\"flight.b\", language)}</option>\n                    <option value=\"C\">{getString(\"flight.c\", language)}</option>\n                    <option value=\"D\">{getString(\"flight.d\", language)}</option>\n                    <option value=\"E\">{getString(\"flight.e\", language)}</option>\n                    <option value=\"F\">{getString(\"flight.f\", language)}</option>\n                    <option value=\"G\">{getString(\"flight.g\", language)}</option>\n                    <option value=\"H\">{getString(\"flight.h\", language)}</option>\n                    <option value=\"I\">{getString(\"flight.i\", language)}</option>\n                    <option value=\"J\">{getString(\"flight.j\", language)}</option>\n                    <option value=\"K\">{getString(\"flight.k\", language)}</option>\n                    <option value=\"L\">{getString(\"flight.l\", language)}</option>\n                    <option value=\"M\">{getString(\"flight.m\", language)}</option>\n                    <option value=\"N\">{getString(\"flight.n\", language)}</option>\n                    <option value=\"O\">{getString(\"flight.o\", language)}</option>\n                    <option value=\"P\">{getString(\"flight.p\", language)}</option>\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n\n              {/* Sex */}\n              <Col md={1}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.sex-label\" defaultMessage=\"Sex\" />\n                  </Form.Label>\n                  <Form.Control\n                    value={entry.sex}\n                    as=\"select\"\n                    onChange={this.updateRegistrationSex}\n                    className=\"custom-select\"\n                  >\n                    <option value=\"M\">{getString(\"sex.m\", language)}</option>\n                    <option value=\"F\">{getString(\"sex.f\", language)}</option>\n                    <option value=\"Mx\">{getString(\"sex.mx\", language)}</option>\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n\n              {/* Equipment */}\n              <Col md={2}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.equipment-label\" defaultMessage=\"Equipment\" />\n                  </Form.Label>\n                  <Form.Control\n                    value={entry.equipment}\n                    as=\"select\"\n                    onChange={this.updateRegistrationEquipment}\n                    className=\"custom-select\"\n                  >\n                    <option value=\"Bare\">{getString(\"equipment.bare\", language)}</option>\n                    <option value=\"Sleeves\">{getString(\"equipment.sleeves\", language)}</option>\n                    <option value=\"Wraps\">{getString(\"equipment.wraps\", language)}</option>\n                    <option value=\"Single-ply\">{getString(\"equipment.single-ply\", language)}</option>\n                    <option value=\"Multi-ply\">{getString(\"equipment.multi-ply\", language)}</option>\n                    <option value=\"Unlimited\">{getString(\"equipment.unlimited\", language)}</option>\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n\n              {/* Divisions */}\n              <Col md={4}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.divisions-label\" defaultMessage=\"Divisions\" />\n                  </Form.Label>\n                  <Select\n                    menuPlacement=\"auto\"\n                    placeholder={stringSelectPlaceholder}\n                    options={divisionOptions}\n                    isClearable={false}\n                    isMulti={true}\n                    onChange={this.updateRegistrationDivisions}\n                    value={selectedDivisions}\n                  />\n                </Form.Group>\n              </Col>\n\n              {/* Events */}\n              <Col md={2}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.events-label\" defaultMessage=\"Events\" />\n                  </Form.Label>\n                  <Select\n                    menuPlacement=\"auto\"\n                    placeholder={stringSelectPlaceholder}\n                    options={eventOptions}\n                    isClearable={false}\n                    isMulti={true}\n                    onChange={this.updateRegistrationEvents}\n                    value={selectedEvents}\n                  />\n                </Form.Group>\n              </Col>\n            </Row>\n          </Container>\n\n          <Container style={gridStyle}>\n            <Row>\n              {/* Date of Birth */}\n              <Col md={2}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.birthdate-label\" defaultMessage=\"Date of Birth\" />\n                  </Form.Label>\n                  <ValidatedInput\n                    initialValue={entry.birthDate}\n                    placeholder={stringBirthDatePlaceholder}\n                    validate={validateEuropeanDate}\n                    onSuccess={this.updateRegistrationBirthDate}\n                  />\n                </Form.Group>\n              </Col>\n\n              {/* Age */}\n              <Col md={1}>\n                <Form.Group>\n                  <Form.Label>{getString(\"common.age\", language)}</Form.Label>\n                  <ValidatedInput\n                    initialValue={entry.age === 0 ? \"\" : displayNumber(entry.age, language)}\n                    placeholder={getString(\"common.age\", language)}\n                    validate={this.validateAge}\n                    onSuccess={this.updateRegistrationAge}\n                  />\n                </Form.Group>\n              </Col>\n\n              {/* Member ID */}\n              <Col md={2}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.member-id-label\" defaultMessage=\"Member ID\" />\n                  </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder={stringMemberIdPlaceholder}\n                    value={entry.memberId}\n                    onChange={this.updateRegistrationMemberId}\n                  />\n                </Form.Group>\n              </Col>\n\n              {/* Country */}\n              <Col md={2}>\n                <Form.Group>\n                  <Form.Label>{stringCountry}</Form.Label>\n                  <ValidatedInput\n                    initialValue={entry.country}\n                    placeholder={stringCountry}\n                    validate={(s) => (s === \"\" ? null : \"success\")}\n                    onSuccess={this.updateRegistrationCountry}\n                  />\n                </Form.Group>\n              </Col>\n\n              {/* State */}\n              <Col md={1}>\n                <Form.Group>\n                  <Form.Label>{stringState}</Form.Label>\n                  <ValidatedInput\n                    initialValue={entry.state}\n                    placeholder={stringState}\n                    validate={(s) => (s === \"\" ? null : \"success\")}\n                    onSuccess={this.updateRegistrationState}\n                  />\n                </Form.Group>\n              </Col>\n\n              {/* Lot Number */}\n              <Col md={1}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.lot-label\" defaultMessage=\"Lot #\" />\n                  </Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    min=\"0\"\n                    value={entry.lot === 0 ? \"\" : entry.lot.toString()}\n                    onChange={this.updateRegistrationLot}\n                  />\n                </Form.Group>\n              </Col>\n\n              {/* Guest */}\n              <Col md={1}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.guest-label\" defaultMessage=\"Guest\" />\n                  </Form.Label>\n                  <Form.Control\n                    value={entry.guest ? entry.guest.toString() : \"false\"}\n                    as=\"select\"\n                    onChange={this.updateRegistrationGuest}\n                    className=\"custom-select\"\n                  >\n                    <option value=\"false\">{getString(\"common.response-no\", language)}</option>\n                    <option value=\"true\">{getString(\"common.response-yes\", language)}</option>\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n\n              {/* Team */}\n              <Col md={2}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.team-label\" defaultMessage=\"Team\" />\n                  </Form.Label>\n                  <Form.Control type=\"text\" placeholder=\"\" value={entry.team} onChange={this.updateRegistrationTeam} />\n                </Form.Group>\n              </Col>\n            </Row>\n          </Container>\n\n          <Container style={gridStyle}>\n            <Row>\n              {/* Notes */}\n              <Col md={2}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.instagram-label\" defaultMessage=\"Instagram\" />\n                  </Form.Label>\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                      <InputGroup.Text>@</InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control\n                      type=\"text\"\n                      placeholder=\"\"\n                      value={entry.instagram}\n                      onChange={this.updateRegistrationInstagram}\n                    />\n                  </InputGroup>\n                </Form.Group>\n              </Col>\n\n              {/* Notes */}\n              <Col md={10}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.notes-label\" defaultMessage=\"Notes (for your personal use)\" />\n                  </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"\"\n                    value={entry.notes}\n                    onChange={this.updateRegistrationNotes}\n                  />\n                </Form.Group>\n              </Col>\n            </Row>\n          </Container>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState, ownProps: OwnProps): StateProps => {\n  // Only have props for the entry corresponding to this one row.\n  const lookup = state.registration.lookup;\n  const entry = state.registration.entries[lookup[ownProps.id]];\n\n  return {\n    meet: state.meet,\n    entry: entry,\n    language: state.language,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    deleteRegistration: (entryId: number) => dispatch(deleteRegistration(entryId)),\n    updateRegistration: (entryId: number, obj: Partial<Entry>) => dispatch(updateRegistration(entryId, obj)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LifterRow);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the button that adds a new entry to the registrations table.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Button from \"react-bootstrap/Button\";\n\nimport { newRegistration } from \"../../actions/registrationActions\";\n\nimport { Entry } from \"../../types/dataTypes\";\nimport { Dispatch } from \"redux\";\n\ninterface DispatchProps {\n  newRegistration: (obj: Partial<Entry>) => void;\n}\n\ntype Props = DispatchProps;\n\nclass NewButton extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick = () => {\n    this.props.newRegistration({});\n  };\n\n  render() {\n    return (\n      <Button onClick={this.handleClick} variant=\"primary\" size=\"lg\" block>\n        <FormattedMessage id=\"registration.button-new-lifter\" defaultMessage=\"New Lifter\" />\n      </Button>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    newRegistration: (obj: Partial<Entry>) => dispatch(newRegistration(obj)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(NewButton);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines a general CSV manipulation class.\n// This is a JS port of the Python \"oplcsv.py\" library used by the OpenPowerlifting\n// main data project.\n\n// Makes a string suitable for inclusion in a simple CSV file,\n// by deleting all commas and double quotes.\nexport const csvString = (x?: number | string): string => {\n  if (x === undefined) return \"\";\n  let s = String(x);\n\n  // The OpenPowerlifting format uses commas and disallow double-quotes.\n  s = s.replace(/,/g, \" \");\n  s = s.replace(/\"/g, \" \");\n\n  // The number \"0\" is also never written out explicitly; the empty string is preferred.\n  if (s === \"0\") return \"\";\n\n  // Clean up some formatting.\n  s = s.replace(/ {2}/g, \" \").trim();\n  return s;\n};\n\n// Makes a string of a Date object.\n//\n// By default, Excel will reformat our pretty ISO8601 dates (2019-11-30) into\n// a localized, ambiguous variant (11/30/2019). This happens sufficiently often\n// in submitted meet results that it's worth a workaround.\n//\n// Prepending a single-quote character to the date string stops the reformatting.\nexport const csvDate = (iso8601?: string): string => {\n  if (iso8601 === undefined || iso8601 === \"\") return \"\";\n  return csvString(\"'\" + iso8601);\n};\n\n// Returns the in-spreadsheet name of a column. In standard spreadsheet software,\n// rows are numeric (1, 2, 3, ...) and columns are alphabetic (A, B, C, ...).\n// For errors, we'd like to report the column that's wrong.\n//\n// The 'index' input is zero-indexed.\nexport const getSpreadsheetColumnName = (index: number): string => {\n  const alphabet: string = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n\n  // Column name accumulator.\n  // It's built by taking repeated mods in base 26: therefore new characters\n  // are appended to the left of the accumulator.\n  let acc: string = \"\";\n  let n: number = index;\n\n  while (n >= alphabet.length) {\n    const mod = n % alphabet.length;\n    const remainder = Math.floor(n / alphabet.length);\n\n    acc = alphabet[mod] + acc;\n\n    // The subtraction is because this isn't a pure modulus operator:\n    // by analogy to base-10, \"AA\" is equivalent to \"00\", and we want to render\n    // that.\n    n = remainder - 1;\n  }\n\n  return alphabet[n] + acc;\n};\n\n// A class for managing simple CSV files. Double-quotes and commas are disallowed.\nexport class Csv {\n  fieldnames: Array<string>; // Column names.\n  rows: Array<Array<string>>; // Individual rows.\n\n  constructor() {\n    this.fieldnames = [];\n    this.rows = [];\n  }\n\n  length(): number {\n    return this.rows.length;\n  }\n\n  index(name: string): number {\n    return this.fieldnames.indexOf(name);\n  }\n\n  appendColumn(name: string): void {\n    this.fieldnames.push(name);\n    for (let i = 0; i < this.rows.length; i++) {\n      this.rows[i].push(\"\");\n    }\n  }\n\n  appendColumns(namelist: Array<string>): void {\n    this.fieldnames = this.fieldnames.concat(namelist);\n    for (let i = 0; i < this.rows.length; i++) {\n      for (let j = 0; j < namelist.length; j++) {\n        this.rows[i].push(\"\");\n      }\n    }\n  }\n\n  insertColumn(index: number, name: string): void {\n    this.fieldnames.splice(index, 0, name);\n    for (let i = 0; i < this.rows.length; i++) {\n      this.rows[i].splice(index, 0, \"\");\n    }\n  }\n\n  removeColumnByIndex(index: number): void {\n    this.fieldnames.splice(index, 1);\n    for (let i = 0; i < this.rows.length; i++) {\n      this.rows[i].splice(index, 1);\n    }\n  }\n\n  removeColumnByName(name: string): void {\n    for (let i = 0; i < this.fieldnames.length; i++) {\n      if (this.fieldnames[i] === name) {\n        this.removeColumnByIndex(i);\n        return;\n      }\n    }\n  }\n\n  removeEmptyColumns(): void {\n    for (let i = 0; i < this.fieldnames.length; i++) {\n      let empty = true;\n      for (let j = 0; j < this.rows.length; j++) {\n        if (this.rows[j][i] !== \"\") {\n          empty = false;\n          break;\n        }\n      }\n      if (empty === true) {\n        this.removeColumnByIndex(i);\n        this.removeEmptyColumns();\n        return;\n      }\n    }\n  }\n\n  // Attempts to fill in this CSV object from a string.\n  // On success, returns the `this` Csv object.\n  // On failure, returns an error string with a user-presentable message.\n  fromString(s: string): Csv | string {\n    // The string cannot contain double-quotes: programs use those to allow\n    // in-field commas, which we disallow.\n    if (s.includes('\"')) {\n      let e = 'Double-quotes (\") are disallowed.';\n      e += \" Double-quotes can be automatically inserted by spreadsheet software\";\n      e += \" when a field contains a comma. Make sure to delete all in-field commas.\";\n      return e;\n    }\n\n    // Split by newline. It's OK for \\r to remain: we'll strip each field later.\n    // This always produces an array of length at least 1.\n    //\n    // Trim the string first: it's OK if files end with \"\\n\".\n    const lines = s.trim().split(\"\\n\");\n\n    // The first row contains fieldnames.\n    const fieldnames = lines[0].split(\",\").map((x) => x.trim());\n\n    // Any rows after the first contain data.\n    const rows = [];\n    for (let i = 1; i < lines.length; ++i) {\n      const row = lines[i].split(\",\").map((x) => x.trim());\n      rows.push(row);\n    }\n\n    // Sanity checking time!\n    // Every column must be named.\n    for (let i = 0; i < fieldnames.length; ++i) {\n      if (fieldnames[i] === \"\") {\n        const colname = getSpreadsheetColumnName(i);\n        return \"Column \" + colname + \" is missing a column name.\";\n      }\n    }\n\n    // Every row must have the same length as the fieldnames row.\n    for (let i = 0; i < rows.length; ++i) {\n      if (rows[i].length !== fieldnames.length) {\n        const rownum = i + 2; // 1-indexed, and the first row is fieldnames.\n        let e = \"Row \" + rownum + \" has \" + rows[i].length + \" columns,\";\n        e += \" but the first row has \" + fieldnames.length + \" columns.\";\n        return e;\n      }\n    }\n\n    this.fieldnames = fieldnames;\n    this.rows = rows;\n    return this;\n  }\n\n  toString(): string {\n    const headers = this.fieldnames.join(\",\");\n    const strRows: Array<string> = [];\n    for (let i = 0; i < this.rows.length; i++) {\n      strRows.push(this.rows[i].join(\",\"));\n    }\n    return headers + \"\\n\" + strRows.join(\"\\n\") + \"\\n\";\n  }\n}\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines logic for parsing strings into OpenLifter datatypes.\n// The strings can come from the user and are therefore untrusted.\n\nimport { Equipment, Event, Sex } from \"../types/dataTypes\";\n\n// Strictly parse a string to an integer. Negatives are allowed.\nexport const parseInteger = (s: string): number | undefined => {\n  // Characters will be compared to ASCII charcodes.\n  const ascii_0 = 0x30;\n  const ascii_9 = 0x39;\n  const ascii_minus = 0x2d;\n\n  // Disallow the empty string.\n  if (s.length === 0) {\n    return;\n  }\n\n  // Check the string character-by-character.\n  for (let i = 0; i < s.length; ++i) {\n    const charcode = s.charCodeAt(i);\n\n    // A single negative is allowed at the front.\n    if (i === 0 && charcode === ascii_minus) {\n      continue;\n    } else if (charcode < ascii_0 || charcode > ascii_9) {\n      return;\n    }\n  }\n\n  return parseInt(s, 10);\n};\n\n// Loosely parse a string to a Sex.\nexport const parseSex = (s: string): Sex | undefined => {\n  const lower = s.toLowerCase();\n  if (lower === \"m\") return \"M\";\n  if (lower === \"f\") return \"F\";\n  if (lower === \"mx\") return \"Mx\";\n  return;\n};\n\n// Loosely parse a string to an Equipment.\nexport const parseEquipment = (s: string): Equipment | undefined => {\n  const lower = s.toLowerCase();\n  if (lower === \"bare\") return \"Bare\";\n  if (lower === \"sleeves\") return \"Sleeves\";\n  if (lower === \"wraps\") return \"Wraps\";\n  if (lower === \"unlimited\") return \"Unlimited\";\n\n  // Be more forgiving on these ones: nobody remembers the dash.\n  if (lower.startsWith(\"single\")) return \"Single-ply\";\n  if (lower.startsWith(\"multi\")) return \"Multi-ply\";\n  return;\n};\n\n// Parse a string to an Event.\n// Valid characters are \"SBD\", which must occur in that order.\nexport const parseEvent = (s: string): Event | undefined => {\n  if (s === \"\") {\n    return;\n  }\n\n  // Allow lowercase variants like \"sbd\".\n  const lower = s.toLowerCase();\n  const has_squat = lower.includes(\"s\");\n  const has_bench = lower.includes(\"b\");\n  const has_deadlift = lower.includes(\"d\");\n\n  let acc = \"\";\n  if (has_squat) acc += \"S\";\n  if (has_bench) acc += \"B\";\n  if (has_deadlift) acc += \"D\";\n\n  // Having reconstructed the string in the right order, check whether it matches.\n  if (acc !== s) {\n    return;\n  }\n\n  return s as Event;\n};\n\n// Strictly parse a YYYY-MM-DD date.\nexport const parseDate = (s: string): string | undefined => {\n  // Allow a prepended single-quote, inserted for purposes of preventing\n  // Excel auto-localization.\n  s = s.replace(\"'\", \"\");\n\n  // \"YYYY-MM-DD\".length === 10.\n  if (s.length !== 10) {\n    return;\n  }\n\n  const pieces = s.split(\"-\");\n  if (pieces.length !== 3) {\n    return;\n  }\n\n  if (pieces[0].length !== 4 || pieces[1].length !== 2 || pieces[2].length !== 2) {\n    return;\n  }\n\n  const year = parseInteger(pieces[0]);\n  const month = parseInteger(pieces[1]);\n  const day = parseInteger(pieces[2]);\n\n  if (typeof year !== \"number\" || year < 1920) return;\n  if (typeof month !== \"number\" || month < 1 || month > 12) return;\n  if (typeof day !== \"number\" || day < 1 || day > 31) return;\n\n  return s;\n};\n\n// Strictly parse a DD-MM-YYYY date.\nexport const parseEuropeanDate = (s: string): string | undefined => {\n  // Allow a prepended single-quote, inserted for purposes of preventing\n  // Excel auto-localization.\n  s = s.replace(\"'\", \"\");\n\n  // \"DD-MM-YYYY\".length === 10.\n  if (s.length !== 10) {\n    return;\n  }\n\n  const pieces = s.split(\"-\");\n  if (pieces.length !== 3) {\n    return;\n  }\n\n  if (pieces[0].length !== 2 || pieces[1].length !== 2 || pieces[2].length !== 4) {\n    return;\n  }\n\n  const day = parseInteger(pieces[0]);\n  const month = parseInteger(pieces[1]);\n  const year = parseInteger(pieces[2]);\n\n  if (typeof day !== \"number\" || day < 1 || day > 31) return;\n  if (typeof month !== \"number\" || month < 1 || month > 12) return;\n  if (typeof year !== \"number\" || year < 1920) return;\n\n  return s;\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Exports registration data to a CSV file.\n\nimport { csvDate, csvString, Csv } from \"./csv\";\nimport { getString, localizeEquipment, localizeEvent, localizeFlight, localizeSex } from \"../strings\";\n\nimport { Language } from \"../../types/dataTypes\";\nimport { RegistrationState } from \"../../types/stateTypes\";\n\nconst boolToYesNo = (b: boolean, language: Language): string => {\n  if (b === true) {\n    return getString(\"common.response-yes\", language);\n  }\n  return getString(\"common.response-no\", language);\n};\n\nexport const makeRegistrationsCsv = (registration: RegistrationState, language: Language): string => {\n  const csv = new Csv();\n\n  const division_template = getString(\"import.column-division-n\", language);\n  const event_template = getString(\"import.column-event-n\", language);\n\n  const col_day = getString(\"import.column-day\", language);\n  const col_platform = getString(\"import.column-platform\", language);\n  const col_flight = getString(\"import.column-flight\", language);\n  const col_name = getString(\"import.column-name\", language);\n  const col_sex = getString(\"import.column-sex\", language);\n  const col_equipment = getString(\"import.column-equipment\", language);\n  const col_division1 = division_template.replace(\"{N}\", \"1\");\n  const col_event1 = event_template.replace(\"{N}\", \"1\");\n  const col_birthdate = getString(\"import.column-birthdate\", language);\n  const col_age = getString(\"import.column-age\", language);\n  const col_squatRackInfo = getString(\"import.column-squatRack\", language);\n  const col_benchRackInfo = getString(\"import.column-benchRack\", language);\n  const col_memberid = getString(\"import.column-memberid\", language);\n  const col_country = getString(\"import.column-country\", language);\n  const col_state = getString(\"import.column-state\", language);\n  const col_lot = getString(\"import.column-lot\", language);\n  const col_guest = getString(\"import.column-guest\", language);\n  const col_team = getString(\"import.column-team\", language);\n  const col_instagram = getString(\"import.column-instagram\", language);\n  const col_notes = getString(\"import.column-notes\", language);\n\n  csv.appendColumns([col_day, col_platform, col_flight, col_name, col_sex, col_equipment]);\n  csv.appendColumns([col_division1, col_event1]); // Base cases. Others inserted by need.\n  csv.appendColumns([col_birthdate, col_age, col_squatRackInfo, col_benchRackInfo, col_memberid]);\n  csv.appendColumns([col_country, col_state, col_lot, col_guest, col_team, col_instagram, col_notes]);\n\n  for (let i = 0; i < registration.entries.length; ++i) {\n    const entry = registration.entries[i];\n\n    const row: Array<string> = new Array(csv.fieldnames.length).fill(\"\");\n    row[csv.index(col_day)] = csvString(entry.day);\n    row[csv.index(col_platform)] = csvString(entry.platform);\n    row[csv.index(col_flight)] = csvString(localizeFlight(entry.flight, language));\n    row[csv.index(col_name)] = csvString(entry.name);\n    row[csv.index(col_sex)] = csvString(localizeSex(entry.sex, language));\n    row[csv.index(col_equipment)] = csvString(localizeEquipment(entry.equipment, language));\n    row[csv.index(col_birthdate)] = csvDate(entry.birthDate);\n    row[csv.index(col_age)] = csvString(entry.age);\n    row[csv.index(col_squatRackInfo)] = csvString(entry.squatRackInfo);\n    row[csv.index(col_benchRackInfo)] = csvString(entry.benchRackInfo);\n    row[csv.index(col_memberid)] = csvString(entry.memberId);\n    row[csv.index(col_country)] = csvString(entry.country);\n    row[csv.index(col_state)] = csvString(entry.state);\n    row[csv.index(col_lot)] = csvString(entry.lot);\n    row[csv.index(col_guest)] = csvString(boolToYesNo(entry.guest, language));\n    row[csv.index(col_team)] = csvString(entry.team);\n    row[csv.index(col_instagram)] = csvString(entry.instagram);\n    row[csv.index(col_notes)] = csvString(entry.notes);\n\n    // Divisions.\n    for (let j = 0; j < entry.divisions.length; ++j) {\n      const division: string = entry.divisions[j];\n      const column: string = division_template.replace(\"{N}\", String(j + 1));\n\n      // Create the column if necessary. The previously numbered column exists.\n      if (csv.index(column) === -1) {\n        const prevIndex = csv.index(division_template.replace(\"{N}\", String(j)));\n        csv.insertColumn(prevIndex + 1, column); // Make space in other rows.\n        row.splice(prevIndex + 1, 0, \"\"); // Make space in this row.\n      }\n      row[csv.index(column)] = csvString(division);\n    }\n\n    // Events.\n    for (let j = 0; j < entry.events.length; ++j) {\n      const event = entry.events[j];\n      const column: string = event_template.replace(\"{N}\", String(j + 1));\n\n      // Create the column if necessary. The previously numbered column exists.\n      if (csv.index(column) === -1) {\n        const prevIndex = csv.index(event_template.replace(\"{N}\", String(j)));\n        csv.insertColumn(prevIndex + 1, column); // Make space in other rows.\n        row.splice(prevIndex + 1, 0, \"\"); // Make space in this row.\n      }\n      row[csv.index(column)] = csvString(localizeEvent(event, language));\n    }\n\n    csv.rows.push(row);\n  }\n\n  return csv.toString();\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Common functions shared by the Randomize feature.\n\n// Generate a gibberish string, between 0-11 characters.\nimport { lbs2kg } from \"../../logic/units\";\n\nexport const randomString = (): string => {\n  // Converts each digit to a value in base 36.\n  return Math.random().toString(36).substr(2);\n};\n\n// Generate a random integer between max and min, inclusive.\nexport const randomInt = (min: number, max: number) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\n// Generate a random floating-point number with a set number of fractional digits.\nexport const randomFixedPoint = (min: number, max: number, fixedPoints: number) => {\n  const power = Math.pow(10, fixedPoints);\n\n  // Construct an integer from [0, (max - min + 1) * 10^fixedPoints].\n  const k = Math.floor(Math.random() * (max - min + 1) * power);\n\n  // Translate it back to normal space.\n  return k / power + min;\n};\n\nexport const randomAttemptWithMin = (inKg: boolean, min: number) => {\n  const multiple = 2.5;\n  if (inKg) {\n    return Math.floor(randomFixedPoint(min, 360, 1) / multiple) * multiple;\n  } else {\n    return lbs2kg(Math.floor(randomFixedPoint(min, 800, 1) / multiple) * multiple);\n  }\n};\n\nexport const randomAttempt = (inKg: boolean) => {\n  const min = inKg ? 25 : 55;\n  return randomAttemptWithMin(inKg, min);\n};\n\n// Randomly shuffle an array in-place using the Fisher-Yates algorithm.\n//\n// For each element, swap it with a randomly-chosen element of greater or equal index.\nexport const shuffle = <T>(array: Array<Readonly<T>>): void => {\n  const numElements = array.length;\n\n  for (let i = 0; i < numElements - 1; i++) {\n    // Randomly select an element of greater or equal index.\n    const switchIndex = randomInt(i, numElements - 1);\n\n    // Swap the two elements.\n    const temp = array[i];\n    array[i] = array[switchIndex];\n    array[switchIndex] = temp;\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// The parent component of the Registration page, contained by the RegistrationContainer.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Button from \"react-bootstrap/Button\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Card from \"react-bootstrap/Card\";\n\nimport { faSpinner, faTimes, faRandom, faSort } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport LifterTable from \"./LifterTable\";\nimport LifterRow from \"./LifterRow\";\nimport NewButton from \"./NewButton\";\nimport ErrorModal from \"../ErrorModal\";\n\nimport { Csv } from \"../../logic/export/csv\";\nimport { makeExampleRegistrationsCsv, loadRegistrations } from \"../../logic/import/registration-csv\";\nimport { makeRegistrationsCsv } from \"../../logic/export/registrations\";\nimport { getString } from \"../../logic/strings\";\n\nimport { newRegistration, deleteRegistration, assignLotNumbers } from \"../../actions/registrationActions\";\n\nimport { saveAs } from \"file-saver\";\n\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { Entry } from \"../../types/dataTypes\";\nimport { Dispatch } from \"redux\";\nimport { DropdownButton, Dropdown } from \"react-bootstrap\";\nimport { shuffle } from \"../debug/RandomizeHelpers\";\n\ninterface StateProps {\n  global: GlobalState;\n}\n\ninterface DispatchProps {\n  newRegistration: (obj: Partial<Entry>) => void;\n  deleteRegistration: (id: number) => void;\n  assignLotNumbers: (lotNumbers: number[]) => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\ninterface InternalState {\n  // Controls the ErrorModal popup. Shown when error !== \"\".\n  error: string;\n  // Used for showing spinning indicators when loading files\n  isLoadingFiles: boolean;\n}\n\n// Used to distinguish between the Overwrite and Append modes.\nlet globalImportKind: string = \"Overwrite\";\n\nclass RegistrationView extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n    this.handleDownloadCsvTemplateClick = this.handleDownloadCsvTemplateClick.bind(this);\n    this.handleExportCsvClick = this.handleExportCsvClick.bind(this);\n    this.handleOverwriteClick = this.handleOverwriteClick.bind(this);\n    this.handleAppendClick = this.handleAppendClick.bind(this);\n    this.handleLoadFileInput = this.handleLoadFileInput.bind(this);\n    this.handleSequentialLotNumbersClick = this.handleSequentialLotNumbersClick.bind(this);\n    this.handleRandomLotNumbersClick = this.handleRandomLotNumbersClick.bind(this);\n    this.handleRemoveLotNumbersClick = this.handleRemoveLotNumbersClick.bind(this);\n    this.closeErrorModal = this.closeErrorModal.bind(this);\n\n    this.state = { error: \"\", isLoadingFiles: false };\n  }\n\n  handleDownloadCsvTemplateClick = () => {\n    const text = makeExampleRegistrationsCsv(this.props.global.language);\n    const blob = new Blob([text], { type: \"application/text;charset=utf-8\" });\n    const filename = getString(\"import.template-filename\", this.props.global.language) + \".csv\";\n    saveAs(blob, filename);\n  };\n\n  handleExportCsvClick = () => {\n    let meetname = this.props.global.meet.name;\n    if (meetname === \"\") {\n      meetname = getString(\"common.unnamed-filename\", this.props.global.language);\n    }\n    meetname = meetname.replace(/ /g, \"-\");\n\n    const language = this.props.global.language;\n    const text = makeRegistrationsCsv(this.props.global.registration, language);\n    const blob = new Blob([text], { type: \"application/text;charset=utf-8\" });\n\n    const basename = getString(\"import.export-filename\", this.props.global.language);\n    const filename = basename.replace(\"{MeetName}\", meetname) + \".csv\";\n    saveAs(blob, filename);\n  };\n\n  handleOverwriteClick = () => {\n    globalImportKind = \"Overwrite\";\n    const loadhelper = document.getElementById(\"loadhelper\");\n    if (loadhelper !== null) {\n      loadhelper.click();\n    }\n  };\n\n  handleSequentialLotNumbersClick = () => {\n    this.updateLotNumbers(\"AssignSequentially\");\n  };\n\n  handleRandomLotNumbersClick = () => {\n    this.updateLotNumbers(\"AssignRandomly\");\n  };\n\n  handleRemoveLotNumbersClick = () => {\n    this.updateLotNumbers(\"RemoveAll\");\n  };\n\n  updateLotNumbers = (manipulation: \"AssignSequentially\" | \"AssignRandomly\" | \"RemoveAll\"): void => {\n    const entries = this.props.global.registration.entries;\n    let lotNumbers: number[];\n\n    // Removing lot numbers is as simple as setting the number to 0\n    if (manipulation === \"RemoveAll\") {\n      lotNumbers = entries.map(() => 0);\n    } else {\n      // If not removing, generate a set of sequential lot numbers for all lifters.\n      lotNumbers = entries.map((_entry, index) => index + 1);\n    }\n\n    // If randomization was requested, shuffle the lot number array in-place.\n    if (manipulation === \"AssignRandomly\") {\n      shuffle(lotNumbers);\n    }\n\n    // Finally, update the lot numbers in the state\n    this.props.assignLotNumbers(lotNumbers);\n  };\n\n  handleAppendClick = () => {\n    globalImportKind = \"Append\";\n    const loadhelper = document.getElementById(\"loadhelper\");\n    if (loadhelper !== null) {\n      loadhelper.click();\n    }\n  };\n\n  handleLoadFileInput = () => {\n    const loadHelper = document.getElementById(\"loadhelper\");\n    if (loadHelper === null || !(loadHelper instanceof HTMLInputElement) || loadHelper.files === null) {\n      return;\n    }\n\n    const selectedFile = loadHelper.files[0];\n    const rememberThis = this;\n\n    const reader = new FileReader();\n\n    reader.onload = function () {\n      // If this occurs, we've introduced a bug when initiating the file reader, or the read failed.\n      // Add this check as a guard so the typing is narrowed\n      if (typeof reader.result !== \"string\") {\n        window.alert(\"Unable to load file: an unexpected internal error occured\");\n        return;\n      }\n\n      const csv = new Csv();\n      const maybeError = csv.fromString(reader.result.replace(/;/g, \",\"));\n\n      // Check if an error message occurred.\n      if (typeof maybeError === \"string\") {\n        rememberThis.setState({ error: maybeError });\n        return;\n      }\n\n      // Convert the Csv to an Array<Entry>.\n      const language = rememberThis.props.global.language;\n      const maybeEntries = loadRegistrations(rememberThis.props.global, csv, language);\n      if (typeof maybeEntries === \"string\") {\n        rememberThis.setState({ error: maybeEntries });\n        return;\n      }\n\n      // Successfully parsed and loaded!\n      const entries: Array<Partial<Entry>> = maybeEntries;\n\n      // If the mode is \"Overwrite\", delete all existing Entries.\n      if (globalImportKind === \"Overwrite\") {\n        const entryIds = rememberThis.props.global.registration.entries.map((e) => e.id);\n        for (let i = 0; i < entryIds.length; ++i) {\n          rememberThis.props.deleteRegistration(entryIds[i]);\n        }\n      }\n\n      // Add all the new Entries.\n      for (let i = 0; i < entries.length; ++i) {\n        // Deleting the 'id' field causes newRegistration() to assign a valid one.\n        delete entries[i].id;\n        rememberThis.props.newRegistration(entries[i]);\n      }\n    };\n\n    reader.onloadstart = function () {\n      rememberThis.setState({ isLoadingFiles: true });\n    };\n\n    reader.onloadend = function () {\n      rememberThis.setState({ isLoadingFiles: false });\n    };\n\n    reader.readAsText(selectedFile);\n  };\n\n  closeErrorModal = () => {\n    this.setState({ error: \"\" });\n  };\n\n  render() {\n    const numEntries = this.props.global.registration.entries.length;\n    const dropdownIconStyle = { width: \"16px\", marginRight: \"6px\" };\n\n    return (\n      <div>\n        <ErrorModal\n          error={this.state.error}\n          title={getString(\"registration.importation-error\", this.props.global.language)}\n          show={this.state.error !== \"\"}\n          close={this.closeErrorModal}\n        />\n\n        <Card style={{ marginBottom: \"17px\" }}>\n          <Card.Header>\n            <FormattedMessage id=\"registration.auto-import-card-header\" defaultMessage=\"Auto-Import Registrations\" />\n          </Card.Header>\n          <Card.Body>\n            <Button variant=\"info\" onClick={this.handleDownloadCsvTemplateClick}>\n              <FormattedMessage id=\"registration.button-download-template\" defaultMessage=\"Download Template\" />\n            </Button>\n\n            <Button\n              variant=\"success\"\n              disabled={numEntries === 0}\n              onClick={this.handleExportCsvClick}\n              style={{ marginLeft: \"14px\" }}\n            >\n              <FormattedMessage id=\"registration.button-export-to-csv\" defaultMessage=\"Export to CSV\" />\n            </Button>\n\n            <ButtonGroup style={{ marginLeft: \"14px\" }}>\n              <Button variant=\"danger\" onClick={this.handleOverwriteClick}>\n                {this.state.isLoadingFiles && <FontAwesomeIcon style={{ marginRight: \"5px\" }} icon={faSpinner} spin />}\n                <FormattedMessage\n                  id=\"registration.button-overwrite-from-csv\"\n                  defaultMessage=\"Overwrite Registrations from CSV\"\n                />\n              </Button>\n              <Button variant=\"warning\" onClick={this.handleAppendClick}>\n                <FormattedMessage\n                  id=\"registration.button-append-from-csv\"\n                  defaultMessage=\"Append Registrations from CSV\"\n                />\n              </Button>\n            </ButtonGroup>\n          </Card.Body>\n        </Card>\n\n        <Card style={{ marginBottom: \"17px\" }}>\n          <Card.Header>\n            <FormattedMessage id=\"registration.tools-header\" defaultMessage=\"Tools\" />\n          </Card.Header>\n          <Card.Body>\n            <ButtonGroup vertical>\n              <DropdownButton\n                as={ButtonGroup}\n                title={\n                  <FormattedMessage id=\"registration.dropdown-manage-lot-numbers\" defaultMessage=\"Manage Lot Numbers\" />\n                }\n                id=\"registration.button-assign-lot-numbers\"\n              >\n                <Dropdown.Item onClick={this.handleSequentialLotNumbersClick}>\n                  <FontAwesomeIcon icon={faSort} style={dropdownIconStyle} />\n                  <FormattedMessage\n                    id=\"registration.button-assign-lot-numbers-sequentially\"\n                    defaultMessage=\"Assign Sequentially\"\n                  />\n                </Dropdown.Item>\n                <Dropdown.Item onClick={this.handleRandomLotNumbersClick}>\n                  <FontAwesomeIcon icon={faRandom} style={dropdownIconStyle} />\n                  <FormattedMessage\n                    id=\"registration.button-assign-lot-numbers-randomly\"\n                    defaultMessage=\"Assign Randomly\"\n                  />\n                </Dropdown.Item>\n                <Dropdown.Item onClick={this.handleRemoveLotNumbersClick}>\n                  <FontAwesomeIcon icon={faTimes} style={dropdownIconStyle} />\n                  <FormattedMessage id=\"registration.button-remove-lot-numbers\" defaultMessage=\"Remove Lot Numbers\" />\n                </Dropdown.Item>\n              </DropdownButton>\n            </ButtonGroup>\n          </Card.Body>\n        </Card>\n\n        <LifterTable entries={this.props.global.registration.entries} rowRenderer={LifterRow} />\n        <NewButton />\n\n        <input\n          id=\"loadhelper\"\n          type=\"file\"\n          accept=\".csv\"\n          style={{ display: \"none\" }}\n          onChange={this.handleLoadFileInput}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  global: state,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    newRegistration: (obj: Partial<Entry>) => dispatch(newRegistration(obj)),\n    deleteRegistration: (id: number) => dispatch(deleteRegistration(id)),\n    assignLotNumbers: (lotNumbers: number[]) => dispatch(assignLotNumbers(lotNumbers)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegistrationView);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines logic for importing Registration data from a CSV file.\n// The CSV format is very strict: no double-quotes allowed, commas are always\n// separators, and the format of each field must exactly match our internal format.\n\nimport { csvDate, Csv, getSpreadsheetColumnName } from \"../export/csv\";\nimport { newDefaultEntry } from \"../entry\";\n\nimport { parseInteger, parseEuropeanDate } from \"../parsers\";\nimport { getString, delocalizeEquipment, delocalizeEvent, delocalizeFlight, delocalizeSex } from \"../strings\";\nimport { displayNumber } from \"../units\";\n\nimport { Entry, Language } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\n\n// Generates a string representing a downloadable CSV file, for use as an example\n// of the registration format.\n//\n// This is in code so that it can live right next to loadRegistrations()\n// for easier long-term maintenance.\nexport const makeExampleRegistrationsCsv = (language: Language): string => {\n  const csv = new Csv();\n  csv.rows = [[]]; // appendColumns() will resize the dummy row correctly.\n\n  const day = getString(\"import.column-day\", language);\n  const platform = getString(\"import.column-platform\", language);\n  const flight = getString(\"import.column-flight\", language);\n  const name = getString(\"import.column-name\", language);\n  const sex = getString(\"import.column-sex\", language);\n  const equipment = getString(\"import.column-equipment\", language);\n  const division1 = getString(\"import.column-division-n\", language).replace(\"{N}\", \"1\");\n  const division2 = getString(\"import.column-division-n\", language).replace(\"{N}\", \"2\");\n  const division3 = getString(\"import.column-division-n\", language).replace(\"{N}\", \"3\");\n  const event1 = getString(\"import.column-event-n\", language).replace(\"{N}\", \"1\");\n  const event2 = getString(\"import.column-event-n\", language).replace(\"{N}\", \"2\");\n  const event3 = getString(\"import.column-event-n\", language).replace(\"{N}\", \"3\");\n  const birthdate = getString(\"import.column-birthdate\", language);\n  const age = getString(\"import.column-age\", language);\n  const squatRackInfo = getString(\"import.column-squatRack\", language);\n  const benchRackInfo = getString(\"import.column-benchRack\", language);\n  const memberid = getString(\"import.column-memberid\", language);\n  const country = getString(\"import.column-country\", language);\n  const state = getString(\"import.column-state\", language);\n  const lot = getString(\"import.column-lot\", language);\n  const guest = getString(\"import.column-guest\", language);\n  const team = getString(\"import.column-team\", language);\n  const instagram = getString(\"import.column-instagram\", language);\n  const notes = getString(\"import.column-notes\", language);\n\n  csv.appendColumns([day, platform, flight, name, sex, equipment]);\n  csv.appendColumns([division1, division2, division3, event1, event2, event3]);\n  csv.appendColumns([birthdate, age, squatRackInfo, benchRackInfo, memberid, country, state]);\n  csv.appendColumns([lot, team, guest, instagram, notes]);\n\n  csv.rows[0][csv.index(day)] = \"1\";\n  csv.rows[0][csv.index(platform)] = \"1\";\n  csv.rows[0][csv.index(flight)] = getString(\"flight.a\", language);\n  csv.rows[0][csv.index(name)] = getString(\"import.example-name\", language);\n  csv.rows[0][csv.index(sex)] = getString(\"import.example-sex\", language);\n  csv.rows[0][csv.index(equipment)] = getString(\"equipment.sleeves\", language);\n  csv.rows[0][csv.index(division1)] = getString(\"import.example-division1\", language);\n  csv.rows[0][csv.index(division2)] = getString(\"import.example-division2\", language);\n  // Intentionally blank: csv.rows[0][csv.index(division3)]\n  csv.rows[0][csv.index(event1)] = getString(\"event.sbd\", language);\n  csv.rows[0][csv.index(event2)] = getString(\"event.bd\", language);\n  // Intentionally blank: csv.rows[0][csv.index(event3)]\n  csv.rows[0][csv.index(birthdate)] = csvDate(getString(\"import.example-birthdate\", language));\n  // Intentionally blank: csv.rows[0][csv.index(age)]\n  csv.rows[0][csv.index(squatRackInfo)] = \"13\";\n  csv.rows[0][csv.index(benchRackInfo)] = \"7/16\";\n  // Intentionally blank: csv.rows[0][csv.index(memberid)]\n  csv.rows[0][csv.index(country)] = getString(\"import.example-country\", language);\n  csv.rows[0][csv.index(state)] = getString(\"import.example-state\", language);\n  // Intentionally blank: csv.rows[0][csv.index(lot)]\n  csv.rows[0][csv.index(guest)] = getString(\"common.response-yes\", language);\n  // Intentionally blank: csv.rows[0][csv.index(team)]\n  // Intentionally blank: csv.rows[0][csv.index(team)]\n  csv.rows[0][csv.index(instagram)] = getString(\"import.example-instagram\", language);\n  csv.rows[0][csv.index(notes)] = getString(\"import.example-notes\", language);\n\n  return csv.toString();\n};\n\n// Attempts to load registration information from a CSV object.\n//\n// On success, returns an array of Entry objects.\n//   NOTE CAREFULLY that the global state is not updated by this function.\n//   The caller must integrate the Entry objects, updating EntryID Tracking.\n// On failure, returns an error string with a user-presentable message.\nexport const loadRegistrations = (state: GlobalState, csv: Csv, language: Language): Array<Entry> | string => {\n  const division_template = getString(\"import.column-division-n\", language);\n  const event_template = getString(\"import.column-event-n\", language);\n\n  const col_day = getString(\"import.column-day\", language);\n  const col_platform = getString(\"import.column-platform\", language);\n  const col_flight = getString(\"import.column-flight\", language);\n  const col_name = getString(\"import.column-name\", language);\n  const col_sex = getString(\"import.column-sex\", language);\n  const col_equipment = getString(\"import.column-equipment\", language);\n  const col_division1 = division_template.replace(\"{N}\", \"1\");\n  const col_division2 = division_template.replace(\"{N}\", \"2\");\n  const col_division3 = division_template.replace(\"{N}\", \"3\");\n  const col_division4 = division_template.replace(\"{N}\", \"4\");\n  const col_division5 = division_template.replace(\"{N}\", \"5\");\n  const col_event1 = event_template.replace(\"{N}\", \"1\");\n  const col_event2 = event_template.replace(\"{N}\", \"2\");\n  const col_event3 = event_template.replace(\"{N}\", \"3\");\n  const col_event4 = event_template.replace(\"{N}\", \"4\");\n  const col_event5 = event_template.replace(\"{N}\", \"5\");\n  const col_birthdate = getString(\"import.column-birthdate\", language);\n  const col_age = getString(\"import.column-age\", language);\n  const col_squatRackInfo = getString(\"import.column-squatRack\", language);\n  const col_benchRackInfo = getString(\"import.column-benchRack\", language);\n  const col_memberid = getString(\"import.column-memberid\", language);\n  const col_country = getString(\"import.column-country\", language);\n  const col_state = getString(\"import.column-state\", language);\n  const col_lot = getString(\"import.column-lot\", language);\n  const col_guest = getString(\"import.column-guest\", language);\n  const col_team = getString(\"import.column-team\", language);\n  const col_instagram = getString(\"import.column-instagram\", language);\n  const col_notes = getString(\"import.column-notes\", language);\n\n  // Every fieldname must be either mandatory or optional.\n  const MANDATORY_FIELDNAMES = [\n    col_day,\n    col_platform,\n    col_flight,\n    col_name,\n    col_sex,\n    col_equipment,\n    col_division1,\n    col_event1,\n  ];\n  const OPTIONAL_FIELDNAMES = [\n    col_division2,\n    col_division3,\n    col_division4,\n    col_division5,\n    col_event2,\n    col_event3,\n    col_event4,\n    col_event5,\n    col_birthdate,\n    col_age,\n    col_squatRackInfo,\n    col_benchRackInfo,\n    col_memberid,\n    col_country,\n    col_state,\n    col_lot,\n    col_guest,\n    col_team,\n    col_instagram,\n    col_notes,\n  ];\n\n  // Check the existent fieldnames for sanity.\n  for (let i = 0; i < csv.fieldnames.length; ++i) {\n    const name: string = csv.fieldnames[i];\n\n    // Every fieldname that appears must be known.\n    if (!MANDATORY_FIELDNAMES.includes(name) && !OPTIONAL_FIELDNAMES.includes(name)) {\n      const colname = getSpreadsheetColumnName(i);\n      const allfields: string = MANDATORY_FIELDNAMES.join(\", \") + \", \" + OPTIONAL_FIELDNAMES.join(\", \");\n\n      const e = getString(\"error.csv-unknown-header\", language);\n      return e.replace(\"{name}\", name).replace(\"{ABC}\", colname).replace(\"{validList}\", allfields);\n    }\n\n    // Fieldnames cannot be repeated.\n    for (let j = i + 1; j < csv.fieldnames.length; ++j) {\n      if (csv.fieldnames[j] === csv.fieldnames[i]) {\n        const iname = getSpreadsheetColumnName(i);\n        const jname = getSpreadsheetColumnName(j);\n\n        const e = getString(\"error.csv-duplicate-header\", language);\n        return e.replace(\"{name}\", csv.fieldnames[i]).replace(\"{firstABC}\", iname).replace(\"{secondABC}\", jname);\n      }\n    }\n  }\n\n  // Check that all of the MANDATORY_FIELDNAMES are included.\n  for (let i = 0; i < MANDATORY_FIELDNAMES.length; ++i) {\n    if (!csv.fieldnames.includes(MANDATORY_FIELDNAMES[i])) {\n      const e = getString(\"error.csv-missing-header\", language);\n      return e.replace(\"{name}\", MANDATORY_FIELDNAMES[i]);\n    }\n  }\n\n  // The \"Platform\" column\" must occur after the \"Day\" column: the parsing\n  // below is stateful, and needs to know how many platforms are on that day\n  // when it reads in the platform value.\n  if (csv.fieldnames.indexOf(col_platform) <= csv.fieldnames.indexOf(col_day)) {\n    const e = getString(\"error.csv-day-platform-order\", language);\n    return e.replace(\"{day}\", col_day).replace(\"{platform}\", col_platform);\n  }\n\n  // The caller needs to update this field on the state later, if successful.\n  let nextEntryId = state.registration.nextEntryId;\n  const entries: Array<Entry> = [];\n\n  const errprefix_template = getString(\"error.csv-field-prefix\", language);\n\n  // The fieldnames are valid! Now we can start building Entries.\n  for (let i = 0; i < csv.rows.length; ++i) {\n    const entry: Entry = newDefaultEntry(nextEntryId++);\n    entries.push(entry);\n\n    // Iterate over each field and integrate it into the Entry object.\n    const row: Array<string> = csv.rows[i];\n    for (let j = 0; j < row.length; ++j) {\n      const fieldname = csv.fieldnames[j];\n      const val = row[j];\n\n      // User-visible row number, for error messages.\n      // The first row is for the fieldnames, and spreadsheet programs are 1-indexed.\n      const rowstr = displayNumber(i + 2, language);\n\n      // Start building the error string early, since it's repeated a lot.\n      const errprefix = errprefix_template\n        .replace(\"{cellType}\", fieldname)\n        .replace(\"{cellValue}\", val)\n        .replace(\"{rowNumber}\", rowstr);\n\n      if (fieldname === col_day) {\n        // Default to 1.\n        if (val === \"\") {\n          entry.day = 1;\n        } else {\n          const integer = parseInteger(val);\n\n          // Must be an integer.\n          if (typeof integer !== \"number\") {\n            return errprefix + getString(\"error.csv-field-suffix-integer\", language);\n          }\n\n          // Can't be less than one: there's always at least one day.\n          if (integer < 1) {\n            return errprefix + getString(\"error.csv-field-suffix-positive\", language);\n          }\n\n          // Can't be greater than the number of days specified in the GlobalState.\n          const numDays = state.meet.lengthDays;\n          if (integer > numDays) {\n            const e = getString(\"error.csv-field-suffix-day-overflow\", language);\n            return errprefix + e.replace(\"{numDays}\", String(numDays));\n          }\n\n          // All checks passed!\n          entry.day = integer;\n        }\n      } else if (fieldname === col_platform) {\n        // Default to 1.\n        if (val === \"\") {\n          entry.platform = 1;\n        } else {\n          const integer = parseInteger(val);\n\n          // Must be an integer.\n          if (typeof integer !== \"number\") {\n            return errprefix + getString(\"error.csv-field-suffix-integer\", language);\n          }\n\n          // Can't be less than one: there's always at least one platform.\n          if (integer < 1) {\n            return errprefix + getString(\"error.csv-field-suffix-positive\", language);\n          }\n\n          // Can't be greater than the number of platforms specified in the GlobalState.\n          // The \"Day\" column is guaranteed to already have been parsed: code above\n          // makes sure the \"Day\" column is before the \"Platform\" column.\n          const day = entry.day;\n          const platforms = state.meet.platformsOnDays[day];\n          if (integer > platforms) {\n            const e = getString(\"error.csv-field-suffix-platform-overflow\", language);\n            return errprefix + e.replace(\"{dayNumber}\", String(day)).replace(\"{numPlatforms}\", String(platforms));\n          }\n\n          // All checks passed!\n          entry.platform = integer;\n        }\n      } else if (fieldname === col_flight) {\n        // Default to A.\n        if (val === \"\") {\n          entry.flight = \"A\";\n        } else {\n          try {\n            entry.flight = delocalizeFlight(val, language);\n          } catch (err) {\n            return errprefix + getString(\"error.csv-field-suffix-flight-invalid\", language);\n          }\n        }\n      } else if (fieldname === col_name) {\n        if (val === \"\") {\n          return errprefix + getString(\"error.csv-field-suffix-name-blank\", language);\n        }\n        entry.name = val;\n      } else if (fieldname === col_sex) {\n        try {\n          entry.sex = delocalizeSex(val, language);\n        } catch (err) {\n          const e = getString(\"error.csv-field-suffix-sex-invalid\", language);\n          const m = getString(\"sex.m\", language);\n          const f = getString(\"sex.f\", language);\n          const mx = getString(\"sex.mx\", language);\n          return errprefix + e.replace(\"{M}\", m).replace(\"{F}\", f).replace(\"{Mx}\", mx);\n        }\n      } else if (fieldname === col_equipment) {\n        try {\n          entry.equipment = delocalizeEquipment(val, language);\n        } catch (err) {\n          const e = getString(\"error.csv-field-suffix-equipment-invalid\", language);\n          const bare = getString(\"equipment.bare\", language);\n          const sleeves = getString(\"equipment.sleeves\", language);\n          const wraps = getString(\"equipment.wraps\", language);\n          const single = getString(\"equipment.single-ply\", language);\n          const multi = getString(\"equipment.multi-ply\", language);\n          return (\n            errprefix +\n            e\n              .replace(\"{bare}\", bare)\n              .replace(\"{sleeves}\", sleeves)\n              .replace(\"{wraps}\", wraps)\n              .replace(\"{single}\", single)\n              .replace(\"{multi}\", multi)\n          );\n        }\n      } else if (\n        fieldname === col_division1 ||\n        fieldname === col_division2 ||\n        fieldname === col_division3 ||\n        fieldname === col_division4 ||\n        fieldname === col_division5\n      ) {\n        if (val === \"\") {\n          // Only the first Division is mandatory.\n          if (fieldname === col_division1) {\n            return errprefix + getString(\"error.csv-field-suffix-division-blank\", language);\n          }\n        } else {\n          // Check that it appears as a valid division.\n          if (!state.meet.divisions.includes(val)) {\n            return errprefix + getString(\"error.csv-field-suffix-division-invalid\", language);\n          }\n\n          // Check that it wasn't already added.\n          if (entry.divisions.includes(val)) {\n            return errprefix + getString(\"error.csv-field-suffix-division-duplicate\", language);\n          }\n\n          entry.divisions.push(val);\n        }\n      } else if (\n        fieldname === col_event1 ||\n        fieldname === col_event2 ||\n        fieldname === col_event3 ||\n        fieldname === col_event4 ||\n        fieldname === col_event5\n      ) {\n        if (val === \"\") {\n          // Only the first Event is mandatory.\n          if (fieldname === col_event1) {\n            return errprefix + getString(\"error.csv-field-suffix-event-blank\", language);\n          }\n        } else {\n          try {\n            const evt = delocalizeEvent(val, language);\n\n            // Check for duplicates.\n            if (entry.events.includes(evt)) {\n              return errprefix + getString(\"error.csv-field-suffix-event-duplicate\", language);\n            }\n            entry.events.push(evt);\n          } catch (err) {\n            const e = getString(\"error.csv-field-suffix-event-invalid\", language);\n            const sbd = getString(\"event.sbd\", language);\n            const bd = getString(\"event.bd\", language);\n            const sb = getString(\"event.sb\", language);\n            const sd = getString(\"event.sd\", language);\n            const s = getString(\"event.s\", language);\n            const b = getString(\"event.b\", language);\n            const d = getString(\"event.d\", language);\n            return (\n              errprefix +\n              e\n                .replace(\"{SBD}\", sbd)\n                .replace(\"{BD}\", bd)\n                .replace(\"{SB}\", sb)\n                .replace(\"{SD}\", sd)\n                .replace(\"{S}\", s)\n                .replace(\"{B}\", b)\n                .replace(\"{D}\", d)\n            );\n          }\n        }\n      } else if (fieldname === col_birthdate) {\n        // BirthDate is optional.\n        if (val !== \"\") {\n          const bd = parseEuropeanDate(val);\n          if (typeof bd !== \"string\") {\n            return errprefix + getString(\"error.csv-field-suffix-date-format\", language);\n          }\n\n          entry.birthDate = bd;\n        }\n      } else if (fieldname === col_age) {\n        // Age is optional.\n        if (val !== \"\") {\n          const integer = parseInteger(val);\n          if (typeof integer !== \"number\" || integer < 1) {\n            return errprefix + getString(\"error.csv-field-empty-or-positive\", language);\n          }\n\n          // All checks passed!\n          entry.age = integer;\n        }\n      } else if (fieldname === col_squatRackInfo) {\n        entry.squatRackInfo = val;\n      } else if (fieldname === col_benchRackInfo) {\n        entry.benchRackInfo = val;\n      } else if (fieldname === col_memberid) {\n        entry.memberId = val;\n      } else if (fieldname === col_country) {\n        entry.country = val;\n      } else if (fieldname === col_state) {\n        entry.state = val;\n      } else if (fieldname === col_lot) {\n        // Empty strings are allowed: just doesn't use lots.\n        if (val !== \"\") {\n          const integer = parseInteger(val);\n          if (typeof integer !== \"number\" || integer < 1) {\n            return errprefix + getString(\"error.csv-field-empty-or-positive\", language);\n          }\n\n          // All checks passed!\n          entry.lot = integer;\n        }\n      } else if (fieldname === col_guest) {\n        if (val === getString(\"common.response-yes\", language)) {\n          entry.guest = true;\n        } else if (val === getString(\"common.response-no\", language)) {\n          entry.guest = false;\n        } else if (val === \"\") {\n          entry.guest = false;\n        } else {\n          const e = getString(\"error.csv-field-unknown-boolean\", language);\n          const yes = getString(\"common.response-yes\", language);\n          const no = getString(\"common.response-no\", language);\n          return errprefix + e.replace(\"{Yes}\", yes).replace(\"{No}\", no);\n        }\n      } else if (fieldname === col_team) {\n        entry.team = val;\n      } else if (fieldname === col_instagram) {\n        entry.instagram = val;\n      } else if (fieldname === col_notes) {\n        entry.notes = val;\n      } else {\n        return 'Missing handler for the \"' + fieldname + '\" column';\n      }\n    }\n  }\n\n  return entries;\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Container for the Registration page.\n\nimport React from \"react\";\n\nimport RegistrationView from \"../components/registration/RegistrationView\";\nimport styles from \"../components/common/ContentArea.module.scss\";\n\nclass RegistrationContainer extends React.Component<{}> {\n  render() {\n    return (\n      <div className={styles.contentArea}>\n        <RegistrationView />\n      </div>\n    );\n  }\n}\n\nexport default RegistrationContainer;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Table from \"react-bootstrap/Table\";\n\nimport { getString } from \"../../logic/strings\";\n\nimport { Entry, Language } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\n\ninterface OwnProps {\n  entries: Array<Entry>;\n  rowRenderer: any;\n  inLiftingPage?: boolean;\n}\n\ninterface StateProps {\n  inKg: boolean;\n  language: Language;\n}\n\ntype Props = OwnProps & StateProps;\n\nclass LifterTable extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n    this.renderRows = this.renderRows.bind(this);\n    this.renderHeader = this.renderHeader.bind(this);\n  }\n\n  renderRows = () => {\n    const LifterRow = this.props.rowRenderer;\n    const { entries } = this.props;\n    const inLiftingPage = this.props.inLiftingPage === true;\n\n    return entries.map((entry) => <LifterRow key={entry.id} id={entry.id} inLiftingPage={inLiftingPage} />);\n  };\n\n  renderHeader = () => {\n    // Styling for small, single-character selector columns.\n    const shortStyle = { width: \"85px\" };\n\n    const inKg = this.props.inKg;\n\n    const bodyweightId = inKg ? \"weigh-ins.bodyweight-header-kg\" : \"weigh-ins.bodyweight-header-lbs\";\n    const squatId = inKg ? \"weigh-ins.squat-header-kg\" : \"weigh-ins.squat-header-lbs\";\n    const benchId = inKg ? \"weigh-ins.bench-header-kg\" : \"weigh-ins.bench-header-lbs\";\n    const deadliftId = inKg ? \"weigh-ins.deadlift-header-kg\" : \"weigh-ins.deadlift-header-lbs\";\n\n    return (\n      <tr>\n        <th style={shortStyle}>\n          <FormattedMessage id=\"weigh-ins.platform-header\" defaultMessage=\"Platform\" />\n        </th>\n        <th style={shortStyle}>\n          <FormattedMessage id=\"weigh-ins.platform-flight\" defaultMessage=\"Flight\" />\n        </th>\n        <th>{getString(\"lifting.column-lifter\", this.props.language)}</th>\n\n        <th style={shortStyle}>{getString(\"common.age\", this.props.language)}</th>\n        <th style={shortStyle}>{getString(bodyweightId, this.props.language)}</th>\n        <th style={shortStyle}>\n          <FormattedMessage id=\"weigh-ins.squat-rack-header\" defaultMessage=\"Squat Rack\" />\n        </th>\n        <th style={shortStyle}>{getString(squatId, this.props.language)}</th>\n        <th style={shortStyle}>\n          <FormattedMessage id=\"weigh-ins.bench-rack-header\" defaultMessage=\"Bench Rack\" />\n        </th>\n        <th style={shortStyle}>{getString(benchId, this.props.language)}</th>\n        <th style={shortStyle}>{getString(deadliftId, this.props.language)}</th>\n      </tr>\n    );\n  };\n\n  render() {\n    return (\n      <Table hover size=\"sm\" style={{ margin: \"0px\" }}>\n        <thead>{this.renderHeader()}</thead>\n        <tbody>{this.renderRows()}</tbody>\n      </Table>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  inKg: state.meet.inKg,\n  language: state.language,\n});\n\nexport default connect(mapStateToProps)(LifterTable);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport {\n  EnterAttemptAction,\n  MarkLiftAction,\n  SetLiftingGroupAction,\n  OverrideAttemptAction,\n  OverrideEntryIdAction,\n  SetTableInfoAction,\n} from \"../types/actionTypes\";\nimport { Flight, Lift } from \"../types/dataTypes\";\nimport { LiftingState } from \"../types/stateTypes\";\n\n// Sets a weightKg that doesn't have a good/failed value, for entering in attempts.\nexport const enterAttempt = (\n  entryId: number,\n  lift: Lift,\n  attemptOneIndexed: number,\n  weightKg: number\n): EnterAttemptAction => {\n  return {\n    type: \"ENTER_ATTEMPT\",\n    entryId: entryId,\n    lift: lift,\n    attemptOneIndexed: attemptOneIndexed,\n    weightKg: weightKg,\n  };\n};\n\n// Marks a lift \"good\" or \"failed\".\n//\n// entryId is the ID of the affected entry, a Number.\n// lift is \"S\", \"B\", or \"D\".\n// attempt is 1,2,3, etc., up to MAX_ATTEMPTS.\n// success is a bool for whether to mark the lift as a success or as a failure.\nexport const markLift = (entryId: number, lift: Lift, attemptOneIndexed: number, success: boolean): MarkLiftAction => {\n  return {\n    type: \"MARK_LIFT\",\n    entryId: entryId,\n    lift: lift,\n    attemptOneIndexed: attemptOneIndexed,\n    success: success,\n  };\n};\n\n// Sets the current group of lifters.\n// This is always manually set by the score table.\nexport const setLiftingGroup = (day: number, platform: number, flight: Flight, lift: Lift): SetLiftingGroupAction => {\n  return {\n    type: \"SET_LIFTING_GROUP\",\n    day: day,\n    platform: platform,\n    flight: flight,\n    lift: lift,\n  };\n};\n\n// Overrides the calculated meet progress logic by forcing display of an attempt,\n// even if it has already been marked \"good lift\" or \"no lift\".\nexport const overrideAttempt = (attempt: number): OverrideAttemptAction => {\n  return {\n    type: \"OVERRIDE_ATTEMPT\",\n    attempt: attempt,\n  };\n};\n\n// Overrides the calculated meet progress logic by forcing display of a specific lifter,\n// even if they have already had their attempt entered.\nexport const overrideEntryId = (entryId: number): OverrideEntryIdAction => {\n  return {\n    type: \"OVERRIDE_ENTRY_ID\",\n    entryId: entryId,\n  };\n};\n\n// Updates arbitrary fields in the LiftingState.\n//\n// The intention is to use action just for table customization: things like\n// column widths, column visibility, and other such options.\n//\n// Having this interface lets us keep the number of actions low: separate\n// actions for each kind of modification is not really useful.\nexport const setTableInfo = (obj: Partial<LiftingState>): SetTableInfoAction => {\n  return {\n    type: \"SET_TABLE_INFO\",\n    changes: obj,\n  };\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines an input of a single weight, during configuration.\n// Since it's for configuration, it doesn't have an associated success/failure value.\n//\n// For consistency purposes, weights are always stored in kg.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport FormControl from \"react-bootstrap/FormControl\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\n\nimport { updateRegistration } from \"../../actions/registrationActions\";\nimport { enterAttempt } from \"../../actions/liftingActions\";\n\nimport { liftToAttemptFieldName } from \"../../logic/entry\";\nimport { kg2lbs, lbs2kg, string2number, displayWeight } from \"../../logic/units\";\n\nimport { Entry, Language, Lift, Validation } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { assertString } from \"../../types/utils\";\nimport { Dispatch } from \"redux\";\n\ninterface OwnProps {\n  id: number; // The EntryID.\n\n  // The valid type here should be all keys of Entry where the value is a number\n  // Something like keyof<Partial> where (key,value) => typeof value === Number - if that is possible in typescript?\n  // Otherwise manually specifying all the valid keys of Entry is a fair approach too!\n  field?: \"bodyweightKg\";\n  disabled: boolean;\n\n  // Optional attributes used only for lifts (as opposed to for bodyweights).\n  placeholder?: string;\n  lift?: Lift;\n  attemptOneIndexed?: number;\n  multipleOf?: number;\n}\n\ninterface StateProps {\n  inKg: boolean;\n  weightKg: number;\n  language: Language;\n}\n\ninterface DispatchProps {\n  updateRegistration: (entryId: number, obj: Partial<Entry>) => void;\n  enterAttempt: (entryId: number, lift: Lift, attemptOneIndexed: number, weightKg: number) => void;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\ninterface InternalState {\n  weightStr: string;\n}\n\nclass WeightInput extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n    this.validate = this.validate.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n\n    let weight = this.props.weightKg;\n    if (!this.props.inKg) {\n      weight = kg2lbs(weight);\n    }\n\n    // Internal state, for purposes of validation.\n    // To avoid confusion (auto-rounding) when typing, just store a String.\n    this.state = {\n      // Prefer displaying an empty string to 0.0.\n      weightStr: weight === 0.0 ? \"\" : displayWeight(weight, props.language),\n    };\n  }\n\n  validate = (): Validation => {\n    const weightNum = string2number(this.state.weightStr);\n    if (isNaN(weightNum) || weightNum < 0) return \"error\";\n    if (this.props.multipleOf !== undefined && weightNum % this.props.multipleOf !== 0.0) {\n      return \"warning\";\n    }\n    if (this.state.weightStr.length > 0) return \"success\";\n    return null;\n  };\n\n  // Update the internal state, used for validation.\n  handleChange = (event: React.BaseSyntheticEvent) => {\n    const weightStr = event.currentTarget.value;\n    if (assertString(weightStr)) {\n      this.setState({ weightStr: weightStr });\n    }\n  };\n\n  // Update the Redux store.\n  handleBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n    const weightNum = string2number(event.currentTarget.value);\n\n    if (this.validate() === \"error\") {\n      return;\n    }\n\n    const weightKg = this.props.inKg ? weightNum : lbs2kg(weightNum);\n    if (this.props.weightKg === weightKg) {\n      return;\n    }\n\n    // If \"attempt\" is set, a specific attempt is selected.\n    if (this.props.attemptOneIndexed !== undefined && this.props.lift !== undefined) {\n      const attemptOneIndexed = this.props.attemptOneIndexed;\n      const lift = this.props.lift;\n      this.props.enterAttempt(this.props.id, lift, attemptOneIndexed, weightKg);\n    } else if (this.props.field !== undefined) {\n      // Otherwise, the field is a Number.\n      const newfields: Partial<Entry> = {};\n      newfields[this.props.field] = weightKg;\n      this.props.updateRegistration(this.props.id, newfields);\n    }\n  };\n\n  render() {\n    // FormGroup provides a default padding of 15, but FormGroup is only being\n    // used here to accept a validationState. It's not really a group.\n    const undoDefaultPadding = { marginBottom: \"0\" };\n    const validation: Validation = this.validate();\n\n    return (\n      <FormGroup style={undoDefaultPadding}>\n        <FormControl\n          disabled={this.props.disabled}\n          placeholder={this.props.placeholder}\n          type=\"text\"\n          value={this.state.weightStr}\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n          isValid={validation === \"success\"}\n          isInvalid={validation === \"error\"}\n          className={validation === \"warning\" ? \"is-warning\" : undefined}\n        />\n      </FormGroup>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState, ownProps: OwnProps): StateProps => {\n  // Only have props for the entry corresponding to this one row.\n  const lookup = state.registration.lookup;\n  const entry = state.registration.entries[lookup[ownProps.id]];\n\n  // If `field` is set, then read the Number from the given field name.\n  let weightKg = 0.0;\n  if (ownProps.field !== undefined) {\n    weightKg = entry[ownProps.field];\n  } else if (ownProps.lift !== undefined && ownProps.attemptOneIndexed !== undefined) {\n    // Otherwise, refer to a specific lift and attempt.\n    const lift = ownProps.lift;\n    const attemptOneIndexed = ownProps.attemptOneIndexed;\n    const field = liftToAttemptFieldName(lift);\n    weightKg = entry[field][attemptOneIndexed - 1];\n  }\n\n  return {\n    inKg: state.meet.inKg,\n    weightKg: weightKg,\n    language: state.language,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    updateRegistration: (entryId, obj) => dispatch(updateRegistration(entryId, obj)),\n    enterAttempt: (entryId, lift, attemptOneIndexed, weightKg) =>\n      dispatch(enterAttempt(entryId, lift, attemptOneIndexed, weightKg)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeightInput);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines a row in the LifterTable on the Weigh-ins page.\n// This provides a bunch of widgets, each of which correspond to\n// the state of a single entry.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport FormControl from \"react-bootstrap/FormControl\";\n\nimport ValidatedInput from \"../ValidatedInput\";\nimport WeightInput from \"./WeightInput\";\n\nimport { getAge } from \"../../logic/entry\";\nimport { getString, localizeFlight } from \"../../logic/strings\";\nimport { displayNumber } from \"../../logic/units\";\nimport { validatePositiveInteger } from \"../../validation/positiveInteger\";\n\nimport { updateRegistration } from \"../../actions/registrationActions\";\n\nimport { Entry, Language, Validation } from \"../../types/dataTypes\";\nimport { GlobalState, MeetState } from \"../../types/stateTypes\";\nimport { Dispatch } from \"redux\";\nimport { assertFlight, assertString } from \"../../types/utils\";\n\ninterface OwnProps {\n  id: number;\n  inLiftingPage?: boolean;\n}\n\ninterface StateProps {\n  meet: MeetState;\n  entry: Entry;\n  language: Language;\n}\n\ninterface DispatchProps {\n  updateRegistration: (entryId: number, obj: Partial<Entry>) => void;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nclass LifterRow extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n    this.updateRegistrationFlight = this.updateRegistrationFlight.bind(this);\n    this.updateRegistrationSquatRackInfo = this.updateRegistrationSquatRackInfo.bind(this);\n    this.updateRegistrationBenchRackInfo = this.updateRegistrationBenchRackInfo.bind(this);\n    this.updateRegistrationAge = this.updateRegistrationAge.bind(this);\n  }\n\n  updateRegistrationFlight = (event: React.BaseSyntheticEvent) => {\n    const flight = event.currentTarget.value;\n    if (this.props.entry.flight !== flight && assertString(flight) && assertFlight(flight)) {\n      this.props.updateRegistration(this.props.id, { flight: flight });\n    }\n  };\n\n  updateRegistrationSquatRackInfo = (value: string) => {\n    if (this.props.entry.squatRackInfo !== value) {\n      this.props.updateRegistration(this.props.id, { squatRackInfo: value });\n    }\n  };\n\n  updateRegistrationBenchRackInfo = (value: string) => {\n    if (this.props.entry.benchRackInfo !== value) {\n      this.props.updateRegistration(this.props.id, { benchRackInfo: value });\n    }\n  };\n\n  updateRegistrationAge = (value: string) => {\n    const age: number = value === \"\" ? 0 : Number(value);\n    if (this.props.entry.age !== age) {\n      this.props.updateRegistration(this.props.id, { age: age });\n    }\n  };\n\n  validateAge = (value?: string): Validation => {\n    if (value === \"\") return null;\n\n    const pos: Validation = validatePositiveInteger(value);\n    if (pos === \"success\") {\n      // Complain a little if the age is implausible.\n      const n = Number(value);\n      if (n <= 4 || n > 100) return \"warning\";\n    }\n    return pos;\n  };\n\n  validateRack = (value?: string): Validation => {\n    if (value === \"\") return null;\n    return \"success\";\n  };\n\n  render() {\n    const language = this.props.language;\n    const entry = this.props.entry;\n\n    // Check whether the event(s) include a given lift.\n    let hasSquat = false;\n    let hasBench = false;\n    let hasDeadlift = false;\n    for (let i = 0; i < entry.events.length; i++) {\n      const event = entry.events[i];\n      if (event.includes(\"S\")) {\n        hasSquat = true;\n      }\n      if (event.includes(\"B\")) {\n        hasBench = true;\n      }\n      if (event.includes(\"D\")) {\n        hasDeadlift = true;\n      }\n    }\n\n    // Check whether the first attempt already occurred.\n    const disableSquatWeight = !hasSquat || entry.squatStatus[0] !== 0;\n    const disableBenchWeight = !hasBench || entry.benchStatus[0] !== 0;\n    const disableDeadliftWeight = !hasDeadlift || entry.deadliftStatus[0] !== 0;\n\n    // Only show the Flight selector if the Weigh-ins page is non-embedded.\n    let flight: string | JSX.Element = localizeFlight(entry.flight, language);\n    if (this.props.inLiftingPage !== true) {\n      // Can be undefined.\n      flight = (\n        <FormControl\n          value={entry.flight}\n          as=\"select\"\n          onChange={this.updateRegistrationFlight}\n          className=\"custom-select\"\n        >\n          <option value=\"A\">{getString(\"flight.a\", language)}</option>\n          <option value=\"B\">{getString(\"flight.b\", language)}</option>\n          <option value=\"C\">{getString(\"flight.c\", language)}</option>\n          <option value=\"D\">{getString(\"flight.d\", language)}</option>\n          <option value=\"E\">{getString(\"flight.e\", language)}</option>\n          <option value=\"F\">{getString(\"flight.f\", language)}</option>\n          <option value=\"G\">{getString(\"flight.g\", language)}</option>\n          <option value=\"H\">{getString(\"flight.h\", language)}</option>\n          <option value=\"I\">{getString(\"flight.i\", language)}</option>\n          <option value=\"J\">{getString(\"flight.j\", language)}</option>\n          <option value=\"K\">{getString(\"flight.k\", language)}</option>\n          <option value=\"L\">{getString(\"flight.l\", language)}</option>\n          <option value=\"M\">{getString(\"flight.m\", language)}</option>\n          <option value=\"N\">{getString(\"flight.n\", language)}</option>\n          <option value=\"O\">{getString(\"flight.o\", language)}</option>\n          <option value=\"P\">{getString(\"flight.p\", language)}</option>\n        </FormControl>\n      );\n    }\n\n    const age = getAge(entry, this.props.meet.date);\n    const ageStr = age === 0 ? getString(\"common.age\", language) : displayNumber(age, language);\n\n    return (\n      <tr>\n        <td>{entry.platform}</td>\n        <td>{flight}</td>\n        <td>{entry.name}</td>\n\n        <td>\n          <ValidatedInput\n            initialValue={entry.age === 0 ? \"\" : displayNumber(entry.age, language)}\n            placeholder={ageStr}\n            validate={this.validateAge}\n            onSuccess={this.updateRegistrationAge}\n          />\n        </td>\n\n        <td>\n          <WeightInput\n            id={this.props.id}\n            field=\"bodyweightKg\"\n            placeholder={getString(\"weigh-ins.bodyweight-placeholder\", language)}\n            disabled={false}\n          />\n        </td>\n\n        <td>\n          <ValidatedInput\n            initialValue={entry.squatRackInfo}\n            placeholder={hasSquat ? getString(\"weigh-ins.squat-rack-placeholder\", language) : undefined}\n            disabled={!hasSquat}\n            validate={this.validateRack}\n            onSuccess={this.updateRegistrationSquatRackInfo}\n          />\n        </td>\n\n        <td>\n          <WeightInput\n            id={this.props.id}\n            lift=\"S\"\n            multipleOf={2.5}\n            attemptOneIndexed={1}\n            placeholder={hasSquat ? getString(\"weigh-ins.squat-placeholder\", language) : undefined}\n            disabled={disableSquatWeight}\n          />\n        </td>\n\n        <td>\n          <ValidatedInput\n            initialValue={entry.benchRackInfo}\n            placeholder={hasBench ? getString(\"weigh-ins.bench-rack-placeholder\", language) : undefined}\n            disabled={!hasBench}\n            validate={this.validateRack}\n            onSuccess={this.updateRegistrationBenchRackInfo}\n          />\n        </td>\n\n        <td>\n          <WeightInput\n            id={this.props.id}\n            lift=\"B\"\n            multipleOf={2.5}\n            attemptOneIndexed={1}\n            placeholder={hasBench ? getString(\"weigh-ins.bench-placeholder\", language) : undefined}\n            disabled={disableBenchWeight}\n          />\n        </td>\n\n        <td>\n          <WeightInput\n            id={this.props.id}\n            lift=\"D\"\n            multipleOf={2.5}\n            attemptOneIndexed={1}\n            placeholder={hasDeadlift ? getString(\"weigh-ins.deadlift-placeholder\", language) : undefined}\n            disabled={disableDeadliftWeight}\n          />\n        </td>\n      </tr>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState, ownProps: OwnProps): StateProps => {\n  // Only have props for the entry corresponding to this one row.\n  const lookup = state.registration.lookup;\n  const entry = state.registration.entries[lookup[ownProps.id]];\n\n  return {\n    meet: state.meet,\n    entry: entry,\n    language: state.language,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    updateRegistration: (entryId: number, obj: Partial<Entry>) => dispatch(updateRegistration(entryId, obj)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LifterRow);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// The parent component of the Weigh-ins page, contained by the WeighinsContainer.\n// The Weigh-ins page updates more information in the Registration state.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Card from \"react-bootstrap/Card\";\n\nimport { getLiftersOnDay } from \"../../logic/entry\";\nimport LifterTable from \"./LifterTable\";\nimport LifterRow from \"./LifterRow\";\n\nimport { Entry } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\n\n// For use when embedded inside the Lifting page.\ninterface OwnProps {\n  day?: number;\n  platform?: number;\n  inLiftingPage?: boolean; // The weigh-ins page can be embedded.\n}\n\ninterface StateProps {\n  entries: ReadonlyArray<Entry>;\n}\n\ntype Props = Readonly<OwnProps> & Readonly<StateProps>;\n\nclass WeighinsView extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n    this.getNumDaysFromEntries = this.getNumDaysFromEntries.bind(this);\n  }\n\n  // Figure out how many days there are by looking at the entries themselves.\n  //\n  // The meet page information may be unreliable: someone might have created\n  // a second day, added a lifter to it, then removed the second day without\n  // yet updating that lifter.\n  //\n  // This is an attempt to make that error more obvious, so it can be corrected.\n  getNumDaysFromEntries = () => {\n    let max_day = 0;\n    const entries = this.props.entries;\n    for (let i = 0; i < entries.length; i++) {\n      const entry = entries[i];\n      if (entry.day > max_day) {\n        max_day = entry.day;\n      }\n    }\n    return max_day;\n  };\n\n  render() {\n    // Determine whether this is being shown embedded in the Lifting page.\n    const inLiftingPage = this.props.inLiftingPage === true;\n\n    // Make a separate panel for each day.\n    const numDays = this.getNumDaysFromEntries();\n    const dayCards = [];\n    for (let i = 1; i <= numDays; i++) {\n      const lifters = getLiftersOnDay(this.props.entries, i);\n\n      // Skip if the OwnProps excluded this selection.\n      if (lifters.length === 0) {\n        continue;\n      }\n\n      // Present the lifters in sorted order.\n      lifters.sort((a, b) => {\n        if (a.platform !== b.platform) return a.platform - b.platform;\n        if (a.flight !== b.flight) return a.flight < b.flight ? -1 : 1;\n        if (a.name < b.name) return -1;\n        if (a.name > b.name) return 1;\n        return 0;\n      });\n\n      dayCards.push(\n        <Card key={i} style={{ marginBottom: \"17px\" }}>\n          <Card.Header>\n            <FormattedMessage\n              id=\"weigh-ins.day-header\"\n              defaultMessage=\"Day {dayNumber} Weigh-ins\"\n              values={{ dayNumber: i }}\n            />\n          </Card.Header>\n          <Card.Body>\n            <LifterTable entries={lifters} rowRenderer={LifterRow} inLiftingPage={inLiftingPage} />\n          </Card.Body>\n        </Card>\n      );\n    }\n\n    // If there are no days thus far, show a default warning panel.\n    if (dayCards.length === 0) {\n      dayCards.push(\n        <Card key={0}>\n          <Card.Header>\n            <FormattedMessage id=\"weigh-ins.empty-header\" defaultMessage=\"Waiting for Registration\" />\n          </Card.Header>\n          <Card.Body>\n            <FormattedMessage\n              id=\"weigh-ins.empty-body\"\n              defaultMessage=\"Add lifters on the Registration page before weighing them in.\"\n            />\n          </Card.Body>\n        </Card>\n      );\n    }\n\n    return <div>{dayCards}</div>;\n  }\n}\n\nconst mapStateToProps = (state: GlobalState, ownProps: OwnProps): StateProps => {\n  const { day, platform } = ownProps;\n  let entries = state.registration.entries;\n\n  // Filter if requested by the OwnProps.\n  if (typeof day === \"number\" && typeof platform === \"number\") {\n    entries = entries.filter((e) => e.day === day && e.platform === platform);\n  }\n\n  return { entries };\n};\n\nexport default connect(mapStateToProps)(WeighinsView);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Container for the Weighins page.\n\nimport React from \"react\";\n\nimport WeighinsView from \"../components/weighins/WeighinsView\";\nimport styles from \"../components/common/ContentArea.module.scss\";\n\nclass WeighinsContainer extends React.Component<{}> {\n  render() {\n    return (\n      <div className={styles.contentArea}>\n        <WeighinsView />\n      </div>\n    );\n  }\n}\n\nexport default WeighinsContainer;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { kg2lbs, displayWeight } from \"../logic/units\";\n\nimport { PlateColors } from \"../constants/plateColors\";\n\nimport { Plate, LoadedPlate } from \"../types/dataTypes\";\n\n// Convert from kg to lbs with rounding to 2 decimal places.\n// It's OK that this is slow, since it rarely executes.\nconst safeKg2Lbs = (kg: number): number => {\n  return Number(displayWeight(kg2lbs(kg)));\n};\n\n// Returns a list of plate weights in loading order.\n// Any unloadable remainder is reported as a final number with a negative value.\nexport const selectPlates = (\n  loadingKg: number,\n  barAndCollarsWeightKg: number,\n  plates: ReadonlyArray<Plate>,\n  inKg: boolean\n): Array<LoadedPlate> => {\n  // Flow doesn't like it when arguments get redefined.\n  let loadingAny = loadingKg;\n  let barAndCollarsWeightAny = barAndCollarsWeightKg;\n  let platesAny = plates;\n\n  // Convert to pounds, avoiding floating point errors.\n  if (inKg === false) {\n    loadingAny = safeKg2Lbs(loadingKg);\n    barAndCollarsWeightAny = safeKg2Lbs(barAndCollarsWeightKg);\n    platesAny = plates.map((x) => ({ ...x, weightKg: safeKg2Lbs(x.weightKg) }));\n  }\n\n  // Sort a copy of the platesAny array by descending weight.\n  const sortedPlates = platesAny.slice().sort((a, b) => {\n    return b.weightKg - a.weightKg;\n  });\n\n  let sideWeightKg = (loadingAny - barAndCollarsWeightAny) / 2;\n  const loading: Array<LoadedPlate> = [];\n\n  // Run through each plate in order, applying as many of that plate as will fit.\n  for (let i = 0; i < sortedPlates.length; i++) {\n    const weightKg = sortedPlates[i].weightKg;\n    const color = sortedPlates[i].color;\n    let pairCount = sortedPlates[i].pairCount;\n    while (pairCount > 0 && weightKg <= sideWeightKg) {\n      pairCount--;\n      sideWeightKg -= weightKg;\n      loading.push({ weightAny: weightKg, isAlreadyLoaded: false, color: color });\n    }\n  }\n\n  // Report any remainder as a negative number.\n  if (sideWeightKg > 0) {\n    loading.push({ weightAny: -sideWeightKg, isAlreadyLoaded: false, color: PlateColors.PLATE_DEFAULT_RED });\n  }\n  return loading;\n};\n\n// Helper function: like Array.findIndex(), but starting from a specific index.\nconst findWeightFrom = (loading: Array<LoadedPlate>, startFrom: number, weight: number): number => {\n  for (let i = startFrom; i < loading.length; i++) {\n    if (loading[i].weightAny === weight) return i;\n  }\n  return -1;\n};\n\n// Sets the 'isAlreadyLoaded' property of each LoadedPlate relative to another loading.\n//\n// Both 'loading' and 'relativeTo' are sorted in non-ascending order of weight.\nexport const makeLoadingRelative = (loading: Array<LoadedPlate>, relativeTo: Array<LoadedPlate>): void => {\n  let finger = 0; // Increasing index into the relativeTo array.\n\n  // For each plate in the loading, look for a matching plate in relativeTo[finger..].\n  // When found, move the finger past that point.\n  for (let i = 0; i < loading.length; i++) {\n    const loadedPlate = loading[i];\n    const index = findWeightFrom(relativeTo, finger, loadedPlate.weightAny);\n    if (index >= 0) {\n      finger = index + 1;\n      loadedPlate.isAlreadyLoaded = true;\n    }\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// This is the widget that gives a visual display of the weights on the bar,\n// used by the loading crew.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport { displayWeight } from \"../../logic/units\";\nimport { PlateColors } from \"../../constants/plateColors\";\n\nimport { Language, Lift, LoadedPlate } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\n\nimport styles from \"./BarLoad.module.scss\";\n\nconst kgToStyleMap = new Map<number, string>([\n  [50, styles.kg50],\n  [25, styles.kg25],\n  [20, styles.kg20],\n  [15, styles.kg15],\n  [10, styles.kg10],\n  [5, styles.kg5],\n  [2.5, styles.kg2p5],\n  [1.25, styles.kg1p25],\n  [1, styles.kg1],\n  [0.75, styles.kg0p75],\n  [0.5, styles.kg0p5],\n  [0.25, styles.kg0p25],\n]);\n\nconst weightKgToStyle = (weightKg: number): string => kgToStyleMap.get(weightKg) || styles.error;\n\nconst lbsToStyleMap = new Map<number, string>([\n  [100, styles.lbs100],\n  [55, styles.lbs55],\n  [45, styles.lbs45],\n  [35, styles.lbs35],\n  [25, styles.lbs25],\n  [10, styles.lbs10],\n  [5, styles.lbs5],\n  [2.5, styles.lbs2p5],\n  [1.25, styles.lbs1p25],\n  [0.5, styles.lbs0p5],\n]);\n\nconst weightLbsToStyle = (weightLbs: number): string => lbsToStyleMap.get(weightLbs) || styles.error;\n\nconst weightTextMap = new Map<number, string>([\n  [1.25, \"1¼\"],\n  [0.75, \"¾\"],\n  [0.5, \"½\"],\n  [0.25, \"¼\"],\n]);\n\nconst weightAnyToText = (weightAny: number, language: Language): string =>\n  weightTextMap.get(weightAny) || displayWeight(weightAny, language);\n\ninterface PlateInfoProps {\n  loading: LoadedPlate[];\n  inKg: boolean;\n  language: Language;\n}\n\n// Turns the selectPlates() array into divs.\nconst PlatesDiv: React.FC<PlateInfoProps> = ({ loading, inKg, language }) => {\n  const divs = [];\n  let i = 0;\n\n  // Iterate on a group of plates of the same weight at a time.\n  while (i < loading.length) {\n    const weightAny = loading[i].weightAny;\n\n    // If the weight is negative, it's an error report.\n    if (weightAny < 0) {\n      divs.push(\n        <div key={\"error\"} className={styles.error}>\n          ?{displayWeight(-1 * weightAny, language)}\n        </div>\n      );\n      break;\n    }\n\n    // Count how many times this same plate kind appears consecutively.\n    let plateCount = 1;\n    for (let j = i + 1; j < loading.length && loading[j].weightAny === weightAny; j++) {\n      plateCount++;\n    }\n\n    // If that plate is large and occurs a bunch, show a counter.\n    const showCounter = plateCount >= 3;\n\n    // Push each of the plates individually.\n    for (let j = 0; j < plateCount; j++) {\n      const plate = loading[i + j];\n      const counter = String(j + 1);\n\n      // Light backgrounds need dark text.\n      const is_light =\n        plate.color === PlateColors.PLATE_DEFAULT_WHITE || plate.color === PlateColors.PLATE_DEFAULT_YELLOW;\n\n      const style = {\n        backgroundColor: plate.color,\n        opacity: plate.isAlreadyLoaded ? 0.25 : undefined,\n        color: is_light ? \"#232323\" : \"#FFFFFF\",\n        // White plates need a border.\n        border: plate.color === PlateColors.PLATE_DEFAULT_WHITE ? \"1.5px solid #232323\" : undefined,\n      };\n\n      divs.push(\n        <div\n          key={weightAny + \"-\" + counter}\n          className={inKg ? weightKgToStyle(weightAny) : weightLbsToStyle(weightAny)}\n          style={style}\n        >\n          <div>{weightAnyToText(weightAny, language)}</div>\n          {showCounter ? <div>{counter}</div> : null}\n        </div>\n      );\n    }\n\n    i += plateCount;\n  }\n\n  return <>{divs}</>;\n};\n\ninterface RackInfoProps {\n  lift: Lift;\n  rackInfo: string;\n}\n\nconst RackInfoDiv: React.FC<RackInfoProps> = ({ lift, rackInfo }) => {\n  // Only show rack info for lifts that use a rack.\n  if (lift === \"D\") return null;\n\n  return (\n    <div key={rackInfo} className={styles.rackInfo}>\n      <FormattedMessage\n        id=\"lifting.rack-info\"\n        defaultMessage=\"Rack {rackInfo}\"\n        values={{\n          rackInfo: rackInfo,\n        }}\n      />\n    </div>\n  );\n};\n\ninterface OwnProps {\n  loading: Array<LoadedPlate>;\n  rackInfo: string;\n  inKg: boolean;\n}\n\ninterface StateProps {\n  lift: Lift;\n  language: Language;\n}\n\ntype Props = OwnProps & StateProps;\n\nconst BarLoad: React.FC<Props> = ({ lift, loading, inKg, language, rackInfo }) => (\n  <div className={styles.container}>\n    <div className={styles.bar} />\n    <PlatesDiv loading={loading} inKg={inKg} language={language} />\n    <div className={styles.collar} />\n    <div className={styles.bar} />\n    <RackInfoDiv lift={lift} rackInfo={rackInfo} />\n  </div>\n);\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  lift: state.lifting.lift,\n  language: state.language,\n});\n\nexport default connect(mapStateToProps)(BarLoad);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// The left card on the lifting page, showing information about the current lifter\n// and helpful information for the loading crew.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport { selectPlates, makeLoadingRelative } from \"../../logic/barLoad\";\nimport { liftToAttemptFieldName } from \"../../logic/entry\";\nimport { getString } from \"../../logic/strings\";\nimport { kg2lbs, displayWeightOnePlace } from \"../../logic/units\";\n\nimport BarLoad from \"./BarLoad\";\n\nimport styles from \"./LeftCard.module.scss\";\n\nimport { Entry, Language, LoadedPlate, Plate } from \"../../types/dataTypes\";\nimport { GlobalState, LiftingState, RegistrationState } from \"../../types/stateTypes\";\n\ninterface OwnProps {\n  attemptOneIndexed: number;\n  orderedEntries: Array<Entry>;\n  currentEntryId: number | null;\n  nextEntryId: number | null;\n  nextAttemptOneIndexed: number | null;\n}\n\ninterface StateProps {\n  inKg: boolean;\n  showAlternateUnits: boolean;\n  squatBarAndCollarsWeightKg: number;\n  benchBarAndCollarsWeightKg: number;\n  deadliftBarAndCollarsWeightKg: number;\n  plates: ReadonlyArray<Plate>;\n  registration: RegistrationState;\n  lifting: LiftingState;\n  language: Language;\n}\n\ntype Props = OwnProps & StateProps;\n\ninterface BarLoadOptions {\n  weightKg: number;\n  weightLbs: number;\n  rackInfo: string;\n}\n\nclass LeftCard extends React.Component<Props> {\n  getBarLoadProps = (entryId: number | null, attemptOneIndexed: number | null): BarLoadOptions => {\n    const lift = this.props.lifting.lift;\n    const fieldKg = liftToAttemptFieldName(lift);\n\n    // Defaults, in case of no lifter.\n    if (entryId === null || entryId === undefined || attemptOneIndexed === null || attemptOneIndexed === undefined) {\n      return { weightKg: 0, weightLbs: 0, rackInfo: \"\" };\n    }\n\n    const idx = this.props.registration.lookup[entryId];\n    const entry = this.props.registration.entries[idx];\n\n    const weightKg = entry[fieldKg][attemptOneIndexed - 1];\n    const weightLbs = kg2lbs(weightKg);\n\n    let rackInfo = \"\";\n    if (lift === \"S\") rackInfo = entry.squatRackInfo;\n    if (lift === \"B\") rackInfo = entry.benchRackInfo;\n\n    return { weightKg, weightLbs, rackInfo };\n  };\n\n  getBarAndCollarsWeightKg = (): number => {\n    switch (this.props.lifting.lift) {\n      case \"S\":\n        return this.props.squatBarAndCollarsWeightKg;\n      case \"B\":\n        return this.props.benchBarAndCollarsWeightKg;\n      case \"D\":\n        return this.props.deadliftBarAndCollarsWeightKg;\n      default:\n        return 0;\n    }\n  };\n\n  render() {\n    const current = this.getBarLoadProps(this.props.currentEntryId, this.props.attemptOneIndexed);\n    const next = this.getBarLoadProps(this.props.nextEntryId, this.props.nextAttemptOneIndexed);\n\n    // Show one decimal point, and omit it if possible.\n    const language = this.props.language;\n    const weightKgText = displayWeightOnePlace(current.weightKg, language);\n    const weightLbsText = displayWeightOnePlace(current.weightLbs, language);\n\n    const barAndCollarsWeightKg = this.getBarAndCollarsWeightKg();\n\n    // Calculate both loadings.\n    const currentLoading: Array<LoadedPlate> = selectPlates(\n      current.weightKg,\n      barAndCollarsWeightKg,\n      this.props.plates,\n      this.props.inKg\n    );\n    const nextLoading: Array<LoadedPlate> = selectPlates(\n      next.weightKg,\n      barAndCollarsWeightKg,\n      this.props.plates,\n      this.props.inKg\n    );\n\n    // Set the next loading relative to the current loading.\n    if (next.weightKg >= current.weightKg) {\n      makeLoadingRelative(nextLoading, currentLoading);\n    }\n\n    let nextEntryName = undefined;\n    if (typeof this.props.nextEntryId === \"number\") {\n      const idx = this.props.registration.lookup[this.props.nextEntryId];\n      nextEntryName = this.props.registration.entries[idx].name;\n    }\n\n    const nextBarLoad =\n      next.weightKg === 0 ? undefined : (\n        <div className={styles.loadingBar}>\n          <div className={styles.nextText}>\n            <FormattedMessage\n              id=\"lifting.next-up\"\n              defaultMessage=\"NEXT UP – {lifter}\"\n              values={{\n                lifter: nextEntryName,\n              }}\n            />\n          </div>\n          <div className={styles.barArea}>\n            <BarLoad\n              key={String(next.weightKg) + next.rackInfo}\n              loading={nextLoading}\n              rackInfo={next.rackInfo}\n              inKg={this.props.inKg}\n            />\n          </div>\n        </div>\n      );\n\n    let attemptTemplate = \"\";\n    if (this.props.inKg) {\n      if (this.props.showAlternateUnits) {\n        attemptTemplate = getString(\"lifting.current-weight-kg-lbs\", language);\n      } else {\n        attemptTemplate = getString(\"lifting.current-weight-kg\", language);\n      }\n    } else {\n      if (this.props.showAlternateUnits) {\n        attemptTemplate = getString(\"lifting.current-weight-lbs-kg\", language);\n      } else {\n        attemptTemplate = getString(\"lifting.current-weight-lbs\", language);\n      }\n    }\n\n    return (\n      <div className={styles.container}>\n        <div className={styles.activeCard}>\n          <div className={styles.loadingBar}>\n            <div className={styles.attemptText}>\n              {attemptTemplate.replace(\"{kg}\", weightKgText).replace(\"{lbs}\", weightLbsText)}\n            </div>\n            <div className={styles.barArea}>\n              <BarLoad\n                key={String(current.weightKg) + current.rackInfo}\n                loading={currentLoading}\n                rackInfo={current.rackInfo}\n                inKg={this.props.inKg}\n              />\n            </div>\n          </div>\n        </div>\n        {nextBarLoad}\n        <img src=\"atc-logo.png\" style={{ width: \"40%\", display: \"block\", margin: \"auto\" }} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => {\n  return {\n    inKg: state.meet.inKg,\n    showAlternateUnits: state.meet.showAlternateUnits,\n    squatBarAndCollarsWeightKg: state.meet.squatBarAndCollarsWeightKg,\n    benchBarAndCollarsWeightKg: state.meet.benchBarAndCollarsWeightKg,\n    deadliftBarAndCollarsWeightKg: state.meet.deadliftBarAndCollarsWeightKg,\n    plates: state.meet.plates,\n    registration: state.registration,\n    lifting: state.lifting,\n    language: state.language,\n  };\n};\n\nexport default connect(mapStateToProps)(LeftCard);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// An editable component for attempt manipulation in the LiftingContent.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Form from \"react-bootstrap/Form\";\n\nimport { liftToAttemptFieldName, liftToStatusFieldName } from \"../../logic/entry\";\nimport { enterAttempt } from \"../../actions/liftingActions\";\nimport { kg2lbs, lbs2kg, string2number, displayWeight } from \"../../logic/units\";\n\nimport { Entry, Language, Lift, Validation } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\n\nimport styles from \"./LiftingTable.module.scss\";\nimport { Dispatch } from \"redux\";\n\ninterface StateProps {\n  inKg: boolean;\n  language: Language;\n}\n\ninterface OwnProps {\n  entry: Entry;\n  lift: Lift;\n  attemptOneIndexed: number;\n  id: string;\n}\n\ninterface DispatchProps {\n  enterAttempt: (entryId: number, lift: Lift, attemptOneIndexed: number, weightKg: number) => void;\n}\n\ntype Props = StateProps & OwnProps & DispatchProps;\n\ninterface InternalState {\n  lastGoodValue: string;\n  value: string;\n}\n\nclass AttemptInput extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    this.validate = this.validate.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n\n    const fieldKg = liftToAttemptFieldName(this.props.lift);\n    const weightKg: number = this.props.entry[fieldKg][this.props.attemptOneIndexed - 1];\n\n    let weightStr = \"\";\n    if (weightKg !== 0) {\n      weightStr = displayWeight(this.props.inKg ? weightKg : kg2lbs(weightKg), this.props.language);\n    }\n\n    this.state = {\n      lastGoodValue: weightStr,\n      value: weightStr,\n    };\n  }\n\n  validate = (): Validation => {\n    let { value } = this.state;\n    if (value === \"\") return null;\n\n    // Allow use of commas as decimal separator.\n    value = value.replace(\",\", \".\");\n\n    // Handle all errors before all warnings.\n    // Check that the input is a number.\n    const asNumber = Number(value);\n    if (isNaN(asNumber)) return \"error\";\n    if (!isFinite(asNumber)) return \"error\";\n    if (asNumber < 0) return \"error\";\n\n    // The bar weight must be monotonically increasing between attempts.\n    if (this.props.attemptOneIndexed > 1) {\n      const asKg = this.props.inKg ? asNumber : lbs2kg(asNumber);\n\n      const entry = this.props.entry;\n      const fieldKg = liftToAttemptFieldName(this.props.lift);\n      const fieldStatus = liftToStatusFieldName(this.props.lift);\n\n      const prevAttemptOneIndexed = this.props.attemptOneIndexed - 1;\n\n      // Check for validity against all previous attempts.\n      for (let i = 0; i < prevAttemptOneIndexed; ++i) {\n        const prevWeightKg = entry[fieldKg][i];\n\n        // Disallow this weight if it's a decrease from a previous attempt.\n        if (prevWeightKg > asKg) return \"error\";\n\n        if (prevWeightKg === asKg) {\n          const prevStatus = entry[fieldStatus][i];\n\n          // Disallow this weight if it was already successfully lifted.\n          if (prevStatus === 1) return \"error\";\n\n          // If the weight is a repeat but has no status, allow it, but complain.\n          if (prevStatus === 0) return \"warning\";\n        }\n      }\n    }\n\n    if (asNumber % 2.5 !== 0) return \"warning\";\n    return null;\n  };\n\n  handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === \"Enter\") {\n      event.currentTarget.blur();\n    }\n  };\n\n  handleChange = (event: React.BaseSyntheticEvent) => {\n    const value = event.currentTarget.value;\n    if (typeof value === \"string\") {\n      let fixups = value.replace(\" \", \"\");\n\n      // Dvorak \"e\" corresponds to QWERTY \".\", but also is used in exponential\n      // notation, which is a fairly impactful typo.\n      fixups = value.replace(\"e\", \".\");\n\n      this.setState({ value: fixups });\n    }\n  };\n\n  handleBlur = () => {\n    if (this.validate() === \"error\") {\n      this.setState({ value: this.state.lastGoodValue });\n      return;\n    }\n\n    const entryId = this.props.entry.id;\n    const lift = this.props.lift;\n    const attemptOneIndexed = this.props.attemptOneIndexed;\n    const asNumber = string2number(this.state.value);\n    const weightKg = this.props.inKg ? asNumber : lbs2kg(asNumber);\n\n    this.props.enterAttempt(entryId, lift, attemptOneIndexed, weightKg);\n    this.setState({ lastGoodValue: this.state.value });\n  };\n\n  render() {\n    const validation: Validation = this.validate();\n\n    return (\n      <Form.Group style={{ marginBottom: 0 }}>\n        <Form.Control\n          id={this.props.id}\n          type=\"text\"\n          placeholder=\"\"\n          value={this.state.value}\n          onKeyDown={this.handleKeyDown}\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n          // Nothing for Valid == we don't want borders.\n          isInvalid={validation === \"error\"}\n          // Special rules in the _openlifter.scss override warning styles.\n          // Makes the borders look normal but shows a yellow background.\n          className={(validation === \"warning\" ? \"is-warning \" : \"\") + styles.attemptInput + \" attempt-input\"}\n        />\n      </Form.Group>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  inKg: state.meet.inKg,\n  language: state.language,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  enterAttempt: (entryId, lift, attemptOneIndexed, weightKg) =>\n    dispatch(enterAttempt(entryId, lift, attemptOneIndexed, weightKg)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AttemptInput);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the calculation of AH points, used by ParaPL.\n// Taken from https://gitlab.com/openpowerlifting/opl-data/blob/master/modules/coefficients/src/ah.rs\n\nimport { Sex } from \"../../types/dataTypes\";\nimport { checkExhausted } from \"../../types/utils\";\n\n// Calculates the AH coefficient for men.\n//\n// The full formula is defined in Excel:\n//  =ROUND($AM$1/(POWER(LOG(I13),$AM$2))*M13,2)\n//\n// Where:\n//  I13: Bodyweight\n//  M13: Lift Attempt\n//  AM1: 3.2695\n//  AM2: 1.95\nfunction ahMen(bodyweightKg: number): number {\n  const AM1: number = 3.2695;\n  const AM2: number = 1.95;\n\n  const adjusted = Math.min(Math.max(bodyweightKg, 32.0), 157.0);\n\n  return AM1 / Math.pow(Math.log10(adjusted), AM2);\n}\n\n// Calculates the AH coefficient for women.\n//\n// The full formula is defined in Excel:\n//  =ROUND($AG$1/(POWER(LOG(I13),$AG$10))*M13,2)\n//\n// Where:\n//  I13: Bodyweight\n//  M13: Lift Attempt\n//  AG1: 2.7566\n//  AG10: 1.8\nfunction ahWomen(bodyweightKg: number): number {\n  const AG1: number = 2.7566;\n  const AG10: number = 1.8;\n\n  const adjusted = Math.min(Math.max(bodyweightKg, 28.0), 112.0);\n\n  return AG1 / Math.pow(Math.log10(adjusted), AG10);\n}\n\n// Calculates AH (Haleczko) points, used in ParaPL bench-only meets.\nexport const ah = (sex: Sex, bodyweightKg: number, totalKg: number): number => {\n  switch (sex) {\n    case \"M\":\n    case \"Mx\":\n      return ahMen(bodyweightKg) * totalKg;\n    case \"F\":\n      return ahWomen(bodyweightKg) * totalKg;\n    default:\n      checkExhausted(sex);\n      return 0;\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the calculation of Dots points.\n//\n// Dots were introduced by the German IPF Affiliate BVDK after the IPF switched to\n// IPF Points, which do not allow comparing between sexes. The BVDK hosts team\n// competitions that allow lifters of all sexes to compete on a singular team.\n//\n// Since Wilks points have been ostracized from the IPF, and IPF Points are\n// unsuitable, German lifters therefore came up with their own formula.\n//\n// The author of the Dots formula is Tim Konertz <tim.konertz@outlook.com>.\n//\n// Tim says that Dots is an acronym for \"Dynamic Objective Team Scoring,\"\n// but that they chose the acronym before figuring out the expansion.\n//\n// Implementation taken from the main OpenPowerlifting repo, also AGPLv3+.\n\nimport { Sex } from \"../../types/dataTypes\";\nimport { checkExhausted } from \"../../types/utils\";\n\nfunction dotsPoly(a: number, b: number, c: number, d: number, e: number, x: number): number {\n  const x2 = x * x;\n  const x3 = x2 * x;\n  const x4 = x3 * x;\n  return 500.0 / (a * x4 + b * x3 + c * x2 + d * x + e);\n}\n\nexport function dotsMen(bodyweightKg: number): number {\n  const A = -0.000001093;\n  const B = 0.0007391293;\n  const C = -0.1918759221;\n  const D = 24.0900756;\n  const E = -307.75076;\n\n  const adjusted = Math.max(Math.min(bodyweightKg, 210.0), 40.0);\n  return dotsPoly(A, B, C, D, E, adjusted);\n}\n\nexport function dotsWomen(bodyweightKg: number): number {\n  const A = -0.0000010706;\n  const B = 0.0005158568;\n  const C = -0.1126655495;\n  const D = 13.6175032;\n  const E = -57.96288;\n\n  const adjusted = Math.max(Math.min(bodyweightKg, 150.0), 40.0);\n  return dotsPoly(A, B, C, D, E, adjusted);\n}\n\nexport const dots = (sex: Sex, bodyweightKg: number, totalKg: number): number => {\n  if (bodyweightKg === 0 || totalKg === 0) {\n    return 0.0;\n  }\n\n  switch (sex) {\n    case \"M\":\n    case \"Mx\":\n      return dotsMen(bodyweightKg) * totalKg;\n    case \"F\":\n      return dotsWomen(bodyweightKg) * totalKg;\n    default:\n      checkExhausted(sex);\n      return 0;\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines Foster-McCulloch age coefficients.\n//\n// These are taken from the OpenPowerlifting coefficients module,\n// translated from the original Rust code.\n\nconst AGE_COEFFICIENTS = [\n  // Coefficients in the range of 0-4 are clearly nonsense.\n  0.0, // 0\n  0.0, // 1\n  0.0, // 2\n  0.0, // 3\n  0.0, // 4\n  // These coefficients don't actually exist, and are just low-balled best guesses.\n  // Kids really shouldn't be competing in this sport...\n  // Ranges from age 5 to 13.\n  1.73, // 5\n  1.67, // 6\n  1.61, // 7\n  1.55, // 8\n  1.49, // 9\n  1.43, // 10\n  1.38, // 11\n  1.33, // 12\n  1.28, // 13\n  // Foster coefficients:\n  // http://www.usapl-sd.com/Formulas/Foster.htm\n  // Ranges from age 14 to 22.\n  1.23, // 14\n  1.18, // 15\n  1.13, // 16\n  1.08, // 17\n  1.06, // 18\n  1.04, // 19\n  1.03, // 20\n  1.02, // 21\n  1.01, // 22\n  // Lifters in the range 23-40 receive no handicap.\n  1.0, // 23\n  1.0, // 24\n  1.0, // 25\n  1.0, // 26\n  1.0, // 27\n  1.0, // 28\n  1.0, // 29\n  1.0, // 30\n  1.0, // 31\n  1.0, // 32\n  1.0, // 33\n  1.0, // 34\n  1.0, // 35\n  1.0, // 36\n  1.0, // 37\n  1.0, // 38\n  1.0, // 39\n  1.0, // 40\n  // McCulloch coefficients:\n  //  http://www.usapl-sd.com/Formulas/Mcculloch.htm (contains some errors).\n  // Errors were corrected using the Masters coefficients from:\n  //  http://worldpowerliftingcongress.com/wp-content/uploads/2015/02/Glossbrenner.htm\n  // Ranges from age 41 to 80.\n  1.01, // 41\n  1.02, // 42\n  1.031, // 43\n  1.043, // 44\n  1.055, // 45\n  1.068, // 46\n  1.082, // 47\n  1.097, // 48\n  1.113, // 49\n  1.13, // 50\n  1.147, // 51\n  1.165, // 52\n  1.184, // 53\n  1.204, // 54\n  1.225, // 55\n  1.246, // 56\n  1.268, // 57\n  1.291, // 58\n  1.315, // 59\n  1.34, // 60\n  1.366, // 61\n  1.393, // 62\n  1.421, // 63\n  1.45, // 64\n  1.48, // 65\n  1.511, // 66\n  1.543, // 67\n  1.576, // 68\n  1.61, // 69\n  1.645, // 70\n  1.681, // 71\n  1.718, // 72\n  1.756, // 73\n  1.795, // 74\n  1.835, // 75\n  1.876, // 76\n  1.918, // 77\n  1.961, // 78\n  2.005, // 79\n  2.05, // 80\n  // These coefficients taken from:\n  // http://www.usapltwinportsrawopen.com/resources/USAPL+Age+Coefficients.pdf\n  // Ranges from age 81 to 90.\n  2.096, // 81\n  2.143, // 82\n  2.19, // 83\n  2.238, // 84\n  2.287, // 85\n  2.337, // 86\n  2.388, // 87\n  2.44, // 88\n  2.494, // 89\n  2.549, // 90\n  // Coefficients above 90 were just guessed at, and are unstandardized.\n  2.605, // 91\n  2.662, // 92\n  2.72, // 93\n  2.779, // 94\n  2.839, // 95\n  2.9, // 96\n  2.962, // 97\n  3.025, // 98\n  3.089, // 99\n  3.154, // 100\n];\n\n// Maps the given age into the table above.\nexport const fosterMcCulloch = (age: number): number => {\n  if (!Number.isInteger(age) || age <= 0) {\n    return 1.0;\n  }\n\n  // Greater-than is correct here: (age) is used to index into table, not (age-1).\n  if (age > AGE_COEFFICIENTS.length) {\n    return 1.0;\n  }\n\n  return AGE_COEFFICIENTS[age];\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the calculation of Schwartz-Malone points.\n// Taken from https://gitlab.com/openpowerlifting/opl-data.\n\nimport { Sex } from \"../../types/dataTypes\";\n\n// Calculates the Schwartz coefficient, used for men.\n//\n// The Schwartz formula replaced the Hoffinan formula.\n// Schwartz was proposed around February 1971.\n//\n// The exact formula was found in the magazine Powerlifting USA,\n// Vol.6, No.2, August 1982, on page 61. That text is reproduced below:\n//\n// Computerized Schwartz Formula...Dr. Lyle Schwartz has often been\n// asked for a means by which the formula he has given Powerlifting can be\n// programmed into a computer or a hand held calculator with sufficient\n// memory. To obtain the Schwartz Formula (SF) for bodyweights (BW) bet-\n// ween 40 and 126 kg, the expression is: SF = 0.631926 exp(+01) -\n// 0.262349 exp(+00) (BW) + 0.511550 exp(-02) (BW)^2 - 0.519738\n// exp(-04) (BW)^3 + 0.267626 exp(-06) (BW)^4 - 0.540132 exp(-09)\n// (BW)^5 - 0.728875 exp(-13) (BW)^6. For higher bodyweights, the follow-\n// ing simple formulae are used: for BW 126-136, SF = 0.5210-0.0012\n// (BW - 125), for BW 136-146, SF = 0.5090-0011 (BW - 135), for BW\n// 146-156, SF = 0.4980-0.0010 (BW - 145), and for BW 156-166, SF =\n// 0.4880-0.0090 (BW - 156)\n//\n// Schwartz is quoted as saying about the formula's development,\n//\n// \"Since powerlifting was still a young sport in the early 1970s\n// there was uneven development in the three lifts on the part of most\n// self-trained athletes. I compensated for such unevenness by creating\n// artificial 'best' totals by adding together the current records in the\n// individual lifts. A 'best' total would have been achieved by that ideal\n// lifter who could match the best performances to date in all three\n// powerlifts. Then I fitted these data to an artificial curve and picked\n// off numbers from the curve.\"\nexport const schwartz_coefficient = (bodyweightKg: number): number => {\n  const adjusted = Math.min(Math.max(bodyweightKg, 40.0), 166.0);\n\n  if (adjusted <= 126.0) {\n    const x0 = 0.631926 * 10.0;\n    const x1 = 0.262349 * adjusted;\n    const x2 = 0.51155 * Math.pow(10.0, -2) * Math.pow(adjusted, 2);\n    const x3 = 0.519738 * Math.pow(10.0, -4) * Math.pow(adjusted, 3);\n    const x4 = 0.267626 * Math.pow(10.0, -6) * Math.pow(adjusted, 4);\n    const x5 = 0.540132 * Math.pow(10.0, -9) * Math.pow(adjusted, 5);\n    const x6 = 0.728875 * Math.pow(10.0, -13) * Math.pow(adjusted, 6);\n    return x0 - x1 + x2 - x3 + x4 - x5 - x6;\n  } else if (adjusted <= 136.0) {\n    return 0.521 - 0.0012 * (adjusted - 125.0);\n  } else if (adjusted <= 146.0) {\n    return 0.509 - 0.0011 * (adjusted - 135.0);\n  } else if (adjusted <= 156.0) {\n    return 0.498 - 0.001 * (adjusted - 145.0);\n  } else {\n    // The final formula as published for this piece does not match\n    // the coefficient tables.\n    //\n    // From the tables, the step is exactly 0.0004 per pound, which\n    // has been converted to kg below.\n    //\n    // For reference, the published original is:\n    //   0.4880 - 0.0090 * (adjusted - 156.0)\n    return 0.4879 - 0.00088185 * (adjusted - 155.0);\n  }\n};\n\n// Calculates the Malone coefficient, used for women.\nexport const malone_coefficient = (bodyweightKg: number): number => {\n  // Values calculated by fitting to coefficient tables.\n  const A = 106.011586323613;\n  const B = -1.293027130579051;\n  const C = 0.322935585328304;\n\n  // Lower bound chosen at point where Malone = max(Wilks).\n  const adjusted = Math.max(bodyweightKg, 29.24);\n\n  return A * Math.pow(adjusted, B) + C;\n};\n\n// Calculates Schwartz-Malone points.\n//\n// Schwartz-Malone is an older system that was superseded by Wilks.\nexport const schwartzmalone = (sex: Sex, bodyweightKg: number, totalKg: number): number => {\n  switch (sex) {\n    case \"M\":\n      return schwartz_coefficient(bodyweightKg) * totalKg;\n    case \"F\":\n      return malone_coefficient(bodyweightKg) * totalKg;\n    default:\n      return 0;\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the calculation of Wilks points.\n// Taken from https://gitlab.com/openpowerlifting/ipf-points-calculator.\n\nimport { Sex } from \"../../types/dataTypes\";\nimport { checkExhausted } from \"../../types/utils\";\n\nfunction wilksPoly(a: number, b: number, c: number, d: number, e: number, f: number, x: number): number {\n  const x2 = x * x;\n  const x3 = x2 * x;\n  const x4 = x3 * x;\n  const x5 = x4 * x;\n  return 500.0 / (a + b * x + c * x2 + d * x3 + e * x4 + f * x5);\n}\n\nexport function wilksMen(bodyweightKg: number): number {\n  const normalized = Math.min(Math.max(bodyweightKg, 40.0), 201.9);\n  return wilksPoly(-216.0475144, 16.2606339, -0.002388645, -0.00113732, 7.01863e-6, -1.291e-8, normalized);\n}\n\nexport function wilksWomen(bodyweightKg: number): number {\n  const normalized = Math.min(Math.max(bodyweightKg, 26.51), 154.53);\n  return wilksPoly(\n    594.31747775582,\n    -27.23842536447,\n    0.82112226871,\n    -0.00930733913,\n    0.00004731582,\n    -0.00000009054,\n    normalized\n  );\n}\n\nexport const wilks = (sex: Sex, bodyweightKg: number, totalKg: number): number => {\n  switch (sex) {\n    case \"M\":\n    case \"Mx\":\n      return wilksMen(bodyweightKg) * totalKg;\n    case \"F\":\n      return wilksWomen(bodyweightKg) * totalKg;\n    default:\n      checkExhausted(sex);\n      return 0;\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the calculation of Glossbrenner points.\n// Taken from https://gitlab.com/openpowerlifting/opl-data.\n\nimport { schwartz_coefficient, malone_coefficient } from \"./schwartzmalone\";\nimport { wilksMen, wilksWomen } from \"./wilks\";\n\nimport { Sex } from \"../../types/dataTypes\";\nimport { checkExhausted } from \"../../types/utils\";\n\nconst glossbrenner_coefficient_men = (bodyweightKg: number): number => {\n  // Glossbrenner is defined piecewise.\n  if (bodyweightKg < 153.05) {\n    return (schwartz_coefficient(bodyweightKg) + wilksMen(bodyweightKg)) / 2.0;\n  } else {\n    // Linear coefficients found by fitting to a table.\n    const A = -0.000821668402557;\n    const B = 0.676940740094416;\n    return (schwartz_coefficient(bodyweightKg) + A * bodyweightKg + B) / 2.0;\n  }\n};\n\nconst glossbrenner_coefficient_women = (bodyweightKg: number): number => {\n  // Glossbrenner is defined piecewise.\n  if (bodyweightKg < 106.3) {\n    return (malone_coefficient(bodyweightKg) + wilksWomen(bodyweightKg)) / 2.0;\n  } else {\n    // Linear coefficients found by fitting to a table.\n    const A = -0.000313738002024;\n    const B = 0.852664892884785;\n    return (malone_coefficient(bodyweightKg) + A * bodyweightKg + B) / 2.0;\n  }\n};\n\n// Calculates Glossbrenner points.\n//\n// Glossbrenner is the average of two older systems, Schwartz-Malone and Wilks,\n// with a piecewise linear section.\n//\n// This points system is most often used by GPC affiliates.\nexport const glossbrenner = (sex: Sex, bodyweightKg: number, totalKg: number): number => {\n  switch (sex) {\n    case \"M\":\n    case \"Mx\":\n      return glossbrenner_coefficient_men(bodyweightKg) * totalKg;\n    case \"F\":\n      return glossbrenner_coefficient_women(bodyweightKg) * totalKg;\n    default:\n      checkExhausted(sex);\n      return 0;\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the calculation of IPF GL (GOODLIFT) Points.\n\nimport { Sex, Event, Equipment } from \"../../types/dataTypes\";\n\ntype Coefficients = Array<number>;\ntype ByEvent = {\n  SBD: Coefficients;\n  B: Coefficients;\n};\ntype ByEquipment = {\n  Sleeves: ByEvent;\n  \"Single-ply\": ByEvent;\n};\ntype BySex = {\n  M: ByEquipment;\n  F: ByEquipment;\n};\n\nconst PARAMETERS: BySex = {\n  M: {\n    Sleeves: {\n      SBD: [1199.72839, 1025.18162, 0.00921],\n      B: [320.98041, 281.40258, 0.01008],\n    },\n    \"Single-ply\": {\n      SBD: [1236.25115, 1449.21864, 0.01644],\n      B: [381.22073, 733.79378, 0.02398],\n    },\n  },\n  F: {\n    Sleeves: {\n      SBD: [610.32796, 1045.59282, 0.03048],\n      B: [142.40398, 442.52671, 0.04724],\n    },\n    \"Single-ply\": {\n      SBD: [758.63878, 949.31382, 0.02435],\n      B: [221.82209, 357.00377, 0.02937],\n    },\n  },\n};\n\nexport const goodlift = (\n  totalKg: number,\n  bodyweightKg: number,\n  sex: Sex,\n  equipment: Equipment,\n  event: Event\n): number => {\n  if (totalKg === 0) return 0;\n  if (bodyweightKg < 40) return 0;\n\n  // Restrict inputs to only the defined subset.\n  let normalizedEquipment = equipment;\n  if (equipment === \"Bare\" || equipment === \"Wraps\") {\n    normalizedEquipment = \"Sleeves\";\n  } else if (equipment === \"Multi-ply\" || equipment === \"Unlimited\") {\n    normalizedEquipment = \"Single-ply\";\n  }\n  if (normalizedEquipment !== \"Sleeves\" && normalizedEquipment !== \"Single-ply\") {\n    return 0;\n  }\n\n  // Consider Mx athletes as M, since that's the harsher formula.\n  let normalizedSex = sex;\n  if (sex === \"Mx\") normalizedSex = \"M\";\n\n  if (event !== \"SBD\" && event !== \"B\") return 0;\n  if (normalizedSex !== \"M\" && normalizedSex !== \"F\") return 0;\n\n  const params = PARAMETERS[normalizedSex][normalizedEquipment][event];\n  const denom = params[0] - params[1] * Math.exp(-1.0 * params[2] * bodyweightKg);\n  const glp = denom === 0 ? 0 : Math.max(0, (totalKg * 100.0) / denom);\n  if (isNaN(glp) || bodyweightKg < 35) {\n    return 0.0;\n  }\n  return glp;\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the calculation of IPF Points.\n// Taken from https://gitlab.com/openpowerlifting/ipf-points-calculator.\n\nimport { Sex, Event, Equipment } from \"../../types/dataTypes\";\n\ntype Coefficients = Array<number>;\ntype ByEvent = {\n  SBD: Coefficients;\n  S: Coefficients;\n  B: Coefficients;\n  D: Coefficients;\n};\ntype ByEquipment = {\n  Sleeves: ByEvent;\n  \"Single-ply\": ByEvent;\n};\ntype BySex = {\n  M: ByEquipment;\n  F: ByEquipment;\n};\n\nconst PARAMETERS: BySex = {\n  M: {\n    Sleeves: {\n      SBD: [310.67, 857.785, 53.216, 147.0835],\n      S: [123.1, 363.085, 25.1667, 75.4311],\n      B: [86.4745, 259.155, 17.57845, 53.122],\n      D: [103.5355, 244.765, 15.3714, 31.5022],\n    },\n    \"Single-ply\": {\n      SBD: [387.265, 1121.28, 80.6324, 222.4896],\n      S: [150.485, 446.445, 36.5155, 103.7061],\n      B: [133.94, 441.465, 35.3938, 113.0057],\n      D: [110.135, 263.66, 14.996, 23.011],\n    },\n  },\n  F: {\n    Sleeves: {\n      SBD: [125.1435, 228.03, 34.5246, 86.8301],\n      S: [50.479, 105.632, 19.1846, 56.2215],\n      B: [25.0485, 43.848, 6.7172, 13.952],\n      D: [47.136, 67.349, 9.1555, 13.67],\n    },\n    \"Single-ply\": {\n      SBD: [176.58, 373.315, 48.4534, 110.0103],\n      S: [74.6855, 171.585, 21.9475, 52.2948],\n      B: [49.106, 124.209, 23.199, 67.4926],\n      D: [51.002, 69.8265, 8.5802, 5.7258],\n    },\n  },\n};\n\nexport const ipfpoints = (\n  totalKg: number,\n  bodyweightKg: number,\n  sex: Sex,\n  equipment: Equipment,\n  event: Event\n): number => {\n  if (totalKg === 0) return 0;\n  if (bodyweightKg < 40) return 0;\n\n  // Restrict inputs to only the defined subset.\n  let normalizedEquipment = equipment;\n  if (equipment === \"Bare\" || equipment === \"Wraps\") {\n    normalizedEquipment = \"Sleeves\";\n  } else if (equipment === \"Multi-ply\" || equipment === \"Unlimited\") {\n    normalizedEquipment = \"Single-ply\";\n  }\n  if (normalizedEquipment !== \"Sleeves\" && normalizedEquipment !== \"Single-ply\") {\n    return 0;\n  }\n\n  // Consider Mx athletes as M, since that's the harsher formula.\n  let normalizedSex = sex;\n  if (sex === \"Mx\") normalizedSex = \"M\";\n\n  if (event !== \"SBD\" && event !== \"S\" && event !== \"B\" && event !== \"D\") return 0;\n  if (normalizedSex !== \"M\" && normalizedSex !== \"F\") return 0;\n\n  const params = PARAMETERS[normalizedSex][normalizedEquipment][event];\n  const bw_log = Math.log(bodyweightKg);\n\n  const mean = params[0] * bw_log - params[1];\n  const dev = params[2] * bw_log - params[3];\n\n  const points = 500 + (100 * (totalKg - mean)) / dev;\n  if (isNaN(points) || points < 0) {\n    return 0;\n  }\n  return points;\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the calculation of Reshel points.\n//\n// Reshel is published as a table, with rounded x-values and rounded y-values.\n// No formula is given. We attempted to fit a function to the curve.\n//\n// The formula here is accurate to about 0.01, and is most inaccurate between\n// 70-80kg for men. Elsewhere it fits very closely.\n\nimport { Sex } from \"../../types/dataTypes\";\nimport { checkExhausted } from \"../../types/utils\";\n\nexport function reshelMen(bodyweightKg: number): number {\n  // Coefficients determined by GNUPlot. They need improvement.\n  const a: number = 23740.8329088123;\n  const b: number = -9.75618720662844;\n  const c: number = 0.787990994925928;\n  const d: number = -2.68445158813578;\n\n  const normalized = Math.min(Math.max(bodyweightKg, 50.0), 174.75);\n  return a * Math.pow(normalized + b, d) + c;\n}\n\nexport function reshelWomen(bodyweightKg: number): number {\n  // Coefficients determined by GNUPlot. They need improvement.\n  const a: number = 239.894659799145;\n  const b: number = -20.5105859285582;\n  const c: number = 1.16052601684125;\n  const d: number = -1.61417872668708;\n\n  const normalized = Math.min(Math.max(bodyweightKg, 40.0), 118.75);\n  return a * Math.pow(normalized + b, d) + c;\n}\n\nexport const reshel = (sex: Sex, bodyweightKg: number, totalKg: number): number => {\n  switch (sex) {\n    case \"M\":\n    case \"Mx\":\n      return reshelMen(bodyweightKg) * totalKg;\n    case \"F\":\n      return reshelWomen(bodyweightKg) * totalKg;\n    default:\n      checkExhausted(sex);\n      return 0;\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the calculation of Wilks 2020 points.\n\nimport { Sex } from \"../../types/dataTypes\";\nimport { checkExhausted } from \"../../types/utils\";\n\nfunction wilks2020Poly(a: number, b: number, c: number, d: number, e: number, f: number, x: number): number {\n  const x2 = x * x;\n  const x3 = x2 * x;\n  const x4 = x3 * x;\n  const x5 = x4 * x;\n  return 600.0 / (a + b * x + c * x2 + d * x3 + e * x4 + f * x5);\n}\n\nexport function wilks2020Men(bodyweightKg: number): number {\n  const normalized = Math.min(Math.max(bodyweightKg, 40.0), 200.95);\n  return wilks2020Poly(\n    47.4617885411949,\n    8.47206137941125,\n    0.073694103462609,\n    -0.00139583381094385,\n    0.00000707665973070743,\n    -0.0000000120804336482315,\n    normalized\n  );\n}\n\nexport function wilks2020Women(bodyweightKg: number): number {\n  const normalized = Math.min(Math.max(bodyweightKg, 40.0), 150.95);\n  return wilks2020Poly(\n    -125.425539779509,\n    13.7121941940668,\n    -0.0330725063103405,\n    -0.0010504000506583,\n    0.00000938773881462799,\n    -0.000000023334613884954,\n    normalized\n  );\n}\n\nexport const wilks2020 = (sex: Sex, bodyweightKg: number, totalKg: number): number => {\n  switch (sex) {\n    case \"M\":\n    case \"Mx\":\n      return wilks2020Men(bodyweightKg) * totalKg;\n    case \"F\":\n      return wilks2020Women(bodyweightKg) * totalKg;\n    default:\n      checkExhausted(sex);\n      return 0;\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Wraps all the points functions into a common interface.\n\nimport { ah } from \"./ah\";\nimport { bodyweight_multiple } from \"./bodyweight-multiple\";\nimport { dots } from \"./dots\";\nimport { fosterMcCulloch } from \"./foster-mcculloch\";\nimport { glossbrenner } from \"./glossbrenner\";\nimport { goodlift } from \"./goodlift\";\nimport { ipfpoints } from \"./ipf\";\nimport { nasapoints } from \"./nasa\";\nimport { reshel } from \"./reshel\";\nimport { schwartzmalone } from \"./schwartzmalone\";\nimport { wilks } from \"./wilks\";\nimport { wilks2020 } from \"./wilks2020\";\n\nimport { getAge } from \"../entry\";\nimport { kg2lbs } from \"../units\";\n\nimport { AgeCoefficients, Entry, Event, Equipment, Formula, Sex } from \"../../types/dataTypes\";\nimport { checkExhausted } from \"../../types/utils\";\n\nexport const getPoints = (formula: Formula, entry: Entry, event: Event, totalKg: number, inKg: boolean): number => {\n  // Some of the data are singular properties of the entry.\n  const sex: Sex = entry.sex;\n  const equipment: Equipment = entry.equipment;\n  const bodyweightKg: number = entry.bodyweightKg;\n\n  switch (formula) {\n    case \"AH\":\n      return ah(sex, bodyweightKg, totalKg);\n    case \"Bodyweight Multiple\":\n      return bodyweight_multiple(bodyweightKg, totalKg);\n    case \"Dots\":\n      return dots(sex, bodyweightKg, totalKg);\n    case \"Glossbrenner\":\n      return glossbrenner(sex, bodyweightKg, totalKg);\n    case \"IPF GL Points\":\n      return goodlift(totalKg, bodyweightKg, sex, equipment, event);\n    case \"IPF Points\":\n      return ipfpoints(totalKg, bodyweightKg, sex, equipment, event);\n    case \"NASA Points\":\n      return nasapoints(bodyweightKg, totalKg);\n    case \"Reshel\":\n      return reshel(sex, bodyweightKg, totalKg);\n    case \"Schwartz/Malone\":\n      return schwartzmalone(sex, bodyweightKg, totalKg);\n    case \"Total\":\n      return inKg ? totalKg : kg2lbs(totalKg);\n    case \"Wilks\":\n      return wilks(sex, bodyweightKg, totalKg);\n    case \"Wilks2020\":\n      return wilks2020(sex, bodyweightKg, totalKg);\n    default:\n      checkExhausted(formula);\n      return 0;\n  }\n};\n\nexport const getAgeAdjustedPoints = (\n  ageCoefficients: AgeCoefficients,\n  meetDate: string,\n  formula: Formula,\n  entry: Entry,\n  event: Event,\n  totalKg: number,\n  inKg: boolean\n): number => {\n  const points = getPoints(formula, entry, event, totalKg, inKg);\n\n  switch (ageCoefficients) {\n    case \"None\":\n      return points;\n    case \"FosterMcCulloch\":\n      return fosterMcCulloch(getAge(entry, meetDate)) * points;\n    default:\n      checkExhausted(ageCoefficients);\n      return 0;\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the calculation of points as a multiple of bodyweight.\n//\n// Although this logic is very simple, there is some finesse to avoid\n// division by zero that is easier to write once and import than repeat.\n\nexport const bodyweight_multiple = (bodyweightKg: number, totalKg: number): number => {\n  if (bodyweightKg <= 0 || totalKg <= 0) {\n    return 0;\n  }\n  return totalKg / bodyweightKg;\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the calculation of NASA Points.\n// They are defined in a coefficient table: http://nasa-sports.com/coefficient-system/\n// It turns out that they are a simple line.\n\nexport const nasapoints = (bodyweightKg: number, totalKg: number): number => {\n  // The function was determined using fitting in GNUPlot:\n  //\n  // Final set of parameters            Asymptotic Standard Error\n  // =======================            ==========================\n  // m               = 0.00620912       +/- 1.265e-06    (0.02037%)\n  // b               = 0.565697         +/- 0.0001322    (0.02337%)\n  const m = 0.00620912;\n  const b = 0.565697;\n\n  if (bodyweightKg < 30) return 0; // Arbitrary lower bound.\n  return (totalKg / bodyweightKg) * (m * bodyweightKg + b);\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { liftToAttemptFieldName, liftToStatusFieldName, MAX_ATTEMPTS } from \"./entry\";\n\nimport { LiftingOrder, Entry, FieldKg, FieldStatus } from \"../types/dataTypes\";\nimport { LiftingState } from \"../types/stateTypes\";\n\n// Helper function: for a given entry, see what attempt number would be next.\n//\n// Returns a number >= 1 if the entry is still lifting, representing the next attempt.\n// Returns zero if the entry does not have any pending attempts.\nconst getNextAttemptNumberForEntry = (entry: Entry, fieldKg: FieldKg, fieldStatus: FieldStatus): number => {\n  const weightsKg = entry[fieldKg];\n  const statuses = entry[fieldStatus];\n\n  // Lifters only set the next attempt, so loop backwards,\n  // looking for the first attempt that meets the criteria.\n  for (let i = MAX_ATTEMPTS - 1; i >= 0; i--) {\n    if (weightsKg[i] !== 0 && statuses[i] === 0) {\n      return i + 1;\n    }\n  }\n  return 0;\n};\n\n// Helper function: for a given entry, see the maximum attempt number made.\n//\n// Returns a number >= 1 representing the highest-numbered attempt attempted.\n// Returns zero if the entry has not attempted any attempts.\nconst getMaxAttemptNumberForEntry = (entry: Entry, fieldKg: FieldKg, fieldStatus: FieldStatus): number => {\n  const weightsKg = entry[fieldKg];\n  const statuses = entry[fieldStatus];\n\n  for (let i = MAX_ATTEMPTS - 1; i >= 0; i--) {\n    if (weightsKg[i] !== 0 && statuses[i] !== 0) {\n      return i + 1;\n    }\n  }\n  return 0;\n};\n\n// Determine the current active attempt for the current lift.\n//\n// An attempt is active if either:\n// 1. It has been overridden by the Attempt selector.\n// 2. There exists an attempt of that number with no success/failure value,\n//    and there is no lower attempt number with that property.\n//\n// Returns a number in the (inclusive) range of [1, MAX_ATTEMPTS].\n// If there is not enough data to make a decision, returns 1.\nconst getActiveAttemptNumber = (entriesInFlight: Array<Entry>, lifting: LiftingState): number => {\n  const lift = lifting.lift;\n  const fieldKg = liftToAttemptFieldName(lift);\n  const fieldStatus = liftToStatusFieldName(lift);\n\n  // Allow manual override.\n  if (lifting.overrideAttempt !== null) {\n    return Number(lifting.overrideAttempt);\n  }\n\n  // Iterate in reverse, looking for the earliest attempt that hasn't been lifted.\n  let earliestAttemptOneIndexed = MAX_ATTEMPTS + 1;\n  for (let i = 0; i < entriesInFlight.length; i++) {\n    const entry = entriesInFlight[i];\n    const next = getNextAttemptNumberForEntry(entry, fieldKg, fieldStatus);\n    // Zero return value means \"no pending attempts for this entry.\"\n    if (next > 0 && next < earliestAttemptOneIndexed) {\n      earliestAttemptOneIndexed = next;\n    }\n  }\n\n  // The lowest pending attempt number is the current one.\n  if (earliestAttemptOneIndexed < MAX_ATTEMPTS + 1) {\n    return earliestAttemptOneIndexed;\n  }\n\n  // In the case of no pending lifts, try to helpfully infer the next attempt.\n  let latestAttemptOneIndexed = 0;\n  for (let i = 0; i < entriesInFlight.length; i++) {\n    const entry = entriesInFlight[i];\n    const max = getMaxAttemptNumberForEntry(entry, fieldKg, fieldStatus);\n    // Zero return value means \"no attempted attempts for this entry.\"\n    if (max > latestAttemptOneIndexed) {\n      latestAttemptOneIndexed = max;\n    }\n  }\n\n  // If >0, we know there are no pending attempts, and we know that everyone\n  // has taken all of the Nth attempt. So we should display the (N+1)th attempt.\n  if (latestAttemptOneIndexed > 0) {\n    // Don't auto-advance from 3rd to 4th attempts.\n    // However, if we're already on 4th attempts, stay there.\n    if (latestAttemptOneIndexed + 1 >= 4) {\n      return latestAttemptOneIndexed;\n    }\n\n    // Roll-over to the next attempt (with no pending entries).\n    return latestAttemptOneIndexed + 1;\n  }\n\n  // Otherwise, just default to the first attempt.\n  return 1;\n};\n\n// Helper function for recursive comparison.\nexport const compareEntriesByAttempt = (a: Entry, b: Entry, fieldKg: FieldKg, attemptOneIndexed: number): number => {\n  const aKg = a[fieldKg][attemptOneIndexed - 1];\n  const bKg = b[fieldKg][attemptOneIndexed - 1];\n\n  // If non-equal, sort by weight, ascending.\n  if (aKg !== bKg) return aKg - bKg;\n\n  // If the federation uses lot numbers, break ties using lot.\n  if (a.lot !== 0 && b.lot !== 0) return a.lot - b.lot;\n\n  // If this is not the first attempt, preserve the order from the last attempt.\n  if (attemptOneIndexed > 1) {\n    return compareEntriesByAttempt(a, b, fieldKg, attemptOneIndexed - 1);\n  }\n\n  // Try to break ties using bodyweight, with the lighter lifter going first.\n  if (a.bodyweightKg !== b.bodyweightKg) return a.bodyweightKg - b.bodyweightKg;\n\n  // If we've run out of properties by which to compare them, resort to Name.\n  if (a.name < b.name) return -1;\n  if (a.name > b.name) return 1;\n  return 0;\n};\n\n// Helper function: performs an in-place sort on an array of entries.\n// Assumes that zero entries are not mixed in with non-zero entries.\nexport const orderEntriesByAttempt = (\n  entries: Array<Entry>,\n  fieldKg: FieldKg,\n  attemptOneIndexed: number\n): Array<Entry> => {\n  return entries.sort((a, b) => {\n    return compareEntriesByAttempt(a, b, fieldKg, attemptOneIndexed);\n  });\n};\n\n// Returns a copy of the entries in lifting order for the current attempt.\nconst orderEntriesForAttempt = (\n  entriesInFlight: Array<Entry>,\n  lifting: LiftingState,\n  attemptOneIndexed: number\n): Array<Entry> => {\n  const lift = lifting.lift;\n  const fieldKg = liftToAttemptFieldName(lift);\n\n  const attemptZeroIndexed = attemptOneIndexed - 1;\n  const existsNextAttempt = attemptOneIndexed + 1 <= MAX_ATTEMPTS;\n  const existsPrevAttempt = attemptOneIndexed > 1;\n\n  // Divide the entries into disjoint groups:\n  const byNextAttempt: Array<Entry> = []; // Entries sorted by their next attempt.\n  const byThisAttempt: Array<Entry> = []; // Entries sorted by this attempt.\n  const byPrevAttempt: Array<Entry> = []; // Entries sorted by previous attempt.\n  const notLifting: Array<Entry> = []; // Entries that don't have this or next attempts in.\n\n  for (let i = 0; i < entriesInFlight.length; i++) {\n    const entry = entriesInFlight[i];\n\n    if (existsNextAttempt && entry[fieldKg][attemptZeroIndexed + 1] !== 0) {\n      byNextAttempt.push(entry);\n    } else if (entry[fieldKg][attemptZeroIndexed] !== 0) {\n      byThisAttempt.push(entry);\n    } else if (existsPrevAttempt && entry[fieldKg][attemptZeroIndexed - 1] !== 0) {\n      byPrevAttempt.push(entry);\n    } else {\n      notLifting.push(entry);\n    }\n  }\n\n  // Perform sorting on the relative groups.\n  if (existsNextAttempt) {\n    orderEntriesByAttempt(byNextAttempt, fieldKg, attemptOneIndexed + 1);\n  }\n  orderEntriesByAttempt(byThisAttempt, fieldKg, attemptOneIndexed);\n  if (existsPrevAttempt) {\n    orderEntriesByAttempt(byPrevAttempt, fieldKg, attemptOneIndexed - 1);\n  }\n  orderEntriesByAttempt(notLifting, fieldKg, attemptOneIndexed);\n\n  // Arrange these three groups consecutively.\n  return Array.prototype.concat(byNextAttempt, byThisAttempt, byPrevAttempt, notLifting);\n};\n\n// Returns either the current entry ID or null if no active entry.\n//\n// In the ordered entries, the earliest lifter that hasn't gone yet is going.\n// This can be manually overridden by UI controls.\nconst getCurrentEntryId = (\n  lifting: LiftingState,\n  orderedEntries: Array<Entry>,\n  attemptOneIndexed: number\n): number | null => {\n  const lift = lifting.lift;\n  const fieldKg = liftToAttemptFieldName(lift);\n  const fieldStatus = liftToStatusFieldName(lift);\n\n  // Only respect an overridden EntryId if it appears in the entry list.\n  // The EntryId may have been deleted in the meantime.\n  if (lifting.overrideEntryId !== null) {\n    for (let i = 0; i < orderedEntries.length; i++) {\n      if (orderedEntries[i].id === lifting.overrideEntryId) {\n        return Number(lifting.overrideEntryId);\n      }\n    }\n  }\n\n  for (let i = 0; i < orderedEntries.length; i++) {\n    const entry = orderedEntries[i];\n    const idx = attemptOneIndexed - 1;\n    if (entry[fieldKg][idx] !== 0 && entry[fieldStatus][idx] === 0) {\n      return entry.id;\n    }\n  }\n  return null;\n};\n\ntype NextEntryInfo = {\n  entryId: number;\n  attemptOneIndexed: number;\n};\n\n// Returns either an Object of {entryId, attemptOneIndexed}, or null.\nconst getNextEntryInfo = (\n  lifting: LiftingState,\n  currentEntryId: number | null,\n  orderedEntries: Array<Entry>,\n  attemptOneIndexed: number\n): NextEntryInfo | null => {\n  const lift = lifting.lift;\n  const fieldKg = liftToAttemptFieldName(lift);\n  const fieldStatus = liftToStatusFieldName(lift);\n\n  if (currentEntryId === null) {\n    return null;\n  }\n\n  // Find the index of the currentEntryId in the orderedEntries.\n  const currentEntryIndex = orderedEntries.findIndex((e) => e.id === currentEntryId);\n  if (currentEntryIndex === -1) {\n    return null;\n  }\n\n  // Walk forward, looking for additional valid attempts.\n  for (let i = currentEntryIndex + 1; i < orderedEntries.length; i++) {\n    const hasAttempt = orderedEntries[i][fieldKg][attemptOneIndexed - 1] !== 0;\n    const notTaken = orderedEntries[i][fieldStatus][attemptOneIndexed - 1] === 0;\n\n    if (hasAttempt && notTaken) {\n      return {\n        entryId: orderedEntries[i].id,\n        attemptOneIndexed: attemptOneIndexed,\n      };\n    }\n  }\n\n  // If none were found walking forward, check the next attempt by wrapping around.\n  if (attemptOneIndexed + 1 > MAX_ATTEMPTS) {\n    return null;\n  }\n  const nextAttemptOneIndexed = attemptOneIndexed + 1;\n\n  for (let i = 0; i < currentEntryIndex; i++) {\n    const hasAttempt = orderedEntries[i][fieldKg][nextAttemptOneIndexed - 1] !== 0;\n    const notTaken = orderedEntries[i][fieldStatus][nextAttemptOneIndexed - 1] === 0;\n\n    if (hasAttempt && notTaken) {\n      return {\n        entryId: orderedEntries[i].id,\n        attemptOneIndexed: nextAttemptOneIndexed,\n      };\n    }\n  }\n\n  return null;\n};\n\n// Main application logic. Resolves the LiftingState to a LiftingOrder.\nexport const getLiftingOrder = (entriesInFlight: Array<Entry>, lifting: LiftingState): LiftingOrder => {\n  const attemptOneIndexed = getActiveAttemptNumber(entriesInFlight, lifting);\n  const orderedEntries = orderEntriesForAttempt(entriesInFlight, lifting, attemptOneIndexed);\n  const currentEntryId = getCurrentEntryId(lifting, orderedEntries, attemptOneIndexed);\n  const nextEntryInfo = getNextEntryInfo(lifting, currentEntryId, orderedEntries, attemptOneIndexed);\n\n  return {\n    orderedEntries: orderedEntries,\n    attemptOneIndexed: attemptOneIndexed,\n    currentEntryId: currentEntryId,\n    nextAttemptOneIndexed: nextEntryInfo ? nextEntryInfo.attemptOneIndexed : null,\n    nextEntryId: nextEntryInfo ? nextEntryInfo.entryId : null,\n  };\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the logic for calculating the division Place of a lifter, shared between\n// the Lifting page, the Rankings page, and data export code.\n//\n// The algorithm used is particularly bad -- the foremost goal was to make an interface\n// that allowed for maximum code reuse between the Rankings and Lifting pages,\n// which have slightly different needs.\n\nimport { getProjectedEventTotalKg, getFinalEventTotalKg, liftToAttemptFieldName } from \"./entry\";\nimport { compareEntriesByAttempt } from \"./liftingOrder\";\nimport { getWeightClassStr } from \"../reducers/meetReducer\";\n\nimport { Sex, Event, Equipment, Entry, Lift } from \"../types/dataTypes\";\nimport { checkExhausted } from \"../types/utils\";\n\nexport type Place = number | \"DQ\";\n\n// Determines how the total is calculated.\ntype ResultsType = \"Projected\" | \"Final\";\n\n// Specifies a competition category under which entries can be ranked together.\nexport type Category = {\n  sex: Sex;\n  event: Event;\n  equipment: Equipment;\n  division: string;\n  weightClassStr: string;\n};\n\n// Wraps up all the entries in a category with the category's descriptors.\nexport type CategoryResults = {\n  category: Category;\n  orderedEntries: Array<Entry>;\n};\n\n// Generates a unique String out of a Category, for purposes of using as a Map key.\nconst categoryToKey = (category: Category): string => {\n  return JSON.stringify(category);\n};\nconst keyToCategory = (key: string): Category => {\n  return JSON.parse(key);\n};\n\n// Helper function for sortByPlaceInCategory().\n//\n// Determines the last successful Lift (for example, \"B\") for the Entry in\n// the given Event category.\n//\n// Lifters have already been checked to have a non-zero total.\nconst getLastSuccessfulLift = (event: Event, entry: Entry): Lift => {\n  // Iterate backwards over the Event types.\n  for (let i = event.length - 1; i >= 0; --i) {\n    const lift = event[i];\n    switch (lift) {\n      case \"S\":\n        if (entry.squatStatus.includes(1)) {\n          return \"S\";\n        }\n        break;\n      case \"B\":\n        if (entry.benchStatus.includes(1)) {\n          return \"B\";\n        }\n        break;\n      case \"D\":\n        if (entry.deadliftStatus.includes(1)) {\n          return \"D\";\n        }\n        break;\n      default:\n        return \"S\";\n    }\n  }\n  return \"S\";\n};\n\n// Helper function for sortByPlaceInCategory().\n//\n// Determines the last successful attempt (only counting the first three) for\n// the Entry for the given Lift.\n//\n// The caller already knows that a successful attempt was made, since it\n// passed getLastSuccessfulLift().\nconst getLastSuccessfulAttempt = (lift: Lift, entry: Entry): number => {\n  let statuses = null;\n  switch (lift) {\n    case \"S\":\n      statuses = entry.squatStatus;\n      break;\n    case \"B\":\n      statuses = entry.benchStatus;\n      break;\n    case \"D\":\n      statuses = entry.deadliftStatus;\n      break;\n    default:\n      checkExhausted(lift);\n      return 0;\n  }\n\n  // Consider only the first three attempts, in reverse.\n  for (let i = 2; i >= 0; --i) {\n    if (statuses[i] === 1) return i;\n  }\n  return 0;\n};\n\n// Returns a copy of the entries array sorted by Place.\n// All entries are assumed to be part of the same category.\nconst sortByPlaceInCategory = (entries: ReadonlyArray<Entry>, category: Category, type: ResultsType): Array<Entry> => {\n  const event = category.event;\n\n  // Clone the entries array to avoid modifying the original.\n  const clonedEntries = entries.slice();\n\n  // Sort in the given category, first place having the lowest index.\n  clonedEntries.sort((a, b) => {\n    // If either of the lifters are guests, sort the guest last\n    if (a.guest !== b.guest) {\n      return Number(a.guest) - Number(b.guest);\n    }\n    // Otherwise, both lifters are non-guests or guests, so sort as per usual\n    let aTotal = 0;\n\n    // First sort by Total, higher sorting lower.\n    if (type === \"Projected\") {\n      aTotal = getProjectedEventTotalKg(a, event);\n      const bTotal = getProjectedEventTotalKg(b, event);\n      if (aTotal !== bTotal) return bTotal - aTotal;\n    } else if (type === \"Final\") {\n      aTotal = getFinalEventTotalKg(a, event);\n      const bTotal = getFinalEventTotalKg(b, event);\n      if (aTotal !== bTotal) return bTotal - aTotal;\n    }\n\n    // If totals are equal, sort by Bodyweight, lower sorting lower.\n    if (a.bodyweightKg !== b.bodyweightKg) return a.bodyweightKg - b.bodyweightKg;\n\n    // If totals are zero, neither lifter took a successful attempt,\n    // so just sort arbitrarily by name.\n    if (aTotal === 0) {\n      if (a.name < b.name) return -1;\n      if (a.name > b.name) return 1;\n      return 0;\n    }\n\n    // If totals are equal and bodyweights are equal, the winner is the\n    // lifter who reached the total first. Because our implementation is\n    // stateless and doesn't remember lifting order, this gets complicated.\n    //\n    // For purposes of simplicity, this is broken into cases.\n    //\n    // At this point, the logic requires that each lifter have taken at least\n    // one successful attempt -- this is validated by checking the total\n    // against zero above.\n    //\n    // Case 1: If the lifters' last successful lifts were for different Lifts,\n    //         then the lifter with the earlier lift in SBD order wins.\n    const aLastSuccessfulLift = getLastSuccessfulLift(event, a);\n    const bLastSuccessfulLift = getLastSuccessfulLift(event, b);\n    const aLastSuccessfulLiftIndex = [\"S\", \"B\", \"D\"].indexOf(aLastSuccessfulLift);\n    const bLastSuccessfulLiftIndex = [\"S\", \"B\", \"D\"].indexOf(bLastSuccessfulLift);\n    if (aLastSuccessfulLiftIndex !== bLastSuccessfulLiftIndex) {\n      return aLastSuccessfulLiftIndex - bLastSuccessfulLiftIndex;\n    }\n\n    // Case 2: If the lifters reached the total on the same lift but on different\n    //         attempts, the lifter with the earlier attempt wins.\n    const lift: Lift = aLastSuccessfulLift;\n    const aLastSuccessfulAttempt: number = getLastSuccessfulAttempt(lift, a);\n    const bLastSuccessfulAttempt: number = getLastSuccessfulAttempt(lift, b);\n    if (aLastSuccessfulAttempt !== bLastSuccessfulAttempt) {\n      return aLastSuccessfulAttempt - bLastSuccessfulAttempt;\n    }\n\n    // Case 3: If the lifters reached the total on the same lift and on the same\n    //         attempt, defer to the lifting order to determine who lifted first.\n    const attempt = aLastSuccessfulAttempt;\n    return compareEntriesByAttempt(a, b, liftToAttemptFieldName(lift), attempt);\n  });\n\n  return clonedEntries;\n};\n\n// Determines the sort order by Event.\nconst getEventSortOrder = (ev: Event): number => {\n  return [\"SBD\", \"BD\", \"SB\", \"SD\", \"S\", \"B\", \"D\"].indexOf(ev);\n};\n\n// Determines the sort order by Equipment.\nconst getEquipmentSortOrder = (eq: Equipment): number => {\n  return [\"Bare\", \"Sleeves\", \"Wraps\", \"Single-ply\", \"Multi-ply\", \"Unlimited\"].indexOf(eq);\n};\n\n// Determines the sort order by Sex.\nconst getSexSortOrder = (sex: Sex): number => {\n  switch (sex) {\n    case \"F\":\n      return 0;\n    case \"M\":\n      return 1;\n    case \"Mx\":\n      return 2;\n    default:\n      checkExhausted(sex);\n      return 3;\n  }\n};\n\n// Determines the sort (and therefore presentation) order for the Category Results.\n// The input array is sorted in-place; nothing is returned.\nexport const sortCategoryResults = (results: Array<CategoryResults>): void => {\n  results.sort((a, b) => {\n    const catA = a.category;\n    const catB = b.category;\n\n    // First, sort by Sex.\n    const aSex = getSexSortOrder(catA.sex);\n    const bSex = getSexSortOrder(catB.sex);\n    if (aSex !== bSex) return aSex - bSex;\n\n    // Next, sort by Event.\n    const aEvent = getEventSortOrder(catA.event);\n    const bEvent = getEventSortOrder(catB.event);\n    if (aEvent !== bEvent) return aEvent - bEvent;\n\n    // Next, sort by Equipment.\n    const aEquipment = getEquipmentSortOrder(catA.equipment);\n    const bEquipment = getEquipmentSortOrder(catB.equipment);\n    if (aEquipment !== bEquipment) return aEquipment - bEquipment;\n\n    // Next, sort by Division as string.\n    if (catA.division < catB.division) return -1;\n    if (catA.division > catB.division) return 1;\n\n    // Finally, sort by WeightClass.\n    // Any SHW class should be placed at the end.\n    const aIsSHW: boolean = catA.weightClassStr.includes(\"+\");\n    const bIsSHW: boolean = catB.weightClassStr.includes(\"+\");\n    if (aIsSHW && !bIsSHW) return 1;\n    if (!aIsSHW && bIsSHW) return -1;\n    // parseInt() ignores the \"+\" at the end of SHW class strings.\n    const aWeightClass = catA.weightClassStr === \"\" ? 0 : parseInt(catA.weightClassStr);\n    const bWeightClass = catB.weightClassStr === \"\" ? 0 : parseInt(catB.weightClassStr);\n    return aWeightClass - bWeightClass;\n  });\n};\n\nconst mapSexToClasses = (\n  sex: Sex,\n  men: ReadonlyArray<number>,\n  women: ReadonlyArray<number>,\n  mx: ReadonlyArray<number>\n): ReadonlyArray<number> => {\n  switch (sex) {\n    case \"M\":\n      return men;\n    case \"F\":\n      return women;\n    case \"Mx\":\n      return mx;\n    default:\n      checkExhausted(sex);\n      return men;\n  }\n};\n\n// Generates objects representing every present category of competition,\n// with each entry given a Place designation.\n//\n// The returned objects are sorted in intended order of presentation.\nconst getAllResults = (\n  entries: ReadonlyArray<Entry>,\n  weightClassesKgMen: ReadonlyArray<number>,\n  weightClassesKgWomen: ReadonlyArray<number>,\n  weightClassesKgMx: ReadonlyArray<number>,\n  combineSleevesAndWraps: boolean,\n  combineSingleAndMulti: boolean,\n  type: ResultsType\n): Array<CategoryResults> => {\n  // Generate a map from category to the entries within that category.\n  // The map is populated by iterating over each entry and having the entry\n  // append itself to per-category lists.\n  const categoryMap = new Map<string, Entry[]>();\n  for (let i = 0; i < entries.length; i++) {\n    const e = entries[i];\n\n    // Remember consistent properties.\n    const sex = e.sex;\n    const classesForSex = mapSexToClasses(sex, weightClassesKgMen, weightClassesKgWomen, weightClassesKgMx);\n    const weightClassStr = getWeightClassStr(classesForSex, e.bodyweightKg);\n\n    // If the results combine Sleeves and Wraps, promote Sleeves to Wraps.\n    let equipment = e.equipment;\n    if (combineSleevesAndWraps && equipment === \"Sleeves\") {\n      equipment = \"Wraps\";\n    } else if (combineSingleAndMulti && equipment === \"Single-ply\") {\n      equipment = \"Multi-ply\";\n    }\n\n    // Iterate over every combination of division and event, adding to the map.\n    //\n    // This code also intentionally executes if `e.divisions.length === 0`.\n    // This is used to handle an exceptional case where a meet director expects\n    // all lifters to compete Open, but has failed to specify any division\n    // on the registration page, believing that to be unneeded.\n    //\n    // If that special case were not handled, the lifter would disappear from results.\n    const numDivisions = e.divisions.length;\n    let dividx: number = 0;\n    do {\n      const division = numDivisions > 0 ? e.divisions[dividx] : \"\";\n\n      for (let evidx = 0; evidx < e.events.length; evidx++) {\n        const event = e.events[evidx];\n        const category = { sex, event, equipment, division, weightClassStr };\n        const key = categoryToKey(category);\n\n        const catEntries = categoryMap.get(key);\n        catEntries === undefined ? categoryMap.set(key, [e]) : catEntries.push(e);\n      }\n    } while (++dividx < numDivisions);\n  }\n\n  // Iterate over each category and assign a Place to the entries therein.\n  const results = [];\n  for (const [key, catEntries] of categoryMap) {\n    const category = keyToCategory(key);\n    const orderedEntries = sortByPlaceInCategory(catEntries, category, type);\n    results.push({ category, orderedEntries });\n  }\n\n  sortCategoryResults(results);\n  return results;\n};\n\nexport const getProjectedResults = (\n  entries: ReadonlyArray<Entry>,\n  weightClassesKgMen: ReadonlyArray<number>,\n  weightClassesKgWomen: ReadonlyArray<number>,\n  weightClassesKgMx: ReadonlyArray<number>,\n  combineSleevesAndWraps: boolean,\n  combineSingleAndMulti: boolean\n): Array<CategoryResults> => {\n  return getAllResults(\n    entries,\n    weightClassesKgMen,\n    weightClassesKgWomen,\n    weightClassesKgMx,\n    combineSleevesAndWraps,\n    combineSingleAndMulti,\n    \"Projected\"\n  );\n};\n\nexport const getFinalResults = (\n  entries: ReadonlyArray<Entry>,\n  weightClassesKgMen: ReadonlyArray<number>,\n  weightClassesKgWomen: ReadonlyArray<number>,\n  weightClassesKgMx: ReadonlyArray<number>,\n  combineSleevesAndWraps: boolean,\n  combineSingleAndMulti: boolean\n): Array<CategoryResults> => {\n  return getAllResults(\n    entries,\n    weightClassesKgMen,\n    weightClassesKgWomen,\n    weightClassesKgMx,\n    combineSleevesAndWraps,\n    combineSingleAndMulti,\n    \"Final\"\n  );\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// The main component of the Lifting page, contained by the LiftingView.\n\nimport React, { CSSProperties } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport AttemptInput from \"./AttemptInput\";\nimport LocalizedString from \"../translations/LocalizedString\";\n\nimport { getWeightClassStr, getWeightClassLbsStr } from \"../../reducers/meetReducer\";\nimport { getPoints } from \"../../logic/coefficients/coefficients\";\nimport { getProjectedTotalKg, getFinalTotalKg, liftToAttemptFieldName, liftToStatusFieldName } from \"../../logic/entry\";\n\nimport { getProjectedResults, getFinalResults } from \"../../logic/divisionPlace\";\nimport { kg2lbs, displayWeight, displayPoints, displayPlaceOrdinal } from \"../../logic/units\";\n\nimport { CategoryResults } from \"../../logic/divisionPlace\";\nimport { Entry, Equipment, Language, Lift, Sex } from \"../../types/dataTypes\";\nimport { GlobalState, MeetState, LiftingState, RegistrationState } from \"../../types/stateTypes\";\n\nimport styles from \"./LiftingTable.module.scss\";\nimport { checkExhausted } from \"../../types/utils\";\nimport { getString } from \"../../logic/strings\";\n\ninterface OwnProps {\n  attemptOneIndexed: number;\n  orderedEntries: Array<Entry>;\n  currentEntryId: number | null;\n}\n\ninterface StateProps {\n  meet: MeetState;\n  registration: RegistrationState;\n  lifting: LiftingState;\n  language: Language;\n}\n\ntype Props = OwnProps & StateProps;\n\n// List of possible columns that can be rendered.\n// The main render() function decides what columns to render,\n// and communicates its selection with each row's renderer.\ntype ColumnType =\n  | \"Lifter\"\n  | \"Bodyweight\"\n  | \"WeightClass\"\n  | \"Division\"\n  | \"Lot\"\n  | \"Equipment\"\n  | \"Age\"\n  | \"S1\"\n  | \"S2\"\n  | \"S3\"\n  | \"S4\" // eslint-disable-line\n  | \"B1\"\n  | \"B2\"\n  | \"B3\"\n  | \"B4\" // eslint-disable-line\n  | \"D1\"\n  | \"D2\"\n  | \"D3\"\n  | \"D4\" // eslint-disable-line\n  | \"BestSquat\"\n  | \"BestBench\" // eslint-disable-line\n  | \"Spacer1\"\n  | \"Spacer2\"\n  | \"ProjectedTotal\"\n  | \"ProjectedPoints\"\n  | \"FinalTotal\"\n  | \"FinalPoints\"\n  | \"Place\";\n\n// This is a global for remembering the last AttemptInput that was rendered.\n// After the \"No Lift\" or \"Good Lift\" buttons are clicked, the last-rendered\n// AttemptInput is given focus by an event handler.\n//\n// This works because the LiftingTable is always re-rendered when one of\n// those buttons is clicked, and because there's only one LiftingTable.\nexport let globalFocusAttemptInputId: string | null = null;\n\n// The logic for globalFocusAttemptInputId is looking for the AttemptInput\n// that's all the way on the right, and as far down the table as possible.\nlet globalHighestAttemptInputAttempt: number = 0;\n\nclass LiftingTable extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n    this.renderRows = this.renderRows.bind(this);\n    this.renderBest3AttemptField = this.renderBest3AttemptField.bind(this);\n    this.renderAttemptField = this.renderAttemptField.bind(this);\n    this.renderCell = this.renderCell.bind(this);\n  }\n\n  renderBest3AttemptField = (entry: Entry, lift: Lift, columnType: ColumnType) => {\n    const fieldKg = liftToAttemptFieldName(lift);\n    const fieldStatus = liftToStatusFieldName(lift);\n\n    // Look for either the best lift or the lightest no-lift.\n    let best3 = 0.0;\n    let lightestFailed = 0.0;\n\n    for (let i = 0; i < 3; i++) {\n      const kg = entry[fieldKg][i];\n\n      if (entry[fieldStatus][i] === 1) {\n        best3 = Math.max(best3, kg);\n      } else if (entry[fieldStatus][i] === -1) {\n        lightestFailed = lightestFailed === 0 ? kg : Math.min(lightestFailed, kg);\n      }\n    }\n\n    // Render cells using attempt coloring.\n    if (best3 !== 0) {\n      const asNumber = this.props.meet.inKg ? best3 : kg2lbs(best3);\n      return (\n        <td key={columnType} className={styles.goodlift}>\n          {displayWeight(asNumber, this.props.language)}\n        </td>\n      );\n    }\n    if (lightestFailed !== 0) {\n      const asNumber = this.props.meet.inKg ? lightestFailed : kg2lbs(lightestFailed);\n      return (\n        <td key={columnType} className={styles.nolift}>\n          {displayWeight(asNumber, this.props.language)}\n        </td>\n      );\n    }\n\n    // Show an empty cell by default.\n    return <td key={columnType} />;\n  };\n\n  renderAttemptField = (entry: Entry, lift: Lift, attemptOneIndexed: number, columnType: ColumnType) => {\n    const fieldKg = liftToAttemptFieldName(lift);\n    const fieldStatus = liftToStatusFieldName(lift);\n\n    const kg = entry[fieldKg][attemptOneIndexed - 1];\n    const status = entry[fieldStatus][attemptOneIndexed - 1];\n    const wStr = displayWeight(this.props.meet.inKg ? kg : kg2lbs(kg), this.props.language);\n    const displayStr = kg === 0 ? \"\" : wStr;\n\n    // Get a unique ID for each AttemptInput.\n    // This is used in combination with the globalFocusAttemptInputId to give\n    // focus to the last-rendered AttemptInput after a button is clicked.\n    const id = \"AttemptInput-\" + entry.id + \"-\" + lift + attemptOneIndexed;\n\n    // If the lifter was manually selected, always show an AttemptInput.\n    // This allows manual correction of weights when a misload occurs,\n    // even though the lift has already been marked good lift / no lift.\n    if (this.props.lifting.overrideEntryId === entry.id && attemptOneIndexed === this.props.attemptOneIndexed) {\n      // Is this a better match for giving focus?\n      if (attemptOneIndexed >= globalHighestAttemptInputAttempt) {\n        globalHighestAttemptInputAttempt = attemptOneIndexed;\n        globalFocusAttemptInputId = id;\n      }\n\n      return (\n        <td key={columnType} className={styles.attemptInputCell}>\n          <AttemptInput id={id} entry={entry} lift={lift} attemptOneIndexed={attemptOneIndexed} />\n        </td>\n      );\n    }\n\n    // If the attempt was already made, render a colored text field.\n    // The weight cannot be changed after the fact.\n    if (status !== 0) {\n      const className = status === 1 ? styles.goodlift : styles.nolift;\n      const maybeNegative = status === 1 ? \"\" : \"-\";\n      return (\n        <td key={columnType} className={className}>\n          {maybeNegative}\n          {displayStr}\n        </td>\n      );\n    }\n\n    // If the attempt isn't for the current lift, just show the number.\n    if (lift !== this.props.lifting.lift) {\n      return <td key={columnType}>{displayStr}</td>;\n    }\n\n    // Was any previous attempt taken?\n    let anyPreviousAttemptTaken = false;\n    for (let i = 1; i < attemptOneIndexed; i++) {\n      if (entry[fieldStatus][i - 1] !== 0) {\n        anyPreviousAttemptTaken = true;\n        break;\n      }\n    }\n\n    // Show a text input box if either:\n    // 1. This column is for the current attempt, and the lifter has a previous attempt.\n    // 2. This column is for the next attempt, and the lifter took the current attempt.\n    // 3. For whatever reason, someone managed to specify a weight.\n    const currentAndHasPrevious = attemptOneIndexed === this.props.attemptOneIndexed && anyPreviousAttemptTaken;\n    const nextAndTookLast =\n      attemptOneIndexed === this.props.attemptOneIndexed + 1 &&\n      entry[fieldStatus][this.props.attemptOneIndexed - 1] !== 0;\n\n    if (kg !== 0 || currentAndHasPrevious || nextAndTookLast) {\n      // Is this a better match for giving focus?\n      if (attemptOneIndexed >= globalHighestAttemptInputAttempt) {\n        globalHighestAttemptInputAttempt = attemptOneIndexed;\n        globalFocusAttemptInputId = id;\n      }\n\n      return (\n        <td key={columnType} className={styles.attemptInputCell}>\n          <AttemptInput id={id} entry={entry} lift={lift} attemptOneIndexed={attemptOneIndexed} />\n        </td>\n      );\n    }\n\n    // Default handler.\n    return <td key={columnType}>{displayStr}</td>;\n  };\n\n  mapSexToClasses = (sex: Sex, meetState: MeetState): ReadonlyArray<number> => {\n    switch (sex) {\n      case \"M\":\n        return meetState.weightClassesKgMen;\n      case \"F\":\n        return meetState.weightClassesKgWomen;\n      case \"Mx\":\n        return meetState.weightClassesKgMx;\n      default:\n        checkExhausted(sex);\n        return meetState.weightClassesKgMen;\n    }\n  };\n\n  renderCell = (entry: Entry, columnType: ColumnType, categoryResults: Array<CategoryResults>): JSX.Element => {\n    switch (columnType) {\n      case \"Lifter\": {\n        let cell: string | JSX.Element = entry.name;\n\n        // Bold the name of the current lifter.\n        if (this.props.currentEntryId === entry.id) {\n          cell = <b>{entry.name}</b>;\n        }\n\n        return (\n          <td key={columnType} className={styles.textCell}>\n            {cell}\n          </td>\n        );\n      }\n      case \"Bodyweight\": {\n        const bw = entry.bodyweightKg;\n        const bwStr = displayWeight(this.props.meet.inKg ? bw : kg2lbs(bw), this.props.language);\n        return <td key={columnType}>{bw === 0 ? null : bwStr}</td>;\n      }\n      case \"WeightClass\": {\n        const bw = entry.bodyweightKg;\n        const classesForSex = this.mapSexToClasses(entry.sex, this.props.meet);\n        const weightClass = this.props.meet.inKg\n          ? getWeightClassStr(classesForSex, bw, this.props.language)\n          : getWeightClassLbsStr(classesForSex, bw);\n        return <td key={columnType}>{bw === 0 ? null : weightClass}</td>;\n      }\n      case \"Division\": {\n        // Just show the first division in the list, if any.\n        // Changing this requires coordination with the \"Place\" column code.\n        const firstDiv = entry.divisions.length > 0 ? entry.divisions[0] : null;\n        return (\n          <td key={columnType} className={styles.textCell}>\n            {firstDiv}\n          </td>\n        );\n      }\n      case \"Lot\": {\n        return (\n          <td key={columnType} className={styles.textCell}>\n            {entry.lot === 0 ? \"\" : entry.lot}\n          </td>\n        );\n      }\n      case \"Equipment\": {\n        // Use shorter names to actually fit in the table.\n        let equipment: string | Equipment = entry.equipment;\n        if (equipment === \"Single-ply\") equipment = \"Single\";\n        if (equipment === \"Multi-ply\") equipment = \"Multi\";\n        return <td key={columnType}>{equipment}</td>;\n      }\n      case \"Age\":\n        return <td key={columnType}>{entry.age}</td>;\n      case \"S1\":\n        return this.renderAttemptField(entry, \"S\", 1, columnType);\n      case \"S2\":\n        return this.renderAttemptField(entry, \"S\", 2, columnType);\n      case \"S3\":\n        return this.renderAttemptField(entry, \"S\", 3, columnType);\n      case \"S4\":\n        return this.renderAttemptField(entry, \"S\", 4, columnType);\n      case \"B1\":\n        return this.renderAttemptField(entry, \"B\", 1, columnType);\n      case \"B2\":\n        return this.renderAttemptField(entry, \"B\", 2, columnType);\n      case \"B3\":\n        return this.renderAttemptField(entry, \"B\", 3, columnType);\n      case \"B4\":\n        return this.renderAttemptField(entry, \"B\", 4, columnType);\n      case \"D1\":\n        return this.renderAttemptField(entry, \"D\", 1, columnType);\n      case \"D2\":\n        return this.renderAttemptField(entry, \"D\", 2, columnType);\n      case \"D3\":\n        return this.renderAttemptField(entry, \"D\", 3, columnType);\n      case \"D4\":\n        return this.renderAttemptField(entry, \"D\", 4, columnType);\n      case \"BestSquat\":\n        return this.renderBest3AttemptField(entry, \"S\", columnType);\n      case \"BestBench\":\n        return this.renderBest3AttemptField(entry, \"B\", columnType);\n      case \"Spacer1\": // fallthrough\n      case \"Spacer2\":\n        return <td key={columnType} className={styles.spacerCell} />;\n      case \"ProjectedTotal\": {\n        const totalKg = getProjectedTotalKg(entry);\n        const asNumber = this.props.meet.inKg ? totalKg : kg2lbs(totalKg);\n        return <td key={columnType}>{totalKg === 0 ? null : displayWeight(asNumber, this.props.language)}</td>;\n      }\n      case \"ProjectedPoints\": {\n        const totalKg: number = getProjectedTotalKg(entry);\n        const event = entry.events.length > 0 ? entry.events[0] : \"SBD\";\n        const points: number = getPoints(this.props.meet.formula, entry, event, totalKg, this.props.meet.inKg);\n\n        // Normally this column is hidden for \"Total\", but it's handled just in case.\n        if (this.props.meet.formula === \"Total\") {\n          return <td key={columnType}>{points !== 0 ? displayWeight(points, this.props.language) : null}</td>;\n        }\n        return <td key={columnType}>{points !== 0 ? displayPoints(points, this.props.language) : null}</td>;\n      }\n      case \"FinalTotal\": {\n        const totalKg = getFinalTotalKg(entry);\n        const asNumber = this.props.meet.inKg ? totalKg : kg2lbs(totalKg);\n        return <td key={columnType}>{totalKg === 0 ? null : displayWeight(asNumber, this.props.language)}</td>;\n      }\n      case \"FinalPoints\": {\n        const totalKg: number = getFinalTotalKg(entry);\n        const event = entry.events.length > 0 ? entry.events[0] : \"SBD\";\n        const points: number = getPoints(this.props.meet.formula, entry, event, totalKg, this.props.meet.inKg);\n\n        // Normally this column is hidden for \"Total\", but it's handled just in case.\n        if (this.props.meet.formula === \"Total\") {\n          return <td key={columnType}>{points !== 0 ? displayWeight(points, this.props.language) : null}</td>;\n        }\n        return <td key={columnType}>{points !== 0 ? displayPoints(points, this.props.language) : null}</td>;\n      }\n      case \"Place\": {\n        // If the lifter has no total, then don't report a place.\n        if (getFinalTotalKg(entry) === 0) return <td key={columnType} />;\n\n        // If the lifter is a guest, they cannot place, so just display the guest symbol.\n        if (entry.guest) return <td key={columnType}>{getString(\"results.lifter-guest\", this.props.language)}</td>;\n\n        // Just show the Place from the first division in the list.\n        // This is the same division as shown in the \"Division\" column.\n        if (entry.divisions.length === 0) return <td key={columnType} />;\n        const firstDiv = entry.divisions[0];\n\n        // Look at all the categories, and find the first one including this division\n        // and entry. Because the categories are in sorted order, SBD takes priority\n        // over B by default.\n        for (let i = 0; i < categoryResults.length; i++) {\n          const result = categoryResults[i];\n          if (result.category.division !== firstDiv) {\n            continue;\n          }\n\n          const catEntries = result.orderedEntries;\n          for (let j = 0; j < catEntries.length; j++) {\n            const catEntry = catEntries[j];\n\n            if (catEntry.id === entry.id) {\n              // We can use the index into the array as their place, since it sorted and guests will be last in the array\n              const ordinal = displayPlaceOrdinal(j + 1, entry, this.props.language);\n              return <td key={columnType}>{ordinal}</td>;\n            }\n          }\n        }\n\n        return <td key={columnType} />; // Shouldn't happen.\n      }\n      default:\n        checkExhausted(columnType);\n        return <td key={columnType} />;\n    }\n  };\n\n  renderRows = (columns: Array<ColumnType>, categoryResults: Array<CategoryResults>) => {\n    const orderedEntries = this.props.orderedEntries;\n    const currentEntryId = this.props.currentEntryId;\n\n    const rows = [];\n    for (let i = 0; i < orderedEntries.length; i++) {\n      const entry = orderedEntries[i];\n\n      // Iterate over each columnType, handling each.\n      const cells = [];\n      for (let col = 0; col < columns.length; col++) {\n        const columnType = columns[col];\n        cells.push(this.renderCell(entry, columnType, categoryResults));\n      }\n\n      const isCurrent = entry.id === currentEntryId;\n      const rowClassName = isCurrent ? styles.current : \"\";\n      rows.push(\n        <tr key={entry.id} className={rowClassName}>\n          {cells}\n        </tr>\n      );\n    }\n    return rows;\n  };\n\n  getColumnHeaderLabel = (columnType: ColumnType) => {\n    switch (columnType) {\n      case \"Lifter\":\n        return <LocalizedString id=\"lifting.column-lifter\" />;\n      case \"Bodyweight\":\n        return <LocalizedString id=\"lifting.column-bodyweight\" />;\n      case \"WeightClass\":\n        return <LocalizedString id=\"lifting.column-weightclass\" />;\n      case \"Division\":\n        return <LocalizedString id=\"lifting.column-division\" />;\n      case \"Lot\":\n        return <LocalizedString id=\"lifting.column-lot\" />;\n      case \"Equipment\":\n        return <LocalizedString id=\"lifting.column-equipment\" />;\n      case \"Age\":\n        return <LocalizedString id=\"lifting.column-age\" />;\n      case \"S1\":\n        return <LocalizedString id=\"lifting.column-s1\" />;\n      case \"S2\":\n        return <LocalizedString id=\"lifting.column-s2\" />;\n      case \"S3\":\n        return <LocalizedString id=\"lifting.column-s3\" />;\n      case \"S4\":\n        return <LocalizedString id=\"lifting.column-s4\" />;\n      case \"B1\":\n        return <LocalizedString id=\"lifting.column-b1\" />;\n      case \"B2\":\n        return <LocalizedString id=\"lifting.column-b2\" />;\n      case \"B3\":\n        return <LocalizedString id=\"lifting.column-b3\" />;\n      case \"B4\":\n        return <LocalizedString id=\"lifting.column-b4\" />;\n      case \"D1\":\n        return <LocalizedString id=\"lifting.column-d1\" />;\n      case \"D2\":\n        return <LocalizedString id=\"lifting.column-d2\" />;\n      case \"D3\":\n        return <LocalizedString id=\"lifting.column-d3\" />;\n      case \"D4\":\n        return <LocalizedString id=\"lifting.column-d4\" />;\n      case \"BestSquat\":\n        return <LocalizedString id=\"lifting.column-bestsquat\" />;\n      case \"BestBench\":\n        return <LocalizedString id=\"lifting.column-bestbench\" />;\n      case \"Spacer1\": // fallthrough\n      case \"Spacer2\":\n        return \"\";\n      case \"ProjectedTotal\":\n        return <LocalizedString id=\"lifting.column-projectedtotal\" />;\n      case \"ProjectedPoints\":\n        return <LocalizedString id=\"lifting.column-projectedpoints\" />;\n      case \"FinalTotal\":\n        return <LocalizedString id=\"lifting.column-projectedtotal\" />;\n      case \"FinalPoints\":\n        return <LocalizedString id=\"lifting.column-finalpoints\" />;\n      case \"Place\":\n        return <LocalizedString id=\"lifting.column-place\" />;\n      default:\n        checkExhausted(columnType);\n        return \"\";\n    }\n  };\n\n  render() {\n    // Reset this: hunting for a new AttemptIndex.\n    globalHighestAttemptInputAttempt = 0;\n\n    // Select the columns for display.\n    const columns: Array<ColumnType> = [\"Lifter\"];\n    // If the score table set the division column with to zero, hide it.\n    if (this.props.lifting.columnDivisionWidthPx !== 0) {\n      columns.push(\"Division\");\n    }\n    columns.push(\"Bodyweight\", \"WeightClass\");\n\n    // The \"Lot\" column is only shown if lot numbers are used.\n    for (let i = 0; i < this.props.orderedEntries.length; ++i) {\n      if (this.props.orderedEntries[i].lot !== 0) {\n        columns.push(\"Lot\");\n        break;\n      }\n    }\n\n    // Select lift columns based off the current lift.\n    if (this.props.lifting.lift === \"S\") {\n      columns.push(\"Spacer1\");\n      columns.push(\"S1\", \"S2\", \"S3\");\n      if (this.props.attemptOneIndexed === 4) {\n        columns.push(\"S4\");\n      }\n      columns.push(\"Spacer2\");\n      columns.push(\"B1\", \"D1\");\n    } else if (this.props.lifting.lift === \"B\") {\n      columns.push(\"BestSquat\", \"Spacer1\", \"B1\", \"B2\", \"B3\");\n      if (this.props.attemptOneIndexed === 4) {\n        columns.push(\"B4\");\n      }\n      columns.push(\"Spacer2\", \"D1\");\n    } else if (this.props.lifting.lift === \"D\") {\n      columns.push(\"BestSquat\", \"BestBench\", \"Spacer1\", \"D1\", \"D2\", \"D3\");\n      if (this.props.attemptOneIndexed === 4) {\n        columns.push(\"D4\");\n      }\n      columns.push(\"Spacer2\");\n    }\n\n    // Use projected totals for everything before 2nd attempt deadlifts.\n    const useProjected = this.props.lifting.lift !== \"D\" || this.props.attemptOneIndexed < 2;\n    columns.push(useProjected ? \"ProjectedTotal\" : \"FinalTotal\");\n    if (this.props.meet.formula !== \"Total\") {\n      columns.push(useProjected ? \"ProjectedPoints\" : \"FinalPoints\");\n    }\n    columns.push(\"Place\");\n\n    // Build headers.\n    const headers = [];\n    const highlightColumn = this.props.lifting.lift + String(this.props.attemptOneIndexed);\n    for (let i = 0; i < columns.length; i++) {\n      const column = columns[i];\n      let className = styles.smallCell;\n      let style: CSSProperties | undefined;\n\n      if (column === \"Lifter\") {\n        className = styles.nameCell;\n      } else if (column === \"Division\") {\n        className = styles.divisionCell;\n        if (this.props.lifting.columnDivisionWidthPx) {\n          style = { width: this.props.lifting.columnDivisionWidthPx + \"px\" };\n        }\n      } else if (column === \"Spacer1\" || column === \"Spacer2\") {\n        className = styles.spacerCell;\n      } else if (column === highlightColumn) {\n        className = styles.activeColumn;\n      }\n\n      headers.push(\n        <th key={column} className={className} style={style}>\n          {this.getColumnHeaderLabel(column)}\n        </th>\n      );\n    }\n\n    // Calculate the Division placings for each of the lifters.\n    const categoryResults = useProjected\n      ? getProjectedResults(\n          this.props.registration.entries,\n          this.props.meet.weightClassesKgMen,\n          this.props.meet.weightClassesKgWomen,\n          this.props.meet.weightClassesKgMx,\n          this.props.meet.combineSleevesAndWraps,\n          this.props.meet.combineSingleAndMulti\n        )\n      : getFinalResults(\n          this.props.registration.entries,\n          this.props.meet.weightClassesKgMen,\n          this.props.meet.weightClassesKgWomen,\n          this.props.meet.weightClassesKgMx,\n          this.props.meet.combineSleevesAndWraps,\n          this.props.meet.combineSingleAndMulti\n        );\n\n    return (\n      <table className={styles.liftingtable}>\n        <thead>\n          <tr>{headers}</tr>\n        </thead>\n        <tbody>{this.renderRows(columns, categoryResults)}</tbody>\n      </table>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => {\n  return {\n    meet: state.meet,\n    registration: state.registration,\n    lifting: state.lifting,\n    language: state.language,\n  };\n};\n\nexport default connect(mapStateToProps)(LiftingTable);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// The footer of the Lifting page, contained by the LiftingView.\n// This is the parent element of the controls that affect present lifting state.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Button from \"react-bootstrap/Button\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Form from \"react-bootstrap/Form\";\n\nimport { globalFocusAttemptInputId } from \"./LiftingTable\";\n\nimport { getString, localizeFlight } from \"../../logic/strings\";\nimport { displayNumber } from \"../../logic/units\";\n\nimport { markLift, overrideAttempt, overrideEntryId, setLiftingGroup } from \"../../actions/liftingActions\";\n\nimport { Entry, Flight, Language, Lift } from \"../../types/dataTypes\";\nimport { GlobalState, LiftingState } from \"../../types/stateTypes\";\n\nimport styles from \"./LiftingFooter.module.scss\";\nimport { Dispatch } from \"redux\";\nimport { assertFlight, assertString, assertLift } from \"../../types/utils\";\n\ninterface OwnProps {\n  attemptOneIndexed: number;\n  orderedEntries: ReadonlyArray<Readonly<Entry>>;\n  currentEntryId: number | null;\n  flightsOnPlatform: ReadonlyArray<Flight>;\n  toggleReplaceTableWithWeighins: () => void;\n}\n\ninterface StateProps {\n  lifting: LiftingState;\n  lengthDays: number;\n  platformsOnDays: ReadonlyArray<number>;\n  allow4thAttempts: boolean;\n  language: Language;\n}\n\ninterface DispatchProps {\n  setLiftingGroup: (day: number, platform: number, flight: Flight, lift: Lift) => void;\n  overrideAttempt: (attempt: number) => void;\n  overrideEntryId: (entryId: number) => void;\n  markLift: (entryId: number, lift: Lift, attempt: number, success: boolean) => void;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nclass LiftingFooter extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    this.handleDayChange = this.handleDayChange.bind(this);\n    this.handlePlatformChange = this.handlePlatformChange.bind(this);\n    this.handleFlightChange = this.handleFlightChange.bind(this);\n    this.handleLiftChange = this.handleLiftChange.bind(this);\n\n    this.handleOnMouseEnter = this.handleOnMouseEnter.bind(this);\n    this.handleGoodLift = this.handleGoodLift.bind(this);\n    this.handleNoLift = this.handleNoLift.bind(this);\n\n    this.handleAttemptChange = this.handleAttemptChange.bind(this);\n    this.handleLifterChange = this.handleLifterChange.bind(this);\n\n    this.setFocusAttemptInputTimeout = this.setFocusAttemptInputTimeout.bind(this);\n\n    this.makeLifterOptions = this.makeLifterOptions.bind(this);\n  }\n\n  handleDayChange = (event: React.BaseSyntheticEvent) => {\n    const day = Number(event.currentTarget.value);\n    const flight = this.props.lifting.flight;\n    const lift = this.props.lifting.lift;\n\n    // If the new day has fewer platforms, reset the platform selector also.\n    let platform = this.props.lifting.platform;\n    if (platform > this.props.platformsOnDays[day - 1]) {\n      platform = 1;\n    }\n\n    this.props.setLiftingGroup(day, platform, flight, lift);\n  };\n\n  handlePlatformChange = (event: React.BaseSyntheticEvent) => {\n    const day = this.props.lifting.day;\n    const platform = Number(event.currentTarget.value);\n    const flight = this.props.lifting.flight;\n    const lift = this.props.lifting.lift;\n    this.props.setLiftingGroup(day, platform, flight, lift);\n  };\n\n  handleFlightChange = (event: React.BaseSyntheticEvent) => {\n    const day = this.props.lifting.day;\n    const platform = this.props.lifting.platform;\n    const flight = event.currentTarget.value;\n    const lift = this.props.lifting.lift;\n    if (assertString(flight) && assertFlight(flight)) {\n      this.props.setLiftingGroup(day, platform, flight, lift);\n    }\n  };\n\n  handleLiftChange = (event: React.BaseSyntheticEvent) => {\n    const day = this.props.lifting.day;\n    const platform = this.props.lifting.platform;\n    const flight = \"A\"; // Always reset to Flight A.\n    const lift = event.currentTarget.value;\n    if (assertString(lift) && assertLift(lift)) {\n      this.props.setLiftingGroup(day, platform, flight, lift);\n    }\n  };\n\n  handleAttemptChange = (event: React.BaseSyntheticEvent) => {\n    const attempt = Number(event.currentTarget.value);\n    this.props.overrideAttempt(attempt);\n  };\n\n  handleLifterChange = (event: React.BaseSyntheticEvent) => {\n    const entryId = Number(event.currentTarget.value);\n    this.props.overrideEntryId(entryId);\n  };\n\n  // After a \"No Lift\" or \"Good Lift\" button is clicked, try to change focus\n  // to the AttemptInput that the score table is likely to want to type into.\n  setFocusAttemptInputTimeout = () => {\n    if (globalFocusAttemptInputId === null) {\n      return;\n    }\n\n    // Auto-focusing is significantly less useful on 3rd attempts and beyond.\n    if (this.props.attemptOneIndexed >= 3) {\n      return;\n    }\n\n    setTimeout(function () {\n      if (globalFocusAttemptInputId === null) {\n        return;\n      }\n\n      const elem = document.getElementById(globalFocusAttemptInputId);\n      if (elem) {\n        elem.focus();\n      }\n    }, 100);\n  };\n\n  // This resolves Issue #224. The Good Lift and No Lift buttons are connected\n  // to onMouseDown handlers to greatly improve responsive feel. However, that\n  // means that an onBlur event is not fired for any AttemptInput that is\n  // currently being edited. We need to ensure that it's fired, just as if we\n  // were using a normal onClick handler.\n  //\n  // To ensure that any current AttemptInput is blurred, an onMouseEnter handler\n  // is added that always blurs the currently-focused element. Because there are\n  // several hundred milliseconds between onMouseEnter and onMouseDown due to\n  // human reaction timing, the onBlur event will fully-execute before onMouseDown.\n  handleOnMouseEnter = () => {\n    const activeElement = document.activeElement;\n    if (activeElement instanceof HTMLElement) {\n      activeElement.blur();\n    }\n  };\n\n  handleGoodLift = () => {\n    // If there's no active entry, there's nothing to set.\n    if (this.props.currentEntryId === null) {\n      return;\n    }\n\n    const entryId = Number(this.props.currentEntryId);\n    const lift = this.props.lifting.lift;\n    const attempt = this.props.attemptOneIndexed;\n    this.props.markLift(entryId, lift, attempt, true);\n    this.setFocusAttemptInputTimeout();\n  };\n\n  handleNoLift = () => {\n    // If there's no active entry, there's nothing to set.\n    if (this.props.currentEntryId === null) {\n      return;\n    }\n\n    const entryId = Number(this.props.currentEntryId);\n    const lift = this.props.lifting.lift;\n    const attempt = this.props.attemptOneIndexed;\n    this.props.markLift(entryId, lift, attempt, false);\n    this.setFocusAttemptInputTimeout();\n  };\n\n  // Check whether \"document.fullscreenElement\" exists, including prefixes.\n  hasFullscreenElement = (): boolean => {\n    const doc: any = document;\n    if (doc.fullscreenElement) return true;\n    if (doc.webkitFullscreenElement) return true;\n    if (doc.mozFullscreenElement) return true;\n    if (doc.msFullscreenElement) return true;\n    return false;\n  };\n\n  // Calls exitFullscreen(), but with prefixes.\n  exitFullscreen = () => {\n    const doc: any = document;\n    if (typeof doc.exitFullscreen === \"function\") doc.exitFullscreen();\n    else if (typeof doc.webkitExitFullscreen === \"function\") doc.webkitExitFullscreen();\n    else if (typeof doc.mozExitFullscreen === \"function\") doc.mozExitFullscreen();\n    else if (typeof doc.msExitFullscreen === \"function\") doc.msExitFullscreen();\n  };\n\n  // Calls requestFullscreen(), but with prefixes.\n  requestFullscreen = (e: any) => {\n    if (typeof e.requestFullscreen === \"function\") e.requestFullscreen();\n    else if (typeof e.webkitRequestFullscreen === \"function\") e.webkitRequestFullscreen();\n    else if (typeof e.mozRequestFullscreen === \"function\") e.mozRequestFullscreen();\n    else if (typeof e.msRequestFullscreen === \"function\") e.msRequestFullscreen();\n  };\n\n  // Called when the \"Toggle Fullscreen\" button is clicked.\n  handleFullscreen = () => {\n    // Document must be typecast to \"any\" because the fullscreen properties\n    // used here aren't defined in the Flow Document type definition.\n    if (this.hasFullscreenElement() === true) {\n      this.exitFullscreen();\n    } else {\n      const liftingView = document.getElementById(\"liftingView\");\n      if (liftingView !== null) {\n        this.requestFullscreen(liftingView);\n      }\n    }\n  };\n\n  makeLifterOptions = () => {\n    const orderedEntries = this.props.orderedEntries;\n\n    if (orderedEntries.length === 0) {\n      return (\n        <option value={0} key={0}>\n          {getString(\"lifting.footer-no-lifters\", this.props.language)}\n        </option>\n      );\n    }\n\n    const lifterOptions = [];\n    for (let i = 0; i < orderedEntries.length; i++) {\n      const entry = orderedEntries[i];\n      lifterOptions.push(\n        <option value={entry.id} key={entry.id}>\n          {entry.name}\n        </option>\n      );\n    }\n    return lifterOptions;\n  };\n\n  render() {\n    const language = this.props.language;\n    const numPlatforms = this.props.platformsOnDays[this.props.lifting.day - 1];\n\n    const dayOptions = [];\n    const dayTemplate = getString(\"lifting.footer-day-template\", language);\n    for (let i = 1; i <= this.props.lengthDays; i++) {\n      dayOptions.push(\n        <option value={i} key={i}>\n          {dayTemplate.replace(\"{N}\", displayNumber(i, language))}\n        </option>\n      );\n    }\n\n    const platformOptions = [];\n    const platformTemplate = getString(\"lifting.footer-platform-template\", language);\n    for (let i = 1; i <= numPlatforms; i++) {\n      platformOptions.push(\n        <option value={i} key={i}>\n          {platformTemplate.replace(\"{N}\", displayNumber(i, language))}\n        </option>\n      );\n    }\n\n    const liftOptions = [\n      <option key={\"S\"} value={\"S\"}>\n        {getString(\"lifting.footer-squat\", language)}\n      </option>,\n      <option key={\"B\"} value={\"B\"}>\n        {getString(\"lifting.footer-bench\", language)}\n      </option>,\n      <option key={\"D\"} value={\"D\"}>\n        {getString(\"lifting.footer-deadlift\", language)}\n      </option>,\n    ];\n\n    const flightOptions = [];\n    const flightTemplate = getString(\"lifting.footer-flight-template\", language);\n    for (let i = 0; i < this.props.flightsOnPlatform.length; i++) {\n      const flight = this.props.flightsOnPlatform[i];\n      const key = this.props.lifting.day + \"-\" + this.props.lifting.platform + \"-\" + i;\n      flightOptions.push(\n        <option value={flight} key={key}>\n          {flightTemplate.replace(\"{flight}\", localizeFlight(flight, language))}\n        </option>\n      );\n    }\n    if (flightOptions.length === 0) {\n      flightOptions.push(<option key=\"none\">{getString(\"lifting.footer-no-flights\", language)}</option>);\n    }\n\n    const attemptOptions = [];\n    const attemptTemplate = getString(\"lifting.footer-attempt-template\", language);\n    for (let i = 1; i <= 3; i++) {\n      attemptOptions.push(\n        <option key={i} value={i}>\n          {attemptTemplate.replace(\"{N}\", displayNumber(i, language))}\n        </option>\n      );\n    }\n    if (this.props.allow4thAttempts === true) {\n      attemptOptions.push(\n        <option key={4} value={4}>\n          {attemptTemplate.replace(\"{N}\", displayNumber(4, language))}\n        </option>\n      );\n    }\n\n    const currentEntryId = this.props.currentEntryId === null ? undefined : this.props.currentEntryId.toString();\n\n    return (\n      <div className={styles.footer}>\n        <div className={styles.leftControls}>\n          <Form.Control\n            as=\"select\"\n            value={this.props.lifting.day.toString()}\n            onChange={this.handleDayChange}\n            className={`custom-select ${styles.selector}`}\n          >\n            {dayOptions}\n          </Form.Control>\n          <Form.Control\n            as=\"select\"\n            value={this.props.lifting.platform.toString()}\n            onChange={this.handlePlatformChange}\n            className={`custom-select ${styles.selector}`}\n          >\n            {platformOptions}\n          </Form.Control>\n          <Form.Control\n            as=\"select\"\n            value={this.props.lifting.lift}\n            onChange={this.handleLiftChange}\n            className={`custom-select ${styles.selector}`}\n          >\n            {liftOptions}\n          </Form.Control>\n          <Form.Control\n            key={\"flight-\" + this.props.lifting.flight}\n            as=\"select\"\n            value={this.props.lifting.flight}\n            onChange={this.handleFlightChange}\n            className={`custom-select ${styles.selector}`}\n          >\n            {flightOptions}\n          </Form.Control>\n          <Form.Control\n            value={this.props.attemptOneIndexed.toString()}\n            as=\"select\"\n            onChange={this.handleAttemptChange}\n            className={`custom-select ${styles.selector}`}\n          >\n            {attemptOptions}\n          </Form.Control>\n          <Form.Control\n            value={currentEntryId}\n            as=\"select\"\n            onChange={this.handleLifterChange}\n            className={`custom-select ${styles.selector}`}\n          >\n            {this.makeLifterOptions()}\n          </Form.Control>\n        </div>\n\n        <div className={styles.rightControls}>\n          <ButtonGroup>\n            <Button variant=\"outline-primary\" onClick={this.props.toggleReplaceTableWithWeighins}>\n              <FormattedMessage id=\"lifting.button-toggle-weigh-ins\" defaultMessage=\"Toggle Weigh-ins\" />\n            </Button>\n            <Button variant=\"outline-secondary\" onClick={this.handleFullscreen} className={styles.fullscreen}>\n              <FormattedMessage id=\"lifting.button-toggle-fullscreen\" defaultMessage=\"Toggle Fullscreen\" />\n            </Button>\n          </ButtonGroup>\n          <button\n            type=\"button\"\n            onMouseEnter={this.handleOnMouseEnter}\n            onMouseDown={this.handleNoLift}\n            className={styles.noLift}\n          >\n            <FormattedMessage id=\"lifting.button-no-lift\" defaultMessage=\"No Lift\" />\n          </button>\n          <button\n            type=\"button\"\n            onMouseEnter={this.handleOnMouseEnter}\n            onMouseDown={this.handleGoodLift}\n            className={styles.goodLift}\n          >\n            <FormattedMessage id=\"lifting.button-good-lift\" defaultMessage=\"Good Lift\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState) => {\n  return {\n    lengthDays: state.meet.lengthDays,\n    platformsOnDays: state.meet.platformsOnDays,\n    allow4thAttempts: state.meet.allow4thAttempts,\n    lifting: state.lifting,\n    language: state.language,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    setLiftingGroup: (day: number, platform: number, flight: Flight, lift: Lift) =>\n      dispatch(setLiftingGroup(day, platform, flight, lift)),\n    overrideAttempt: (attempt: number) => dispatch(overrideAttempt(attempt)),\n    overrideEntryId: (entryId: number) => dispatch(overrideEntryId(entryId)),\n    markLift: (entryId: number, lift: Lift, attempt: number, success: boolean) =>\n      dispatch(markLift(entryId, lift, attempt, success)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LiftingFooter);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// The top bar of the Lifting page, containing huge text about the current lifter.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport LocalizedString from \"../translations/LocalizedString\";\nimport { localizeEquipment } from \"../../logic/strings\";\nimport { displayNumber } from \"../../logic/units\";\n\nimport { Entry, Language } from \"../../types/dataTypes\";\nimport { GlobalState, RegistrationState } from \"../../types/stateTypes\";\n\nimport styles from \"./LiftingHeader.module.scss\";\n\ninterface OwnProps {\n  attemptOneIndexed: number;\n  orderedEntries: Array<Entry>;\n  currentEntryId: number | null;\n}\n\ninterface StateProps {\n  registration: RegistrationState;\n  language: Language;\n}\n\ntype Props = OwnProps & StateProps;\n\nclass LiftingHeader extends React.Component<Props> {\n  render() {\n    // Defaults, in case of no lifter.\n    let lifterName = <LocalizedString id=\"lifting.flight-complete\" />;\n    let info = \"\";\n\n    // In the case of a lifter, set fields.\n    if (this.props.currentEntryId !== null && this.props.currentEntryId !== undefined) {\n      const idx = this.props.registration.lookup[this.props.currentEntryId];\n      const entry = this.props.registration.entries[idx];\n      lifterName = <span>{entry.name}</span>;\n\n      const infoBuilder: Array<string> = [];\n\n      if (typeof entry.instagram === \"string\" && entry.instagram !== \"\") {\n        infoBuilder.push(\"@\" + entry.instagram);\n      } else {\n        infoBuilder.push(\"\"); // Causes a separator dot to display.\n      }\n      if (entry.age > 0) {\n        infoBuilder.push(displayNumber(entry.age, this.props.language));\n      }\n      infoBuilder.push(localizeEquipment(entry.equipment, this.props.language));\n      if (entry.divisions.length > 0) {\n        infoBuilder.push(entry.divisions.join(\", \"));\n      }\n\n      info = infoBuilder.join(\" · \");\n    }\n\n    return (\n      <div className={styles.header}>\n        <div className={styles.lifterName}>{lifterName}</div>\n        <div className={styles.info}>{info}</div>\n        <img className={styles.logo} src=\"atc-horizontal.png\" style={{ height: \"100%\", marginLeft: \"auto\" }} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => {\n  return {\n    registration: state.registration,\n    language: state.language,\n  };\n};\n\nexport default connect(mapStateToProps)(LiftingHeader);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// This defines a widget for manually adjusting the width of a column\n// in the LiftingTable. The width information is stored in the LiftingState.\n//\n// The value is stored in the LiftingState in pixels, but is presented\n// here as (pixels / 9) to make it look nicer. 9 is used because most columns\n// are set to 72px, which is divisible by 9.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Form from \"react-bootstrap/Form\";\n\nimport { setTableInfo } from \"../../actions/liftingActions\";\n\nimport { Validation } from \"../../types/dataTypes\";\nimport { GlobalState, LiftingState } from \"../../types/stateTypes\";\nimport { isString } from \"../../types/utils\";\nimport { Dispatch } from \"redux\";\nimport { isNumber } from \"util\";\n\ntype WidthFields = \"columnDivisionWidthPx\";\n\ninterface OwnProps {\n  label: string; // The label to display.\n  fieldName: WidthFields; // Field on the LiftingState to change.\n}\n\ninterface StateProps {\n  lifting: LiftingState;\n}\n\ninterface DispatchProps {\n  setTableInfo: (changes: Partial<LiftingState>) => void;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\ninterface InternalState {\n  value: number | string;\n}\n\n// To show smaller numbers, the actual pixel count is divided by this.\nconst MULTIPLE: number = 9;\n\nclass ColumnWidth extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    this.validate = this.validate.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      value: Math.ceil(this.props.lifting[this.props.fieldName] / MULTIPLE),\n    };\n  }\n\n  validate = (): Validation => {\n    const { value } = this.state;\n    const asNumber = Number(value);\n\n    if (isNaN(asNumber) || asNumber < 0 || asNumber > 1000) {\n      return \"error\";\n    }\n    return \"success\";\n  };\n\n  handleChange = (event: React.BaseSyntheticEvent) => {\n    const value = event.currentTarget.value;\n    if (!isNumber(value) && !isString(value)) {\n      throw new Error(`Expected either a number or a string, but got \"${value}\"`);\n    }\n\n    this.setState({ value: value }, () => {\n      // As callback, save successful value into Redux store.\n      if (this.validate() !== \"error\") {\n        // TODO: figure out how to type this nicely. For now, use any\n        const changes: any = {};\n        changes[this.props.fieldName] = Math.floor(Number(value) * MULTIPLE);\n        this.props.setTableInfo(changes);\n      }\n    });\n  };\n\n  render() {\n    const validation: Validation = this.validate();\n\n    return (\n      <Form.Group>\n        <Form.Label>{this.props.label}</Form.Label>\n        <Form.Control\n          type=\"number\"\n          pattern=\"[0-9]+\"\n          min=\"0\"\n          step=\"1\"\n          value={this.state.value.toString()}\n          onChange={this.handleChange}\n          isValid={validation === \"success\"}\n          isInvalid={validation === \"error\"}\n          className={validation === \"warning\" ? \"is-warning\" : undefined}\n        />\n      </Form.Group>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  lifting: state.lifting,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    setTableInfo: (changes: Partial<LiftingState>) => dispatch(setTableInfo(changes)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ColumnWidth);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// The parent component of the Lifting page, contained by the LiftingContainer.\n//\n// The LiftingTable, LiftingFooter, etc. all share calculated state.\n// This class performs the state calculations and communicates that to its\n// sub-components via props.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Card from \"react-bootstrap/Card\";\n\nimport LeftCard from \"./LeftCard\";\nimport LiftingFooter from \"./LiftingFooter\";\nimport LiftingHeader from \"./LiftingHeader\";\nimport LiftingTable from \"./LiftingTable\";\nimport WeighinsView from \"../weighins/WeighinsView\";\n\nimport ColumnWidth from \"./ColumnWidth\";\n\nimport { getString } from \"../../logic/strings\";\n\nimport styles from \"./LiftingView.module.scss\";\n\nimport { getLiftingOrder } from \"../../logic/liftingOrder\";\n\nimport { Entry, Flight, Language } from \"../../types/dataTypes\";\nimport { GlobalState, MeetState, LiftingState } from \"../../types/stateTypes\";\n\ninterface StateProps {\n  meet: MeetState;\n  lifting: LiftingState;\n  flightsOnPlatform: Array<Flight>;\n  entriesInFlight: Array<Entry>;\n  language: Language;\n}\n\ntype Props = StateProps;\n\ninterface InternalState {\n  // If true, the LiftingTable is replaced with the Weighins page.\n  // This lets the score table change arbitrary rack height and attempt information\n  // without removing the current lifter or bar load displays.\n  replaceTableWithWeighins: boolean;\n}\n\nclass LiftingView extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n    this.toggleReplaceTableWithWeighins = this.toggleReplaceTableWithWeighins.bind(this);\n    this.state = {\n      replaceTableWithWeighins: false,\n    };\n  }\n\n  toggleReplaceTableWithWeighins = (): void => {\n    this.setState({\n      replaceTableWithWeighins: !this.state.replaceTableWithWeighins,\n    });\n  };\n\n  render() {\n    const now = getLiftingOrder(this.props.entriesInFlight, this.props.lifting);\n\n    let rightElement = null;\n    if (this.state.replaceTableWithWeighins === false) {\n      rightElement = (\n        <LiftingTable\n          attemptOneIndexed={now.attemptOneIndexed}\n          orderedEntries={now.orderedEntries}\n          currentEntryId={now.currentEntryId}\n        />\n      );\n    } else {\n      rightElement = (\n        <WeighinsView day={this.props.lifting.day} platform={this.props.lifting.platform} inLiftingPage={true} />\n      );\n    }\n\n    return (\n      <div>\n        <Card style={{ margin: \"12px 20px\" }}>\n          <Card.Body>\n            <div style={{ width: \"160px\" }}>\n              <ColumnWidth\n                label={getString(\"lifting.division-column-width-label\", this.props.language)}\n                fieldName=\"columnDivisionWidthPx\"\n              />\n            </div>\n            <h3>\n              <FormattedMessage\n                id=\"lifting.garish-instructions\"\n                defaultMessage=\"To fit to the screen, zoom the browser in or out and then press Toggle Fullscreen.\"\n              />\n            </h3>\n          </Card.Body>\n        </Card>\n        <div id=\"liftingView\" className={styles.liftingView}>\n          <LiftingHeader\n            attemptOneIndexed={now.attemptOneIndexed}\n            orderedEntries={now.orderedEntries}\n            currentEntryId={now.currentEntryId}\n          />\n\n          <div className={styles.middleParentContainer}>\n            <div className={styles.leftCardContainer}>\n              <LeftCard\n                attemptOneIndexed={now.attemptOneIndexed}\n                orderedEntries={now.orderedEntries}\n                currentEntryId={now.currentEntryId}\n                nextEntryId={now.nextEntryId}\n                nextAttemptOneIndexed={now.nextAttemptOneIndexed}\n              />\n            </div>\n\n            <div className={styles.rightCardContainer}>{rightElement}</div>\n          </div>\n\n          <LiftingFooter\n            attemptOneIndexed={now.attemptOneIndexed}\n            orderedEntries={now.orderedEntries}\n            currentEntryId={now.currentEntryId}\n            flightsOnPlatform={this.props.flightsOnPlatform}\n            toggleReplaceTableWithWeighins={this.toggleReplaceTableWithWeighins}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => {\n  const day = state.lifting.day;\n  const platform = state.lifting.platform;\n  const flight = state.lifting.flight;\n\n  const entriesOnPlatform = state.registration.entries.filter(\n    (entry) => entry.day === day && entry.platform === platform\n  );\n\n  // Determine available flights from the entries themselves.\n  const flights: Array<Flight> = [];\n  for (let i = 0; i < entriesOnPlatform.length; i++) {\n    const entry = entriesOnPlatform[i];\n    if (flights.indexOf(entry.flight) === -1) {\n      flights.push(entry.flight);\n    }\n  }\n  flights.sort();\n\n  // Only receive entries that are in the currently-lifting group.\n  const entriesInFlight = entriesOnPlatform.filter((entry) => entry.flight === flight);\n\n  return {\n    meet: state.meet,\n    lifting: state.lifting,\n    flightsOnPlatform: flights,\n    entriesInFlight: entriesInFlight,\n    language: state.language,\n  };\n};\n\nexport default connect(mapStateToProps)(LiftingView);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Container for the Lifting page.\n\nimport React from \"react\";\nimport LiftingView from \"../components/lifting/LiftingView\";\n\nclass LiftingContainer extends React.Component<{}> {\n  render() {\n    return <LiftingView />;\n  }\n}\n\nexport default LiftingContainer;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Shows the first attempt ordering of lifters for a single flight.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Card from \"react-bootstrap/Card\";\nimport Table from \"react-bootstrap/Table\";\n\nimport { liftToAttemptFieldName } from \"../../logic/entry\";\nimport { orderEntriesByAttempt } from \"../../logic/liftingOrder\";\nimport { getString, localizeFlight } from \"../../logic/strings\";\nimport { kg2lbs, displayNumber, displayWeight } from \"../../logic/units\";\n\nimport { Entry, Flight, Language, Lift } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { checkExhausted } from \"../../types/utils\";\n\nimport styles from \"./OneFlightOrder.module.scss\";\n\ntype Column =\n  | \"SquatName\"\n  | \"SquatKg\"\n  | \"SquatLbs\"\n  | \"BenchSeparator\"\n  | \"BenchName\"\n  | \"BenchKg\"\n  | \"BenchLbs\"\n  | \"DeadliftSeparator\"\n  | \"DeadliftName\"\n  | \"DeadliftKg\"\n  | \"DeadliftLbs\";\n\ninterface OwnProps {\n  flight: Flight;\n  entriesInFlight: Array<Entry>;\n}\n\ninterface StateProps {\n  inKg: boolean;\n  showAlternateUnits: boolean;\n  language: Language;\n}\n\ntype Props = OwnProps & StateProps;\n\nclass OneFlightOrder extends React.Component<Props> {\n  getOrderBy = (lift: Lift): Array<Entry> => {\n    const fieldKg = liftToAttemptFieldName(lift);\n\n    // Only consider entries that registered a first attempt.\n    const entriesForLift = this.props.entriesInFlight.filter((e) => {\n      return e[fieldKg][0] !== 0;\n    });\n\n    // Sort them in-place on the basis of that first attempt.\n    return orderEntriesByAttempt(entriesForLift, fieldKg, 1);\n  };\n\n  getColumnHeader(column: Column, language: Language): string {\n    switch (column) {\n      case \"SquatName\":\n        return getString(\"flight-order.squat-column-header\", language);\n      case \"SquatKg\":\n        return getString(\"flight-order.kilograms-header\", language);\n      case \"SquatLbs\":\n        return getString(\"flight-order.pounds-header\", language);\n      case \"BenchSeparator\":\n        return \"\";\n      case \"BenchName\":\n        return getString(\"flight-order.bench-column-header\", language);\n      case \"BenchKg\":\n        return getString(\"flight-order.kilograms-header\", language);\n      case \"BenchLbs\":\n        return getString(\"flight-order.pounds-header\", language);\n      case \"DeadliftSeparator\":\n        return \"\";\n      case \"DeadliftName\":\n        return getString(\"flight-order.deadlift-column-header\", language);\n      case \"DeadliftKg\":\n        return getString(\"flight-order.kilograms-header\", language);\n      case \"DeadliftLbs\":\n        return getString(\"flight-order.pounds-header\", language);\n      default:\n        checkExhausted(column);\n        return \"\";\n    }\n  }\n\n  renderName(position: number, entry: Entry, language: Language): string {\n    return `${displayNumber(position + 1, language)}. ${entry.name} (${entry.divisions.join(\", \")})`;\n  }\n\n  render() {\n    const language = this.props.language;\n\n    const bySquat = this.getOrderBy(\"S\");\n    const byBench = this.getOrderBy(\"B\");\n    const byDeadlift = this.getOrderBy(\"D\");\n\n    const hasSquat = bySquat.length !== 0;\n    const hasBench = byBench.length !== 0;\n    const hasDeadlift = byDeadlift.length !== 0;\n\n    const maxRows = Math.max(bySquat.length, byBench.length, byDeadlift.length);\n\n    // Figure out what columns to render, and in which order.\n    const columns: Array<Column> = [];\n    if (hasSquat) {\n      columns.push(\"SquatName\");\n      columns.push(this.props.inKg ? \"SquatKg\" : \"SquatLbs\");\n      if (this.props.showAlternateUnits) {\n        columns.push(this.props.inKg ? \"SquatLbs\" : \"SquatKg\");\n      }\n    }\n    if (hasBench) {\n      if (hasSquat) {\n        columns.push(\"BenchSeparator\");\n      }\n      columns.push(\"BenchName\");\n      columns.push(this.props.inKg ? \"BenchKg\" : \"BenchLbs\");\n      if (this.props.showAlternateUnits) {\n        columns.push(this.props.inKg ? \"BenchLbs\" : \"BenchKg\");\n      }\n    }\n    if (hasDeadlift) {\n      if (hasSquat || hasBench) {\n        columns.push(\"DeadliftSeparator\");\n      }\n      columns.push(\"DeadliftName\");\n      columns.push(this.props.inKg ? \"DeadliftKg\" : \"DeadliftLbs\");\n      if (this.props.showAlternateUnits) {\n        columns.push(this.props.inKg ? \"DeadliftLbs\" : \"DeadliftKg\");\n      }\n    }\n\n    // Construct a table row-by-row.\n    const rows = [];\n    for (let i = 0; i < maxRows; ++i) {\n      const builder = [];\n\n      for (let j = 0; j < columns.length; ++j) {\n        const column = columns[j];\n        const key: string = column + String(i);\n\n        let content: string = \"\";\n        let className = undefined;\n\n        switch (column) {\n          case \"SquatName\": {\n            if (i < bySquat.length) {\n              const entry = bySquat[i];\n              content = this.renderName(i, entry, language);\n            }\n            break;\n          }\n          case \"SquatKg\": {\n            if (i < bySquat.length) {\n              const entry = bySquat[i];\n              content = displayWeight(entry.squatKg[0], language);\n            }\n            break;\n          }\n          case \"SquatLbs\": {\n            if (i < bySquat.length) {\n              const entry = bySquat[i];\n              content = displayWeight(kg2lbs(entry.squatKg[0]), language);\n            }\n            break;\n          }\n          case \"BenchSeparator\":\n            className = styles.leftDivider;\n            break;\n          case \"BenchName\": {\n            if (i < byBench.length) {\n              const entry = byBench[i];\n              content = this.renderName(i, entry, language);\n            }\n            break;\n          }\n          case \"BenchKg\": {\n            if (i < byBench.length) {\n              const entry = byBench[i];\n              content = displayWeight(entry.benchKg[0], language);\n            }\n            break;\n          }\n          case \"BenchLbs\": {\n            if (i < byBench.length) {\n              const entry = byBench[i];\n              content = displayWeight(kg2lbs(entry.benchKg[0]), language);\n            }\n            break;\n          }\n          case \"DeadliftSeparator\":\n            className = styles.leftDivider;\n            break;\n          case \"DeadliftName\": {\n            if (i < byDeadlift.length) {\n              const entry = byDeadlift[i];\n              content = this.renderName(i, entry, language);\n            }\n            break;\n          }\n          case \"DeadliftKg\": {\n            if (i < byDeadlift.length) {\n              const entry = byDeadlift[i];\n              content = displayWeight(entry.deadliftKg[0], language);\n            }\n            break;\n          }\n          case \"DeadliftLbs\": {\n            if (i < byDeadlift.length) {\n              const entry = byDeadlift[i];\n              content = displayWeight(kg2lbs(entry.deadliftKg[0]), language);\n            }\n            break;\n          }\n        }\n\n        builder.push(\n          <td key={key} className={className}>\n            {content}\n          </td>\n        );\n      }\n\n      rows.push(<tr key={i}>{builder}</tr>);\n    }\n\n    // Construct the table header.\n    const header = [];\n    for (let i = 0; i < columns.length; ++i) {\n      const column = columns[i];\n      const title = this.getColumnHeader(column, this.props.language);\n      header.push(<th key={column}>{title}</th>);\n    }\n\n    return (\n      <Card>\n        <Card.Header>\n          <FormattedMessage\n            id=\"flight-order.flight-card\"\n            defaultMessage=\"Flight {flight} Lifting Order\"\n            values={{ flight: localizeFlight(this.props.flight, this.props.language) }}\n          />\n        </Card.Header>\n        <Card.Body>\n          <Table striped hover size=\"sm\" style={{ margin: \"0px\" }}>\n            <thead>\n              <tr>{header}</tr>\n            </thead>\n            <tbody>{rows}</tbody>\n          </Table>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => {\n  return {\n    inKg: state.meet.inKg,\n    showAlternateUnits: state.meet.showAlternateUnits,\n    language: state.language,\n  };\n};\n\nexport default connect(mapStateToProps)(OneFlightOrder);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// The parent component of the FlightOrder page, contained by the FlightOrderContainer.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport FormControl from \"react-bootstrap/FormControl\";\n\nimport OneFlightOrder from \"./OneFlightOrder\";\n\nimport { getString } from \"../../logic/strings\";\nimport { displayNumber } from \"../../logic/units\";\n\nimport { Entry, Flight, Language } from \"../../types/dataTypes\";\nimport { GlobalState, MeetState } from \"../../types/stateTypes\";\n\ninterface StateProps {\n  meet: MeetState;\n  entries: ReadonlyArray<Entry>;\n  language: Language;\n}\n\ntype Props = StateProps;\n\ninterface InternalState {\n  day: number;\n  platform: number;\n}\n\nclass FlightOrderView extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    this.updateDay = this.updateDay.bind(this);\n    this.updatePlatform = this.updatePlatform.bind(this);\n    this.handlePrint = this.handlePrint.bind(this);\n\n    this.state = {\n      day: 1,\n      platform: 1,\n    };\n  }\n\n  updateDay = (event: React.BaseSyntheticEvent) => {\n    const day = Number(event.currentTarget.value);\n    if (this.state.day !== day) {\n      // If the currently-selected platform number becomes invalid, reset it.\n      if (this.state.platform > this.props.meet.platformsOnDays[day - 1]) {\n        this.setState({ day: day, platform: 1 });\n      } else {\n        this.setState({ day: day });\n      }\n    }\n  };\n\n  updatePlatform = (event: React.BaseSyntheticEvent) => {\n    const platform = Number(event.currentTarget.value);\n    if (this.state.platform !== platform) {\n      this.setState({ platform: platform });\n    }\n  };\n\n  handlePrint = () => {\n    window.print();\n  };\n\n  render() {\n    const language = this.props.language;\n    const selectorStyle = { width: \"120px\", marginRight: \"15px\" };\n\n    // Make options for all of the days.\n    const dayOptions = [];\n    const dayTemplate = getString(\"lifting.footer-day-template\", language);\n    for (let i = 1; i <= this.props.meet.lengthDays; i++) {\n      dayOptions.push(\n        <option value={i} key={i}>\n          {dayTemplate.replace(\"{N}\", displayNumber(i, language))}\n        </option>\n      );\n    }\n\n    // Make options for all of the available platforms on the current day.\n    const platformOptions = [];\n    const platformTemplate = getString(\"lifting.footer-platform-template\", language);\n    const numPlatforms = this.props.meet.platformsOnDays[this.state.day - 1];\n    for (let i = 1; i <= numPlatforms; i++) {\n      platformOptions.push(\n        <option value={i} key={i}>\n          {platformTemplate.replace(\"{N}\", displayNumber(i, language))}\n        </option>\n      );\n    }\n\n    // Get all the entries under the current (day, platform) selection.\n    const shownEntries = this.props.entries.filter((e) => {\n      return e.day === this.state.day && e.platform === this.state.platform;\n    });\n\n    // Look through the entries to discover what flights exist.\n    const knownFlights: Flight[] = [];\n    for (let i = 0; i < shownEntries.length; i++) {\n      const entry = shownEntries[i];\n      if (knownFlights.indexOf(entry.flight) === -1) {\n        knownFlights.push(entry.flight);\n      }\n    }\n    knownFlights.sort();\n\n    // For each flight, see if there are any lifters, and build a OneFlightOrder.\n    const flightOrders = [];\n    for (let i = 0; i < knownFlights.length; i++) {\n      const flight = knownFlights[i];\n      const entriesInFlight = shownEntries.filter((e) => e.flight === flight);\n      const id = \"\" + this.state.day + \"-\" + this.state.platform + \"-\" + flight;\n      flightOrders.push(<OneFlightOrder key={id} flight={flight} entriesInFlight={entriesInFlight} />);\n    }\n\n    // FIXME: Disable categories for the moment. They seem unhelpful.\n    // As far as I know, no one has paid them much attention.\n    /*\n    // Look through the entries to discover what divisions exist.\n    const categoryResults = getProjectedResults(\n      shownEntries,\n      this.props.meet.weightClassesKgMen,\n      this.props.meet.weightClassesKgWomen,\n      this.props.meet.weightClassesKgMx,\n      this.props.meet.combineSleevesAndWraps\n    );\n\n    let categories: Array<JSX.Element> = [];\n    for (let i = 0; i < categoryResults.length; i++) {\n      const id = \"\" + this.state.day + \"-\" + this.state.platform + \"-\" + i;\n      categories.push(<OneCategory key={id} platform={this.state.platform} categoryResults={categoryResults[i]} />);\n    }\n    */\n\n    return (\n      <div>\n        <Card style={{ marginBottom: \"17px\" }}>\n          <Card.Body style={{ display: \"flex\" }}>\n            <FormControl\n              value={this.state.day.toString()}\n              as=\"select\"\n              onChange={this.updateDay}\n              style={selectorStyle}\n              className=\"custom-select\"\n            >\n              {dayOptions}\n            </FormControl>\n\n            <FormControl\n              value={this.state.platform.toString()}\n              as=\"select\"\n              onChange={this.updatePlatform}\n              style={selectorStyle}\n              className=\"custom-select\"\n            >\n              {platformOptions}\n            </FormControl>\n\n            <Button variant=\"info\" onClick={this.handlePrint}>\n              <FormattedMessage id=\"flight-order.print-button\" defaultMessage=\"Print Page\" />\n            </Button>\n          </Card.Body>\n        </Card>\n\n        {flightOrders}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => {\n  return {\n    meet: state.meet,\n    entries: state.registration.entries,\n    language: state.language,\n  };\n};\n\nexport default connect(mapStateToProps)(FlightOrderView);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Container for the FlightOrder page.\n\nimport React from \"react\";\n\nimport FlightOrderView from \"../components/flight-order/FlightOrderView\";\nimport styles from \"../components/common/ContentArea.module.scss\";\n\nclass FlightOrderContainer extends React.Component<{}> {\n  render() {\n    return (\n      <div className={styles.contentArea}>\n        <FlightOrderView />\n      </div>\n    );\n  }\n}\n\nexport default FlightOrderContainer;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Displays the results by division.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Card from \"react-bootstrap/Card\";\nimport Table from \"react-bootstrap/Table\";\n\nimport { getFinalResults } from \"../../logic/divisionPlace\";\nimport { getWeightClassStr, getWeightClassLbsStr, wtclsStrKg2Lbs } from \"../../reducers/meetReducer\";\nimport {\n  getBest5SquatKg,\n  getBest5BenchKg,\n  getBest5DeadliftKg,\n  getFinalEventTotalKg,\n  entryHasLifted,\n} from \"../../logic/entry\";\nimport { kg2lbs, displayWeight, displayPoints, displayPlaceOrdinal } from \"../../logic/units\";\n\nimport { getString, localizeEquipment, localizeEvent, localizeWeightClassStr } from \"../../logic/strings\";\nimport { getPoints } from \"../../logic/coefficients/coefficients\";\n\nimport { Category, CategoryResults } from \"../../logic/divisionPlace\";\nimport { Entry, Formula, Language, Sex } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { checkExhausted } from \"../../types/utils\";\n\ninterface StateProps {\n  inKg: boolean;\n  showAlternateUnits: boolean;\n  meetName: string;\n  formula: Formula;\n  combineSleevesAndWraps: boolean;\n  combineSingleAndMulti: boolean;\n  lengthDays: number;\n  weightClassesKgMen: ReadonlyArray<number>;\n  weightClassesKgWomen: ReadonlyArray<number>;\n  weightClassesKgMx: ReadonlyArray<number>;\n  language: Language;\n  entries: ReadonlyArray<Entry>;\n}\n\ninterface OwnProps {\n  day: string | number; // Really a number, 0 meaning \"all\".\n}\n\ntype Props = StateProps & OwnProps;\n\nconst mapSexToClasses = (sex: Sex, props: Props): ReadonlyArray<number> => {\n  switch (sex) {\n    case \"M\":\n      return props.weightClassesKgMen;\n    case \"F\":\n      return props.weightClassesKgWomen;\n    case \"Mx\":\n      return props.weightClassesKgMx;\n    default:\n      checkExhausted(sex);\n      return props.weightClassesKgMen;\n  }\n};\n\nclass ByDivision extends React.Component<Props> {\n  renderEntryRow = (entry: Entry, category: Category, key: number): JSX.Element | null => {\n    // Skip no-show entries.\n    if (!entryHasLifted(entry)) return null;\n\n    // Skip DQ'd lifters. Meet directors have reported that it's embarrassing\n    // to the DQ'd lifter to have that projected.\n    const totalKg = getFinalEventTotalKg(entry, category.event);\n    if (totalKg === 0) return null;\n\n    const inKg = this.props.inKg;\n    const language = this.props.language;\n\n    // The place proceeds in order by key, except for guests\n    const place = entry.guest\n      ? getString(\"results.lifter-guest\", language)\n      : displayPlaceOrdinal(key + 1, entry, this.props.language);\n\n    const points: number = getPoints(this.props.formula, entry, category.event, totalKg, inKg);\n\n    let pointsStr = \"\";\n    if (totalKg !== 0 && points === 0) {\n      pointsStr = getString(\"results.value-not-applicable\", language);\n    } else if (totalKg !== 0 && points !== 0) {\n      pointsStr = displayPoints(points, language);\n    }\n\n    const classes = mapSexToClasses(entry.sex, this.props);\n    const wtcls = inKg\n      ? getWeightClassStr(classes, entry.bodyweightKg, language)\n      : getWeightClassLbsStr(classes, entry.bodyweightKg);\n    const bw = inKg ? entry.bodyweightKg : kg2lbs(entry.bodyweightKg);\n\n    const squatKg = getBest5SquatKg(entry);\n    const squat = inKg ? squatKg : kg2lbs(squatKg);\n\n    const benchKg = getBest5BenchKg(entry);\n    const bench = inKg ? benchKg : kg2lbs(benchKg);\n\n    const deadliftKg = getBest5DeadliftKg(entry);\n    const deadlift = inKg ? deadliftKg : kg2lbs(deadliftKg);\n\n    let weightTemplate = \"\";\n    if (inKg) {\n      if (this.props.showAlternateUnits === true) {\n        weightTemplate = getString(\"lifting.current-weight-kg-lbs\", language);\n      } else {\n        weightTemplate = getString(\"lifting.current-weight-kg\", language);\n      }\n    } else {\n      if (this.props.showAlternateUnits === true) {\n        weightTemplate = getString(\"lifting.current-weight-lbs-kg\", language);\n      } else {\n        weightTemplate = getString(\"lifting.current-weight-lbs\", language);\n      }\n    }\n\n    let weightString: null | string = null;\n    if (totalKg > 0) {\n      weightString = weightTemplate\n        .replace(\"{kg}\", displayWeight(totalKg, language))\n        .replace(\"{lbs}\", displayWeight(kg2lbs(totalKg), language));\n    }\n\n    return (\n      <tr key={key}>\n        <td>{place}</td>\n        <td>{entry.name}</td>\n        <td>{entry.bodyweightKg === 0 ? null : wtcls}</td>\n        <td>{entry.bodyweightKg === 0 ? null : displayWeight(bw, language)}</td>\n        <td>{entry.age === 0 ? null : entry.age}</td>\n        <td>{squatKg === 0 ? \"\" : displayWeight(squat, language)}</td>\n        <td>{benchKg === 0 ? \"\" : displayWeight(bench, language)}</td>\n        <td>{deadliftKg === 0 ? \"\" : displayWeight(deadlift, language)}</td>\n        <td>{weightString}</td>\n        <td>{pointsStr}</td>\n      </tr>\n    );\n  };\n\n  mapSexToLabel = (sex: Sex, language: Language): string => {\n    switch (sex) {\n      case \"M\":\n        return getString(\"results.mens\", language);\n      case \"F\":\n        return getString(\"results.womens\", language);\n      case \"Mx\":\n        return getString(\"results.mxs\", language);\n      default:\n        checkExhausted(sex);\n        return \"\";\n    }\n  };\n\n  renderCategoryResults = (results: CategoryResults, key: number): JSX.Element | null => {\n    const { category, orderedEntries } = results;\n    const language = this.props.language;\n    const sex: string = this.mapSexToLabel(category.sex, language);\n\n    // Gather rows.\n    const rows = [];\n    for (let i = 0; i < orderedEntries.length; i++) {\n      const row = this.renderEntryRow(orderedEntries[i], category, i);\n      if (row !== null) {\n        rows.push(row);\n      }\n    }\n\n    // If all entries were no-show, don't show this panel.\n    if (rows.length === 0) {\n      return null;\n    }\n\n    let eqpstr: string = localizeEquipment(category.equipment, language);\n    if (this.props.combineSleevesAndWraps && (category.equipment === \"Sleeves\" || category.equipment === \"Wraps\")) {\n      eqpstr = getString(\"results.combined-sleeves-wraps\", language);\n    } else if (\n      this.props.combineSingleAndMulti &&\n      (category.equipment === \"Single-ply\" || category.equipment === \"Multi-ply\")\n    ) {\n      eqpstr = getString(\"results.combined-single-multi\", language);\n    }\n\n    const units = this.props.inKg\n      ? getString(\"results.spoken-unit-kilo\", language)\n      : getString(\"results.spoken-unit-pound\", language);\n\n    // Convert the category.weightClassStr to pounds.\n    let wtcls = localizeWeightClassStr(category.weightClassStr, language);\n    if (category.weightClassStr !== \"\" && !this.props.inKg) {\n      wtcls = wtclsStrKg2Lbs(category.weightClassStr);\n    }\n\n    const template = getString(\"results.division-template\", language);\n    const division = template\n      .replace(\"{sex}\", sex)\n      .replace(\"{weightClass}\", wtcls)\n      .replace(\"{spokenUnits}\", category.weightClassStr !== \"\" ? units : \"\")\n      .replace(\"{equipment}\", eqpstr)\n      .replace(\"{division}\", category.division)\n      .replace(\"{event}\", localizeEvent(category.event, language));\n\n    return (\n      <Card key={key} style={{ marginTop: \"17px\" }}>\n        <Card.Header>{division}</Card.Header>\n        <Card.Body>\n          <Table hover size=\"sm\">\n            <thead>\n              <tr>\n                <th>{getString(\"lifting.column-place\", language)}</th>\n                <th>{getString(\"lifting.column-lifter\", language)}</th>\n                <th>{getString(\"lifting.column-weightclass\", language)}</th>\n                <th>{getString(\"lifting.column-bodyweight\", language)}</th>\n                <th>{getString(\"lifting.column-age\", language)}</th>\n                <th>{getString(\"flight-order.squat-column-header\", language)}</th>\n                <th>{getString(\"flight-order.bench-column-header\", language)}</th>\n                <th>{getString(\"flight-order.deadlift-column-header\", language)}</th>\n                <th>{getString(\"lifting.column-finaltotal\", language)}</th>\n                <th>{getString(\"lifting.column-finalpoints\", language)}</th>\n              </tr>\n            </thead>\n            <tbody>{rows}</tbody>\n          </Table>\n        </Card.Body>\n      </Card>\n    );\n  };\n\n  render() {\n    const results = getFinalResults(\n      this.props.entries,\n      this.props.weightClassesKgMen,\n      this.props.weightClassesKgWomen,\n      this.props.weightClassesKgMx,\n      this.props.combineSleevesAndWraps,\n      this.props.combineSingleAndMulti\n    );\n\n    const categoryCards = [];\n    for (let i = 0; i < results.length; i++) {\n      const panel = this.renderCategoryResults(results[i], i);\n      if (panel !== null) {\n        categoryCards.push(panel);\n      }\n    }\n\n    return <div>{categoryCards}</div>;\n  }\n}\n\nconst mapStateToProps = (state: GlobalState, ownProps: OwnProps): StateProps => {\n  const day = Number(ownProps.day);\n  let entries = state.registration.entries;\n  if (day > 0) {\n    entries = entries.filter((e) => e.day === day);\n  }\n\n  return {\n    inKg: state.meet.inKg,\n    showAlternateUnits: state.meet.showAlternateUnits,\n    meetName: state.meet.name,\n    formula: state.meet.formula,\n    combineSleevesAndWraps: state.meet.combineSleevesAndWraps,\n    combineSingleAndMulti: state.meet.combineSingleAndMulti,\n    lengthDays: state.meet.lengthDays,\n    weightClassesKgMen: state.meet.weightClassesKgMen,\n    weightClassesKgWomen: state.meet.weightClassesKgWomen,\n    weightClassesKgMx: state.meet.weightClassesKgMx,\n    language: state.language,\n    entries: entries,\n  };\n};\n\nexport default connect(mapStateToProps)(ByDivision);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the logic for calculating the division Place of a lifter, shared between\n// the Lifting page, the Rankings page, and data export code.\n//\n// The algorithm used is particularly bad -- the foremost goal was to make an interface\n// that allowed for maximum code reuse between the Rankings and Lifting pages,\n// which have slightly different needs.\n\nimport { getFinalEventTotalKg } from \"./entry\";\n\n// Import points formulas.\nimport { getAgeAdjustedPoints } from \"./coefficients/coefficients\";\n\n// Import age coefficients.\nimport { checkExhausted } from \"../types/utils\";\nimport { AgeCoefficients, Sex, Event, Equipment, Entry, Formula } from \"../types/dataTypes\";\n\n// Specifies a points category under which entries can be ranked together.\nexport type PointsCategory = {\n  sex: Sex;\n  event: Event;\n  equipment: Equipment;\n};\n\n// Wraps up all the entries in a category with the category's descriptors.\nexport type PointsCategoryResults = {\n  category: PointsCategory;\n  orderedEntries: Array<Entry>;\n};\n\n// Generates a unique String out of a Category, for purposes of using as a Map key.\nconst categoryToKey = (category: PointsCategory): string => {\n  return JSON.stringify(category);\n};\nconst keyToCategory = (key: string): PointsCategory => {\n  return JSON.parse(key);\n};\n\n// Returns a copy of the entries array sorted by Formula Place (Rank).\n// All entries are assumed to be part of the same category.\nconst sortByFormulaPlaceInCategory = (\n  entries: Array<Entry>,\n  category: PointsCategory,\n  formula: Formula,\n  ageCoefficients: AgeCoefficients,\n  inKg: boolean,\n  meetDate: string\n): Array<Entry> => {\n  // Make a map from Entry to initial index.\n  const indexMap = new Map();\n  for (let i = 0; i < entries.length; i++) {\n    indexMap.set(entries[i], i);\n  }\n\n  // Pre-calculate all the points into an array to avoid computing them multiple\n  // times in the sort.\n  const memoizedPoints = new Array(entries.length);\n  for (let i = 0; i < entries.length; i++) {\n    const entry = entries[i];\n    const totalKg = getFinalEventTotalKg(entry, category.event);\n\n    memoizedPoints[i] = getAgeAdjustedPoints(ageCoefficients, meetDate, formula, entry, category.event, totalKg, inKg);\n  }\n\n  // Clone the entries array to avoid modifying the original.\n  const clonedEntries = entries.slice();\n\n  // Sort in the given category, first place having the lowest index.\n  clonedEntries.sort((a, b) => {\n    const aIndex = indexMap.get(a);\n    const bIndex = indexMap.get(b);\n\n    // Appease the type checker even though this can't happen.\n    if (aIndex === undefined || bIndex === undefined) return 0;\n\n    // Guests always sort higher than non-guests.\n    // This is phrased a little strangely to also handle undefined.\n    if (a.guest !== b.guest) {\n      if (a.guest) return 1;\n      if (b.guest) return -1;\n    }\n\n    // First sort by points, higher sorting lower.\n    const aPoints = memoizedPoints[aIndex];\n    const bPoints = memoizedPoints[bIndex];\n    if (aPoints !== bPoints) return bPoints - aPoints;\n\n    // If points are equal, sort by Bodyweight, lower sorting lower.\n    if (a.bodyweightKg !== b.bodyweightKg) return a.bodyweightKg - b.bodyweightKg;\n\n    // Otherwise, they're equal.\n    return 0;\n  });\n\n  return clonedEntries;\n};\n\n// Determines the sort order by Event.\nconst getEventSortOrder = (ev: Event): number => {\n  return [\"SBD\", \"BD\", \"SB\", \"SD\", \"S\", \"B\", \"D\"].indexOf(ev);\n};\n\n// Determines the sort order by Equipment.\nconst getEquipmentSortOrder = (eq: Equipment): number => {\n  // Combine classic and equipped lifting.\n  return [\"Bare\", \"Sleeves\", \"Wraps\", \"Single-ply\", \"Multi-ply\", \"Unlimited\"].indexOf(eq);\n};\n\n// Determines the sort order by Sex.\nconst getSexSortOrder = (sex: Sex): number => {\n  switch (sex) {\n    case \"F\":\n      return 0;\n    case \"M\":\n      return 1;\n    case \"Mx\":\n      return 2;\n    default:\n      checkExhausted(sex);\n      return 3;\n  }\n};\n\n// Determines the sort (and therefore presentation) order for the Category Results.\n// The input array is sorted in-place; nothing is returned.\nexport const sortPointsCategoryResults = (results: Array<PointsCategoryResults>): void => {\n  results.sort((a, b) => {\n    const catA = a.category;\n    const catB = b.category;\n\n    // First, sort by Sex.\n    const aSex = getSexSortOrder(catA.sex);\n    const bSex = getSexSortOrder(catB.sex);\n    if (aSex !== bSex) return aSex - bSex;\n\n    // Next, sort by Event.\n    const aEvent = getEventSortOrder(catA.event);\n    const bEvent = getEventSortOrder(catB.event);\n    if (aEvent !== bEvent) return aEvent - bEvent;\n\n    // Finally, sort by Equipment.\n    const aEquipment = getEquipmentSortOrder(catA.equipment);\n    const bEquipment = getEquipmentSortOrder(catB.equipment);\n    if (aEquipment !== bEquipment) return aEquipment - bEquipment;\n\n    return 0;\n  });\n};\n\n// Generates objects representing the various ByPoints categories.\n// The returned objects are sorted in intended order of presentation.\nexport const getAllRankings = (\n  entries: ReadonlyArray<Entry>,\n  formula: Formula,\n  ageCoefficients: AgeCoefficients,\n  combineSleevesAndWraps: boolean,\n  combineSingleAndMulti: boolean,\n  inKg: boolean,\n  meetDate: string\n): Array<PointsCategoryResults> => {\n  // Generate a map from category to the entries within that category.\n  // The map is populated by iterating over each entry and having the entry\n  // append itself to per-category lists.\n  const categoryMap = new Map();\n  for (let i = 0; i < entries.length; i++) {\n    const e = entries[i];\n\n    // Remember consistent properties.\n    const sex = e.sex;\n    let equipment: Equipment = e.equipment;\n\n    // If the results combine Sleeves and Wraps, promote Sleeves to Wraps.\n    if (combineSleevesAndWraps && equipment === \"Sleeves\") {\n      equipment = \"Wraps\";\n    }\n\n    // If the results combine Sleeves and Wraps, promote Sleeves to Wraps.\n    if (combineSingleAndMulti && equipment === \"Single-ply\") {\n      equipment = \"Multi-ply\";\n    }\n\n    // Iterate over each event, adding to the map.\n    for (let evidx = 0; evidx < e.events.length; evidx++) {\n      const event = e.events[evidx];\n      const category = { sex, event, equipment };\n      const key = categoryToKey(category);\n\n      const catEntries = categoryMap.get(key);\n      catEntries === undefined ? categoryMap.set(key, [e]) : catEntries.push(e);\n    }\n  }\n\n  // Iterate over each category and assign a Place to the entries therein.\n  const results = [];\n  for (const [key, catEntries] of categoryMap) {\n    const category = keyToCategory(key);\n    const orderedEntries = sortByFormulaPlaceInCategory(catEntries, category, formula, ageCoefficients, inKg, meetDate);\n    results.push({ category, orderedEntries });\n  }\n\n  sortPointsCategoryResults(results);\n  return results;\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Displays the results by points.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Card from \"react-bootstrap/Card\";\nimport Table from \"react-bootstrap/Table\";\n\nimport { getAllRankings } from \"../../logic/pointsPlace\";\nimport { getWeightClassStr, getWeightClassLbsStr } from \"../../reducers/meetReducer\";\nimport {\n  getBest5SquatKg,\n  getBest5BenchKg,\n  getBest5DeadliftKg,\n  getFinalEventTotalKg,\n  entryHasLifted,\n} from \"../../logic/entry\";\nimport { getString, localizeEquipment, localizeEvent, localizeSex } from \"../../logic/strings\";\nimport { kg2lbs, displayNumber, displayPoints, displayWeight, displayPlaceOrdinal } from \"../../logic/units\";\n\nimport { getAgeAdjustedPoints } from \"../../logic/coefficients/coefficients\";\n\nimport { PointsCategory, PointsCategoryResults } from \"../../logic/pointsPlace\";\nimport { AgeCoefficients, Entry, Formula, Language, Sex } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { checkExhausted } from \"../../types/utils\";\nimport { fosterMcCulloch } from \"../../logic/coefficients/foster-mcculloch\";\n\ninterface StateProps {\n  inKg: boolean;\n  meetName: string;\n  meetDate: string;\n  formula: Formula;\n  combineSleevesAndWraps: boolean;\n  combineSingleAndMulti: boolean;\n  lengthDays: number;\n  weightClassesKgMen: ReadonlyArray<number>;\n  weightClassesKgWomen: ReadonlyArray<number>;\n  weightClassesKgMx: ReadonlyArray<number>;\n  language: Language;\n  entries: ReadonlyArray<Entry>;\n}\n\n// Overloads this component so it can render different types of \"Best Lifter\" categories.\nexport type AgePointsCategory = \"BestLifter\" | \"BestMastersLifter\" | \"BestJuniorsLifter\";\n\ninterface OwnProps {\n  day: string | number; // Really a number, 0 meaning \"all\".\n  ageCoefficients: AgeCoefficients; // In OwnProps so that caller can disable it.\n  agePointsCategory: AgePointsCategory;\n}\n\ntype Props = StateProps & OwnProps;\n\nconst mapSexToClasses = (sex: Sex, props: Props): ReadonlyArray<number> => {\n  switch (sex) {\n    case \"M\":\n      return props.weightClassesKgMen;\n    case \"F\":\n      return props.weightClassesKgWomen;\n    case \"Mx\":\n      return props.weightClassesKgMx;\n    default:\n      checkExhausted(sex);\n      return props.weightClassesKgMen;\n  }\n};\n\nclass ByPoints extends React.Component<Props> {\n  renderEntryRow = (entry: Entry, category: PointsCategory, key: number): JSX.Element | null => {\n    // Skip no-show lifters.\n    if (!entryHasLifted(entry)) return null;\n\n    // Skip DQ'd lifters. Meet directors have reported that it's embarrassing\n    // to the DQ'd lifter to have that projected.\n    const totalKg = getFinalEventTotalKg(entry, category.event);\n    if (totalKg === 0) return null;\n\n    const inKg = this.props.inKg;\n    const language = this.props.language;\n\n    // The place proceeds in order by key, except for guests\n    const rank = entry.guest\n      ? getString(\"results.lifter-guest\", language)\n      : displayPlaceOrdinal(key + 1, entry, language);\n\n    const points: number = getAgeAdjustedPoints(\n      this.props.ageCoefficients,\n      this.props.meetDate,\n      this.props.formula,\n      entry,\n      category.event,\n      totalKg,\n      inKg\n    );\n\n    let pointsStr = \"\";\n    if (totalKg !== 0 && points === 0) {\n      pointsStr = getString(\"results.value-not-applicable\", language);\n    } else if (totalKg !== 0 && points !== 0) {\n      pointsStr = displayPoints(points, language);\n    }\n\n    const firstDivision = entry.divisions.length > 0 ? entry.divisions[0] : \"\";\n    const numDivisions = entry.divisions.length;\n\n    const classes = mapSexToClasses(entry.sex, this.props);\n    const wtcls = inKg\n      ? getWeightClassStr(classes, entry.bodyweightKg, language)\n      : getWeightClassLbsStr(classes, entry.bodyweightKg);\n    const bw = inKg ? entry.bodyweightKg : kg2lbs(entry.bodyweightKg);\n\n    const squatKg = getBest5SquatKg(entry);\n    const squat = inKg ? squatKg : kg2lbs(squatKg);\n\n    const benchKg = getBest5BenchKg(entry);\n    const bench = inKg ? benchKg : kg2lbs(benchKg);\n\n    const deadliftKg = getBest5DeadliftKg(entry);\n    const deadlift = inKg ? deadliftKg : kg2lbs(deadliftKg);\n\n    const total = inKg ? totalKg : kg2lbs(totalKg);\n\n    return (\n      <tr key={key}>\n        <td>{rank}</td>\n        <td>{entry.name}</td>\n        <td>{localizeSex(entry.sex, language)}</td>\n        <td>\n          {firstDivision} {numDivisions > 1 ? \"(+\" + (numDivisions - 1) + \")\" : \"\"}\n        </td>\n        <td>{localizeEquipment(entry.equipment, language)}</td>\n        <td>{entry.bodyweightKg === 0 ? null : wtcls}</td>\n        <td>{entry.bodyweightKg === 0 ? null : displayWeight(bw, language)}</td>\n        <td>{entry.age === 0 ? null : displayNumber(entry.age, language)}</td>\n        <td>{squatKg === 0 ? \"\" : displayWeight(squat, language)}</td>\n        <td>{benchKg === 0 ? \"\" : displayWeight(bench, language)}</td>\n        <td>{deadliftKg === 0 ? \"\" : displayWeight(deadlift, language)}</td>\n        <td>{totalKg === 0 ? \"\" : displayWeight(total, language)}</td>\n        <td>{pointsStr}</td>\n      </tr>\n    );\n  };\n\n  mapSexToLabel = (sex: Sex, language: Language): string => {\n    switch (sex) {\n      case \"M\":\n        return getString(\"results.mens\", language);\n      case \"F\":\n        return getString(\"results.womens\", language);\n      case \"Mx\":\n        return getString(\"results.mxs\", language);\n      default:\n        checkExhausted(sex);\n        return \"\";\n    }\n  };\n\n  renderCategoryResults = (results: PointsCategoryResults, key: number): JSX.Element | null => {\n    const { category, orderedEntries } = results;\n    const language = this.props.language;\n    const sex: string = this.mapSexToLabel(category.sex, language);\n\n    // Gather rows.\n    const rows = [];\n    for (let i = 0; i < orderedEntries.length; i++) {\n      const row = this.renderEntryRow(orderedEntries[i], category, i);\n      if (row !== null) {\n        rows.push(row);\n      }\n    }\n\n    // If all lifters were No-Show, skip displaying this category.\n    if (rows.length === 0) {\n      return null;\n    }\n\n    let eqpstr: string = localizeEquipment(category.equipment, language);\n    if (this.props.combineSleevesAndWraps && (category.equipment === \"Sleeves\" || category.equipment === \"Wraps\")) {\n      eqpstr = getString(\"results.combined-sleeves-wraps\", language);\n    } else if (\n      this.props.combineSingleAndMulti &&\n      (category.equipment === \"Single-ply\" || category.equipment === \"Multi-ply\")\n    ) {\n      eqpstr = getString(\"results.combined-single-multi\", language);\n    }\n\n    const template = getString(\"results.category-template\", language);\n    const categoryString = template\n      .replace(\"{sex}\", sex)\n      .replace(\"{equipment}\", eqpstr)\n      .replace(\"{event}\", localizeEvent(category.event, language));\n\n    return (\n      <Card key={key} style={{ marginTop: \"17px\" }}>\n        <Card.Header>{categoryString}</Card.Header>\n        <Card.Body>\n          <Table striped hover size=\"sm\">\n            <thead>\n              <tr>\n                <th>{getString(\"results.column-rank\", language)}</th>\n                <th>{getString(\"lifting.column-lifter\", language)}</th>\n                <th>{getString(\"results.column-sex\", language)}</th>\n                <th>{getString(\"lifting.column-division\", language)}</th>\n                <th>{getString(\"results.column-equipment\", language)}</th>\n                <th>{getString(\"lifting.column-weightclass\", language)}</th>\n                <th>{getString(\"lifting.column-bodyweight\", language)}</th>\n                <th>{getString(\"lifting.column-age\", language)}</th>\n                <th>{getString(\"flight-order.squat-column-header\", language)}</th>\n                <th>{getString(\"flight-order.bench-column-header\", language)}</th>\n                <th>{getString(\"flight-order.deadlift-column-header\", language)}</th>\n                <th>{getString(\"lifting.column-finaltotal\", language)}</th>\n                <th>\n                  {this.props.ageCoefficients === \"None\"\n                    ? getString(\"lifting.column-finalpoints\", language)\n                    : getString(\"results.column-age-points\", language)}\n                </th>\n              </tr>\n            </thead>\n            <tbody>{rows}</tbody>\n          </Table>\n        </Card.Body>\n      </Card>\n    );\n  };\n\n  render() {\n    let entries = this.props.entries;\n\n    // If this is for Best Masters lifter, just include non-standard-aged lifters.\n    if (this.props.agePointsCategory !== \"BestLifter\") {\n      entries = entries.filter((e) => {\n        // Filter out based on age.\n        switch (this.props.agePointsCategory) {\n          case \"BestLifter\":\n            break;\n          case \"BestMastersLifter\":\n            // The coefficients logic below will handle older lifters\n            // according to the chosen age coefficient system.\n            if (e.age <= 27) {\n              return false;\n            }\n            break;\n          case \"BestJuniorsLifter\":\n            // The coefficients logic below will handle older lifters\n            // according to the chosen age coefficient system.\n            if (e.age >= 27) {\n              return false;\n            }\n            break;\n          default:\n            checkExhausted(this.props.agePointsCategory);\n            break;\n        }\n\n        // Only include lifters who get an age bump.\n        switch (this.props.ageCoefficients) {\n          case \"None\":\n            return true;\n          case \"FosterMcCulloch\":\n            return fosterMcCulloch(e.age) !== 1.0;\n          default:\n            checkExhausted(this.props.ageCoefficients);\n            return true;\n        }\n      });\n    }\n\n    const results = getAllRankings(\n      entries,\n      this.props.formula,\n      this.props.ageCoefficients,\n      this.props.combineSleevesAndWraps,\n      this.props.combineSingleAndMulti,\n      this.props.inKg,\n      this.props.meetDate\n    );\n\n    const categoryCards = [];\n    for (let i = 0; i < results.length; i++) {\n      const panel = this.renderCategoryResults(results[i], i);\n      if (panel !== null) {\n        categoryCards.push(panel);\n      }\n    }\n\n    return <div>{categoryCards}</div>;\n  }\n}\n\nconst mapStateToProps = (state: GlobalState, ownProps: OwnProps): StateProps => {\n  const day = Number(ownProps.day);\n  let entries = state.registration.entries;\n  if (day > 0) {\n    entries = entries.filter((e) => e.day === day);\n  }\n\n  return {\n    inKg: state.meet.inKg,\n    meetName: state.meet.name,\n    meetDate: state.meet.date,\n    formula: state.meet.formula,\n    combineSleevesAndWraps: state.meet.combineSleevesAndWraps,\n    combineSingleAndMulti: state.meet.combineSingleAndMulti,\n    lengthDays: state.meet.lengthDays,\n    weightClassesKgMen: state.meet.weightClassesKgMen,\n    weightClassesKgWomen: state.meet.weightClassesKgWomen,\n    weightClassesKgMx: state.meet.weightClassesKgMx,\n    language: state.language,\n    entries: entries,\n  };\n};\n\nexport default connect(mapStateToProps)(ByPoints);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Exports data to a CSV format easily importable by OpenPowerlifting.\n\nimport { csvDate, csvString, Csv } from \"./csv\";\nimport { getFinalResults } from \"../divisionPlace\";\nimport { getPoints } from \"../coefficients/coefficients\";\nimport { wtclsStrKg2Lbs } from \"../../reducers/meetReducer\";\nimport {\n  getAge,\n  getBest3SquatKg,\n  getBest3BenchKg,\n  getBest3DeadliftKg,\n  getFinalEventTotalKg,\n  entryHasLifted,\n  MAX_ATTEMPTS,\n} from \"../entry\";\nimport { displayPoints, displayWeight, kg2lbs } from \"../units\";\n\nimport { Category, CategoryResults } from \"../divisionPlace\";\nimport { Entry, Equipment, Formula } from \"../../types/dataTypes\";\nimport { GlobalState, MeetState } from \"../../types/stateTypes\";\nimport { checkExhausted } from \"../../types/utils\";\nimport { releaseVersion } from \"../../versions\";\n\nconst makeMeetCsv = (meet: MeetState): Csv => {\n  const csv = new Csv();\n  csv.fieldnames = [\"Federation\", \"Date\", \"MeetCountry\", \"MeetState\", \"MeetTown\", \"MeetName\", \"Formula\"];\n\n  const row: Array<string> = [\n    csvString(meet.federation),\n    csvDate(meet.date),\n    csvString(meet.country),\n    csvString(meet.state),\n    csvString(meet.city),\n    csvString(meet.name),\n    csvString(meet.formula),\n  ];\n  csv.rows = [row];\n\n  // An optionalRuleSet column may be provided.\n  let rules = \"\";\n  if (meet.combineSleevesAndWraps === true) {\n    rules += \"CombineSleevesAndWraps \";\n  }\n  if (meet.combineSleevesAndWraps === true) {\n    rules += \"CombineSingleAndMulti \";\n  }\n  if (rules !== \"\") {\n    csv.fieldnames.push(\"RuleSet\");\n    csv.rows[0].push(rules.trim());\n  }\n\n  return csv;\n};\n\nconst standardizeEquipment = (eq: Equipment): string => {\n  switch (eq) {\n    case \"Bare\":\n      return \"Bare\";\n    case \"Sleeves\":\n      return \"Sleeves\";\n    case \"Wraps\":\n      return \"Wraps\";\n    case \"Single-ply\":\n      return \"Single-ply\";\n    case \"Multi-ply\":\n      return \"Multi-ply\";\n    case \"Unlimited\":\n      return \"Unlimited\";\n    default:\n      checkExhausted(eq);\n      return \"Raw\";\n  }\n};\n\nconst addEntriesRow = (\n  csv: Csv,\n  category: Category,\n  inKg: boolean,\n  meetDate: string,\n  formula: Formula,\n  entry: Entry,\n  index: number\n) => {\n  const unit: string = inKg ? \"Kg\" : \"LBS\";\n  const finalEventTotalKg = getFinalEventTotalKg(entry, category.event);\n\n  // Helper functions to keep things one-liners below. Handles Kg/Lbs conversion.\n  const weight = (kg: number): string => {\n    return displayWeight(inKg ? kg : kg2lbs(kg));\n  };\n  const wtcls = (cls: string): string => {\n    return inKg ? cls : wtclsStrKg2Lbs(cls);\n  };\n\n  // Initialize an empty row with all columns available.\n  const row: Array<string> = Array(csv.fieldnames.length).fill(\"\");\n\n  if (!entryHasLifted(entry)) {\n    row[csv.index(\"Place\")] = \"NS\"; // No-Show.\n  } else if (entry.guest) {\n    row[csv.index(\"Place\")] = \"G\"; // Guest\n  } else {\n    row[csv.index(\"Place\")] = finalEventTotalKg === 0 ? \"DQ\" : csvString(index + 1);\n  }\n\n  row[csv.index(\"Name\")] = csvString(entry.name);\n  row[csv.index(\"Instagram\")] = csvString(entry.instagram);\n  row[csv.index(\"Sex\")] = csvString(entry.sex);\n  row[csv.index(\"BirthDate\")] = csvDate(entry.birthDate);\n  row[csv.index(\"Age\")] = csvString(getAge(entry, meetDate));\n  row[csv.index(\"Country\")] = csvString(entry.country);\n  row[csv.index(\"State\")] = csvString(entry.state);\n  row[csv.index(\"Equipment\")] = csvString(standardizeEquipment(entry.equipment));\n  row[csv.index(\"Division\")] = csvString(category.division);\n  row[csv.index(\"Bodyweight\" + unit)] = csvString(weight(entry.bodyweightKg));\n  row[csv.index(\"WeightClass\" + unit)] = csvString(wtcls(category.weightClassStr));\n  row[csv.index(\"Total\" + unit)] = csvString(weight(finalEventTotalKg));\n  row[csv.index(\"Event\")] = csvString(category.event);\n  row[csv.index(\"Team\")] = csvString(entry.team);\n\n  // Squat.\n  if (category.event.includes(\"S\")) {\n    row[csv.index(\"Best3Squat\" + unit)] = csvString(weight(getBest3SquatKg(entry)));\n    for (let i = 0; i < MAX_ATTEMPTS; i++) {\n      const field = \"Squat\" + (i + 1) + unit;\n      row[csv.index(field)] = csvString(weight(entry.squatKg[i] * entry.squatStatus[i]));\n    }\n  }\n\n  // Bench.\n  if (category.event.includes(\"B\")) {\n    row[csv.index(\"Best3Bench\" + unit)] = csvString(weight(getBest3BenchKg(entry)));\n    for (let i = 0; i < MAX_ATTEMPTS; i++) {\n      const field = \"Bench\" + (i + 1) + unit;\n      row[csv.index(field)] = csvString(weight(entry.benchKg[i] * entry.benchStatus[i]));\n    }\n  }\n\n  // Deadlift.\n  if (category.event.includes(\"D\")) {\n    row[csv.index(\"Best3Deadlift\" + unit)] = csvString(weight(getBest3DeadliftKg(entry)));\n    for (let i = 0; i < MAX_ATTEMPTS; i++) {\n      const field = \"Deadlift\" + (i + 1) + unit;\n      row[csv.index(field)] = csvString(weight(entry.deadliftKg[i] * entry.deadliftStatus[i]));\n    }\n  }\n\n  // Points. OpenPowerlifting does not use this column, but people have asked for it.\n  const points = getPoints(formula, entry, category.event, finalEventTotalKg, inKg);\n  row[csv.index(\"Points\")] = csvString(points === 0 ? \"\" : displayPoints(points, \"en\"));\n\n  csv.rows.push(row);\n};\n\nconst makeEntriesCsv = (state: GlobalState): Csv => {\n  const inKg: boolean = state.meet.inKg;\n  const unit: string = inKg ? \"Kg\" : \"LBS\";\n\n  const csv = new Csv();\n\n  const squatFieldnames = [];\n  for (let i = 0; i < MAX_ATTEMPTS; i++) {\n    squatFieldnames.push(\"Squat\" + (i + 1) + unit);\n  }\n  squatFieldnames.push(\"Best3Squat\" + unit);\n\n  const benchFieldnames = [];\n  for (let i = 0; i < MAX_ATTEMPTS; i++) {\n    benchFieldnames.push(\"Bench\" + (i + 1) + unit);\n  }\n  benchFieldnames.push(\"Best3Bench\" + unit);\n\n  const deadliftFieldnames = [];\n  for (let i = 0; i < MAX_ATTEMPTS; i++) {\n    deadliftFieldnames.push(\"Deadlift\" + (i + 1) + unit);\n  }\n  deadliftFieldnames.push(\"Best3Deadlift\" + unit);\n\n  csv.fieldnames = Array.prototype.concat(\n    [\"Place\", \"Name\", \"Instagram\", \"Sex\", \"BirthDate\", \"Age\", \"Country\", \"State\"],\n    [\"Equipment\", \"Division\", \"Bodyweight\" + unit, \"WeightClass\" + unit],\n    squatFieldnames,\n    benchFieldnames,\n    deadliftFieldnames,\n    [\"Total\" + unit, \"Points\", \"Event\", \"Team\"]\n  );\n\n  const results: Array<CategoryResults> = getFinalResults(\n    state.registration.entries,\n    state.meet.weightClassesKgMen,\n    state.meet.weightClassesKgWomen,\n    state.meet.weightClassesKgMx,\n    state.meet.combineSleevesAndWraps,\n    state.meet.combineSingleAndMulti\n  );\n\n  const meet_date = state.meet.date;\n  const formula: Formula = state.meet.formula;\n\n  for (let i = 0; i < results.length; i++) {\n    const { category, orderedEntries } = results[i];\n\n    for (let j = 0; j < orderedEntries.length; j++) {\n      addEntriesRow(csv, category, inKg, meet_date, formula, orderedEntries[j], j);\n    }\n  }\n\n  return csv;\n};\n\nexport const exportAsOplCsv = (state: GlobalState): string => {\n  const meetCsv: Csv = makeMeetCsv(state.meet);\n\n  const entriesCsv: Csv = makeEntriesCsv(state);\n  entriesCsv.removeEmptyColumns();\n\n  const versionStr = `OPL Format v1 (OpenLifter ${releaseVersion}),Submit by email:,issues@openpowerlifting.org`;\n\n  return versionStr + \"\\n\\n\" + meetCsv.toString() + \"\\n\" + entriesCsv.toString();\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Exports data to a spreadsheet format used by the USAPL.\n\nimport { csvString, Csv } from \"./csv\";\nimport { getFinalResults } from \"../divisionPlace\";\nimport { displayWeight } from \"../units\";\n\nimport { Category, CategoryResults } from \"../divisionPlace\";\nimport { Entry, Event } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { checkExhausted } from \"../../types/utils\";\n\n// Translates the event from our format to the NextLifter format.\nconst translateEvent = (ev: Event): string => {\n  switch (ev) {\n    // Variants present in the NextLifter software.\n    case \"SBD\":\n      return \"PL\";\n    case \"BD\":\n      return \"PP\";\n    case \"S\":\n      return \"SQ\";\n    case \"B\":\n      return \"BP\";\n    case \"D\":\n      return \"DL\";\n\n    // These variants aren't selectable in NextLifter, so the USAPL doesn't use them.\n    case \"SB\":\n      return \"SB\";\n    case \"SD\":\n      return \"SD\";\n    default:\n      checkExhausted(ev);\n      return ev;\n  }\n};\n\n// Converts the ISO8601 entry.birthDate to USAPL MM/DD/YYYY format.\nconst makeBirthDate = (entry: Entry): string => {\n  if (entry.birthDate === undefined || entry.birthDate === \"\") {\n    return \"\";\n  }\n  const [year, month, day]: Array<string> = entry.birthDate.split(\"-\");\n  return month + \"/\" + day + \"/\" + year;\n};\n\n// Given an Entry and its index in the CategoryResults.orderedEntries,\n// render all that information as a one-liner CSV string.\nconst addDataRow = (csv: Csv, category: Category, entry: Entry): void => {\n  const hasSquat: boolean = category.event.includes(\"S\");\n  const hasBench: boolean = category.event.includes(\"B\");\n  const hasDL: boolean = category.event.includes(\"D\");\n\n  // Initialize an empty row with all columns available.\n  const row: Array<string> = Array(csv.fieldnames.length).fill(\"\");\n\n  row[csv.index(\"Name\")] = csvString(entry.name);\n  row[csv.index(\"Team\")] = csvString(entry.team);\n  row[csv.index(\"Div\")] = csvString(category.division);\n  row[csv.index(\"Bwt - kg\")] = csvString(displayWeight(entry.bodyweightKg));\n  row[csv.index(\"IPF Wt Cls\")] = csvString(category.weightClassStr);\n  row[csv.index(\"DOB\")] = csvString(makeBirthDate(entry));\n  row[csv.index(\"Squat 1\")] = csvString(displayWeight(hasSquat ? entry.squatKg[0] * entry.squatStatus[0] : 0));\n  row[csv.index(\"Squat 2\")] = csvString(displayWeight(hasSquat ? entry.squatKg[1] * entry.squatStatus[1] : 0));\n  row[csv.index(\"Squat 3\")] = csvString(displayWeight(hasSquat ? entry.squatKg[2] * entry.squatStatus[2] : 0));\n  row[csv.index(\"Bench 1\")] = csvString(displayWeight(hasBench ? entry.benchKg[0] * entry.benchStatus[0] : 0));\n  row[csv.index(\"Bench 2\")] = csvString(displayWeight(hasBench ? entry.benchKg[1] * entry.benchStatus[1] : 0));\n  row[csv.index(\"Bench 3\")] = csvString(displayWeight(hasBench ? entry.benchKg[2] * entry.benchStatus[2] : 0));\n  row[csv.index(\"Deadlift 1\")] = csvString(displayWeight(hasDL ? entry.deadliftKg[0] * entry.deadliftStatus[0] : 0));\n  row[csv.index(\"Deadlift 2\")] = csvString(displayWeight(hasDL ? entry.deadliftKg[1] * entry.deadliftStatus[1] : 0));\n  row[csv.index(\"Deadlift 3\")] = csvString(displayWeight(hasDL ? entry.deadliftKg[2] * entry.deadliftStatus[2] : 0));\n  row[csv.index(\"Event\")] = csvString(translateEvent(category.event));\n  row[csv.index(\"State\")] = csvString(entry.state);\n  row[csv.index(\"MemberID\")] = csvString(entry.memberId);\n  // TODO: Drug Test.\n\n  csv.rows.push(row);\n};\n\nexport const exportAsUSAPLCsv = (state: GlobalState): string => {\n  const csv = new Csv();\n  csv.fieldnames = [\n    \"Name\",\n    \"Team\",\n    \"Div\", // Division.\n    \"Bwt - kg\", // Bodyweight, kg.\n    \"IPF Wt Cls\", // IPF Weight Class (SHW as \"120+\", same format).\n    \"DOB\", // Date of Birth, in MM/DD/YYYY format.\n    \"Squat 1\", // Units unspecified, but seem to be kg.\n    \"Squat 2\",\n    \"Squat 3\",\n    \"Bench 1\",\n    \"Bench 2\",\n    \"Bench 3\",\n    \"Deadlift 1\",\n    \"Deadlift 2\",\n    \"Deadlift 3\",\n    \"Event\", // In NextLifter format (PL, BO, etc.).\n    \"State\", // USA state of residence of the lifter, as abbreviation.\n    \"MemberID\",\n    \"Drug Test\", // \"Y\" if a test was performed, blank otherwise.\n  ];\n\n  const results: Array<CategoryResults> = getFinalResults(\n    state.registration.entries,\n    state.meet.weightClassesKgMen,\n    state.meet.weightClassesKgWomen,\n    state.meet.weightClassesKgMx,\n    state.meet.combineSleevesAndWraps,\n    state.meet.combineSingleAndMulti\n  );\n\n  for (let i = 0; i < results.length; i++) {\n    const { category, orderedEntries } = results[i];\n\n    for (let j = 0; j < orderedEntries.length; j++) {\n      addDataRow(csv, category, orderedEntries[j]);\n    }\n  }\n\n  return csv.toString();\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// The parent component of the Results page, contained by the ResultsContainer.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\nimport FormControl from \"react-bootstrap/FormControl\";\n\nimport { saveAs } from \"file-saver\";\n\nimport ByDivision from \"./ByDivision\";\nimport ByPoints from \"./ByPoints\";\nimport ErrorModal from \"../ErrorModal\";\n\nimport { mergePlatform } from \"../../actions/registrationActions\";\n\nimport { liftingPresentOnPlatform, getWhetherPlatformsHaveLifted } from \"../../logic/entry\";\nimport { getString } from \"../../logic/strings\";\nimport { exportAsOplCsv } from \"../../logic/export/oplcsv\";\nimport { exportAsUSAPLCsv } from \"../../logic/export/usapl\";\n\nimport { Entry, Language } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\n\nimport styles from \"./ResultsView.module.scss\";\nimport { checkExhausted, assertString } from \"../../types/utils\";\nimport { Dispatch } from \"redux\";\n\ntype ResultsBy = \"Division\" | \"Points\" | \"BestMastersLifter\" | \"BestJuniorsLifter\";\n\nconst assertValidResultsBy = (value: string): value is ResultsBy => {\n  const resultsBy = value as ResultsBy;\n  switch (resultsBy) {\n    case \"BestJuniorsLifter\":\n    case \"BestMastersLifter\":\n    case \"Division\":\n    case \"Points\":\n      return true;\n    default:\n      checkExhausted(resultsBy);\n      throw new Error(`Expected a valid value for ResultsBy. Got \"${value}\"`);\n  }\n};\n\ninterface StateProps {\n  global: GlobalState;\n  language: Language;\n}\n\ninterface DispatchProps {\n  mergePlatform: (day: number, platform: number, platformEntries: Array<Entry>) => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\ninterface InternalState {\n  day: number;\n  by: ResultsBy;\n  // Controls the ErrorModal popup. Shown when error !== \"\".\n  error: string;\n}\n\n// FIXME: Unfortunate use of globals :/ I don't have a better idea.\n// This is to pass information from the merge button click handler to the\n// file loader click handler.\nlet globalMergeDay: number = 0;\nlet globalMergePlatform: number = 0;\n\nclass ResultsView extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    this.handleDayChange = this.handleDayChange.bind(this);\n    this.handleByChange = this.handleByChange.bind(this);\n    this.handleExportAsOplCsvClick = this.handleExportAsOplCsvClick.bind(this);\n    this.handleExportAsUSAPLCsvClick = this.handleExportAsUSAPLCsvClick.bind(this);\n    this.handleExportPlatformClick = this.handleExportPlatformClick.bind(this);\n    this.handleMergePlatformClick = this.handleMergePlatformClick.bind(this);\n    this.handleLoadFileInput = this.handleLoadFileInput.bind(this);\n    this.closeErrorModal = this.closeErrorModal.bind(this);\n    this.makePlatformMergeButtons = this.makePlatformMergeButtons.bind(this);\n\n    this.state = {\n      day: 0, // Meaning \"all\". Flow complained about mixing numbers and strings.\n      by: \"Division\",\n      error: \"\",\n    };\n  }\n\n  makeDayOptions = () => {\n    const language = this.props.language;\n    const options = [\n      <option key={\"all\"} value={0}>\n        {getString(\"results.all-days-together\", language)}\n      </option>,\n    ];\n\n    const justDayTemplate = getString(\"results.just-day-n\", language);\n    for (let day = 1; day <= this.props.global.meet.lengthDays; day++) {\n      options.push(\n        <option key={day} value={day}>\n          {justDayTemplate.replace(\"{N}\", String(day))}\n        </option>\n      );\n    }\n    return options;\n  };\n\n  handleDayChange = (event: React.BaseSyntheticEvent) => {\n    const day = Number(event.currentTarget.value);\n    if (this.state.day !== day) {\n      this.setState({ day: day });\n    }\n  };\n\n  handleByChange = (event: React.BaseSyntheticEvent) => {\n    const by = event.currentTarget.value;\n    if (this.state.by !== by && assertString(by) && assertValidResultsBy(by)) {\n      this.setState({ by: by });\n    }\n  };\n\n  handleExportAsOplCsvClick = () => {\n    // TODO: Share this logic with HomeContainer.\n    let meetname = this.props.global.meet.name;\n    if (meetname === \"\") {\n      meetname = getString(\"common.unnamed-filename\", this.props.language);\n    }\n    meetname = meetname.replace(/ /g, \"-\");\n\n    const csv: string = exportAsOplCsv(this.props.global);\n    const blob = new Blob([csv], { type: \"text/csv;charset=utf-8\" });\n    saveAs(blob, meetname + \".opl.csv\");\n  };\n\n  handleExportAsUSAPLCsvClick = () => {\n    // TODO: Share this logic with handleExportAsOplCsvClick.\n    let meetname = this.props.global.meet.name;\n    if (meetname === \"\") {\n      meetname = getString(\"common.unnamed-filename\", this.props.language);\n    }\n    meetname = meetname.replace(/ /g, \"-\");\n\n    const csv: string = exportAsUSAPLCsv(this.props.global);\n    const blob = new Blob([csv], { type: \"text/csv;charset=utf-8\" });\n    saveAs(blob, meetname + \".USAPL.csv\");\n  };\n\n  handleExportPlatformClick = (day: number, platform: number) => {\n    // TODO: Share this logic with handleExportAsOplCsvClick.\n    const language = this.props.language;\n    let meetname = this.props.global.meet.name;\n    if (meetname === \"\") {\n      meetname = getString(\"common.unnamed-filename\", language);\n    }\n    meetname = meetname.replace(/ /g, \"-\");\n\n    const template = getString(\"results.platform-export-filename\", language);\n    const exportname = template\n      .replace(\"{day}\", String(day))\n      .replace(\"{platform}\", String(platform))\n      .replace(\"{meetName}\", meetname);\n\n    const state = JSON.stringify(this.props.global);\n    const blob = new Blob([state], { type: \"application/json;charset=utf-8\" });\n    saveAs(blob, exportname + \".export.openlifter\");\n  };\n\n  // The file input is hidden, and we want to use a button to activate it.\n  // This event handler makes a proxy call to the *real* event handler.\n  handleMergePlatformClick = (day: number, platform: number) => {\n    const loadHelper = document.getElementById(\"loadhelper\");\n    if (loadHelper !== null) {\n      globalMergeDay = day;\n      globalMergePlatform = platform;\n      loadHelper.click();\n    }\n  };\n\n  // Called when a file is selected for merging platform data.\n  handleLoadFileInput = () => {\n    const loadHelper = document.getElementById(\"loadhelper\");\n    if (loadHelper === null || !(loadHelper instanceof HTMLInputElement) || loadHelper.files === null) {\n      return;\n    }\n\n    // Get the (day, platform) from global state.\n    const day: number = globalMergeDay;\n    const platform: number = globalMergePlatform;\n\n    // Remember the props in the onload() closure.\n    const props = this.props;\n    const language = props.language;\n\n    const rememberThis = this;\n    const selectedFile = loadHelper.files[0];\n    const reader = new FileReader();\n    reader.onload = () => {\n      let error: string | null = null;\n\n      // If this occurs, we've introduced a bug when initiating the file reader, or the read failed.\n      // Add this check as a guard so the typing is narrowed\n      if (typeof reader.result !== \"string\") {\n        window.alert(getString(\"error.internal-error\", language));\n        return;\n      }\n\n      try {\n        const obj: GlobalState = JSON.parse(reader.result);\n\n        // stateVersion must match.\n        if (obj.versions.stateVersion !== props.global.versions.stateVersion) {\n          const e = getString(\"error.version-mismatch\", language);\n          error = e\n            .replace(\"{thisVersion}\", props.global.versions.stateVersion)\n            .replace(\"{otherVersion}\", obj.versions.stateVersion);\n        } else if (obj.meet.name !== props.global.meet.name) {\n          // The meet name must match, for sanity checking.\n          const e = getString(\"error.meetname-mismatch\", language);\n          error = e.replace(\"{thisName}\", props.global.meet.name).replace(\"{otherName}\", obj.meet.name);\n        } else if (!liftingPresentOnPlatform(obj.registration.entries, day, platform)) {\n          // The meet must actually contain data from the given (day, platform).\n          const e = getString(\"error.no-platform-data\", language);\n          error = e.replace(\"{day}\", String(day)).replace(\"{platform}\", String(platform));\n        } else {\n          // Sanity checks passed: fire off a mergePlatform action!\n          const platformEntries = obj.registration.entries.filter((e) => {\n            return e.day === day && e.platform === platform;\n          });\n          props.mergePlatform(day, platform, platformEntries);\n        }\n      } catch (err) {\n        error = getString(\"error.not-json\", language);\n      }\n\n      if (typeof error === \"string\") {\n        rememberThis.setState({ error: error });\n      }\n    };\n    reader.readAsText(selectedFile);\n  };\n\n  closeErrorModal = () => {\n    this.setState({ error: \"\" });\n  };\n\n  makePlatformMergeButtons = () => {\n    // Array accessed by platformsHaveLifted[day-1][platform-1].\n    const platformsHaveLifted: Array<Array<boolean>> = getWhetherPlatformsHaveLifted(\n      this.props.global.meet.platformsOnDays,\n      this.props.global.registration.entries\n    );\n\n    const language = this.props.language;\n    const combineTemplate = getString(\"results.combine-platforms-header\", language);\n    const mergeTemplate = getString(\"results.merge-platform\", language);\n    const exportTemplate = getString(\"results.export-platform\", language);\n\n    const forms = [];\n    const numDays = Math.min(this.props.global.meet.lengthDays, platformsHaveLifted.length);\n\n    for (let i = 0; i < numDays; i++) {\n      const liftedOnDay = platformsHaveLifted[i];\n\n      const buttons = [];\n      for (let j = 0; j < liftedOnDay.length; j++) {\n        const lifted = liftedOnDay[j];\n        const variant = lifted === true ? \"success\" : \"warning\";\n        const marginStyle = j > 0 ? { marginLeft: \"14px\" } : undefined;\n\n        const actionTemplate = lifted === true ? exportTemplate : mergeTemplate;\n        buttons.push(\n          <Button\n            key={i + \"-\" + j}\n            variant={variant}\n            style={marginStyle}\n            onClick={() => {\n              lifted === true\n                ? this.handleExportPlatformClick(i + 1, j + 1)\n                : this.handleMergePlatformClick(i + 1, j + 1);\n            }}\n          >\n            {actionTemplate.replace(\"{day}\", String(i + 1)).replace(\"{platform}\", String(j + 1))}\n          </Button>\n        );\n      }\n\n      forms.push(\n        <div key={i}>\n          <div>{combineTemplate.replace(\"{N}\", String(i + 1))}</div>\n          <div>{buttons}</div>\n          {i < platformsHaveLifted.length - 1 ? <br /> : null}\n        </div>\n      );\n    }\n\n    return forms;\n  };\n\n  render() {\n    const language = this.props.language;\n    let results = null;\n    switch (this.state.by) {\n      case \"Division\":\n        results = <ByDivision key={this.state.day} day={this.state.day} />;\n        break;\n      case \"Points\":\n        results = (\n          <ByPoints key={this.state.day} day={this.state.day} ageCoefficients=\"None\" agePointsCategory=\"BestLifter\" />\n        );\n        break;\n      case \"BestMastersLifter\":\n        results = (\n          <ByPoints\n            key={this.state.day}\n            day={this.state.day}\n            ageCoefficients={this.props.global.meet.ageCoefficients}\n            agePointsCategory=\"BestMastersLifter\"\n          />\n        );\n        break;\n      case \"BestJuniorsLifter\":\n        results = (\n          <ByPoints\n            key={this.state.day}\n            day={this.state.day}\n            ageCoefficients={this.props.global.meet.ageCoefficients}\n            agePointsCategory=\"BestJuniorsLifter\"\n          />\n        );\n        break;\n      default:\n        break;\n    }\n\n    let daySelector = null;\n    if (this.props.global.meet.lengthDays > 1) {\n      daySelector = (\n        <FormControl\n          value={this.state.day.toString()}\n          as=\"select\"\n          onChange={this.handleDayChange}\n          className={`custom-select ${styles.dropdown}`}\n          style={{ marginRight: \"15px\" }}\n        >\n          {this.makeDayOptions()}\n        </FormControl>\n      );\n    }\n\n    return (\n      <div>\n        <ErrorModal\n          error={this.state.error}\n          title={getString(\"results.merge-error-title\", language)}\n          show={this.state.error !== \"\"}\n          close={this.closeErrorModal}\n        />\n\n        <CardDeck>\n          <Card style={{ marginBottom: \"17px\" }}>\n            <Card.Header>\n              <FormattedMessage id=\"results.merge-platforms-card-header\" defaultMessage=\"Merge Platforms\" />\n            </Card.Header>\n            <Card.Body>\n              <div style={{ fontWeight: \"bold\" }}>\n                <FormattedMessage\n                  id=\"results.merge-platforms-warning\"\n                  defaultMessage=\"Merging platforms will overwrite data. Please save before merging.\"\n                />\n              </div>\n              <br />\n              {this.makePlatformMergeButtons()}\n            </Card.Body>\n          </Card>\n\n          <Card style={{ marginBottom: \"17px\" }}>\n            <Card.Header>\n              <FormattedMessage id=\"results.export-results-card-header\" defaultMessage=\"Export Official Results\" />\n            </Card.Header>\n            <Card.Body>\n              <Button onClick={this.handleExportAsOplCsvClick}>\n                <FormattedMessage\n                  id=\"results.export-openpowerlifting-button\"\n                  defaultMessage=\"Export for OpenPowerlifting\"\n                />\n              </Button>\n\n              <Button onClick={this.handleExportAsUSAPLCsvClick} style={{ marginLeft: \"14px\" }}>\n                <FormattedMessage id=\"results.export-usapl-button\" defaultMessage=\"Export for USAPL\" />\n              </Button>\n            </Card.Body>\n          </Card>\n        </CardDeck>\n\n        <Card>\n          <Card.Header>\n            <FormattedMessage id=\"results.results-card-header\" defaultMessage=\"Results For...\" />\n          </Card.Header>\n          <Card.Body className={styles.controlCard}>\n            {daySelector}\n\n            <FormControl\n              value={this.state.by}\n              as=\"select\"\n              onChange={this.handleByChange}\n              className={`custom-select ${styles.dropdown}`}\n            >\n              <option value=\"Division\">{getString(\"results.by-division\", language)}</option>\n              {this.props.global.meet.ageCoefficients !== \"None\" ? (\n                <option value=\"BestJuniorsLifter\">{getString(\"results.best-juniors-lifter\", language)}</option>\n              ) : null}\n              {this.props.global.meet.ageCoefficients !== \"None\" ? (\n                <option value=\"BestMastersLifter\">{getString(\"results.best-masters-lifter\", language)}</option>\n              ) : null}\n              <option value=\"Points\">{getString(\"results.best-lifter\", language)}</option>\n            </FormControl>\n          </Card.Body>\n        </Card>\n\n        {results}\n\n        <input\n          id=\"loadhelper\"\n          type=\"file\"\n          accept=\".openlifter,.openlifter.txt\"\n          style={{ display: \"none\" }}\n          onChange={this.handleLoadFileInput}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => {\n  return {\n    global: state,\n    language: state.language,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    mergePlatform: (day, platform, platformEntries) => dispatch(mergePlatform(day, platform, platformEntries)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultsView);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Container for the Results page.\n\nimport React from \"react\";\n\nimport ResultsView from \"../components/results/ResultsView\";\nimport styles from \"../components/common/ContentArea.module.scss\";\n\nclass ResultsContainer extends React.Component<{}> {\n  render() {\n    return (\n      <div className={styles.contentArea}>\n        <ResultsView />\n      </div>\n    );\n  }\n}\n\nexport default ResultsContainer;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Randomizes the Meet Setup state, for debugging.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Button from \"react-bootstrap/Button\";\n\nimport LocalizedString from \"../translations/LocalizedString\";\n\nimport { randomString, randomInt, randomFixedPoint } from \"./RandomizeHelpers\";\n\nimport {\n  setDivisions,\n  setFederation,\n  setLengthDays,\n  setMeetName,\n  setPlatformsOnDays,\n  setWeightClasses,\n} from \"../../actions/meetSetupActions\";\n\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { Dispatch } from \"redux\";\nimport { Sex } from \"../../types/dataTypes\";\n\ninterface DispatchProps {\n  setDivisions: (divisions: Array<string>) => void;\n  setFederation: (federation: string) => void;\n  setLengthDays: (length: number) => void;\n  setMeetName: (name: string) => void;\n  setPlatformsOnDays: (day: number, count: number) => void;\n  setWeightClasses: (sex: Sex, classesKg: number[]) => void;\n}\n\ntype Props = GlobalState & DispatchProps;\n\nconst NonsenseFederations = [\n  \"CTHULHU\",\n  \"USPLAWH\",\n  \"FIREFOX\",\n  \"PIZZAHUT\",\n  \"50% RAW\",\n  \"TODDLERS\",\n  \"COFFEE\",\n  \"THEBORG\",\n  \"LETITSNOW\",\n];\n\nconst NonsenseDivisions = [\"Masters\", \"Juniors\", \"Lawyers\", \"Infants\", \"Turtles\", \"Rabbits\"];\n\nclass RandomizeMeetSetupButton extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n    this.randomizeMeetSetup = this.randomizeMeetSetup.bind(this);\n  }\n\n  randomizeMeetSetup() {\n    // Set a gibberish MeetName.\n    // ==========================================\n    this.props.setMeetName(randomString() + randomString());\n\n    // Generate a nonsense federation.\n    // ==========================================\n    const fed = NonsenseFederations[randomInt(0, NonsenseFederations.length - 1)];\n    this.props.setFederation(fed);\n\n    // Generate nonsense weight classes.\n    // ==========================================\n    const numClassesMen = randomInt(5, 12);\n    const numClassesWomen = randomInt(4, 8);\n\n    let classesMen = [];\n    for (let i = 0; i < numClassesMen; i++) {\n      classesMen.push(randomFixedPoint(40, 145, 1));\n    }\n    classesMen = classesMen.sort((a, b) => Number(a) - Number(b));\n\n    let classesWomen = [];\n    for (let i = 0; i < numClassesWomen; i++) {\n      classesWomen.push(randomFixedPoint(35, 110, 1));\n    }\n    classesWomen = classesWomen.sort((a, b) => Number(a) - Number(b));\n\n    let classesMx = [];\n    for (let i = 0; i < numClassesWomen; i++) {\n      classesMx.push(randomFixedPoint(40, 120, 1));\n    }\n    classesMx = classesMx.sort((a, b) => Number(a) - Number(b));\n\n    this.props.setWeightClasses(\"M\", classesMen);\n    this.props.setWeightClasses(\"F\", classesWomen);\n    this.props.setWeightClasses(\"Mx\", classesMx);\n\n    // Generate nonsense days and platforms.\n    // ==========================================\n    const numDays = randomInt(1, 4);\n    this.props.setLengthDays(numDays);\n\n    for (let i = 0; i < numDays; i++) {\n      const day = i + 1;\n      const numPlatforms = randomInt(1, 2);\n      this.props.setPlatformsOnDays(day, numPlatforms);\n    }\n\n    // Generate nonsense divisions.\n    // ==========================================\n    const numDivisions = randomInt(1, 20);\n    const divisions = [];\n    for (let i = 0; i < numDivisions; i++) {\n      let div = NonsenseDivisions[randomInt(0, NonsenseDivisions.length - 1)];\n      if (Math.random() > 0.5) {\n        const age_lower = randomInt(1, 40);\n        const age_upper = randomInt(age_lower + 1, 99);\n        div = div + \" \" + String(age_lower) + \"-\" + String(age_upper);\n      }\n\n      // Disallow repeat divisions.\n      if (divisions.indexOf(div) === -1) {\n        divisions.push(div);\n      }\n    }\n    this.props.setDivisions(divisions);\n  }\n\n  render() {\n    return (\n      <Button onClick={this.randomizeMeetSetup}>\n        <LocalizedString id=\"nav.meet-setup\" />\n      </Button>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): GlobalState => ({\n  ...state,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    setDivisions: (divisions: Array<string>) => dispatch(setDivisions(divisions)),\n    setFederation: (federation: string) => dispatch(setFederation(federation)),\n    setLengthDays: (length: number) => dispatch(setLengthDays(length)),\n    setMeetName: (name: string) => dispatch(setMeetName(name)),\n    setPlatformsOnDays: (day: number, count: number) => dispatch(setPlatformsOnDays(day, count)),\n    setWeightClasses: (sex: Sex, classesKg: number[]) => dispatch(setWeightClasses(sex, classesKg)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RandomizeMeetSetupButton);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Randomizes the Registration page, for debugging.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\n\nimport Button from \"react-bootstrap/Button\";\n\nimport LocalizedString from \"../translations/LocalizedString\";\n\nimport { randomInt } from \"./RandomizeHelpers\";\nimport { newRegistration, deleteRegistration } from \"../../actions/registrationActions\";\n\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { Event, Entry, Sex, Equipment, Flight } from \"../../types/dataTypes\";\n\nconst NonsenseFirstNames = [\n  \"Aragorn\",\n  \"Arwen\",\n  \"Aule\",\n  \"Balin\",\n  \"Beorn\",\n  \"Beregond\",\n  \"Bert\",\n  \"Bifur\",\n  \"Bilbo\",\n  \"Bofur\",\n  \"Bolg\",\n  \"Bombur\",\n  \"Boromir\",\n  \"Bregalad\",\n  \"Bullroarer\",\n  \"Bungo\",\n  \"Carc\",\n  \"Celeborn\",\n  \"Dain\",\n  \"Denethor\",\n  \"Dori\",\n  \"Dwalin\",\n  \"Elrohir\",\n  \"Elrond\",\n  \"Eomer\",\n  \"Eowyn\",\n  \"Este\",\n  \"Faramir\",\n  \"Fili\",\n  \"Fredegar\",\n  \"Frodo\",\n  \"Galadriel\",\n  \"Galion\",\n  \"Gandalf\",\n  \"Gimli\",\n  \"Gloin\",\n  \"Glorfindel\",\n  \"Golfimbul\",\n  \"Gollum\",\n  \"Gothmog\",\n  \"Grima\",\n  \"Imrahil\",\n  \"Kili\",\n  \"Legolas\",\n  \"Lorien\",\n  \"Mandos\",\n  \"Manwe\",\n  \"Melkor\",\n  \"Meriadoc\",\n  \"Nessa\",\n  \"Nienna\",\n  \"Nori\",\n  \"Oin\",\n  \"Ori\",\n  \"Orome\",\n  \"Peregrin\",\n  \"Pippin\",\n  \"Radagast\",\n  \"Roac\",\n  \"Samwise\",\n  \"Saruman\",\n  \"Sauron\",\n  \"Shelob\",\n  \"Smaug\",\n  \"Theoden\",\n  \"Thorin\",\n  \"Thranduil\",\n  \"Tom\",\n  \"Treebeard\",\n  \"Tulkas\",\n  \"Ulmo\",\n  \"Vaire\",\n  \"Vana\",\n  \"Varda\",\n  \"William\",\n  \"Yavanna\",\n];\n\nconst NonsenseLastNames = [\n  \"Black\",\n  \"Burbage\",\n  \"Carrow\",\n  \"Cattermole\",\n  \"Chang\",\n  \"Clearwater\",\n  \"Crabbe\",\n  \"Creevey\",\n  \"Crouch\",\n  \"Delacour\",\n  \"Diggory\",\n  \"Dumbledore\",\n  \"Dursley\",\n  \"Edgecombe\",\n  \"Filch\",\n  \"Flitwick\",\n  \"Fudge\",\n  \"Goyle\",\n  \"Granger\",\n  \"Grindelwald\",\n  \"Hagrid\",\n  \"Hufflepuff\",\n  \"Kettleburn\",\n  \"Lockhart\",\n  \"Longbottom\",\n  \"Lovegood\",\n  \"Lupin\",\n  \"Malfoy\",\n  \"Marchbanks\",\n  \"McGonagall\",\n  \"McLaggen\",\n  \"Moody\",\n  \"Nott\",\n  \"Ogden\",\n  \"Ollivander\",\n  \"Parkinson\",\n  \"Pettigrew\",\n  \"Peverell\",\n  \"Pince\",\n  \"Podmore\",\n  \"Pomfrey\",\n  \"Potter\",\n  \"Quirrell\",\n  \"Riddle\",\n  \"Rookwood\",\n  \"Rowle\",\n  \"Runcorn\",\n  \"Scrimgeour\",\n  \"Shacklebolt\",\n  \"Shunpike\",\n  \"Sinistra\",\n  \"Slughorn\",\n  \"Slytherin\",\n  \"Snape\",\n  \"Spinnet\",\n  \"Sprout\",\n  \"Thicknesse\",\n  \"Tonks\",\n  \"Trelawney\",\n  \"Twycross\",\n  \"Umbridge\",\n  \"Vance\",\n  \"Voldemort\",\n  \"Weasley\",\n  \"Wood\",\n  \"Yaxley\",\n  \"Zabini\",\n];\n\ninterface DispatchProps {\n  newRegistration: (obj: Partial<Entry>) => void;\n  deleteRegistration: (entryId: number) => void;\n}\n\ntype Props = GlobalState & DispatchProps;\n\nclass RandomizeRegistrationButton extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n    this.deleteExistingRegistrations = this.deleteExistingRegistrations.bind(this);\n    this.generateEntries = this.generateEntries.bind(this);\n    this.randomizeRegistration = this.randomizeRegistration.bind(this);\n  }\n\n  deleteExistingRegistrations() {\n    const entryIds = this.props.registration.entries.map((e) => e.id);\n    for (let i = 0; i < entryIds.length; i++) {\n      this.props.deleteRegistration(entryIds[i]);\n    }\n  }\n\n  // Generate entries in a flight together, in case we want to give them\n  // similar properties.\n  generateEntries(day: number, platform: number, flight: Flight) {\n    const numLifters = randomInt(6, 18);\n\n    for (let i = 0; i < numLifters; i++) {\n      // Set a nonsense Name.\n      // ==========================================\n      const firstName = NonsenseFirstNames[randomInt(0, NonsenseFirstNames.length - 1)];\n      const lastName = NonsenseLastNames[randomInt(0, NonsenseLastNames.length - 1)];\n      const name = firstName + \" \" + lastName;\n\n      // Set a random Sex.\n      // ==========================================\n      const sexes: Sex[] = [\"M\", \"F\", \"Mx\"];\n      const sex: Sex = sexes[randomInt(0, sexes.length - 1)];\n\n      // 10% chance they're a guest.\n      // ==========================================\n      const isGuest: boolean = randomInt(1, 10) === 1;\n\n      // Assign a random Team.\n      // ==========================================\n      const teams: string[] = [\"Team Red\", \"Team Green\", \"Team Blue\"];\n      const team: string = teams[randomInt(0, teams.length - 1)];\n\n      // Generate random events, making most lifters SBD.\n      // ==========================================\n      const events: Event[] = [];\n      if (Math.random() < 0.5) {\n        events.push(\"SBD\");\n      }\n      if (Math.random() < 0.1) {\n        events.push(\"BD\");\n      }\n      if (Math.random() < 0.1) {\n        events.push(\"S\");\n      }\n      if (Math.random() < 0.1) {\n        events.push(\"B\");\n      }\n      if (Math.random() < 0.1) {\n        events.push(\"D\");\n      }\n      if (events.length === 0) {\n        events.push(\"SBD\");\n      }\n\n      // Generate random equipment, making most lifters SBD,\n      // being careful that it matches their events.\n      // ==========================================\n      let hasSquat = false;\n      for (let i = 0; i < events.length; i++) {\n        if (events[i].includes(\"S\")) {\n          hasSquat = true;\n          break;\n        }\n      }\n\n      const equipmentSelect = Math.random();\n      let equipment: Equipment = \"Sleeves\";\n      if (equipmentSelect < 0.7) {\n        // Nothing, sleeves default case.\n      } else if (equipmentSelect < 0.9) {\n        if (hasSquat) {\n          equipment = \"Wraps\";\n        }\n      } else if (equipmentSelect < 0.95) {\n        equipment = \"Single-ply\";\n      } else if (equipmentSelect < 0.98) {\n        equipment = \"Multi-ply\";\n      } else {\n        equipment = \"Unlimited\";\n      }\n\n      // File into random divisions.\n      // ==========================================\n      const divisions = [];\n      if (this.props.meet.divisions.length > 0) {\n        const divisionsUpperBound = Math.max(1, this.props.meet.divisions.length - 1);\n        const numDivisions = randomInt(1, divisionsUpperBound);\n\n        // List of remaining available divisions.\n        const divchooser = this.props.meet.divisions.slice();\n\n        for (let i = 0; i < numDivisions; i++) {\n          const choice = randomInt(0, divchooser.length - 1);\n          divisions.push(divchooser[choice]);\n\n          // Delete the choice from the list of available divisions.\n          divchooser.splice(choice, 1);\n        }\n      }\n\n      this.props.newRegistration({\n        day: day,\n        platform: platform,\n        flight: flight,\n        name: name,\n        sex: sex,\n        team: team,\n        events: events,\n        equipment: equipment,\n        divisions: divisions,\n        guest: isGuest,\n      });\n    }\n  }\n\n  randomizeRegistration() {\n    const FLIGHTCHARS: Flight[] = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\"];\n\n    this.deleteExistingRegistrations();\n    for (let day = 1; day <= this.props.meet.lengthDays; day++) {\n      const numPlatforms = this.props.meet.platformsOnDays[day - 1];\n      for (let platform = 1; platform <= numPlatforms; platform++) {\n        const numFlights = randomInt(1, 3);\n        for (let flight = 0; flight < numFlights; flight++) {\n          this.generateEntries(day, platform, FLIGHTCHARS[flight]);\n        }\n      }\n    }\n  }\n\n  render() {\n    return (\n      <Button onClick={this.randomizeRegistration}>\n        <LocalizedString id=\"nav.registration\" />\n      </Button>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): GlobalState => ({\n  ...state,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    newRegistration: (obj: Partial<Entry>) => dispatch(newRegistration(obj)),\n    deleteRegistration: (entryId: number) => dispatch(deleteRegistration(entryId)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RandomizeRegistrationButton);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Randomizes the Registration page, for debugging.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\n\nimport Button from \"react-bootstrap/Button\";\n\nimport LocalizedString from \"../translations/LocalizedString\";\n\nimport { randomAttempt, randomInt, randomFixedPoint } from \"./RandomizeHelpers\";\nimport { lbs2kg } from \"../../logic/units\";\n\nimport { updateRegistration } from \"../../actions/registrationActions\";\nimport { enterAttempt } from \"../../actions/liftingActions\";\n\nimport { GlobalState, MeetState, RegistrationState } from \"../../types/stateTypes\";\nimport { Entry, Lift } from \"../../types/dataTypes\";\n\ninterface StateProps {\n  meet: MeetState;\n  registration: RegistrationState;\n}\n\ninterface DispatchProps {\n  updateRegistration: (entryId: number, obj: Partial<Entry>) => void;\n  enterAttempt: (entryId: number, lift: Lift, attemptOneIndexed: number, weightKg: number) => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\nclass RandomizeWeighinsButton extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n    this.randomizeWeighins = this.randomizeWeighins.bind(this);\n  }\n\n  randomAttempt = () => {\n    return randomAttempt(this.props.meet.inKg);\n  };\n\n  randomizeWeighins = () => {\n    const entries = this.props.registration.entries;\n    const inKg: boolean = this.props.meet.inKg;\n\n    for (let i = 0; i < entries.length; i++) {\n      const entry = entries[i];\n\n      // Get a random bodyweight.\n      // ==========================================\n      const bodyweightKg = inKg ? randomFixedPoint(20, 150, 1) : lbs2kg(randomFixedPoint(40, 320, 1));\n      this.props.updateRegistration(entry.id, {\n        bodyweightKg: bodyweightKg,\n      });\n\n      // Get a random age.\n      const age = randomInt(5, 79);\n      this.props.updateRegistration(entry.id, {\n        age: age,\n      });\n\n      // Figure out which events we're generating information for.\n      // ==========================================\n      let hasSquat = false;\n      let hasBench = false;\n      let hasDeadlift = false;\n      for (let j = 0; j < entry.events.length; j++) {\n        const e = entry.events[j];\n        if (e.includes(\"S\")) {\n          hasSquat = true;\n        }\n        if (e.includes(\"B\")) {\n          hasBench = true;\n        }\n        if (e.includes(\"D\")) {\n          hasDeadlift = true;\n        }\n      }\n\n      // Set attempts.\n      // ==========================================\n      if (hasSquat) {\n        this.props.enterAttempt(entry.id, \"S\", 1, this.randomAttempt());\n      }\n      if (hasBench) {\n        this.props.enterAttempt(entry.id, \"B\", 1, this.randomAttempt());\n      }\n      if (hasDeadlift) {\n        this.props.enterAttempt(entry.id, \"D\", 1, this.randomAttempt());\n      }\n\n      // Set rack info.\n      // ==========================================\n      if (hasSquat) {\n        const height = String(randomInt(2, 18));\n        const pos = Math.random() < 0.9 ? \"out\" : \"in\";\n        this.props.updateRegistration(entry.id, {\n          squatRackInfo: height + pos,\n        });\n      }\n\n      if (hasBench) {\n        const height = String(randomInt(0, 12));\n        const safety = String(randomInt(0, 4));\n        this.props.updateRegistration(entry.id, {\n          benchRackInfo: height + \"/\" + safety,\n        });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <Button onClick={this.randomizeWeighins}>\n        <LocalizedString id=\"nav.weigh-ins\" />\n      </Button>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  meet: state.meet,\n  registration: state.registration,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  updateRegistration: (entryId, obj) => dispatch(updateRegistration(entryId, obj)),\n  enterAttempt: (entryId, lift, attemptOneIndexed, weightKg) =>\n    dispatch(enterAttempt(entryId, lift, attemptOneIndexed, weightKg)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RandomizeWeighinsButton);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Fills the Lifting page with random valid lift data for debugging purposes.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\n\nimport Button from \"react-bootstrap/Button\";\n\nimport LocalizedString from \"../translations/LocalizedString\";\n\nimport { randomAttempt, randomAttemptWithMin } from \"./RandomizeHelpers\";\n\nimport { markLift, enterAttempt } from \"../../actions/liftingActions\";\n\nimport { GlobalState, MeetState, RegistrationState } from \"../../types/stateTypes\";\nimport { Lift } from \"../../types/dataTypes\";\n\ninterface StateProps {\n  meet: MeetState;\n  registration: RegistrationState;\n}\n\ninterface DispatchProps {\n  enterAttempt: (entryId: number, lift: Lift, attemptOneIndexed: number, weightKg: number) => void;\n  markLift: (entryId: number, lift: Lift, attempt: number, success: boolean) => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\nclass RandomizeLiftingButton extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n    this.randomizeLifting = this.randomizeLifting.bind(this);\n  }\n  setLiftsForLift(entryId: number, lift: Lift, inKg: boolean) {\n    // enter opener\n    const firstAttempt = randomAttempt(inKg);\n    this.props.enterAttempt(entryId, lift, 1, firstAttempt);\n\n    // set random chance of failing attempt\n    let success = Math.random() > 0.15;\n\n    // mark opener as success or failure\n    this.props.markLift(entryId, lift, 1, success);\n\n    // enter 2nd attempt\n    // re-take first attempt if it failed\n    let secondAttempt = firstAttempt;\n\n    if (success) {\n      // increase attempt if opener was successful\n      secondAttempt = randomAttemptWithMin(inKg, firstAttempt + 1);\n    }\n    this.props.enterAttempt(entryId, lift, 2, secondAttempt);\n\n    // set slightly higher chance of failing 2nd\n    success = Math.random() > 0.25;\n\n    // mark 2nd lift success or failure\n    this.props.markLift(entryId, lift, 2, success);\n\n    // record 3rd attempt\n    let thirdAttempt = secondAttempt;\n    if (success) {\n      // increment weight for 3rd\n      thirdAttempt = randomAttemptWithMin(inKg, secondAttempt + 1);\n    }\n    this.props.enterAttempt(entryId, lift, 3, thirdAttempt);\n\n    // set slightly higher chance of failing 3rd\n    success = Math.random() > 0.3;\n    // record success or failure\n    this.props.markLift(entryId, lift, 3, success);\n  }\n\n  randomizeLifting = () => {\n    const entries = this.props.registration.entries;\n    const inKg: boolean = this.props.meet.inKg;\n\n    for (let i = 0; i < entries.length; i++) {\n      const entry = entries[i];\n\n      // Figure out which events we're generating lift data for.\n      let hasSquat = false;\n      let hasBench = false;\n      let hasDeadlift = false;\n\n      for (let j = 0; j < entry.events.length; j++) {\n        const e = entry.events[j];\n        if (e.includes(\"S\")) {\n          hasSquat = true;\n        }\n        if (e.includes(\"B\")) {\n          hasBench = true;\n        }\n        if (e.includes(\"D\")) {\n          hasDeadlift = true;\n        }\n      }\n\n      // Set 1st, 2nd, and 3rd for each lift.\n      if (hasSquat) {\n        this.setLiftsForLift(entry.id, \"S\", inKg);\n      }\n      if (hasBench) {\n        this.setLiftsForLift(entry.id, \"B\", inKg);\n      }\n      if (hasDeadlift) {\n        this.setLiftsForLift(entry.id, \"D\", inKg);\n      }\n    }\n  };\n  render() {\n    return (\n      <Button onClick={this.randomizeLifting}>\n        <LocalizedString id=\"nav.lifting\" />\n      </Button>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  meet: state.meet,\n  registration: state.registration,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  enterAttempt: (entryId: number, lift: Lift, attemptOneIndexed: number, weightKg: number) =>\n    dispatch(enterAttempt(entryId, lift, attemptOneIndexed, weightKg)),\n  markLift: (entryId: number, lift: Lift, attempt: number, success: boolean) =>\n    dispatch(markLift(entryId, lift, attempt, success)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RandomizeLiftingButton);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Tools for manipulating state information to aid debugging.\n\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { connect } from \"react-redux\";\n\nimport Button from \"react-bootstrap/Button\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Card from \"react-bootstrap/Card\";\n\nimport RandomizeMeetSetupButton from \"./RandomizeMeetSetup\";\nimport RandomizeRegistrationButton from \"./RandomizeRegistration\";\nimport RandomizeWeighinsButton from \"./RandomizeWeighins\";\nimport RandomizeLiftingButton from \"./RandomizeLifting\";\n\nimport { GlobalState } from \"../../types/stateTypes\";\n\nclass StateTools extends React.Component<GlobalState> {\n  // The simplest possible way to implement a Reset button.\n  reInitializeRedux = () => {\n    localStorage.clear();\n    window.location.reload();\n  };\n\n  render() {\n    return (\n      <div>\n        <Card style={{ marginBottom: \"17px\" }}>\n          <Card.Header>\n            <FormattedMessage id=\"debug.generator-card-header\" defaultMessage=\"Generate Random Valid Data\" />\n          </Card.Header>\n          <Card.Body>\n            <Button style={{ marginRight: \"15px\" }} variant=\"danger\" onClick={this.reInitializeRedux}>\n              <FormattedMessage id=\"debug.button-reset\" defaultMessage=\"Reset\" />\n            </Button>\n            <ButtonGroup>\n              <RandomizeMeetSetupButton />\n              <RandomizeRegistrationButton />\n              <RandomizeWeighinsButton />\n              <RandomizeLiftingButton />\n            </ButtonGroup>\n          </Card.Body>\n        </Card>\n\n        <Card>\n          <Card.Header>\n            <FormattedMessage id=\"debug.state-card-header\" defaultMessage=\"Redux State\" />\n          </Card.Header>\n          <Card.Body>\n            <pre>{JSON.stringify(this.props, null, 2)}</pre>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): GlobalState => ({\n  ...state,\n});\n\nexport default connect(mapStateToProps)(StateTools);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// A page dedicated to debugging tools.\n\nimport React from \"react\";\n\nimport StateTools from \"../components/debug/StateTools\";\nimport styles from \"../components/common/ContentArea.module.scss\";\n\nconst DebugContainer = () => {\n  return (\n    <div className={styles.contentArea}>\n      <StateTools />\n    </div>\n  );\n};\n\nexport default DebugContainer;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2020 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Card from \"react-bootstrap/Card\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\n\nimport styles from \"../components/common/ContentArea.module.scss\";\n\n// Extracted out so that <pre> renders linebreaks properly.\nconst licenseText =\n  \"This program is free software: you can redistribute it and/or modify\\n\" +\n  \"it under the terms of the GNU Affero General Public License as\\n\" +\n  \"published by the Free Software Foundation, either version 3 of the\\n\" +\n  \"License, or (at your option) any later version.\\n\" +\n  \"\\n\" +\n  \"This program is distributed in the hope that it will be useful,\\n\" +\n  \"but WITHOUT ANY WARRANTY; without even the implied warranty of\\n\" +\n  \"MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n\" +\n  \"GNU Affero General Public License for more details.\";\n\nclass AboutContainer extends React.Component<{}> {\n  render() {\n    return (\n      <Container className={styles.contentArea}>\n        <Row>\n          <Col md={6}>\n            <Card>\n              <Card.Header>\n                <FormattedMessage id=\"about.credits-header\" defaultMessage=\"Credits\" />\n              </Card.Header>\n              <Card.Body>\n                <p>\n                  <FormattedMessage\n                    id=\"about.made-by\"\n                    defaultMessage=\"OpenLifter is made by the OpenPowerlifting project.\"\n                  />\n                </p>\n                <p>\n                  <a href=\"https://www.openpowerlifting.org\" rel=\"noopener noreferrer\" target=\"_blank\">\n                    OpenPowerlifting.org\n                  </a>\n                </p>\n                <p>\n                  <FormattedMessage id=\"about.credits-intro\" defaultMessage=\"Thanks to:\" />\n                  <ul>\n                    <li>Irene Aguilar &mdash; Spanish localization</li>\n                    <li>Baptiste Appel &mdash; French localization</li>\n                    <li>Baptiste Marchais &mdash; French localization</li>\n                    <li>Romina Basting &mdash; German localization</li>\n                    <li>Mike Beelen &mdash; Dutch localization</li>\n                    <li>Sean Berlin &mdash; Patron</li>\n                    <li>Jerônimo Cavalcante &mdash; Portuguese localization</li>\n                    <li>Arman Danielyan &mdash; Russian localization</li>\n                    <li>Tommy DeFea &mdash; Graphic design</li>\n                    <li>Litos Dimitrios &mdash; Greek localization</li>\n                    <li>Alper Dokucu &mdash; Turkish localization</li>\n                    <li>Delaney Fish &mdash; Programming</li>\n                    <li>David Jasiulewicz &mdash; Patron</li>\n                    <li>Jared Klopper &mdash; Programming</li>\n                    <li>Andreas Kolettis &mdash; Greek localization</li>\n                    <li>Boris Lerner &mdash; Russian localization</li>\n                    <li>Kai Ma &mdash; Simplified Chinese localization</li>\n                    <li>Rodney Marsh &mdash; Programming</li>\n                    <li>Giulio Maschi &mdash; Italian localization</li>\n                    <li>Trystan Oakley &mdash; Testing</li>\n                    <li>Matt Pearce &mdash; Coefficient calculations</li>\n                    <li>Laura Rettig &mdash; German localization</li>\n                    <li>Jaak Ruusmaa &mdash; Estonian localization</li>\n                    <li>David Sacras &mdash; Portuguese localization</li>\n                    <li>Alan Sambol &mdash; Croatian localization</li>\n                    <li>Milena Schaefer &mdash; German localization</li>\n                    <li>Vitaliy Shvarz &mdash; Ukrainian localization</li>\n                    <li>Sean Stangl &mdash; Programming and maintenance</li>\n                    <li>Michael Vessia &mdash; Programming and maintenance</li>\n                    <li>Andrius Virbičianskas &mdash; Lithuanian localization</li>\n                    <li>Sarah Wellberg &mdash; UX design and testing</li>\n                    <li>Jo Whiteley &mdash; Testing</li>\n                  </ul>\n                </p>\n              </Card.Body>\n            </Card>\n          </Col>\n\n          <Col md={6}>\n            <Card>\n              <Card.Header>\n                <FormattedMessage id=\"about.license-header\" defaultMessage=\"License\" />\n              </Card.Header>\n              <Card.Body>\n                <p>\n                  <FormattedMessage\n                    id=\"about.copyright\"\n                    defaultMessage=\"OpenLifter is Copyright (C) 2018-2020 The OpenPowerlifting Project.\"\n                  />\n                </p>\n                <p>\n                  <FormattedMessage\n                    id=\"about.freedom-intro\"\n                    defaultMessage=\"OpenLifter is Free Software. Free Software grants you the following freedoms:\"\n                  />\n                </p>\n                <ol>\n                  <li>\n                    <FormattedMessage\n                      id=\"about.freedom-0\"\n                      defaultMessage=\"The freedom to run the program as you wish, for any purpose.\"\n                    />\n                  </li>\n                  <li>\n                    <FormattedMessage\n                      id=\"about.freedom-1\"\n                      defaultMessage=\"The freedom to study how the program works, and change it as you wish.\"\n                    />\n                  </li>\n                  <li>\n                    <FormattedMessage\n                      id=\"about.freedom-2\"\n                      defaultMessage=\"The freedom to redistribute copies so you can help others.\"\n                    />\n                  </li>\n                  <li>\n                    <FormattedMessage\n                      id=\"about.freedom-3\"\n                      defaultMessage=\"The freedom to distribute copies of your modified versions to others.\"\n                    />\n                  </li>\n                </ol>\n                <p>\n                  <FormattedMessage\n                    id=\"about.freedom-quick-summary\"\n                    defaultMessage=\"The AGPLv3+ license we use means that if you distribute this software or host it on a server, you must give your users the same rights we give you, including full source code. In addition, AGPLv3+ code must remain free/libre, and cannot be included in proprietary software or in free/libre software with a weaker or incompatible license.\"\n                  />\n                </p>\n                <p>\n                  <FormattedMessage\n                    id=\"about.agpl-short-english-intro\"\n                    defaultMessage=\"Here is the short English license blurb:\"\n                  />\n                </p>\n                <pre>{licenseText}</pre>\n                <a href=\"https://www.gnu.org/licenses/agpl-3.0.en.html\" rel=\"noopener noreferrer\" target=\"_blank\">\n                  <FormattedMessage\n                    id=\"about.link-full-agpl-license\"\n                    defaultMessage=\"Full Text of the GNU Affero General Public License, Version 3\"\n                  />\n                </a>\n                <br />\n                <a href=\"https://www.gnu.org/licenses/gpl-faq.html\" rel=\"noopener noreferrer\" target=\"_blank\">\n                  <FormattedMessage id=\"about.link-gnu-faq\" defaultMessage=\"FAQ about GNU Licenses\" />\n                </a>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default AboutContainer;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// The RootContainer manually implements route parsing from GET parameters.\n//\n// The issue is that because OpenLifter is statically hosted, only the base\n// \"/\" route actually contains the index.html of the application. The other\n// routes (such as \"/lifting\") have index.html files that redirect to \"/\".\n//\n// We've changed things so that \"/lifting/index.html\" redirects to \"/?lifting\".\n// But React Router isn't able to route based on GET parameters.\n//\n// Therefore it's set up so that \"/\" routes to this RootContainer,\n// and the RootContainer inspects the GET parameters and renders the\n// appropriate container.\n\nimport React from \"react\";\n\nimport HomeContainer from \"./HomeContainer\";\nimport MeetSetupContainer from \"./MeetSetupContainer\";\nimport RegistrationContainer from \"./RegistrationContainer\";\nimport WeighinsContainer from \"./WeighinsContainer\";\nimport LiftingContainer from \"./LiftingContainer\";\nimport FlightOrderContainer from \"./FlightOrderContainer\";\nimport ResultsContainer from \"./ResultsContainer\";\nimport DebugContainer from \"./DebugContainer\";\nimport AboutContainer from \"./AboutContainer\";\n\nclass RootContainer extends React.Component {\n  render() {\n    if (typeof window.location.search !== \"string\") {\n      return <HomeContainer />;\n    }\n\n    switch (window.location.search) {\n      case \"?meet-setup\":\n        return <MeetSetupContainer />;\n      case \"?registration\":\n        return <RegistrationContainer />;\n      case \"?weigh-ins\":\n        return <WeighinsContainer />;\n      case \"?flight-order\":\n        return <FlightOrderContainer />;\n      case \"?lifting\":\n        return <LiftingContainer />;\n      case \"?results\":\n        return <ResultsContainer />;\n      case \"?debug\":\n        return <DebugContainer />;\n      case \"?about\":\n        return <AboutContainer />;\n      default:\n        return <HomeContainer />;\n    }\n  }\n}\n\nexport default RootContainer;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the Navigation component for navigating between pages using react-router.\n\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\n\n// The LinkContainer is used to wrap Components that change the URL,\n// hooking them up with the Router.\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nconst Navigation = () => {\n  return (\n    <Navbar sticky=\"top\" bg=\"dark\" variant=\"dark\" expand=\"lg\">\n      <Navbar.Brand>\n        <img alt=\"OpenLifter\" src=\"openlifter-white.svg\" height=\"20\" />\n      </Navbar.Brand>\n\n      {/* Navbar uses Toggle and Collapse to automatically create a hamburger menu\n          in case of overflow on small screens.*/}\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse>\n        <Nav>\n          <LinkContainer exact to=\"/\">\n            <Nav.Link>\n              <FormattedMessage id=\"nav.home\" defaultMessage=\"Home\" />\n            </Nav.Link>\n          </LinkContainer>\n          <LinkContainer to=\"/meet-setup\">\n            <Nav.Link>\n              <FormattedMessage id=\"nav.meet-setup\" defaultMessage=\"Meet Setup\" />\n            </Nav.Link>\n          </LinkContainer>\n          <LinkContainer to=\"/registration\">\n            <Nav.Link>\n              <FormattedMessage id=\"nav.registration\" defaultMessage=\"Registration\" />\n            </Nav.Link>\n          </LinkContainer>\n          <LinkContainer to=\"/weigh-ins\">\n            <Nav.Link>\n              <FormattedMessage id=\"nav.weigh-ins\" defaultMessage=\"Weigh-ins\" />\n            </Nav.Link>\n          </LinkContainer>\n          <LinkContainer to=\"/flight-order\">\n            <Nav.Link>\n              <FormattedMessage id=\"nav.flight-order\" defaultMessage=\"Flight Order\" />\n            </Nav.Link>\n          </LinkContainer>\n          <LinkContainer to=\"/lifting\">\n            <Nav.Link>\n              <FormattedMessage id=\"nav.lifting\" defaultMessage=\"Lifting\" />\n            </Nav.Link>\n          </LinkContainer>\n          <LinkContainer to=\"/results\">\n            <Nav.Link>\n              <FormattedMessage id=\"nav.results\" defaultMessage=\"Results\" />\n            </Nav.Link>\n          </LinkContainer>\n          <LinkContainer to=\"/debug\">\n            <Nav.Link>\n              <FormattedMessage id=\"nav.debug\" defaultMessage=\"Debug\" />\n            </Nav.Link>\n          </LinkContainer>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default Navigation;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { createStore, applyMiddleware } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers/rootReducer\";\n\nimport { GlobalState } from \"./types/stateTypes\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport default function configureStore(initialState: Partial<GlobalState> = {}) {\n  const store = createStore(persistedReducer, initialState, composeWithDevTools(applyMiddleware(thunk)));\n  const persistor = persistStore(store as any);\n  return { store, persistor };\n}\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport OpenLifterIntlProvider from \"./components/translations/OpenLifterIntlProvider\";\n\nimport RootContainer from \"./containers/RootContainer\";\nimport MeetSetupContainer from \"./containers/MeetSetupContainer\";\nimport RegistrationContainer from \"./containers/RegistrationContainer\";\nimport WeighinsContainer from \"./containers/WeighinsContainer\";\nimport LiftingContainer from \"./containers/LiftingContainer\";\nimport FlightOrderContainer from \"./containers/FlightOrderContainer\";\nimport ResultsContainer from \"./containers/ResultsContainer\";\nimport DebugContainer from \"./containers/DebugContainer\";\nimport AboutContainer from \"./containers/AboutContainer\";\nimport Navigation from \"./components/Navigation\";\n\nimport configureStore from \"./store\";\n\nimport { getDefaultLanguage } from \"./logic/strings\";\n\nclass App extends React.Component {\n  render() {\n    const { store, persistor } = configureStore({ language: getDefaultLanguage() });\n\n    return (\n      // Provider is a React component from the react-redux library.\n      // Its purpose is to \"provide\" the given store to its child components.\n      // Because the Provider wraps the whole App here, the store is global state.\n      //\n      // Switch iterates over its children (Routes) and renders the first one that matches the current path name\n      //\n      // Route takes a path and a component, and renders the given component if the current path matches the specified path.\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <OpenLifterIntlProvider>\n            <Router basename={process.env.REACT_APP_ROUTER_BASENAME}>\n              <div>\n                <Navigation />\n                <Switch>\n                  <Route exact path=\"/\" component={RootContainer} />\n                  <Route path=\"/meet-setup\" component={MeetSetupContainer} />\n                  <Route path=\"/registration\" component={RegistrationContainer} />\n                  <Route path=\"/weigh-ins\" component={WeighinsContainer} />\n                  <Route path=\"/flight-order\" component={FlightOrderContainer} />\n                  <Route path=\"/lifting\" component={LiftingContainer} />\n                  <Route path=\"/results\" component={ResultsContainer} />\n                  <Route path=\"/debug\" component={DebugContainer} />\n                  <Route path=\"/about\" component={AboutContainer} />\n                </Switch>\n              </div>\n            </Router>\n          </OpenLifterIntlProvider>\n        </PersistGate>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport * as serviceWorker from \"./serviceWorker\";\nimport App from \"./App\";\n\nimport \"./bootstrap-custom/bootstrap.scss\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst rootElement = document.getElementById(\"root\");\nif (rootElement !== null) {\n  ReactDOM.render(<App />, rootElement);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"LiftingFooter_footer__1zds_\",\"leftControls\":\"LiftingFooter_leftControls__39m8B\",\"rightControls\":\"LiftingFooter_rightControls__3WkTh\",\"fullscreen\":\"LiftingFooter_fullscreen__MocfP\",\"goodLift\":\"LiftingFooter_goodLift__3rbTb\",\"noLift\":\"LiftingFooter_noLift__ntLZO\",\"selector\":\"LiftingFooter_selector__mL-3Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LeftCard_container__2fXlB\",\"activeCard\":\"LeftCard_activeCard__3pJju\",\"loadingBar\":\"LeftCard_loadingBar__2Km0C\",\"attemptText\":\"LeftCard_attemptText__18fCu\",\"barArea\":\"LeftCard_barArea__26kGL\",\"nextText\":\"LeftCard_nextText__sZE3L\"};"],"sourceRoot":""}