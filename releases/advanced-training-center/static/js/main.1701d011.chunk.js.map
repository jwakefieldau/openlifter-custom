{"version":3,"sources":["components/lifting/LiftingView.module.scss","components/meet-setup/ColorPicker.module.scss","components/lifting/LiftingHeader.module.scss","components/results/ResultsView.module.scss","components/flight-order/OneFlightOrder.module.scss","serviceWorker.js","translations/index.ts","components/translations/OpenLifterIntlProvider.tsx","components/translations/LanguageSelector.tsx","actions/languageActions.ts","actions/globalActions.ts","types/utils.ts","logic/units.ts","logic/strings.ts","versions.ts","reducers/versionsReducer.ts","logic/date.ts","constants/plateColors.ts","reducers/meetReducer.ts","logic/entry.ts","reducers/registrationReducer.ts","reducers/liftingReducer.ts","reducers/rootReducer.ts","reducers/languageReducer.ts","components/home/NewMeetModal.tsx","components/ErrorModal.tsx","containers/HomeContainer.tsx","components/ValidatedInput.tsx","actions/meetSetupActions.ts","components/meet-setup/MeetDate.tsx","components/common/NumberInput.tsx","components/meet-setup/MeetLength.tsx","components/meet-setup/PlatformCount.tsx","components/meet-setup/PlatformCounts.tsx","components/meet-setup/AutoFillRules.tsx","components/meet-setup/DivisionSelect.tsx","components/meet-setup/WeightClassesSelect.tsx","components/meet-setup/BarAndCollarsWeightKg.tsx","components/meet-setup/ColorPicker.tsx","components/meet-setup/PlateInput.tsx","components/meet-setup/Plates.tsx","components/common/YesNoButton.tsx","components/meet-setup/MeetSetup.tsx","containers/MeetSetupContainer.tsx","components/registration/LifterTable.tsx","components/translations/LocalizedString.tsx","validation/iso8601Date.ts","validation/positiveInteger.ts","actions/registrationActions.ts","components/registration/LifterRow.tsx","components/registration/NewButton.tsx","logic/export/csv.ts","logic/parsers.ts","logic/import/registration-csv.ts","logic/export/registrations.ts","components/debug/RandomizeHelpers.ts","components/registration/RegistrationView.tsx","containers/RegistrationContainer.tsx","components/weighins/LifterTable.tsx","actions/liftingActions.ts","components/weighins/WeightInput.tsx","components/weighins/LifterRow.tsx","components/weighins/WeighinsView.tsx","containers/WeighinsContainer.tsx","logic/barLoad.ts","components/lifting/BarLoad.tsx","components/lifting/LeftCard.tsx","components/lifting/AttemptInput.tsx","logic/coefficients/ah.ts","logic/coefficients/dots.ts","logic/coefficients/foster-mcculloch.ts","logic/coefficients/schwartzmalone.ts","logic/coefficients/wilks.ts","logic/coefficients/glossbrenner.ts","logic/coefficients/goodlift.ts","logic/coefficients/ipf.ts","logic/coefficients/reshel.ts","logic/coefficients/wilks2020.ts","logic/coefficients/coefficients.ts","logic/coefficients/bodyweight-multiple.ts","logic/coefficients/nasa.ts","logic/liftingOrder.ts","logic/divisionPlace.ts","components/lifting/LiftingTable.tsx","components/lifting/LiftingFooter.tsx","components/lifting/LiftingHeader.tsx","components/lifting/ColumnWidth.tsx","components/lifting/LiftingView.tsx","containers/LiftingContainer.tsx","components/flight-order/OneFlightOrder.tsx","components/flight-order/FlightOrderView.tsx","containers/FlightOrderContainer.tsx","components/results/ByDivision.tsx","logic/pointsPlace.ts","components/results/ByPoints.tsx","logic/export/oplcsv.ts","logic/export/usapl.ts","components/results/ResultsView.tsx","containers/ResultsContainer.tsx","components/debug/RandomizeMeetSetup.tsx","components/debug/RandomizeRegistration.tsx","components/debug/RandomizeWeighins.tsx","components/debug/RandomizeLifting.tsx","components/debug/StateTools.tsx","containers/DebugContainer.tsx","containers/AboutContainer.tsx","containers/RootContainer.tsx","components/Navigation.tsx","store.ts","App.tsx","index.tsx","components/lifting/BarLoad.module.scss","components/lifting/LiftingTable.module.scss","components/common/ContentArea.module.scss","components/lifting/LiftingFooter.module.scss","components/lifting/LeftCard.module.scss"],"names":["module","exports","liftingView","middleParentContainer","leftCardContainer","rightCardContainer","swatch","color","onTop","header","lifterName","info","controlPanel","dropdown","leftDivider","Boolean","window","location","hostname","match","translations","de","el","eo","en","es","et","fr","hr","it","lt","nl","pt","ru","tr","uk","zh-Hans","OpenLifterIntlProvider","language","this","props","Error","messages","react","provider","locale","defaultLocale","key","children","React","connect","state","languageOptions","react_default","a","createElement","value","LanguageSelector","FormControl_default","as","onChange","changeLanguage","className","Component","dispatch","event","type","currentTarget","overwriteStore","store","isString","assertString","result","concat","assertFlight","flight","kg2lbs","kg","lbs2kg","lbs","string2number","s","Number","replace","displayWeight","weight","lang","undefined","rounded","Math","round","Intl","NumberFormat","useGrouping","maximumFractionDigits","format","displayWeightOnePlace","truncated","trunc","displayPoints","points","minimumFractionDigits","displayNumber","number","displayPlaceOrdinal","entry","sex","getString","id","localizeEquipment","equipment","delocalizeEquipment","text","localizeEvent","delocalizeEvent","localizeFlight","delocalizeFlight","localizeSex","delocalizeSex","localizeWeightClassStr","wtcls","isSHW","endsWith","asNumber","getDefaultLanguage","navigator","languages","i","length","releaseVersion","process","initialState","stateVersion","localDateToIso8601","d","year","getFullYear","month","getMonth","day","getDate","yearStr","String","monthStr","dayStr","PlateColors","PLATE_DEFAULT_BLACK","PLATE_DEFAULT_WHITE","PLATE_DEFAULT_BLUE","PLATE_DEFAULT_GREEN","PLATE_DEFAULT_GRAY","PLATE_DEFAULT_RED","PLATE_DEFAULT_YELLOW","PLATE_DEFAULT_ORANGE","PLATE_DEFAULT_PINK","PLATE_DEFAULT_PURPLE","defaultPlatesKg","weightKg","pairCount","defaultPlatesLbs","name","country","city","federation","date","Date","lengthDays","platformsOnDays","divisions","weightClassesKgMen","weightClassesKgWomen","weightClassesKgMx","formula","ageCoefficients","combineSleevesAndWraps","combineSingleAndMulti","allow4thAttempts","inKg","showAlternateUnits","squatBarAndCollarsWeightKg","benchBarAndCollarsWeightKg","deadliftBarAndCollarsWeightKg","plates","getWeightClassStr","classes","bodyweightKg","wtclsStrKg2Lbs","kgcls","shw","floor","getWeightClassLbsStr","newDefaultEntry","platform","birthDate","age","intendedWeightClassKg","events","lot","memberId","paid","team","guest","notes","squatRackInfo","benchRackInfo","squatKg","benchKg","deadliftKg","squatStatus","benchStatus","deadliftStatus","getAge","meetDate","_meetDate$split$map","split","map","_meetDate$split$map2","Object","slicedToArray","my","mm","md","_entry$birthDate$spli","_entry$birthDate$spli2","by","bm","bd","years","getBest5SquatKg","best3SquatKg","max","getBest5BenchKg","best3BenchKg","getBest5DeadliftKg","best3DeadliftKg","getProjectedTotalKg","best3Squat","best3Bench","best3Dead","getProjectedEventTotalKg","includes","getBest3SquatKg","getBest3BenchKg","getBest3DeadliftKg","getFinalTotalKg","getFinalEventTotalKg","getLiftersOnDay","entries","filter","liftToAttemptFieldName","lift","liftToStatusFieldName","entryHasLifted","liftingPresentOnPlatform","getWhetherPlatformsHaveLifted","ret","platformsOnDay","acc","push","nextEntryId","lookup","overrideAttempt","overrideEntryId","columnDivisionWidthPx","combineReducers","versions","arguments","action","meet","objectSpread","numDays","diff","newPlatformsOnDays","slice","count","defaultPlates","defaultBar","classesKg","index","findIndex","p","newPlates","changes","newState","assign","registration","obj","overwriteDefaults","newEntry","previousEntry","entryId","item","attemptOneIndexed","field","newEntries","oldEntry","newarray","newfields","status","success","fieldStatus","platformEntries","e","updatedEntries","lotNumbers","lifting","attempt","combined","NewMeetModal","_this","Modal_default","show","onHide","close","Header","closeButton","Title","message","defaultMessage","values","meetName","Body","Footer","Button_default","onClick","variant","lib","to","defaultStore","rootReducer","ErrorModal","title","error","centerConsole","maxWidth","marginRight","marginLeft","buttonMargin","marginBottom","HomeContainer","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleLoadClick","loadhelper","document","getElementById","click","handleNewClick","setState","showNewMeetModal","closeConfirmModal","closeErrorModal","handleLoadFileInput","loadHelper","HTMLInputElement","files","selectedFile","redux","rememberThis","assertThisInitialized","reader","FileReader","onload","errored","JSON","parse","target","err","readAsText","handleSaveClick","meetname","stringify","blob","Blob","saveAs","renderContinueButton","block","style","bind","newMeetButton","betaWarning","wrongVersion","dataReleaseVersion","warning","oldVersion","thisVersion","Card_default","styles","contentArea","home_NewMeetModal","components_ErrorModal","alt","src","width","margin","display","Container_default","Row_default","Col_default","href","otherVersion","translations_LanguageSelector","rel","textAlign","releaseDate","accept","BirthDateInput","validate","handleKeyDown","blur","handleChange","handleBlur","initialValue","onSuccess","validation","maybeLabel","label","Form_default","Label","Group","keepMargin","Control","placeholder","disabled","onKeyDown","onBlur","isValid","isInvalid","setDivisions","setLengthDays","setPlatformsOnDays","setWeightClasses","updateMeet","registerLocale","zh_CN","MeetDate","initialDate","_s$split","_s$split2","parseInt","setFullYear","iso8601ToLocalDate","FormGroup_default","react_datepicker_min_default","dateFormat","selected","setMeetDate","inline","NumberInput","num","handleDecrement","handleStep","step","handleIncrement","n","multiple","abs","ceil","InputGroup_default","Prepend","borderRight","onMouseDown","index_es","icon","faMinus","Append","borderLeft","faPlus","MeetLength","isInteger","common_NumberInput","days","PlatformCount","PlatformCounts","createPlatformInputs","inputs","meet_setup_PlatformCount","traditionalDefaults","bpDefaults","gpcDefaults","rpsDefaults","spfDefaults","upaDefaults","usaplDefaults","uspaDefaults","uspcDefaults","wabdlDefaults","wpDefaults","wpcDefaults","wppoDefaults","wrpfDefaults","AutoFillRules","handleSelectChange","selectedOption","handleClick","stringTraditional","stringBP","stringGPC","stringRPS","stringSPF","stringUPA","stringUSAPL","stringUSPA","stringUSPC","stringWABDL","stringWP","stringWPC","stringWPPO","stringWRPF","components","DropdownIndicator","createOption","DivisionSelect","maybeUpdateRedux","objarray","Array","handleInputChange","inputValue","_this$state","preventDefault","newValue","toConsumableArray","division","_this$state2","react_select_browser_esm","isMulti","menuIsOpen","onInputChange","WeightClassesSelect","isNaN","isFinite","sort","b","c","selectClassesBySex","ownProps","BarAndCollarsWeightKg","getInitialBarAndCollarsWeightKg","setBarAndCollarsWeightKg","getLiftLabel","ColorPicker","clearTimeout","timeoutId","displayColorPicker","handleMouseLeave","setTimeout","handleMouseEnter","clientX","hex","toUpperCase","_this2","colors","picker","Popper","placement","_ref","ref","data-placement","react_color_es","triangle","Manager","onMouseLeave","onMouseEnter","Reference","_ref2","background","PlateInput","meet_setup_ColorPicker","Plates","validateAmountInput","widget","asNum","updateHandler","amount","isNumber","setPlateConfig","renderWeightRow","meet_setup_PlateInput","plateRows","unitId","stringPlate","Table_default","striped","size","hover","YesNoButton","ButtonGroup_default","active","setValue","no","yes","MeetSetup","validateRequiredText","ticker","stringMeetName","stringFederation","stringCountry","stringStateProvince","stringCityTown","stringKilograms","stringPounds","stringMensClasses","stringWomensClasses","stringMxClasses","stringAH","stringBodyweightMultiple","stringDots","stringGlossbrenner","stringIPFGLPoints","stringIPFPoints","stringNASAPoints","stringSchwartzMalone","stringTotal","stringWilks","stringWilks2020","stringNone","stringFosterMcCulloch","stringNo","stringYes","stringAlsoKilograms","stringAlsoPounds","ValidatedInput","setMeetName","setFederation","setCountry","setCity","meet_setup_MeetDate","meet_setup_MeetLength","meet_setup_PlatformCounts","meet_setup_AutoFillRules","meet_setup_DivisionSelect","meet_setup_WeightClassesSelect","setFormula","setAgeCoefficients","common_YesNoButton","setCombineSleevesAndWraps","setCombineSingleAndMulti","setAllow4thAttempts","setInKg","setShowAlternateUnits","meet_setup_BarAndCollarsWeightKg","meet_setup_Plates","fed","bool","assertFormula","coefficient","assertAgeCoefficients","MeetSetupContainer","meet_setup_MeetSetup","LifterTable","LifterRow","rowRenderer","renderRows","LocalizedString","injectIntl","Consumer","intl","validateEuropeanDate","pieces","_pieces2","onlyNumbers","validatePositiveInteger","inclusiveMax","startsWith","newRegistration","deleteRegistration","updateRegistration","updateRegistrationMemberId","updateRegistrationBirthDate","updateRegistrationAge","updateRegistrationCountry","updateRegistrationState","updateRegistrationGuest","updateRegistrationTeam","updateRegistrationInstagram","instagram","updateRegistrationNotes","validateAge","pos","selectedDay","deleteRegistrationClick","updateRegistrationDay","updateRegistrationPlatform","updateRegistrationFlight","updateRegistrationName","updateRegistrationSex","updateRegistrationLot","updateRegistrationDivisions","updateRegistrationEvents","updateRegistrationEquipment","assertSex","dayOptions","platformOptions","divisionOptions","selectedDivisions","selectedEvents","gridStyle","padding","stringState","stringBirthDatePlaceholder","stringMemberIdPlaceholder","stringSelectPlaceholder","eventOptions","overflow","minWidth","translations_LocalizedString","toString","dist_react_select_browser_esm","menuPlacement","options","isClearable","min","Text","NewButton","csvString","x","trim","csvDate","iso8601","getSpreadsheetColumnName","alphabet","mod","remainder","Csv","fieldnames","rows","createClass","indexOf","namelist","j","splice","removeColumnByIndex","empty","removeEmptyColumns","lines","row","headers","join","strRows","parseInteger","charcode","charCodeAt","parseEuropeanDate","makeExampleRegistrationsCsv","csv","division1","division2","division3","event1","event2","event3","birthdate","memberid","appendColumns","loadRegistrations","division_template","event_template","col_day","col_platform","col_flight","col_name","col_sex","col_equipment","col_division1","col_division2","col_division3","col_division4","col_division5","col_event1","col_event2","col_event3","col_event4","col_event5","col_birthdate","col_age","col_squatRackInfo","col_benchRackInfo","col_memberid","col_country","col_state","col_lot","col_guest","col_team","col_instagram","col_notes","MANDATORY_FIELDNAMES","OPTIONAL_FIELDNAMES","colname","allfields","iname","jname","errprefix_template","fieldname","val","rowstr","errprefix","integer","platforms","m","f","mx","bare","sleeves","wraps","single","multi","evt","sbd","sb","sd","boolToYesNo","makeRegistrationsCsv","fill","column","prevIndex","insertColumn","randomString","random","substr","randomInt","randomFixedPoint","fixedPoints","power","pow","randomAttemptWithMin","randomAttempt","shuffle","array","numElements","switchIndex","temp","globalImportKind","RegistrationView","handleDownloadCsvTemplateClick","global","filename","handleExportCsvClick","handleOverwriteClick","handleSequentialLotNumbersClick","updateLotNumbers","handleRandomLotNumbersClick","handleRemoveLotNumbersClick","manipulation","_entry","assignLotNumbers","handleAppendClick","maybeError","fromString","maybeEntries","entryIds","alert","onloadstart","isLoadingFiles","onloadend","numEntries","dropdownIconStyle","faSpinner","spin","vertical","DropdownButton","ButtonGroup","Dropdown","Item","faSort","faRandom","faTimes","registration_LifterTable","registration_NewButton","RegistrationContainer","registration_RegistrationView","inLiftingPage","renderHeader","shortStyle","bodyweightId","squatId","benchId","deadliftId","enterAttempt","markLift","WeightInput","weightNum","weightStr","multipleOf","updateRegistrationSquatRackInfo","updateRegistrationBenchRackInfo","validateRack","hasSquat","hasBench","hasDeadlift","disableSquatWeight","disableBenchWeight","disableDeadliftWeight","ageStr","weighins_WeightInput","WeighinsView","getNumDaysFromEntries","max_day","dayCards","lifters","dayNumber","weighins_LifterTable","WeighinsContainer","weighins_WeighinsView","safeKg2Lbs","selectPlates","loadingKg","barAndCollarsWeightKg","loadingAny","barAndCollarsWeightAny","platesAny","sortedPlates","sideWeightKg","loading","weightAny","isAlreadyLoaded","findWeightFrom","startFrom","kgToStyleMap","Map","kg50","kg25","kg20","kg15","kg10","kg5","kg2p5","kg1p25","kg1","kg0p75","kg0p5","kg0p25","lbsToStyleMap","lbs100","lbs55","lbs45","lbs35","lbs25","lbs10","lbs5","lbs2p5","lbs1p25","lbs0p5","weightTextMap","weightAnyToText","get","PlatesDiv","weightLbs","divs","plateCount","showCounter","plate","counter","is_light","backgroundColor","opacity","border","Fragment","RackInfoDiv","rackInfo","_ref3","container","bar","BarLoad_PlatesDiv","collar","BarLoad_RackInfoDiv","LeftCard","getBarLoadProps","fieldKg","idx","getBarAndCollarsWeightKg","current","currentEntryId","next","nextAttemptOneIndexed","weightKgText","weightLbsText","currentLoading","nextLoading","relativeTo","finger","loadedPlate","makeLoadingRelative","nextEntryName","nextBarLoad","loadingBar","nextText","lifter","barArea","lifting_BarLoad","attemptTemplate","activeCard","attemptText","AttemptInput","asKg","prevAttemptOneIndexed","prevWeightKg","prevStatus","fixups","lastGoodValue","attemptInput","ah","totalKg","adjusted","log10","ahMen","ahWomen","dotsPoly","x2","x3","dots","dotsMen","dotsWomen","AGE_COEFFICIENTS","fosterMcCulloch","schwartz_coefficient","malone_coefficient","wilksPoly","x4","wilksMen","wilksWomen","glossbrenner","glossbrenner_coefficient_men","glossbrenner_coefficient_women","PARAMETERS","M","Sleeves","SBD","B","Single-ply","F","S","D","reshel","normalized","reshelMen","reshelWomen","wilks2020Poly","wilks2020","wilks2020Men","wilks2020Women","getPoints","bodyweight_multiple","normalizedEquipment","normalizedSex","params","denom","exp","glp","goodlift","bw_log","log","ipfpoints","nasapoints","schwartzmalone","wilks","getAgeAdjustedPoints","getNextAttemptNumberForEntry","weightsKg","statuses","MAX_ATTEMPTS","getMaxAttemptNumberForEntry","compareEntriesByAttempt","aKg","bKg","orderEntriesByAttempt","getLiftingOrder","entriesInFlight","earliestAttemptOneIndexed","latestAttemptOneIndexed","getActiveAttemptNumber","orderedEntries","attemptZeroIndexed","existsNextAttempt","existsPrevAttempt","byNextAttempt","byThisAttempt","byPrevAttempt","notLifting","prototype","orderEntriesForAttempt","getCurrentEntryId","nextEntryInfo","currentEntryIndex","hasAttempt","notTaken","getNextEntryInfo","categoryToKey","category","keyToCategory","getLastSuccessfulLift","getLastSuccessfulAttempt","sortByPlaceInCategory","clonedEntries","aTotal","bTotal","aLastSuccessfulLift","bLastSuccessfulLift","aLastSuccessfulLiftIndex","bLastSuccessfulLiftIndex","aLastSuccessfulAttempt","bLastSuccessfulAttempt","getEventSortOrder","ev","getEquipmentSortOrder","eq","getSexSortOrder","mapSexToClasses","men","women","getAllResults","categoryMap","classesForSex","weightClassStr","numDivisions","dividx","evidx","catEntries","set","results","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","return","catA","catB","aSex","bSex","aEvent","bEvent","aEquipment","bEquipment","aIsSHW","bIsSHW","sortCategoryResults","getFinalResults","globalFocusAttemptInputId","globalHighestAttemptInputAttempt","LiftingTable","renderBest3AttemptField","columnType","best3","lightestFailed","nolift","renderAttemptField","wStr","displayStr","attemptInputCell","lifting_AttemptInput","maybeNegative","anyPreviousAttemptTaken","currentAndHasPrevious","nextAndTookLast","meetState","renderCell","categoryResults","cell","textCell","bw","bwStr","weightClass","firstDiv","spacerCell","ordinal","columns","cells","col","rowClassName","getColumnHeaderLabel","useProjected","highlightColumn","smallCell","nameCell","divisionCell","activeColumn","liftingtable","LiftingFooter","handleDayChange","setLiftingGroup","handlePlatformChange","handleFlightChange","handleLiftChange","assertLift","handleAttemptChange","handleLifterChange","setFocusAttemptInputTimeout","elem","focus","handleOnMouseEnter","activeElement","HTMLElement","handleGoodLift","handleNoLift","hasFullscreenElement","doc","fullscreenElement","webkitFullscreenElement","mozFullscreenElement","msFullscreenElement","exitFullscreen","webkitExitFullscreen","mozExitFullscreen","msExitFullscreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullscreen","msRequestFullscreen","handleFullscreen","makeLifterOptions","lifterOptions","numPlatforms","dayTemplate","platformTemplate","liftOptions","flightOptions","flightTemplate","flightsOnPlatform","attemptOptions","footer","leftControls","selector","rightControls","toggleReplaceTableWithWeighins","fullscreen","noLift","goodLift","LiftingHeader","infoBuilder","MULTIPLE","ColumnWidth","fieldName","setTableInfo","pattern","LiftingView","replaceTableWithWeighins","now","rightElement","lifting_LiftingTable","lifting_ColumnWidth","lifting_LiftingHeader","lifting_LeftCard","lifting_LiftingFooter","entriesOnPlatform","flights","LiftingContainer","lifting_LiftingView","OneFlightOrder","getOrderBy","entriesForLift","position","bySquat","byBench","byDeadlift","maxRows","builder","content","renderName","getColumnHeader","FlightOrderView","updateDay","updatePlatform","handlePrint","print","selectorStyle","shownEntries","knownFlights","flightOrders","_loop","flight_order_OneFlightOrder","FlightOrderContainer","flight_order_FlightOrderView","ByDivision","renderEntryRow","place","pointsStr","squat","bench","deadlift","weightTemplate","weightString","mapSexToLabel","renderCategoryResults","eqpstr","units","marginTop","categoryCards","panel","sortByFormulaPlaceInCategory","indexMap","memoizedPoints","aIndex","bIndex","aPoints","bPoints","getAllRankings","sortPointsCategoryResults","ByPoints","rank","firstDivision","total","categoryString","agePointsCategory","addEntriesRow","cls","unit","finalEventTotalKg","standardizeEquipment","exportAsOplCsv","meetCsv","rules","makeMeetCsv","entriesCsv","squatFieldnames","benchFieldnames","deadliftFieldnames","meet_date","_results$_i","makeEntriesCsv","addDataRow","hasDL","makeBirthDate","translateEvent","exportAsUSAPLCsv","_results$i","assertValidResultsBy","resultsBy","globalMergeDay","globalMergePlatform","ResultsView","makeDayOptions","justDayTemplate","handleByChange","handleExportAsOplCsvClick","handleExportAsUSAPLCsvClick","handleExportPlatformClick","exportname","handleMergePlatformClick","mergePlatform","makePlatformMergeButtons","platformsHaveLifted","combineTemplate","mergeTemplate","exportTemplate","forms","liftedOnDay","buttons","_loop2","lifted","marginStyle","actionTemplate","results_ByDivision","results_ByPoints","daySelector","CardDeck_default","fontWeight","controlCard","ResultsContainer","results_ResultsView","NonsenseFederations","NonsenseDivisions","RandomizeMeetSetupButton","randomizeMeetSetup","numClassesMen","numClassesWomen","classesMen","classesWomen","classesMx","div","age_lower","age_upper","NonsenseFirstNames","NonsenseLastNames","RandomizeRegistrationButton","deleteExistingRegistrations","generateEntries","randomizeRegistration","numLifters","sexes","isGuest","teams","equipmentSelect","divisionsUpperBound","divchooser","choice","FLIGHTCHARS","numFlights","RandomizeWeighinsButton","randomizeWeighins","height","safety","RandomizeLiftingButton","randomizeLifting","setLiftsForLift","firstAttempt","secondAttempt","thirdAttempt","StateTools","reInitializeRedux","localStorage","clear","reload","RandomizeMeetSetup","RandomizeRegistration","RandomizeWeighins","RandomizeLifting","DebugContainer","debug_StateTools","AboutContainer","RootContainer","search","containers_HomeContainer","containers_MeetSetupContainer","containers_RegistrationContainer","containers_WeighinsContainer","containers_FlightOrderContainer","containers_LiftingContainer","containers_ResultsContainer","containers_DebugContainer","containers_AboutContainer","Navigation","Navbar_default","sticky","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav_default","exact","Link","persistConfig","storage","persistedReducer","persistReducer","App","_configureStore","createStore","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","configureStore","integration_react","translations_OpenLifterIntlProvider","react_router_dom","basename","components_Navigation","react_router","path","component","rootElement","ReactDOM","render","src_App","serviceWorker","ready","then","unregister"],"mappings":"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I,IAAK,IAAK,IAAK,KACnEC,QAAS,QACTC,gBAAiB,kBACjBC,wBAAwB,EACxBC,uBAAuB,EACvBC,kBAAkB,GAGdgT,GAAiC,CACrCxT,UAAW,CACT,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OAEFC,mBAAoB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,KAClDC,qBAAsB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACnDC,kBAAmB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,KACjDC,QAAS,gBACTC,gBAAiB,kBACjBC,wBAAwB,EACxBC,uBAAuB,EACvBC,kBAAkB,GAGdiT,GAAkC,CACtCzT,UAAW,CACT,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SAEFC,mBAAoB,CAAC,GAAI,GAAI,KAAM,GAAI,KAAM,GAAI,IAAK,IAAK,IAAK,KAChEC,qBAAsB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,KAAM,GAAI,KAAM,GAAI,KAC/DC,kBAAmB,CAAC,GAAI,GAAI,KAAM,GAAI,KAAM,GAAI,IAAK,IAAK,IAAK,KAC/DC,QAAS,eACTC,gBAAiB,kBACjBC,wBAAwB,EACxBC,uBAAuB,EACvBC,kBAAkB,GAGdkT,GAAkC,CACtmBAAoB,CAAC,GAAI,GAAI,GAAI,KAAM,GAAI,KAAM,GAAI,IAAK,IAAK,IAAK,IAAK,KACzEC,qBA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OAAoBhE,EAAS+W,GAAc/S,KAC1Dgf,YAAa,SAAChd,GAAD,OAAkBhG,EvE5HR,SAACgG,GAC1B,MAAO,CACL9F,KAAM,gBACN8F,QuEyHwCgd,CAAYhd,KACpDgR,mBAAoB,SAACrS,EAAauI,GAAd,OAAgClN,EAASgX,GAAmBrS,EAAKuI,KACrF+J,iBAAkB,SAACvU,EAAU2K,GAAX,OAAmCrN,EAASiX,GAAiBvU,EAAK2K,OAIzEnO,CAA6CoyC,ICnItDU,GAAqB,CACzB,UACA,QACA,OACA,QACA,QACA,WACA,OACA,QACA,QACA,QACA,OACA,SACA,UACA,WACA,aACA,QACA,OACA,WACA,OACA,WACA,OACA,SACA,UACA,SACA,QACA,QACA,OACA,UACA,OACA,WACA,QACA,YACA,SACA,UACA,QACA,QACA,aACA,YACA,SACA,UACA,QACA,UACA,OACA,UACA,SACA,SACA,QACA,SACA,WACA,QACA,SACA,OACA,MACA,MACA,QACA,WACA,SACA,WACA,OACA,UACA,UACA,SACA,SACA,QACA,UACA,SACA,YACA,MACA,YACA,SACA,OACA,QACA,OACA,QACA,UACA,WAGIC,GAAoB,CACxB,QACA,UACA,SACA,aACA,QACA,aACA,SACA,UACA,SACA,WACA,UACA,aACA,UACA,YACA,QACA,WACA,QACA,QACA,UACA,cACA,SACA,aACA,aACA,WACA,aACA,WACA,QACA,SACA,aACA,aACA,WACA,QACA,OACA,QACA,aACA,YACA,YACA,WACA,QACA,UACA,UACA,SACA,WACA,SACA,WACA,QACA,UACA,aACA,cACA,WACA,WACA,WACA,YACA,QACA,UACA,SACA,aACA,QACA,YACA,WACA,WACA,QACA,YACA,UACA,OACA,SACA,UAUIC,eACJ,SAAAA,EAAY1zC,GAAc,IAAA6Q,EAAA,OAAA5F,OAAA2H,EAAA,EAAA3H,CAAAlL,KAAA2zC,IACxB7iC,EAAA5F,OAAA4H,EAAA,EAAA5H,CAAAlL,KAAAkL,OAAA6H,EAAA,EAAA7H,CAAAyoC,GAAA3gC,KAAAhT,KAAMC,KACD2zC,4BAA8B9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","file":"static/js/main.1701d011.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"liftingView\":\"LiftingView_liftingView__W3VXA\",\"middleParentContainer\":\"LiftingView_middleParentContainer__1ysAw\",\"leftCardContainer\":\"LiftingView_leftCardContainer__2banw\",\"rightCardContainer\":\"LiftingView_rightCardContainer__1sjfd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"swatch\":\"ColorPicker_swatch__2ipyO\",\"color\":\"ColorPicker_color__cXLvH\",\"onTop\":\"ColorPicker_onTop__1HUyz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"LiftingHeader_header__3YEwh\",\"lifterName\":\"LiftingHeader_lifterName__2Vzfo\",\"info\":\"LiftingHeader_info__3mt5G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controlPanel\":\"ResultsView_controlPanel__J3R0v\",\"dropdown\":\"ResultsView_dropdown__2UB4b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftDivider\":\"OneFlightOrder_leftDivider__8pDMh\"};","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2020 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport de from \"./de.json\";\nimport el from \"./el.json\";\nimport eo from \"./eo.json\";\nimport en from \"./en.json\";\nimport es from \"./es.json\";\nimport et from \"./et.json\";\nimport fr from \"./fr.json\";\nimport hr from \"./hr.json\";\nimport it from \"./it.json\";\nimport lt from \"./lt.json\";\nimport nl from \"./nl.json\";\nimport pt from \"./pt.json\";\nimport ru from \"./ru.json\";\nimport tr from \"./tr.json\";\nimport uk from \"./uk.json\";\nimport zh_Hans from \"./zh-Hans.json\";\n\nexport default { de, el, eo, en, es, et, fr, hr, it, lt, nl, pt, ru, tr, uk, \"zh-Hans\": zh_Hans };\n","// vim: set ts=2 sts=2 sw=2 et:\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { IntlProvider } from \"react-intl\";\nimport translations from \"../../translations\";\n\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { Language } from \"../../types/dataTypes\";\n\ninterface StateProps {\n  language: Language;\n}\n\ntype Props = StateProps;\n\nclass OpenLifterIntlProvider extends React.Component<Props> {\n  render() {\n    const language = this.props.language;\n    if (typeof language !== \"string\") {\n      throw new Error(\"language is not a string\");\n    }\n\n    // Load our translations from the json files\n    // TODO: This typing could be nicer, we should be able to state that es/eo = {}, en = undefined\n    const messages = (translations as any)[language];\n\n    return (\n      // This is going to wrap any children passed to this component with an IntlProvider\n      // This will put translations of all of our child components in our app\n      <IntlProvider locale={language} defaultLocale=\"en\" key={language} messages={messages}>\n        {this.props.children}\n      </IntlProvider>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  language: state.language,\n});\n\nexport default connect(mapStateToProps)(OpenLifterIntlProvider);\n","// vim: set ts=2 sts=2 sw=2 et:\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport FormControl from \"react-bootstrap/FormControl\";\n\nimport { changeLanguage } from \"../../actions/languageActions\";\nimport { Language } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\n\nimport { Dispatch } from \"redux\";\nimport { FormControlTypeHack } from \"../../types/utils\";\n\ninterface StateProps {\n  language: Language;\n}\n\ninterface DispatchProps {\n  changeLanguage: (event: React.FormEvent<FormControlTypeHack>) => any;\n}\n\ntype Props = StateProps & DispatchProps;\n\n// TODO: Can we get these from the i18n lib somehow?\nconst languageOptions = [\n  <option key=\"de\" value=\"de\">\n    Deutsch (de)\n  </option>,\n  <option key=\"el\" value=\"el\">\n    Ελληνικά (el)\n  </option>,\n  <option key=\"en\" value=\"en\">\n    English (en)\n  </option>,\n  <option key=\"eo\" value=\"eo\">\n    Esperanto (eo)\n  </option>,\n  <option key=\"es\" value=\"es\">\n    Español (es)\n  </option>,\n  <option key=\"et\" value=\"et\">\n    Eesti keel (et)\n  </option>,\n  <option key=\"fr\" value=\"fr\">\n    Français (fr)\n  </option>,\n  <option key=\"hr\" value=\"hr\">\n    Hrvatski (hr)\n  </option>,\n  <option key=\"it\" value=\"it\">\n    Italiano (it)\n  </option>,\n  <option key=\"lt\" value=\"lt\">\n    Lietuvių (lt)\n  </option>,\n  <option key=\"nl\" value=\"nl\">\n    Nederlands (nl)\n  </option>,\n  <option key=\"pt\" value=\"pt\">\n    Português (pt)\n  </option>,\n  <option key=\"ru\" value=\"ru\">\n    Русский (ru)\n  </option>,\n  <option key=\"tr\" value=\"tr\">\n    Türkçe (tr)\n  </option>,\n  <option key=\"uk\" value=\"uk\">\n    Українська (uk)\n  </option>,\n  <option key=\"zh-Hans\" value=\"zh-Hans\">\n    简体中文 (zh-Hans)\n  </option>,\n];\n\nclass LanguageSelector extends React.Component<Props> {\n  render() {\n    return (\n      <FormControl\n        as=\"select\"\n        value={this.props.language}\n        onChange={this.props.changeLanguage}\n        className=\"custom-select\"\n      >\n        {languageOptions}\n      </FormControl>\n    );\n  }\n}\n\n// Allows react component to subscribe to redux state updates\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  language: state.language,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    // TODO: Can we make this more type safe and avoid the cast?\n    changeLanguage: (event: React.FormEvent<FormControlTypeHack>) =>\n      dispatch(changeLanguage(event.currentTarget.value as Language)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LanguageSelector);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { ChangeLanguageAction } from \"../types/actionTypes\";\nimport { Language } from \"../types/dataTypes\";\n\nexport const changeLanguage = (language: Language): ChangeLanguageAction => {\n  return {\n    type: \"CHANGE_LANGUAGE\",\n    language,\n  };\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { OverwriteStoreAction } from \"../types/actionTypes\";\nimport { GlobalState } from \"../types/stateTypes\";\n\n// Overwrites the entire Redux store, handled separately by each reducer.\n// This is used to implement \"Load from File\" functionality.\nexport const overwriteStore = (store: GlobalState): OverwriteStoreAction => {\n  return {\n    type: \"OVERWRITE_STORE\",\n    store: store,\n  };\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines all the project-wide shared Redux state types in a single place.\n//\n// Because the Redux store is immutable, all types are internally prefixed\n// with the \"readonly \" covariant type, which makes them immutable.\n\nimport { FormControl, FormControlProps } from \"react-bootstrap\";\nimport { AgeCoefficients, Flight, Formula, Lift, Sex } from \"./dataTypes\";\n\n// This is purely used by the type system to raise a compile error when\n// we are trying to perform an exhaustive check (eg in a switch).\n// This allows us to have a compile time error, but also have graceful runtime fallback.\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function checkExhausted(value: never): void {}\n\n// A workaround for bad typing of react-bootstrap. Open to better suggestions.\n// see: https://github.com/DefinitelyTyped/DefinitelyTyped/issues/16208 for more context\nexport type FormControlTypeHack = FormControlProps & FormControl & HTMLOrSVGElement;\n\n// Convenience function to narrow a variables type down to a string\nexport function isString(value: any): value is string {\n  return typeof value === \"string\";\n}\n\n// Throws an error if value isn't a string, narrows the type if it is.\nexport function assertString(value: any): value is string {\n  const result = isString(value);\n  if (!result) {\n    throw new Error(`Expected a string, but got ${value}`);\n  }\n  return result;\n}\n\n// Throws an error if value isn't a number, narrows the type if it is.\nexport function assertNumber(value: any): value is number {\n  const result = typeof value === \"number\";\n  if (!result) {\n    throw new Error(`Expected a number, but got ${value}`);\n  }\n  return result;\n}\n\n// Throws an error if value isn't a a valid flight, narrows the type if it is.\nexport function assertFlight(value: string): value is Flight {\n  const flight: Flight = value as Flight;\n  switch (flight) {\n    case \"A\":\n    case \"B\":\n    case \"C\":\n    case \"D\":\n    case \"E\":\n    case \"F\":\n    case \"G\":\n    case \"H\":\n    case \"I\":\n    case \"J\":\n    case \"K\":\n    case \"L\":\n    case \"M\":\n    case \"N\":\n    case \"O\":\n    case \"P\":\n      return true;\n    default:\n      checkExhausted(flight);\n      throw new Error(`Expected a string which corresponds to a Flight, got \"${value}\"`);\n  }\n}\n\n// Throws an error if value isn't a a valid flight, narrows the type if it is.\nexport function assertSex(value: string): value is Sex {\n  const sex = value as Sex;\n  switch (sex) {\n    case \"M\":\n    case \"F\":\n    case \"Mx\":\n      return true;\n    default:\n      checkExhausted(sex);\n      throw new Error(`Expected a string which corresponds to a Sex, got \"${value}\"`);\n  }\n}\n\nexport function assertLift(value: string): value is Lift {\n  const lift = value as Lift;\n  switch (lift) {\n    case \"S\":\n    case \"B\":\n    case \"D\":\n      return true;\n    default:\n      checkExhausted(lift);\n      throw new Error(`Expected a string which corresponds to a Lift, got \"${value}\"`);\n  }\n}\n\nexport function assertAgeCoefficients(value: string): value is AgeCoefficients {\n  const coefficient = value as AgeCoefficients;\n  switch (coefficient) {\n    case \"FosterMcCulloch\":\n    case \"None\":\n      return true;\n    default:\n      checkExhausted(coefficient);\n      throw new Error(`Expected a string which corresponds to a valid AgeCoefficients, got \"${value}\"`);\n  }\n}\n\nexport function assertFormula(value: string): value is Formula {\n  const formula = value as Formula;\n  switch (formula) {\n    case \"AH\":\n    case \"Bodyweight Multiple\":\n    case \"Dots\":\n    case \"Glossbrenner\":\n    case \"IPF GL Points\":\n    case \"IPF Points\":\n    case \"NASA Points\":\n    case \"Reshel\":\n    case \"Schwartz/Malone\":\n    case \"Total\":\n    case \"Wilks\":\n    case \"Wilks2020\":\n      return true;\n    default:\n      checkExhausted(formula);\n      throw new Error(`Expected a string which corresponds to a Formula, got \"${value}\"`);\n  }\n}\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { Entry, Language } from \"../types/dataTypes\";\n\n// Defines operations for converting between different units, usually\n// pounds and kg.\n\nexport const kg2lbs = (kg: number): number => {\n  return kg * 2.20462262;\n};\n\nexport const lbs2kg = (lbs: number): number => {\n  return lbs / 2.20462262;\n};\n\n// Converts a displayed String to a Number, even if that string is localized.\nexport const string2number = (s: string): number => {\n  return Number(s.replace(\",\", \".\"));\n};\n\n// Renders a weight (kg or lbs) for display, rounding to two decimal places,\n// hiding unnecessary zeros on the right.\n//\n// This rounding behavior eliminates all the visual inconsistencies of lbs->kg\n// conversion -- for example, how 112.5lbs isn't representable exactly in kg.\nexport const displayWeight = (weight: number, lang?: Language): string => {\n  const locale = lang === undefined ? \"en\" : lang;\n\n  // This matches the OpenPowerlifting WeightKg::as_lbs() conversion logic.\n  // First, round to the hundredth place, stored as an integer.\n  let rounded = Math.round(weight * 100);\n\n  // If the fractional part is close to another tenth, add a correction.\n  // This happens due to floating-point imprecision.\n  if (rounded % 10 === 9) {\n    // Add 0.01 (still stored as an integer).\n    rounded += 1;\n  }\n\n  // Convert back to normal floating-point without truncation.\n  rounded = rounded / 100;\n\n  return new Intl.NumberFormat(locale, { useGrouping: false, maximumFractionDigits: 2 }).format(rounded);\n};\n\n// Renders a weight (kg or lbs) for display, truncating to one decimal place.\n// hiding unnecessary zeros on the right.\nexport const displayWeightOnePlace = (weight: number, lang?: Language): string => {\n  const locale = lang === undefined ? \"en\" : lang;\n\n  // This matches the OpenPowerlifting WeightKg::as_lbs() conversion logic.\n  // First, round to the hundredth place, stored as an integer.\n  let rounded = Math.round(weight * 100);\n\n  // If the fractional part is close to another tenth, add a correction.\n  // This happens due to floating-point imprecision.\n  if (rounded % 10 === 9) {\n    // Add 0.01 (still stored as an integer).\n    rounded += 1;\n  }\n\n  // Truncate to the tenth place, then convert back to normal floating-point.\n  const truncated = Math.trunc(rounded / 10) / 10;\n\n  return new Intl.NumberFormat(locale, { useGrouping: false, maximumFractionDigits: 1 }).format(truncated);\n};\n\n// Points display with two fixed decimal places (including zeros).\nexport const displayPoints = (points: number, lang: Language): string => {\n  return new Intl.NumberFormat(lang, {\n    useGrouping: false,\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n  }).format(points);\n};\n\n// Display a generic number that is neither a weight nor points.\n// This is intended for things like ages, day numbers, etc.\nexport const displayNumber = (number: number, lang: Language): string => {\n  // Grouping should not be used: otherwise ',' is ambiguous as a separator.\n  return new Intl.NumberFormat(lang, { useGrouping: false }).format(number);\n};\n\n// Display an ordinal number representing a place.\n// In Spanish, Portuguese, and Italian, the ordinal differs based on the lifter's Sex.\nexport const displayPlaceOrdinal = (number: number, entry: Entry, lang: Language): string => {\n  switch (lang) {\n    case \"es\":\n    case \"pt\":\n      return displayNumber(number, lang) + (entry.sex === \"F\" ? \"ª\" : \"º\");\n    default:\n      return displayNumber(number, lang);\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Gets translation strings directly given the current language, without\n// having to thread the IntlContext everywhere.\n//\n// This works because we store the language in the Redux store in addition\n// to in the React context.\n\nimport translations from \"../translations\";\nimport { Equipment, Event, Flight, Language, Sex, TranslationId } from \"../types/dataTypes\";\nimport { checkExhausted } from \"../types/utils\";\nimport { displayWeight } from \"./units\";\n\n// Fetches a simple string from the translations store. No formatting is performed.\nexport const getString = (id: TranslationId, lang: Language): string => {\n  return translations[lang][id];\n};\n\n// Localizes an Equipment value.\nexport const localizeEquipment = (equipment: Equipment, language: Language): string => {\n  switch (equipment) {\n    case \"Bare\":\n      return getString(\"equipment.bare\", language);\n    case \"Sleeves\":\n      return getString(\"equipment.sleeves\", language);\n    case \"Wraps\":\n      return getString(\"equipment.wraps\", language);\n    case \"Single-ply\":\n      return getString(\"equipment.single-ply\", language);\n    case \"Multi-ply\":\n      return getString(\"equipment.multi-ply\", language);\n    case \"Unlimited\":\n      return getString(\"equipment.unlimited\", language);\n    default:\n      checkExhausted(equipment);\n      return \"\";\n  }\n};\n\n// Delocalizes an Equipment value.\nexport const delocalizeEquipment = (text: string, language: Language): Equipment => {\n  if (text === getString(\"equipment.bare\", language)) return \"Bare\";\n  if (text === getString(\"equipment.sleeves\", language)) return \"Sleeves\";\n  if (text === getString(\"equipment.wraps\", language)) return \"Wraps\";\n  if (text === getString(\"equipment.single-ply\", language)) return \"Single-ply\";\n  if (text === getString(\"equipment.multi-ply\", language)) return \"Multi-ply\";\n  if (text === getString(\"equipment.unlimited\", language)) return \"Unlimited\";\n  throw new Error(\"Failed to delocalize Equipment: \" + text);\n};\n\n// Localizes an Event value.\nexport const localizeEvent = (event: Event, language: Language): string => {\n  switch (event) {\n    case \"S\":\n      return getString(\"event.s\", language);\n    case \"B\":\n      return getString(\"event.b\", language);\n    case \"D\":\n      return getString(\"event.d\", language);\n    case \"SB\":\n      return getString(\"event.sb\", language);\n    case \"SD\":\n      return getString(\"event.sd\", language);\n    case \"BD\":\n      return getString(\"event.bd\", language);\n    case \"SBD\":\n      return getString(\"event.sbd\", language);\n    default:\n      checkExhausted(event);\n      return \"\";\n  }\n};\n\n// Delocalizes an Event value.\nexport const delocalizeEvent = (text: string, language: Language): Event => {\n  if (text === getString(\"event.s\", language)) return \"S\";\n  if (text === getString(\"event.b\", language)) return \"B\";\n  if (text === getString(\"event.d\", language)) return \"D\";\n  if (text === getString(\"event.sb\", language)) return \"SB\";\n  if (text === getString(\"event.sd\", language)) return \"SD\";\n  if (text === getString(\"event.bd\", language)) return \"BD\";\n  if (text === getString(\"event.sbd\", language)) return \"SBD\";\n  throw new Error(\"Failed to delocalize Event: \" + text);\n};\n\n// Localizes a Flight value.\nexport const localizeFlight = (flight: Flight, language: Language): string => {\n  switch (flight) {\n    case \"A\":\n      return getString(\"flight.a\", language);\n    case \"B\":\n      return getString(\"flight.b\", language);\n    case \"C\":\n      return getString(\"flight.c\", language);\n    case \"D\":\n      return getString(\"flight.d\", language);\n    case \"E\":\n      return getString(\"flight.e\", language);\n    case \"F\":\n      return getString(\"flight.f\", language);\n    case \"G\":\n      return getString(\"flight.g\", language);\n    case \"H\":\n      return getString(\"flight.h\", language);\n    case \"I\":\n      return getString(\"flight.i\", language);\n    case \"J\":\n      return getString(\"flight.j\", language);\n    case \"K\":\n      return getString(\"flight.k\", language);\n    case \"L\":\n      return getString(\"flight.l\", language);\n    case \"M\":\n      return getString(\"flight.m\", language);\n    case \"N\":\n      return getString(\"flight.n\", language);\n    case \"O\":\n      return getString(\"flight.o\", language);\n    case \"P\":\n      return getString(\"flight.p\", language);\n    default:\n      checkExhausted(flight);\n      return \"\";\n  }\n};\n\n// Delocalizes a Flight value.\nexport const delocalizeFlight = (text: string, language: Language): Flight => {\n  // The \"A\" character gets special handling for the benefit of Cyrillic.\n  // Latin \"A\" and Cyrillic \"A\" are visually identical, but differ in encoding.\n  if (text === getString(\"flight.a\", language) || text === \"A\") return \"A\";\n\n  if (text === getString(\"flight.b\", language)) return \"B\";\n  if (text === getString(\"flight.c\", language)) return \"C\";\n  if (text === getString(\"flight.d\", language)) return \"D\";\n  if (text === getString(\"flight.e\", language)) return \"E\";\n  if (text === getString(\"flight.f\", language)) return \"F\";\n  if (text === getString(\"flight.g\", language)) return \"G\";\n  if (text === getString(\"flight.h\", language)) return \"H\";\n  if (text === getString(\"flight.i\", language)) return \"I\";\n  if (text === getString(\"flight.j\", language)) return \"J\";\n  if (text === getString(\"flight.k\", language)) return \"K\";\n  if (text === getString(\"flight.l\", language)) return \"L\";\n  if (text === getString(\"flight.m\", language)) return \"M\";\n  if (text === getString(\"flight.n\", language)) return \"N\";\n  if (text === getString(\"flight.o\", language)) return \"O\";\n  if (text === getString(\"flight.p\", language)) return \"P\";\n  throw new Error(\"Failed to delocalize Flight: \" + text);\n};\n\n// Localizes a Sex value.\nexport const localizeSex = (sex: Sex, language: Language): string => {\n  switch (sex) {\n    case \"M\":\n      return getString(\"sex.m\", language);\n    case \"F\":\n      return getString(\"sex.f\", language);\n    case \"Mx\":\n      return getString(\"sex.mx\", language);\n    default:\n      checkExhausted(sex);\n      return \"\";\n  }\n};\n\n// Delocalizes a Sex value.\nexport const delocalizeSex = (text: string, language: Language): Sex => {\n  if (text === getString(\"sex.m\", language)) return \"M\";\n  if (text === getString(\"sex.f\", language)) return \"F\";\n  if (text === getString(\"sex.mx\", language)) return \"Mx\";\n  throw new Error(\"Failed to delocalize Sex: \" + text);\n};\n\n// Localizes a Category weightclass string.\n// This is used by the Flight Order and Results pages.\nexport const localizeWeightClassStr = (wtcls: string, language: Language): string => {\n  const isSHW = wtcls.endsWith(\"+\");\n  const asNumber = Number(wtcls.replace(\"+\", \"\"));\n  if (asNumber === 0) return \"\";\n  return displayWeight(asNumber, language) + (isSHW ? \"+\" : \"\");\n};\n\n// Negotiates the default language with the navigator, if possible.\nexport const getDefaultLanguage = (): Language => {\n  const defaultLanguage: Language = \"en\";\n\n  // Make sure that we're in a modern browser.\n  if (typeof navigator !== \"object\" || typeof navigator.languages !== \"object\") {\n    return defaultLanguage;\n  }\n\n  // Iterate over the available languages looking for the first match.\n  const languages: ReadonlyArray<string> = navigator.languages;\n  for (let i = 0; i < languages.length; ++i) {\n    const language = languages[i];\n    if (language in translations) {\n      return language as Language;\n    }\n  }\n\n  return defaultLanguage;\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Versioning for the global State object.\n//\n// Incrementing the version string breaks compatibility between implementations,\n// with the expectation that a converter will be automatically applied if possible,\n// such that a version of OpenLifter that internally uses version \"B\" can still\n// load files written in version \"A\", by means of auto-upgrading.\n//\n// This string is stored on the GlobalState as the property \"versions.stateVersion\".\n// Each save file thereby reports its own version.\nexport const stateVersion: string = \"0\";\n\n// Versioning for the OpenLifter project as a whole.\n//\n// This is safely incrementable on *releases*. Its function is exclusively to alert\n// users to \"automatic\" upgrades of the software, and it is reported explicitly\n// on the Home page.\n//\n// Changing this version does *not* represent data incompatibilities; for that,\n// please use the \"stateVersion\".\n//\n// This string is stored on the GlobalState as the property \"versions.releaseVersion\".\n//\n// It's defined by the '.env' file in the project root, which references\n// the package.json variable 'version'.\nexport const releaseVersion: string =\n  typeof process.env.REACT_APP_VERSION === \"string\" ? process.env.REACT_APP_VERSION : \"[undefined REACT_APP_VERSION]\";\n\n// Strictly-presentational representation of when the releaseVersion was changed.\n// Update this concurrently with modifying the releaseVersion.\n// This value is not stored in the state: it's purely informational.\nexport const releaseDate: string = \"2020-05-31\";\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// See comments in src/versions.js.\n\nimport { stateVersion, releaseVersion } from \"../versions\";\nimport { OverwriteStoreAction } from \"../types/actionTypes\";\nimport { VersionsState } from \"../types/stateTypes\";\n\nconst initialState: VersionsState = {\n  stateVersion,\n  releaseVersion,\n};\n\ntype Action = OverwriteStoreAction;\n\nexport default (state: VersionsState = initialState, action: Action): VersionsState => {\n  switch (action.type) {\n    case \"OVERWRITE_STORE\":\n      return action.store.versions;\n\n    default:\n      return state;\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines logic for working with Dates, which is trickier than you might expect:\n// the global state wants strings in YYYY-MM-DD, date objects get created from\n// strings in UTC time, and React widgets create Dates in local time.\n\nexport const iso8601ToLocalDate = (s: string): Date => {\n  const [yearStr, monthStr, dayStr] = s.split(\"-\");\n\n  const year = parseInt(yearStr, 10);\n  const month = parseInt(monthStr, 10);\n  const day = parseInt(dayStr, 10);\n\n  const d = new Date();\n  d.setFullYear(year, month - 1, day);\n  return d;\n};\n\nexport const localDateToIso8601 = (d: Date): string => {\n  const year: number = d.getFullYear();\n  const month: number = d.getMonth() + 1;\n  const day: number = d.getDate();\n\n  const yearStr = String(year);\n  let monthStr = String(month);\n  if (monthStr.length === 1) {\n    monthStr = \"0\" + monthStr;\n  }\n  let dayStr = String(day);\n  if (dayStr.length === 1) {\n    dayStr = \"0\" + dayStr;\n  }\n\n  return yearStr + \"-\" + monthStr + \"-\" + dayStr;\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Color codes must be in upper-case to match the ColorPicker output.\nexport const PlateColors = {\n  PLATE_DEFAULT_BLACK: \"#000000\",\n  PLATE_DEFAULT_WHITE: \"#FFFFFF\",\n  PLATE_DEFAULT_BLUE: \"#4990E2\",\n  PLATE_DEFAULT_GREEN: \"#2AB003\",\n  PLATE_DEFAULT_GRAY: \"#575757\",\n  PLATE_DEFAULT_RED: \"#FF0000\",\n  PLATE_DEFAULT_YELLOW: \"#FFEF2A\",\n  PLATE_DEFAULT_ORANGE: \"#F25A1D\",\n  PLATE_DEFAULT_PINK: \"#E81FA5\",\n  PLATE_DEFAULT_PURPLE: \"#9B16F2\",\n};\n\nexport type PlateColorsType = keyof typeof PlateColors;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { localDateToIso8601 } from \"../logic/date\";\nimport { kg2lbs, lbs2kg, displayWeight } from \"../logic/units\";\nimport { PlateColors } from \"../constants/plateColors\";\n\nimport { MeetSetupAction, OverwriteStoreAction } from \"../types/actionTypes\";\nimport { Language, Plate } from \"../types/dataTypes\";\nimport { MeetState } from \"../types/stateTypes\";\nimport { checkExhausted } from \"../types/utils\";\n\nconst defaultPlatformsOnDay = 1;\n\nconst defaultBarAndCollarsWeightKg = 25; // Assuming metal 2.5kg collars.\nconst defaultBarAndCollarsWeightLbs = 45; // Assuming plastic collars.\n\n// Default kg plates, allowing for increments of 0.5kg.\nconst defaultPlatesKg: ReadonlyArray<Plate> = [\n  { weightKg: 50, pairCount: 0, color: PlateColors.PLATE_DEFAULT_GREEN },\n  { weightKg: 25, pairCount: 8, color: PlateColors.PLATE_DEFAULT_RED },\n  { weightKg: 20, pairCount: 1, color: PlateColors.PLATE_DEFAULT_BLUE },\n  { weightKg: 15, pairCount: 1, color: PlateColors.PLATE_DEFAULT_YELLOW },\n  { weightKg: 10, pairCount: 1, color: PlateColors.PLATE_DEFAULT_GREEN },\n  { weightKg: 5, pairCount: 1, color: PlateColors.PLATE_DEFAULT_BLACK },\n  { weightKg: 2.5, pairCount: 1, color: PlateColors.PLATE_DEFAULT_BLACK },\n  { weightKg: 2, pairCount: 0, color: PlateColors.PLATE_DEFAULT_BLUE },\n  { weightKg: 1.5, pairCount: 0, color: PlateColors.PLATE_DEFAULT_YELLOW },\n  { weightKg: 1.25, pairCount: 1, color: PlateColors.PLATE_DEFAULT_BLACK },\n  { weightKg: 1, pairCount: 1, color: PlateColors.PLATE_DEFAULT_BLUE },\n  { weightKg: 0.75, pairCount: 1, color: PlateColors.PLATE_DEFAULT_RED },\n  { weightKg: 0.5, pairCount: 1, color: PlateColors.PLATE_DEFAULT_GREEN },\n  { weightKg: 0.25, pairCount: 1, color: PlateColors.PLATE_DEFAULT_BLUE },\n];\n\n// Default lbs plates, allowing for increments of 1lb.\nconst defaultPlatesLbs: ReadonlyArray<Plate> = [\n  { weightKg: lbs2kg(100), pairCount: 0, color: PlateColors.PLATE_DEFAULT_GREEN },\n  { weightKg: lbs2kg(55), pairCount: 0, color: PlateColors.PLATE_DEFAULT_RED },\n  { weightKg: lbs2kg(45), pairCount: 8, color: PlateColors.PLATE_DEFAULT_GRAY },\n  { weightKg: lbs2kg(35), pairCount: 0, color: PlateColors.PLATE_DEFAULT_GRAY },\n  { weightKg: lbs2kg(25), pairCount: 1, color: PlateColors.PLATE_DEFAULT_GRAY },\n  { weightKg: lbs2kg(10), pairCount: 2, color: PlateColors.PLATE_DEFAULT_GRAY },\n  { weightKg: lbs2kg(5), pairCount: 1, color: PlateColors.PLATE_DEFAULT_GRAY },\n  { weightKg: lbs2kg(2.5), pairCount: 1, color: PlateColors.PLATE_DEFAULT_GRAY },\n  { weightKg: lbs2kg(1.25), pairCount: 1, color: PlateColors.PLATE_DEFAULT_GRAY },\n  { weightKg: lbs2kg(0.5), pairCount: 2, color: PlateColors.PLATE_DEFAULT_GRAY },\n];\n\nconst initialState: MeetState = {\n  // Sanction information.\n  name: \"\",\n  country: \"\",\n  state: \"\",\n  city: \"\",\n  federation: \"\",\n  date: localDateToIso8601(new Date()),\n  lengthDays: 1,\n  platformsOnDays: [defaultPlatformsOnDay],\n\n  // Competition Rules.\n  divisions: [],\n  weightClassesKgMen: [],\n  weightClassesKgWomen: [],\n  weightClassesKgMx: [],\n  formula: \"Wilks\",\n  ageCoefficients: \"FosterMcCulloch\",\n  combineSleevesAndWraps: false,\n  combineSingleAndMulti: false,\n  allow4thAttempts: true,\n\n  // Weights and Loading Setup.\n  inKg: true,\n  showAlternateUnits: true,\n  squatBarAndCollarsWeightKg: defaultBarAndCollarsWeightKg,\n  benchBarAndCollarsWeightKg: defaultBarAndCollarsWeightKg,\n  deadliftBarAndCollarsWeightKg: defaultBarAndCollarsWeightKg,\n  plates: defaultPlatesKg,\n};\n\n// Given a sorted list of weight classes (in kg) and a bodyweight (in kg),\n// return a string describing the weight class.\nexport const getWeightClassStr = (\n  classes: ReadonlyArray<number>,\n  bodyweightKg: number,\n  language?: Language\n): string => {\n  if (bodyweightKg === 0) return \"\";\n  if (classes.length === 0) return \"\";\n\n  for (let i = 0; i < classes.length; i++) {\n    if (bodyweightKg <= classes[i]) {\n      return displayWeight(classes[i], language);\n    }\n  }\n  return displayWeight(classes[classes.length - 1], language) + \"+\";\n};\n\n// Converts a kg weightclass to pounds.\n//\n// For example, the 90kg class is technically 198.41lbs,\n// but this will return \"198\".\nexport const wtclsStrKg2Lbs = (kgcls: string): string => {\n  const shw: boolean = kgcls.endsWith(\"+\");\n  const asNumber = Number(kgcls.replace(\"+\", \"\"));\n\n  // Convert to pounds and round down.\n  let truncated = Math.floor(kg2lbs(asNumber));\n\n  // This works for everything but the 183 class, which\n  // rounds down to 182.\n  if (truncated === 182) {\n    truncated = 183;\n  }\n\n  return shw ? String(truncated) + \"+\" : String(truncated);\n};\n\n// Given a sorted list of weight classes (in kg) and a bodyweight (in kg),\n// return a string describing the weight class.\n//\n// This is a separate method because it turns out that many exact translations\n// of kilo values are not what the audience expects for traditionally-reported\n// pounds classes. So a bunch of rounding must occur.\nexport const getWeightClassLbsStr = (classes: ReadonlyArray<number>, bodyweightKg: number): string => {\n  if (bodyweightKg === 0) return \"\";\n  if (classes.length === 0) return \"\";\n\n  for (let i = 0; i < classes.length; i++) {\n    if (bodyweightKg <= classes[i]) {\n      return wtclsStrKg2Lbs(String(classes[i]));\n    }\n  }\n  return wtclsStrKg2Lbs(String(classes[classes.length - 1])) + \"+\";\n};\n\ntype Action = MeetSetupAction | OverwriteStoreAction;\n\nexport default (state: MeetState = initialState, action: Action): MeetState => {\n  switch (action.type) {\n    case \"SET_MEET_NAME\":\n      return { ...state, name: action.name };\n\n    case \"SET_FORMULA\":\n      return { ...state, formula: action.formula };\n\n    case \"SET_FEDERATION\":\n      return { ...state, federation: action.federation };\n\n    case \"SET_DIVISIONS\":\n      return { ...state, divisions: action.divisions };\n\n    case \"SET_MEET_DATE\":\n      return { ...state, date: action.date };\n\n    case \"SET_LENGTH_DAYS\": {\n      const numDays = Number(action.length);\n\n      if (numDays >= state.platformsOnDays.length) {\n        const diff = numDays - state.platformsOnDays.length;\n\n        const newPlatformsOnDays: Array<number> = state.platformsOnDays.slice();\n        for (let i = 0; i < diff; i++) {\n          newPlatformsOnDays.push(defaultPlatformsOnDay);\n        }\n\n        return { ...state, lengthDays: numDays, platformsOnDays: newPlatformsOnDays };\n      }\n      return { ...state, lengthDays: numDays };\n    }\n\n    case \"SET_PLATFORM_COUNT\": {\n      const day = Number(action.day);\n      const count = Number(action.count);\n\n      const newPlatformsOnDays: Array<number> = state.platformsOnDays.slice();\n      newPlatformsOnDays[day - 1] = count;\n      return { ...state, platformsOnDays: newPlatformsOnDays };\n    }\n\n    case \"SET_IN_KG\": {\n      // Changing the units also changes the loading, so re-initialize from defaults.\n      const defaultPlates = action.inKg ? defaultPlatesKg : defaultPlatesLbs;\n      const defaultBar = action.inKg ? defaultBarAndCollarsWeightKg : lbs2kg(defaultBarAndCollarsWeightLbs);\n      return {\n        ...state,\n        inKg: action.inKg,\n        plates: defaultPlates,\n        squatBarAndCollarsWeightKg: defaultBar,\n        benchBarAndCollarsWeightKg: defaultBar,\n        deadliftBarAndCollarsWeightKg: defaultBar,\n      };\n    }\n\n    case \"SET_WEIGHTCLASSES\": {\n      const sex = action.sex;\n      const classesKg = action.classesKg;\n      switch (sex) {\n        case \"M\":\n          return { ...state, weightClassesKgMen: classesKg };\n        case \"F\":\n          return { ...state, weightClassesKgWomen: classesKg };\n        case \"Mx\":\n          return { ...state, weightClassesKgMx: classesKg };\n        default:\n          checkExhausted(sex);\n          return state;\n      }\n    }\n\n    case \"SET_BAR_AND_COLLARS_WEIGHT_KG\": {\n      switch (action.lift) {\n        case \"S\":\n          return { ...state, squatBarAndCollarsWeightKg: action.weightKg };\n        case \"B\":\n          return { ...state, benchBarAndCollarsWeightKg: action.weightKg };\n        case \"D\":\n          return { ...state, deadliftBarAndCollarsWeightKg: action.weightKg };\n        default:\n          checkExhausted(action.lift);\n          return state;\n      }\n    }\n\n    case \"SET_PLATE_CONFIG\": {\n      const { weightKg, pairCount, color } = action;\n\n      // Find the index of the object in the platesOnSide array by comparing weights.\n      const index = state.plates.findIndex((p) => p.weightKg === weightKg);\n\n      // Clone the array.\n      const newPlates: Array<Plate> = state.plates.slice();\n\n      // Replace with a new object in the new array.\n      newPlates[index] = { weightKg, pairCount, color };\n\n      return { ...state, plates: newPlates };\n    }\n\n    case \"UPDATE_MEET\": {\n      const changes = action.changes;\n\n      // Make a new MeetState with just the changes overwritten.\n      const newState = Object.assign({}, state);\n      return Object.assign(newState, changes);\n    }\n\n    case \"OVERWRITE_STORE\":\n      return action.store.meet;\n\n    default:\n      checkExhausted(action);\n      return state;\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines logic for creating and working with Entry objects.\n\nimport { Entry, Lift, Event, FieldKg, FieldStatus } from \"../types/dataTypes\";\nimport { checkExhausted } from \"../types/utils\";\n\n// Length of {squat,bench,deadlift}{Kg,Status} in each Entry.\nexport const MAX_ATTEMPTS = 5;\n\nexport const newDefaultEntry = (id: number): Entry => {\n  return {\n    // Bookkeeping internal information for OpenLifter.\n    id: id, // The global unique ID of this registration.\n\n    // Information about when the lifter is scheduled to lift.\n    day: 1, // The day on which the lifter is lifting.\n    platform: 1, // The platform on which the lifter is lifting.\n    flight: \"A\", // The flight in which the lifter is lifting.\n\n    // Information about the lifter themselves.\n    name: \"\", // The lifter's name.\n    sex: \"M\", // The lifter's sex.\n    birthDate: \"\", // The lifter's birthdate (YYYY-MM-DD).\n    age: 0, // The lifter's age in years\n    country: \"\", // Lifter's home country, or blank.\n    state: \"\", // Lifter's home state, or blank.\n    intendedWeightClassKg: \"\", // The weightclass for which the lifter registered.\n    equipment: \"Sleeves\", // The equipment category for which the lifter registered.\n    divisions: [], // A list of divisions the lifter entered.\n    events: [], // A list of events the lifter entered.\n\n    // Metadata about the lifter, assigned by the meet director.\n    lot: 0, // The lifter's lot number, for breaking ties in lifting order.\n    memberId: \"\", // Optional federation MemberID, for reporting in results.\n    paid: false, // Used by the meet director for tracking whether the lifter paid.\n    team: \"\", // Optional. Only used in the final results export.\n    guest: false, // Optional. Marks the lifter as a guest, who cannot place in rankings.\n    notes: \"\", // Free-form text for the meet director to use as a scratchpad.\n\n    // Information added on the \"Weigh-ins\" page.\n    // But we might as well track it in this object.\n    bodyweightKg: 0.0,\n    squatRackInfo: \"\", // A freeform string for the benefit of the loaders.\n    benchRackInfo: \"\", // A freeform string for the benefit of the loaders.\n\n    // Lifting information. Weights always stored internally in kg.\n    squatKg: [0.0, 0.0, 0.0, 0.0, 0.0],\n    benchKg: [0.0, 0.0, 0.0, 0.0, 0.0],\n    deadliftKg: [0.0, 0.0, 0.0, 0.0, 0.0],\n\n    // Lifting information, success state:\n    //  -1 => No Lift.\n    //   0 => Not Yet Done.\n    //   1 => Good Lift.\n    //\n    // Note that this system has the property where corresponding (kg*status)\n    // produces the SquatXKg as expected by the main OpenPowerlifting CSV format.\n    squatStatus: [0, 0, 0, 0, 0],\n    benchStatus: [0, 0, 0, 0, 0],\n    deadliftStatus: [0, 0, 0, 0, 0],\n  };\n};\n\n// Gets the lifter's age, possibly by inferring it from birthDate.\n// If the age couldn't be determined, returns 0.\nexport const getAge = (entry: Entry, meetDate: string): number => {\n  // If the user overrode the Age manually, just take that.\n  if (entry.age > 0) return entry.age;\n\n  // If no birthDate is provided, nothing more can be done.\n  if (entry.birthDate === \"\") return 0;\n\n  // Infer the age given {meetDate, birthDate, day}.\n  let [my, mm, md] = meetDate.split(\"-\").map((s) => Number(s));\n  const [by, bm, bd] = entry.birthDate.split(\"-\").map((s) => Number(s));\n\n  // Advance the day counter if necessary.\n  // FIXME: This logic assumes that each month has exactly 31 days.\n  if (entry.day > 1) {\n    md += entry.day - 1;\n    if (md > 31) {\n      md -= 31;\n      mm += 1;\n    }\n    if (mm > 12) {\n      md -= 12;\n      my += 1;\n    }\n  }\n\n  const years = my - by;\n  if (years <= 0) return 0;\n\n  // If their birthday occurred in the most recent year, just diff years.\n  if (bm < mm || (bm === mm && bd <= md)) {\n    return years;\n  }\n\n  // Otherwise, their birthday did not occur yet, so this year doesn't count.\n  return years - 1;\n};\n\n// Gets the best squat, including extra attempts that don't count for the total.\nexport const getBest5SquatKg = (entry: Entry): number => {\n  let best3SquatKg = 0.0;\n  for (let i = 0; i < MAX_ATTEMPTS; i++) {\n    if (entry.squatStatus[i] === 1) {\n      best3SquatKg = Math.max(best3SquatKg, entry.squatKg[i]);\n    }\n  }\n  return best3SquatKg;\n};\n\n// Gets the best bench, including extra attempts that don't count for the total.\nexport const getBest5BenchKg = (entry: Entry): number => {\n  let best3BenchKg = 0.0;\n  for (let i = 0; i < MAX_ATTEMPTS; i++) {\n    if (entry.benchStatus[i] === 1) {\n      best3BenchKg = Math.max(best3BenchKg, entry.benchKg[i]);\n    }\n  }\n  return best3BenchKg;\n};\n\n// Gets the best deadlift, including extra attempts that don't count for the total.\nexport const getBest5DeadliftKg = (entry: Entry): number => {\n  let best3DeadliftKg = 0.0;\n  for (let i = 0; i < MAX_ATTEMPTS; i++) {\n    if (entry.deadliftStatus[i] === 1) {\n      best3DeadliftKg = Math.max(best3DeadliftKg, entry.deadliftKg[i]);\n    }\n  }\n  return best3DeadliftKg;\n};\n\n// The ProjectedTotal optimistically assumes that lifters will get *first* attempts\n// that have not yet been taken. It is used for calculating a total while lifters\n// are still squatting and benching.\n//\n// 2nd and 3rd attempts are treated normally, where they only count toward the\n// total if they have been successful.\nexport const getProjectedTotalKg = (entry: Entry): number => {\n  let best3Squat = 0.0;\n  if (entry.squatStatus[0] >= 0) best3Squat = Math.max(best3Squat, entry.squatKg[0]);\n  if (entry.squatStatus[1] > 0) best3Squat = Math.max(best3Squat, entry.squatKg[1]);\n  if (entry.squatStatus[2] > 0) best3Squat = Math.max(best3Squat, entry.squatKg[2]);\n\n  let best3Bench = 0.0;\n  if (entry.benchStatus[0] >= 0) best3Bench = Math.max(best3Bench, entry.benchKg[0]);\n  if (entry.benchStatus[1] > 0) best3Bench = Math.max(best3Bench, entry.benchKg[1]);\n  if (entry.benchStatus[2] > 0) best3Bench = Math.max(best3Bench, entry.benchKg[2]);\n\n  let best3Dead = 0.0;\n  if (entry.deadliftStatus[0] >= 0) best3Dead = Math.max(best3Dead, entry.deadliftKg[0]);\n  if (entry.deadliftStatus[1] > 0) best3Dead = Math.max(best3Dead, entry.deadliftKg[1]);\n  if (entry.deadliftStatus[2] > 0) best3Dead = Math.max(best3Dead, entry.deadliftKg[2]);\n\n  // If there was no attempted success for a single lift, return zero.\n  if (best3Squat === 0 && entry.squatStatus[0] === -1) return 0.0;\n  if (best3Bench === 0 && entry.benchStatus[0] === -1) return 0.0;\n  if (best3Dead === 0 && entry.deadliftStatus[0] === -1) return 0.0;\n\n  return best3Squat + best3Bench + best3Dead;\n};\n\nexport const getProjectedEventTotalKg = (entry: Entry, event: Event): number => {\n  let best3Squat = 0.0;\n  if (event.includes(\"S\")) {\n    if (entry.squatStatus[0] >= 0) best3Squat = Math.max(best3Squat, entry.squatKg[0]);\n    if (entry.squatStatus[1] > 0) best3Squat = Math.max(best3Squat, entry.squatKg[1]);\n    if (entry.squatStatus[2] > 0) best3Squat = Math.max(best3Squat, entry.squatKg[2]);\n  }\n\n  let best3Bench = 0.0;\n  if (event.includes(\"B\")) {\n    if (entry.benchStatus[0] >= 0) best3Bench = Math.max(best3Bench, entry.benchKg[0]);\n    if (entry.benchStatus[1] > 0) best3Bench = Math.max(best3Bench, entry.benchKg[1]);\n    if (entry.benchStatus[2] > 0) best3Bench = Math.max(best3Bench, entry.benchKg[2]);\n  }\n\n  let best3Dead = 0.0;\n  if (event.includes(\"D\")) {\n    if (entry.deadliftStatus[0] >= 0) best3Dead = Math.max(best3Dead, entry.deadliftKg[0]);\n    if (entry.deadliftStatus[1] > 0) best3Dead = Math.max(best3Dead, entry.deadliftKg[1]);\n    if (entry.deadliftStatus[2] > 0) best3Dead = Math.max(best3Dead, entry.deadliftKg[2]);\n  }\n\n  // If there was no attempted success for a single lift, return zero.\n  if (best3Squat === 0 && entry.squatStatus[0] === -1) return 0.0;\n  if (best3Bench === 0 && entry.benchStatus[0] === -1) return 0.0;\n  if (best3Dead === 0 && entry.deadliftStatus[0] === -1) return 0.0;\n\n  return best3Squat + best3Bench + best3Dead;\n};\n\nexport const getBest3SquatKg = (entry: Entry): number => {\n  let best3Squat = 0.0;\n  if (entry.squatStatus[0] > 0) best3Squat = Math.max(best3Squat, entry.squatKg[0]);\n  if (entry.squatStatus[1] > 0) best3Squat = Math.max(best3Squat, entry.squatKg[1]);\n  if (entry.squatStatus[2] > 0) best3Squat = Math.max(best3Squat, entry.squatKg[2]);\n  return best3Squat;\n};\n\nexport const getBest3BenchKg = (entry: Entry): number => {\n  let best3Bench = 0.0;\n  if (entry.benchStatus[0] > 0) best3Bench = Math.max(best3Bench, entry.benchKg[0]);\n  if (entry.benchStatus[1] > 0) best3Bench = Math.max(best3Bench, entry.benchKg[1]);\n  if (entry.benchStatus[2] > 0) best3Bench = Math.max(best3Bench, entry.benchKg[2]);\n  return best3Bench;\n};\n\nexport const getBest3DeadliftKg = (entry: Entry): number => {\n  let best3Dead = 0.0;\n  if (entry.deadliftStatus[0] > 0) best3Dead = Math.max(best3Dead, entry.deadliftKg[0]);\n  if (entry.deadliftStatus[1] > 0) best3Dead = Math.max(best3Dead, entry.deadliftKg[1]);\n  if (entry.deadliftStatus[2] > 0) best3Dead = Math.max(best3Dead, entry.deadliftKg[2]);\n  return best3Dead;\n};\n\n// The Total is the sum of best of the first 3 attempts of each lift.\nexport const getFinalTotalKg = (entry: Entry): number => {\n  const best3Squat = getBest3SquatKg(entry);\n  const best3Bench = getBest3BenchKg(entry);\n  const best3Dead = getBest3DeadliftKg(entry);\n\n  // If there was no attempted success for a single lift, return zero.\n  if (best3Squat === 0 && entry.squatStatus[0] === -1) return 0.0;\n  if (best3Bench === 0 && entry.benchStatus[0] === -1) return 0.0;\n  if (best3Dead === 0 && entry.deadliftStatus[0] === -1) return 0.0;\n\n  return best3Squat + best3Bench + best3Dead;\n};\n\n// Restricts the total calculation to just for the specified Event.\nexport const getFinalEventTotalKg = (entry: Entry, event: Event): number => {\n  let best3Squat = 0.0;\n  if (event.includes(\"S\")) {\n    best3Squat = getBest3SquatKg(entry);\n    if (best3Squat === 0) return 0.0;\n  }\n\n  let best3Bench = 0.0;\n  if (event.includes(\"B\")) {\n    best3Bench = getBest3BenchKg(entry);\n    if (best3Bench === 0) return 0.0;\n  }\n\n  let best3Dead = 0.0;\n  if (event.includes(\"D\")) {\n    best3Dead = getBest3DeadliftKg(entry);\n    if (best3Dead === 0) return 0.0;\n  }\n\n  return best3Squat + best3Bench + best3Dead;\n};\n\n// Filter entries to only get lifters that are lifting on a given day\nexport const getLiftersOnDay = (entries: ReadonlyArray<Entry>, day: number): Array<Entry> => {\n  if (!entries) {\n    return [];\n  }\n  return entries.filter((entry) => {\n    return entry.day === day;\n  });\n};\n\n// Convert a lift like \"S\" to the kg array field name, like \"squatKg\".\nexport const liftToAttemptFieldName = (lift: Lift): FieldKg => {\n  switch (lift) {\n    case \"S\":\n      return \"squatKg\";\n    case \"B\":\n      return \"benchKg\";\n    case \"D\":\n      return \"deadliftKg\";\n    default:\n      checkExhausted(lift);\n      return \"squatKg\";\n  }\n};\n\n// Convert a lift like \"S\" to the status array field name, like \"squatStatus\".\nexport const liftToStatusFieldName = (lift: Lift): FieldStatus => {\n  switch (lift) {\n    case \"S\":\n      return \"squatStatus\";\n    case \"B\":\n      return \"benchStatus\";\n    case \"D\":\n      return \"deadliftStatus\";\n    default:\n      checkExhausted(lift);\n      return \"squatStatus\";\n  }\n};\n\n// Whether the Entry has taken any attempts.\nexport const entryHasLifted = (entry: Entry): boolean => {\n  if (entry.squatStatus[0] !== 0) return true;\n  if (entry.benchStatus[0] !== 0) return true;\n  if (entry.deadliftStatus[0] !== 0) return true;\n  return false;\n};\n\n// Whether any Entry has taken any attempts on the given (day, platform). O(n).\nexport const liftingPresentOnPlatform = (entries: ReadonlyArray<Entry>, day: number, platform: number): boolean => {\n  for (let i = 0; i < entries.length; i++) {\n    const entry = entries[i];\n    if (entry.day !== day || entry.platform !== platform) continue;\n    if (entryHasLifted(entry)) return true;\n  }\n  return false;\n};\n\n// Given an array of how many platforms are on each day and the Entries,\n// returns an array of arrays of booleans, such that array[day-1][platform-1] is\n// true iff at least one Entry corresponding to that (day, platform) has\n// taken an attempt.\nexport const getWhetherPlatformsHaveLifted = (\n  platformsOnDays: ReadonlyArray<number>,\n  entries: ReadonlyArray<Entry>\n): Array<Array<boolean>> => {\n  const ret = [];\n  for (let day = 1; day <= platformsOnDays.length; day++) {\n    const platformsOnDay = platformsOnDays[day - 1];\n    const acc = [];\n    for (let platform = 1; platform <= platformsOnDay; platform++) {\n      acc.push(liftingPresentOnPlatform(entries, day, platform));\n    }\n    ret.push(acc);\n  }\n  return ret;\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { newDefaultEntry, liftToAttemptFieldName, liftToStatusFieldName } from \"../logic/entry\";\nimport { RegistrationAction, OverwriteStoreAction, EnterAttemptAction, MarkLiftAction } from \"../types/actionTypes\";\nimport { Entry, Lift, FieldKg } from \"../types/dataTypes\";\nimport { RegistrationState } from \"../types/stateTypes\";\nimport { checkExhausted } from \"../types/utils\";\n\nconst initialState: RegistrationState = {\n  // The next unique ID to assign.\n  //\n  // This is stored in global state to handle the case of deleting registration\n  // rows during the course of lifting.\n  //\n  // A large number is used as the initial value to make it clear that this is\n  // specifically not an index into the `entries` array.\n  nextEntryId: 5000,\n\n  // Entry objects in the order they appear on the Registration page.\n  // This array owns all registration information.\n  entries: [],\n\n  // Hash from unique ID to `entries` array index.\n  //\n  // This is for the benefit of pages other than the Registration page.\n  // Because the sort order of the `entries` array can change arbitrarily,\n  // the other pages remember globally-unique identifiers for each registration,\n  // instead of a simple array index.\n  //\n  // This lookup table allows mapping those identifiers to whatever\n  // the current location of that data is in the canonical `entries` store.\n  lookup: {},\n};\n\ntype Action = RegistrationAction | EnterAttemptAction | MarkLiftAction | OverwriteStoreAction;\n\ntype NumberLookup = {\n  [id: number]: number;\n};\n\nexport default (state: RegistrationState = initialState, action: Action): RegistrationState => {\n  switch (action.type) {\n    case \"NEW_REGISTRATION\": {\n      // The object provides optional properties that can overwrite the default.\n      // Although the UI doesn't pass properties this way, debugging code does.\n      const obj = action.overwriteDefaults;\n\n      // Generate an entries array with one more item (without modifying the orginal).\n      // Object.assign() allows `obj` to overwrite defaults if present.\n      const entries: Array<Entry> = state.entries.slice();\n      const newEntry = newDefaultEntry(state.nextEntryId);\n\n      // If a previous entry exists, pre-populate some information from it.\n      if (entries.length > 0) {\n        const previousEntry = entries[entries.length - 1];\n        newEntry.day = previousEntry.day;\n        newEntry.platform = previousEntry.platform;\n        newEntry.flight = previousEntry.flight;\n      }\n\n      // Overwrite any newEntry properties with those given in obj.\n      entries.push(Object.assign(newEntry, obj));\n\n      // Since a new entry was added, generate a new 'lookup' object,\n      // mapping from the globally-unique EntryId to the array index.\n      // Specify type explicitly here so that we can mutate it\n      const lookup: NumberLookup = Object.assign({}, state.lookup);\n      lookup[state.nextEntryId] = entries.length - 1;\n\n      return {\n        ...state,\n        nextEntryId: state.nextEntryId + 1,\n        entries: entries,\n        lookup: lookup,\n      };\n    }\n\n    case \"DELETE_REGISTRATION\": {\n      const entryId = action.entryId;\n\n      // Generate an entries array without the given item.\n      const entries: Array<Entry> = state.entries.filter((item) => item.id !== entryId);\n\n      // Since the entry was deleted from anywhere in the array,\n      // construct a new lookup table from scratch.\n      const lookup: NumberLookup = {};\n\n      for (let i = 0; i < entries.length; i++) {\n        const entry = entries[i];\n        lookup[entry.id] = i;\n      }\n\n      return {\n        ...state,\n        entries: entries,\n        lookup: lookup,\n      };\n    }\n\n    case \"UPDATE_REGISTRATION\": {\n      const entryId = action.entryId;\n      const changes = action.changes;\n\n      // Clone the entries array, since one entry will reference a new object.\n      const entries: Array<Entry> = state.entries.slice();\n\n      // Make a new object with just the changes overwritten,\n      // and reference that object from the new array.\n      const index = entries.findIndex((obj) => obj.id === entryId);\n      const newEntry = Object.assign({}, entries[index]);\n      entries[index] = Object.assign(newEntry, changes);\n\n      return {\n        ...state,\n        entries: entries,\n      };\n    }\n\n    case \"ENTER_ATTEMPT\": {\n      // Action parameters, with expected types.\n      const entryId = Number(action.entryId);\n      const lift: Lift = action.lift;\n      const attemptOneIndexed = Number(action.attemptOneIndexed);\n      const weightKg = Number(action.weightKg);\n\n      const field: FieldKg = liftToAttemptFieldName(lift);\n\n      // Clone the entries array, since one slot will reference a new object.\n      const newEntries: Array<Entry> = state.entries.slice();\n      const index = newEntries.findIndex((obj) => obj.id === entryId);\n      const oldEntry = newEntries[index];\n\n      // Make a copy of the attempts array containing the new attempt.\n      const newarray = oldEntry[field].slice();\n      newarray[attemptOneIndexed - 1] = weightKg;\n\n      // Put that new attempts array into an object so we can use Object.assign().\n      const newfields: Partial<Entry> = {};\n      newfields[field] = newarray;\n\n      // Make a new entry from the old entry, with the attempts field overwritten.\n      newEntries[index] = Object.assign(oldEntry, newfields);\n\n      return {\n        ...state,\n        entries: newEntries,\n      };\n    }\n\n    case \"MARK_LIFT\": {\n      const entryId = Number(action.entryId);\n      const lift: Lift = action.lift;\n      const attemptOneIndexed = Number(action.attemptOneIndexed);\n      const success = Boolean(action.success);\n\n      // Map true to '1' and false to '-1'.\n      const status = success === true ? 1 : -1;\n\n      const fieldStatus = liftToStatusFieldName(lift);\n\n      // Clone the entries array, since one slot will reference a new object.\n      const newEntries: Array<Entry> = state.entries.slice();\n      const index = newEntries.findIndex((obj) => obj.id === entryId);\n      const oldEntry = newEntries[index];\n\n      // Make a copy of the status array containing the new status.\n      const newarray = oldEntry[fieldStatus].slice();\n      newarray[attemptOneIndexed - 1] = status;\n\n      // Put that new array into an object so we can use Object.assign().\n      const newfields: Partial<Entry> = {};\n      newfields[fieldStatus] = newarray;\n\n      // Make a new entry from the old entry, with the status field overwritten.\n      const newEntry = Object.assign({}, oldEntry);\n      newEntries[index] = Object.assign(newEntry, newfields);\n\n      return {\n        ...state,\n        entries: newEntries,\n      };\n    }\n\n    // Caused by clicking a \"Merge\" button on the Results page.\n    case \"MERGE_PLATFORM\": {\n      const day: number = action.day;\n      const platform: number = action.platform;\n      const platformEntries: ReadonlyArray<Entry> = action.platformEntries;\n\n      // Filter out state entries assigned to the merged (day, platform).\n      const newEntries = state.entries.filter((e) => {\n        return !(e.day === day && e.platform === platform);\n      });\n\n      // Get the nextEntryId: the merged entries will be reassigned IDs.\n      let nextEntryId: number = state.nextEntryId;\n\n      // For each incoming Entry, copy the object, assign a new ID,\n      // and place it in the newEntries array.\n      for (let i = 0; i < platformEntries.length; i++) {\n        const entry: Entry = Object.assign({}, platformEntries[i]);\n        entry.id = nextEntryId++;\n        newEntries.push(entry);\n      }\n\n      // Generate an entirely new lookup table.\n      const lookup: NumberLookup = {};\n      for (let i = 0; i < newEntries.length; i++) {\n        lookup[newEntries[i].id] = i;\n      }\n\n      // Return a new object with the new components replaced.\n      return {\n        ...state,\n        nextEntryId: nextEntryId,\n        entries: newEntries,\n        lookup: lookup,\n      };\n    }\n\n    case \"OVERWRITE_STORE\":\n      return action.store.registration;\n\n    case \"ASSIGN_LOT_NUMBERS\":\n      // Clone & assign entry with its new lot number.\n      const updatedEntries = state.entries.map((entry, index) => ({ ...entry, lot: action.lotNumbers[index] }));\n\n      return {\n        ...state,\n        entries: updatedEntries,\n      };\n\n    default:\n      checkExhausted(action);\n      return state;\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Lifting state only tracks manual overrides.\n//\n// Outside of overrides, the state of the meet is fully-calculated by the LiftingView.\n//\n// For safety, correctness, and ease of understanding, the state of the meet is\n// intentionally *not* stored in the global state. It is continuously recalculated.\n//\n// Please do not attempt to store meet state in the Redux store!\n\nimport {\n  MarkLiftAction,\n  SetLiftingGroupAction,\n  OverrideAttemptAction,\n  OverrideEntryIdAction,\n  OverwriteStoreAction,\n  SetTableInfoAction,\n} from \"../types/actionTypes\";\nimport { LiftingState } from \"../types/stateTypes\";\nimport { checkExhausted } from \"../types/utils\";\n\nconst initialState: LiftingState = {\n  // Specifies the initial settings for the control widgets on the lifting page.\n  // The intention is that the score table sets these manually.\n  day: 1,\n  platform: 1,\n  flight: \"A\",\n  lift: \"S\",\n\n  // These properties are normally calculated, but exist here as a mechanism\n  // for a one-shot override of the normal logic. After being handled,\n  // they are unset.\n  overrideAttempt: null, // Allows selecting an attempt, even if it's completed.\n  overrideEntryId: null, // Allows selecting a lifter, even if they've already gone.\n\n  // Presentational configuration.\n  columnDivisionWidthPx: 90,\n};\n\ntype Action =\n  | MarkLiftAction\n  | SetLiftingGroupAction\n  | OverrideAttemptAction\n  | OverrideEntryIdAction\n  | OverwriteStoreAction\n  | SetTableInfoAction;\n\nexport default (state: LiftingState = initialState, action: Action): LiftingState => {\n  switch (action.type) {\n    case \"MARK_LIFT\": {\n      // Unset any overrides, returning to normal lifting flow.\n      return { ...state, overrideAttempt: null, overrideEntryId: null };\n    }\n\n    case \"SET_LIFTING_GROUP\":\n      return {\n        // Keep all the UI customization stuff.\n        ...state,\n\n        // Change all the real state stuff.\n        day: action.day,\n        platform: action.platform,\n        flight: action.flight,\n        lift: action.lift,\n\n        // If the group changes, unset any overrides.\n        overrideAttempt: null,\n        overrideEntryId: null,\n      };\n\n    case \"OVERRIDE_ATTEMPT\":\n      return { ...state, overrideAttempt: action.attempt };\n\n    case \"OVERRIDE_ENTRY_ID\":\n      return { ...state, overrideEntryId: action.entryId };\n\n    case \"OVERWRITE_STORE\":\n      return action.store.lifting;\n\n    case \"SET_TABLE_INFO\": {\n      const changes = action.changes;\n\n      // As a safeguard, ensure that fields unrelated to customization\n      // are not overwritten by this action.\n\n      // Make a new object that's state + changes, with changes taking priority.\n      const combined = Object.assign({}, state);\n      Object.assign(combined, changes);\n\n      // Source from this new combined object, with fields unrelated to customization\n      // deferring to the original state.\n      //\n      // So that means:\n      //  - Fields unrelated to customization will be the same as in 'state'.\n      //  - Customization fields will be from 'combined', which includes all fields\n      //    and allowed the 'changes' object to overwrite any of them.\n      return {\n        ...combined,\n\n        day: state.day,\n        platform: state.platform,\n        flight: state.flight,\n        lift: state.lift,\n\n        overrideAttempt: state.overrideAttempt,\n        overrideEntryId: state.overrideEntryId,\n      };\n    }\n\n    default:\n      checkExhausted(action);\n      return state;\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { combineReducers } from \"redux\";\n\nimport versionsReducer from \"./versionsReducer\";\nimport languageReducer from \"./languageReducer\";\nimport meetReducer from \"./meetReducer\";\nimport registrationReducer from \"./registrationReducer\";\nimport liftingReducer from \"./liftingReducer\";\n\n// Using combineReducers() guarantees that each part of the state object\n// fully bears the responsibility of managing itself by only sending a\n// subset of the state to the reducer.\n//\n// For example, the meetReducer() receives a new 'state' object\n// equal to 'state.meet' from the root. Because there is no way to access\n// the root state object from a child state object, the meetReducer() is\n// fully-encapsulated, allowing for sane reasoning about effects on global state.\nexport default combineReducers({\n  versions: versionsReducer,\n  language: languageReducer,\n  meet: meetReducer,\n  registration: registrationReducer,\n  lifting: liftingReducer,\n});\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { ChangeLanguageAction, OverwriteStoreAction } from \"../types/actionTypes\";\nimport { Language } from \"../types/dataTypes\";\nimport { checkExhausted } from \"../types/utils\";\n\ntype Action = ChangeLanguageAction | OverwriteStoreAction;\n\nexport default (state: Language = \"en\", action: Action): Language => {\n  switch (action.type) {\n    case \"CHANGE_LANGUAGE\":\n      return action.language;\n\n    case \"OVERWRITE_STORE\":\n      return action.store.language;\n\n    default:\n      checkExhausted(action);\n      return state;\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// The confirmation modal that pops up when the \"New Meet\" button is clicked.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\n\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nimport { getString } from \"../../logic/strings\";\n\nimport { overwriteStore } from \"../../actions/globalActions\";\nimport rootReducer from \"../../reducers/rootReducer\";\n\nimport { Language } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { Dispatch } from \"redux\";\n\ninterface OwnProps {\n  show: boolean;\n  close: () => void;\n}\n\ninterface StateProps {\n  name: string;\n  language: Language;\n}\n\ninterface DispatchProps {\n  overwriteStore: (language: Language) => void;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nclass NewMeetModal extends React.Component<Props> {\n  render() {\n    return (\n      <Modal show={this.props.show} onHide={this.props.close}>\n        <Modal.Header closeButton>\n          <Modal.Title>\n            <FormattedMessage\n              id=\"home.new-meet-popup-title\"\n              defaultMessage=\"OK to clear {meetName}?\"\n              values={{ meetName: this.props.name }}\n            />\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>\n            <FormattedMessage\n              id=\"home.new-meet-popup-message-clear\"\n              defaultMessage=\"Starting a new meet will clear all unsaved data from {meetName}.\"\n              values={{ meetName: this.props.name }}\n            />\n          </p>\n          <p>\n            <FormattedMessage\n              id=\"home.new-meet-popup-message-sure\"\n              defaultMessage=\"Are you sure you want to continue?\"\n            />\n          </p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={this.props.close} variant=\"light\">\n            {getString(\"common.button-close\", this.props.language)}\n          </Button>\n          <LinkContainer to=\"/meet-setup\">\n            <Button onClick={() => this.props.overwriteStore(this.props.language)} variant=\"primary\">\n              {getString(\"common.button-continue\", this.props.language)}\n            </Button>\n          </LinkContainer>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => {\n  return {\n    name: state.meet.name,\n    language: state.language,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    overwriteStore: (language: Language) => {\n      // Calling the combined root reducer with an empty object results in the child reducers\n      // being invoked with no argument, so they return their default states.\n      // We cast here since this is not how the reducer is really intended to work\n      const defaultStore = rootReducer({ language: language } as GlobalState, \"OVERWRITE_STORE\" as any);\n      dispatch(overwriteStore(defaultStore));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewMeetModal);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Shows a popup with an error message.\n// This exists because Chrome only allows window.alert() to execute once,\n// because Chrome is bad and Google should feel bad.\n//\n// This is intended only for use with buttons that load external resources,\n// like save files and CSV registration importation files.\n//\n// Regular old errors in widgets should be reported by setting their\n// validationState.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\n\ninterface OwnProps {\n  error: string;\n  title: string;\n  show: boolean;\n  close: () => void;\n}\n\ntype Props = OwnProps;\n\nclass ErrorModal extends React.Component<Props> {\n  render() {\n    return (\n      <Modal show={this.props.show} onHide={this.props.close}>\n        <Modal.Header closeButton>\n          <Modal.Title>{this.props.title}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>{this.props.error}</p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"info\" onClick={this.props.close}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport default connect(null, null)(ErrorModal);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nimport { saveAs } from \"file-saver\";\n\nimport { FormattedMessage } from \"react-intl\";\nimport LanguageSelector from \"../components/translations/LanguageSelector\";\nimport { overwriteStore } from \"../actions/globalActions\";\n\nimport NewMeetModal from \"../components/home/NewMeetModal\";\nimport ErrorModal from \"../components/ErrorModal\";\n\nimport { getString } from \"../logic/strings\";\n\nimport { stateVersion, releaseVersion, releaseDate } from \"../versions\";\n\nimport styles from \"../components/common/ContentArea.module.scss\";\n\nimport { GlobalState } from \"../types/stateTypes\";\nimport { Dispatch } from \"redux\";\n\n// Temporary CSS, just for prototyping.\nconst centerConsole = { maxWidth: 700, marginRight: \"auto\", marginLeft: \"auto\" };\n\ninterface StateProps {\n  redux: GlobalState;\n}\n\ninterface DispatchProps {\n  overwriteStore: (store: GlobalState) => void;\n}\n\ninterface InternalState {\n  showNewMeetModal: boolean;\n  // Controls the ErrorModal popup. Shown when error !== \"\".\n  error: string;\n}\n\ntype Props = StateProps & DispatchProps;\n\n// Gets links and buttons to have the same vertical spacing.\nconst buttonMargin = { marginBottom: \"8px\" };\n\nclass HomeContainer extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n    this.handleLoadClick = this.handleLoadClick.bind(this);\n    this.handleNewClick = this.handleNewClick.bind(this);\n    this.closeConfirmModal = this.closeConfirmModal.bind(this);\n    this.closeErrorModal = this.closeErrorModal.bind(this);\n    this.handleLoadFileInput = this.handleLoadFileInput.bind(this);\n    this.handleSaveClick = this.handleSaveClick.bind(this);\n    this.renderContinueButton = this.renderContinueButton.bind(this);\n\n    this.state = { showNewMeetModal: false, error: \"\" };\n  }\n\n  // The file input is hidden, and we want to use a button to activate it.\n  // This event handler is just a proxy to call the *real* event handler.\n  handleLoadClick = () => {\n    const loadhelper = document.getElementById(\"loadhelper\");\n    if (loadhelper !== null) {\n      loadhelper.click();\n    }\n  };\n\n  // When we click the new meet button\n  // Open the popover modal to confirm the user is willing to delete any current progress\n  handleNewClick = () => {\n    this.setState({ showNewMeetModal: true });\n  };\n\n  // Close the new meet confirmation modal\n  closeConfirmModal = () => {\n    this.setState({ showNewMeetModal: false });\n  };\n\n  closeErrorModal = () => {\n    this.setState({ error: \"\" });\n  };\n\n  // Called when a file is selected.\n  handleLoadFileInput = () => {\n    // Load the element and make sure it's an HTMLInputElement.\n    const loadHelper = document.getElementById(\"loadhelper\");\n    if (loadHelper === null || !(loadHelper instanceof HTMLInputElement) || loadHelper.files === null) {\n      return;\n    }\n\n    const selectedFile = loadHelper.files[0];\n    const language = this.props.redux.language;\n    const rememberThis = this;\n\n    const reader = new FileReader();\n    reader.onload = function (event: any) {\n      let errored = false;\n      try {\n        const obj = JSON.parse(event.target.result);\n\n        // Basic error checking, make sure it's the right format.\n        if (\n          obj.language === undefined ||\n          obj.meet === undefined ||\n          obj.registration === undefined ||\n          obj.lifting === undefined\n        ) {\n          errored = true;\n        } else {\n          rememberThis.props.overwriteStore(obj);\n        }\n      } catch (err) {\n        errored = true;\n      }\n\n      if (errored) {\n        const error = getString(\"error.invalid-openlifter\", language);\n        rememberThis.setState({ error: error });\n      }\n    };\n    reader.readAsText(selectedFile);\n  };\n\n  handleSaveClick = () => {\n    let meetname = this.props.redux.meet.name;\n    if (meetname === \"\") {\n      meetname = getString(\"common.unnamed-filename\", this.props.redux.language);\n    }\n    meetname = meetname.replace(/ /g, \"-\");\n\n    const state = JSON.stringify(this.props.redux);\n    const blob = new Blob([state], { type: \"application/json;charset=utf-8\" });\n    saveAs(blob, meetname + \".openlifter\");\n  };\n\n  renderContinueButton = () => {\n    const meetname = this.props.redux.meet.name;\n    if (meetname === \"\") {\n      // Unnamed or unstarted meet, so don't render a continue button\n      return;\n    }\n    return (\n      <LinkContainer to=\"/meet-setup\">\n        <Button variant=\"primary\" block style={buttonMargin}>\n          <FormattedMessage\n            id=\"home.button-continue\"\n            defaultMessage=\"Continue {meetName}\"\n            values={{ meetName: meetname }}\n          />\n        </Button>\n      </LinkContainer>\n    );\n  };\n\n  render() {\n    let newMeetButton = (\n      <Button variant=\"primary\" block onClick={this.handleNewClick} style={buttonMargin}>\n        <FormattedMessage id=\"home.button-new-meet\" defaultMessage=\"New Meet\" />\n      </Button>\n    );\n\n    // If no meet is active, make the button just a LinkContainer.\n    if (!this.props.redux.meet.name) {\n      newMeetButton = <LinkContainer to=\"/meet-setup\">{newMeetButton}</LinkContainer>;\n    }\n\n    const isBeta: boolean = releaseVersion.includes(\"eta\");\n    let betaWarning = null;\n    if (isBeta === true) {\n      betaWarning = (\n        <h3>\n          <p>\n            <FormattedMessage\n              id=\"home.beta-warning\"\n              defaultMessage=\"This is the in-development, next version of OpenLifter. The internal data format is unstable. Do not use this to run competitions!\"\n            />\n          </p>\n        </h3>\n      );\n    }\n\n    const wrongVersion: boolean = this.props.redux.versions.stateVersion !== stateVersion;\n    const dataReleaseVersion = this.props.redux.versions.releaseVersion;\n\n    const language = this.props.redux.language;\n\n    let warning = null;\n    if (wrongVersion === true) {\n      warning = (\n        <h3>\n          <p>\n            <b>{getString(\"common.danger-allcaps\", language)}</b>\n          </p>\n          <p>\n            <FormattedMessage\n              id=\"home.wrong-version-warning\"\n              defaultMessage=\"The loaded meet was made in OpenLifter {oldVersion}. That format is incompatible with OpenLifter {thisVersion}.\"\n              values={{ oldVersion: dataReleaseVersion, thisVersion: releaseVersion }}\n            />\n          </p>\n        </h3>\n      );\n    }\n\n    return (\n      <Card style={centerConsole} className={styles.contentArea}>\n        <NewMeetModal show={this.state.showNewMeetModal} close={this.closeConfirmModal} />\n        <ErrorModal\n          error={this.state.error}\n          title={getString(\"home.error-load-popup-title\", language)}\n          show={this.state.error !== \"\"}\n          close={this.closeErrorModal}\n        />\n\n        <Card.Header>\n          <img alt=\"ATC\" src=\"atc-logo.png\" style={{width: \"50%\", margin: \"auto\", display: \"block\"}} />\n          {betaWarning}\n        </Card.Header>\n\n        <Card.Body>\n          <Container>\n            <Row>{warning}</Row>\n            <Row style={buttonMargin}>\n              <Col md={8}>\n                {wrongVersion === false ? (\n                  this.renderContinueButton()\n                ) : (\n                  <a href={\"https://www.openlifter.com/releases/\" + dataReleaseVersion}>\n                    <Button variant=\"success\" block>\n                      <FormattedMessage\n                        id=\"home.button-switch-version\"\n                        defaultMessage=\"Switch to OpenLifter {otherVersion}\"\n                        values={{ otherVersion: dataReleaseVersion }}\n                      />\n                    </Button>\n                  </a>\n                )}\n              </Col>\n              <Col md={4}>\n                <LanguageSelector />\n              </Col>\n            </Row>\n\n            <Row>\n              <Col md={8}>\n                <div>\n                  {newMeetButton}\n\n                  <Button variant=\"warning\" block onClick={this.handleLoadClick} style={buttonMargin}>\n                    <FormattedMessage id=\"home.button-load-from-file\" defaultMessage=\"Load from File\" />\n                  </Button>\n                  <Button variant=\"success\" block onClick={this.handleSaveClick} style={buttonMargin}>\n                    <FormattedMessage id=\"home.button-save-tofile\" defaultMessage=\"Save to File\" />\n                  </Button>\n                </div>\n              </Col>\n\n              <Col md={4}>\n                <a\n                  href=\"https://gitlab.com/openpowerlifting/openlifter/issues/new\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  <Button variant=\"outline-secondary\" block style={buttonMargin}>\n                    <FormattedMessage id=\"home.button-report-issue\" defaultMessage=\"Report an Issue\" />\n                  </Button>\n                </a>\n                <a href=\"https://www.openlifter.com/support\" rel=\"noopener noreferrer\" target=\"_blank\">\n                  <Button variant=\"outline-secondary\" block style={buttonMargin}>\n                    <FormattedMessage id=\"home.button-support\" defaultMessage=\"Official Support\" />\n                  </Button>\n                </a>\n                <a href=\"https://gitlab.com/openpowerlifting/openlifter\" rel=\"noopener noreferrer\" target=\"_blank\">\n                  <Button variant=\"outline-secondary\" block style={buttonMargin}>\n                    <FormattedMessage id=\"home.button-source\" defaultMessage=\"Full Source Code\" />\n                  </Button>\n                </a>\n                <LinkContainer to=\"/about\">\n                  <Button variant=\"outline-secondary\" block style={buttonMargin}>\n                    <FormattedMessage id=\"home.button-credits\" defaultMessage=\"Credits and License\" />\n                  </Button>\n                </LinkContainer>\n              </Col>\n            </Row>\n          </Container>\n        </Card.Body>\n\n        <Card.Footer>\n          <h4 style={{ textAlign: \"center\" }}>\n            <FormattedMessage\n              id=\"home.version-date\"\n              defaultMessage=\"Version {releaseVersion}, {releaseDate}.\"\n              values={{\n                releaseVersion: releaseVersion,\n                releaseDate: releaseDate,\n              }}\n            />\n          </h4>\n        </Card.Footer>\n\n        <input\n          id=\"loadhelper\"\n          type=\"file\"\n          accept=\".openlifter,.openlifter.txt\"\n          style={{ display: \"none\" }}\n          onChange={this.handleLoadFileInput}\n        />\n      </Card>\n    );\n  }\n}\n\n// Because we want to save the state, separate it out specifically\n// into a \"redux\" prop. Otherwise it gets contaminated by other props.\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  redux: {\n    ...state,\n  },\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    overwriteStore: (store) => dispatch(overwriteStore(store)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeContainer);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// This defines a generic text input that colors itself based upon a validation\n// function passed in OwnProps. On blur, an onSuccess() callback is called\n// if validation passes; otherwise, the text input reverts to the initial state.\n\nimport React from \"react\";\n\nimport Form from \"react-bootstrap/Form\";\n\nimport { Validation } from \"../types/dataTypes\";\nimport { FormControlTypeHack, assertString } from \"../types/utils\";\n\ninterface OwnProps {\n  type?: string; // The type of input, such as \"text\" or \"number\". Defaults to \"text\".\n  label?: string; // Form label text, shown above the input.\n  initialValue: string;\n  placeholder?: string;\n  disabled?: boolean;\n  validate: (value?: string) => Validation;\n  onSuccess: (value: string) => void;\n\n  // By default, the bottom margin is removed so that this can be used in tables.\n  // Setting this to true adds the margin back. Defaults to false.\n  keepMargin?: boolean;\n}\n\ntype Props = Readonly<OwnProps>;\n\ninterface InternalState {\n  value: string;\n}\n\nclass BirthDateInput extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    this.validate = this.validate.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n\n    this.state = {\n      value: props.initialValue,\n    };\n  }\n\n  validate = (): Validation => {\n    return this.props.validate(this.state.value);\n  };\n\n  handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === \"Enter\") {\n      event.currentTarget.blur();\n    }\n  };\n\n  handleChange = (event: React.FormEvent<FormControlTypeHack>) => {\n    if (assertString(event.currentTarget.value)) {\n      this.setState({ value: event.currentTarget.value });\n    }\n  };\n\n  handleBlur = () => {\n    if (this.validate() === \"error\") {\n      this.setState({ value: this.props.initialValue });\n      return;\n    }\n\n    if (this.props.initialValue !== this.state.value) {\n      this.props.onSuccess(this.state.value);\n    }\n  };\n\n  render() {\n    const validation: Validation = this.validate();\n    const maybeLabel = this.props.label ? <Form.Label>{this.props.label}</Form.Label> : undefined;\n\n    return (\n      <Form.Group style={this.props.keepMargin === true ? undefined : { marginBottom: 0 }}>\n        {maybeLabel}\n        <Form.Control\n          type={this.props.type ? this.props.type : \"text\"}\n          placeholder={this.props.placeholder}\n          disabled={this.props.disabled === true ? true : undefined}\n          value={this.state.value}\n          onKeyDown={this.handleKeyDown}\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n          isValid={validation === \"success\"}\n          isInvalid={validation === \"error\"}\n          className={validation === \"warning\" ? \"is-warning\" : undefined}\n        />\n      </Form.Group>\n    );\n  }\n}\n\nexport default BirthDateInput;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport {\n  SetMeetNameAction,\n  SetFormulaAction,\n  SetFederationAction,\n  SetDivisionsAction,\n  SetMeetDateAction,\n  SetLengthDaysAction,\n  SetPlatformsOnDaysAction,\n  SetInKgAction,\n  SetWeightClassesAction,\n  SetBarAndCollarsWeightKgAction,\n  SetPlateConfigAction,\n  UpdateMeetAction,\n} from \"../types/actionTypes\";\nimport { Formula, Lift, Sex } from \"../types/dataTypes\";\nimport { MeetState } from \"../types/stateTypes\";\n\nexport const setMeetName = (name: string): SetMeetNameAction => {\n  return {\n    type: \"SET_MEET_NAME\",\n    name,\n  };\n};\n\nexport const setFormula = (formula: Formula): SetFormulaAction => {\n  return {\n    type: \"SET_FORMULA\",\n    formula,\n  };\n};\n\nexport const setFederation = (federation: string): SetFederationAction => {\n  return {\n    type: \"SET_FEDERATION\",\n    federation,\n  };\n};\n\nexport const setDivisions = (divisions: ReadonlyArray<string>): SetDivisionsAction => {\n  return {\n    type: \"SET_DIVISIONS\",\n    divisions,\n  };\n};\n\nexport const setMeetDate = (date: string): SetMeetDateAction => {\n  return {\n    type: \"SET_MEET_DATE\",\n    date,\n  };\n};\n\nexport const setLengthDays = (length: number): SetLengthDaysAction => {\n  return {\n    type: \"SET_LENGTH_DAYS\",\n    length,\n  };\n};\n\nexport const setPlatformsOnDays = (day: number, count: number): SetPlatformsOnDaysAction => {\n  return {\n    type: \"SET_PLATFORM_COUNT\",\n    day: day,\n    count: count,\n  };\n};\n\nexport const setInKg = (inKg: boolean): SetInKgAction => {\n  return {\n    type: \"SET_IN_KG\",\n    inKg,\n  };\n};\n\nexport const setWeightClasses = (sex: Sex, classesKg: ReadonlyArray<number>): SetWeightClassesAction => {\n  return {\n    type: \"SET_WEIGHTCLASSES\",\n    sex: sex,\n    classesKg: classesKg,\n  };\n};\n\nexport const setBarAndCollarsWeightKg = (lift: Lift, weightKg: number): SetBarAndCollarsWeightKgAction => {\n  return {\n    type: \"SET_BAR_AND_COLLARS_WEIGHT_KG\",\n    lift: lift,\n    weightKg: weightKg,\n  };\n};\n\nexport const setPlateConfig = (weightKg: number, pairCount: number, color: string): SetPlateConfigAction => {\n  return {\n    type: \"SET_PLATE_CONFIG\",\n    weightKg,\n    pairCount,\n    color,\n  };\n};\n\nexport const updateMeet = (obj: Partial<MeetState>): UpdateMeetAction => {\n  return {\n    type: \"UPDATE_MEET\",\n    changes: obj,\n  };\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the MeetDate date picker.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport DatePicker from \"react-datepicker\";\nimport { registerLocale } from \"react-datepicker\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Form from \"react-bootstrap/Form\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\n\nimport { setMeetDate } from \"../../actions/meetSetupActions\";\nimport { iso8601ToLocalDate, localDateToIso8601 } from \"../../logic/date\";\n\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { Language } from \"../../types/dataTypes\";\nimport { Dispatch } from \"redux\";\n\n// The react-datepicker gets locale information from the \"date-fns\" package.\n// In order for it to understand what our Languages are, we have to register\n// those locales. The react-datepicker provides a helper function to do this.\nimport de from \"date-fns/locale/de\";\nimport el from \"date-fns/locale/el\";\nimport eo from \"date-fns/locale/eo\";\nimport es from \"date-fns/locale/es\";\nimport et from \"date-fns/locale/et\";\nimport fr from \"date-fns/locale/fr\";\nimport hr from \"date-fns/locale/hr\";\nimport it from \"date-fns/locale/it\";\nimport lt from \"date-fns/locale/lt\";\nimport nl from \"date-fns/locale/nl\";\nimport pt from \"date-fns/locale/pt\";\nimport ru from \"date-fns/locale/ru\";\nimport tr from \"date-fns/locale/tr\";\nimport uk from \"date-fns/locale/uk\";\nimport zh_CN from \"date-fns/locale/zh-CN\";\n\n// Register the date-fns/locales with the DatePicker.\nregisterLocale(\"de\", de);\nregisterLocale(\"el\", el);\nregisterLocale(\"eo\", eo);\nregisterLocale(\"es\", es);\nregisterLocale(\"et\", et);\nregisterLocale(\"fr\", fr);\nregisterLocale(\"hr\", hr);\nregisterLocale(\"it\", it);\nregisterLocale(\"lt\", lt);\nregisterLocale(\"nl\", nl);\nregisterLocale(\"pt\", pt);\nregisterLocale(\"ru\", ru);\nregisterLocale(\"tr\", tr);\nregisterLocale(\"uk\", uk);\nregisterLocale(\"zh-Hans\", zh_CN);\n\ninterface StateProps {\n  date: string;\n  language: Language;\n}\n\ninterface DispatchProps {\n  setMeetDate: (date: Date) => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\nclass MeetDate extends React.Component<Props> {\n  render() {\n    // The DatePicker manipulates a Date object in local time.\n    const initialDate: Date = iso8601ToLocalDate(this.props.date);\n\n    return (\n      <FormGroup>\n        <Form.Label>\n          <FormattedMessage id=\"meet-setup.start-date\" defaultMessage=\"Start Date\" />\n        </Form.Label>\n        <div style={{ textAlign: \"center\" }}>\n          <DatePicker\n            dateFormat=\"yyyy-MM-dd\"\n            selected={initialDate}\n            onChange={this.props.setMeetDate}\n            inline\n            locale={this.props.language}\n          />\n        </div>\n      </FormGroup>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  date: state.meet.date,\n  language: state.language,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    setMeetDate: (date) => {\n      dispatch(setMeetDate(localDateToIso8601(date)));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MeetDate);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// This is a generic number input with a minus and a plus surrounding it.\n\nimport React, { FormEvent } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMinus, faPlus } from \"@fortawesome/free-solid-svg-icons\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\n\nimport { string2number, displayNumber } from \"../../logic/units\";\n\nimport { FormControlTypeHack, assertString } from \"../../types/utils\";\nimport { Language, Validation } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\n\ninterface OwnProps {\n  initialValue: number; // Starting value when rendering the widget.\n\n  // Properties related to validation.\n  step: number; // Amount with which +/- buttons should increment or decrement.\n  validate: (n: number) => Validation; // Verifies that the number is valid.\n  onChange: (n: number) => void; // Callback. Only validated numbers are reported.\n\n  // Properties related to display.\n  label?: JSX.Element | string; // A label to display on the element.\n  marginBottom?: string; // Allows overriding margin (Forms by default have margins).\n}\n\ninterface StateProps {\n  language: Language;\n}\n\ntype Props = OwnProps & StateProps;\n\ninterface InternalState {\n  value: string;\n}\n\nclass NumberInput extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    // Handles manual text entry.\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n\n    // Handles the +/- buttons on the side of the input.\n    this.handleDecrement = this.handleDecrement.bind(this);\n    this.handleIncrement = this.handleIncrement.bind(this);\n    this.handleStep = this.handleStep.bind(this);\n\n    // Internal state, for purposes of validation.\n    // To avoid confusion (auto-rounding) when typing, just store a string.\n    this.state = {\n      value: displayNumber(props.initialValue, props.language),\n    };\n  }\n\n  // Used when the user manually types into the input box.\n  handleChange = (event: FormEvent<FormControlTypeHack>): void => {\n    const value = event.currentTarget.value;\n    if (assertString(value)) {\n      this.setState({ value: value });\n    }\n  };\n\n  // Used when the user removes focus from the input box.\n  handleBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n    const num: number = string2number(event.currentTarget.value);\n    if (this.props.validate(num) !== \"error\") {\n      this.props.onChange(num);\n    }\n  };\n\n  handleDecrement = (): void => {\n    this.handleStep(this.props.step * -1);\n  };\n\n  handleIncrement = (): void => {\n    this.handleStep(this.props.step);\n  };\n\n  handleStep = (step: number): void => {\n    let n: number = string2number(this.state.value) + step;\n\n    // Make sure that the new value is a multiple of the step.\n    const multiple = Math.abs(step);\n    if (step > 0) {\n      n = Math.floor(n / multiple) * multiple;\n    } else {\n      n = Math.ceil(n / multiple) * multiple;\n    }\n\n    if (this.props.validate(n) !== \"error\") {\n      this.setState({ value: displayNumber(n, this.props.language) });\n      this.props.onChange(n);\n    }\n  };\n\n  render() {\n    const validation: Validation = this.props.validate(string2number(this.state.value));\n\n    return (\n      <Form.Group style={{ marginBottom: `${this.props.marginBottom || undefined}` }}>\n        {this.props.label && <Form.Label>{this.props.label}</Form.Label>}\n        <InputGroup>\n          <InputGroup.Prepend>\n            <Button variant=\"outline-secondary\" style={{ borderRight: \"0px\" }} onMouseDown={this.handleDecrement}>\n              <FontAwesomeIcon icon={faMinus} />\n            </Button>\n          </InputGroup.Prepend>\n          <Form.Control\n            value={this.state.value}\n            onChange={this.handleChange}\n            onBlur={this.handleBlur}\n            isValid={validation === \"success\"}\n            isInvalid={validation === \"error\"}\n            className={validation === \"warning\" ? \"is-warning\" : undefined}\n          />\n          <InputGroup.Append>\n            <Button variant=\"outline-secondary\" style={{ borderLeft: \"0px\" }} onMouseDown={this.handleIncrement}>\n              <FontAwesomeIcon icon={faPlus} />\n            </Button>\n          </InputGroup.Append>\n        </InputGroup>\n      </Form.Group>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => {\n  return {\n    language: state.language,\n  };\n};\n\nexport default connect(mapStateToProps)(NumberInput);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport NumberInput from \"../common/NumberInput\";\n\nimport { setLengthDays } from \"../../actions/meetSetupActions\";\n\nimport { Validation } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\n\ninterface StateProps {\n  lengthDays: number;\n}\n\ninterface DispatchProps {\n  setLengthDays: (days: number) => any;\n}\n\ntype Props = StateProps & DispatchProps;\n\ninterface InternalState {\n  initialValue: number;\n}\n\nclass MeetLength extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    this.validate = this.validate.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      initialValue: this.props.lengthDays,\n    };\n  }\n\n  validate = (n: number): Validation => {\n    if (!Number.isInteger(n) || n <= 0 || n > 14) {\n      return \"error\";\n    }\n    return \"success\";\n  };\n\n  handleChange = (n: number): void => {\n    if (this.validate(n)) {\n      this.props.setLengthDays(n);\n    }\n  };\n\n  render() {\n    return (\n      <NumberInput\n        initialValue={this.state.initialValue}\n        step={1}\n        validate={this.validate}\n        onChange={this.handleChange}\n        label={<FormattedMessage id=\"meet-setup.length-days\" defaultMessage=\"Days of Lifting\" />}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  lengthDays: state.meet.lengthDays,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    setLengthDays: (days) => dispatch(setLengthDays(days)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MeetLength);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport { setPlatformsOnDays } from \"../../actions/meetSetupActions\";\n\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { Validation } from \"../../types/dataTypes\";\nimport { Dispatch } from \"redux\";\nimport NumberInput from \"../common/NumberInput\";\n\ninterface OwnProps {\n  day: number;\n}\n\ninterface StateProps {\n  platformsOnDays: ReadonlyArray<number>;\n}\n\ninterface DispatchProps {\n  setPlatformsOnDays: (day: number, count: number) => void;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\ninterface InternalState {\n  initialValue: number;\n}\n\nclass PlatformCount extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    this.validate = this.validate.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      initialValue: this.props.platformsOnDays[this.props.day - 1],\n    };\n  }\n\n  validate = (n: number): Validation => {\n    if (!Number.isInteger(n) || n <= 0 || n > 20) {\n      return \"error\";\n    }\n    return \"success\";\n  };\n\n  handleChange = (n: number): void => {\n    if (this.validate(n) === \"success\") {\n      this.props.setPlatformsOnDays(this.props.day, n);\n    }\n  };\n\n  render() {\n    return (\n      <NumberInput\n        initialValue={this.state.initialValue}\n        step={1}\n        validate={this.validate}\n        onChange={this.handleChange}\n        label={\n          <FormattedMessage\n            id=\"meet-setup.platforms-on-day\"\n            defaultMessage=\"Platforms on Day {number}\"\n            values={{\n              number: this.props.day,\n            }}\n          />\n        }\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  platformsOnDays: state.meet.platformsOnDays,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    setPlatformsOnDays: (day, count) => dispatch(setPlatformsOnDays(day, count)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlatformCount);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport PlatformCount from \"./PlatformCount\";\n\nimport { GlobalState } from \"../../types/stateTypes\";\n\ninterface StateProps {\n  lengthDays: number;\n}\n\ntype Props = StateProps;\n\nclass PlatformCounts extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n    this.createPlatformInputs = this.createPlatformInputs.bind(this);\n  }\n\n  createPlatformInputs = () => {\n    const inputs = [];\n    const lengthDays = this.props.lengthDays;\n    for (let i = 1; i <= lengthDays; ++i) {\n      inputs.push(<PlatformCount key={i} day={i} />);\n    }\n    return inputs;\n  };\n\n  render() {\n    return <div>{this.createPlatformInputs()}</div>;\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  lengthDays: state.meet.lengthDays,\n});\n\nexport default connect(mapStateToProps)(PlatformCounts);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Provides widgets that overwrite rules with federation defaults.\n\nimport React, { FormEvent } from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\n\nimport { getString } from \"../../logic/strings\";\n\nimport { updateMeet } from \"../../actions/meetSetupActions\";\n\nimport { GlobalState, MeetState } from \"../../types/stateTypes\";\nimport { Language } from \"../../types/dataTypes\";\nimport { checkExhausted, FormControlTypeHack } from \"../../types/utils\";\nimport { Dispatch } from \"redux\";\n\ninterface StateProps {\n  federation: string;\n  language: Language;\n}\n\ninterface DispatchProps {\n  updateMeet: (changes: Partial<MeetState>) => void;\n}\n\ninterface OwnProps {\n  // Used by the MeetSetup component to cause component updates.\n  onChange: () => void;\n}\n\ntype Props = StateProps & DispatchProps & OwnProps;\n\ntype AutoFillOption =\n  | \"Traditional\"\n  | \"BP\"\n  | \"GPC\"\n  | \"RPS\"\n  | \"SPF\"\n  | \"UPA\"\n  | \"USAPL\"\n  | \"USPA\"\n  | \"USPC\"\n  | \"WABDL\"\n  | \"WP\"\n  | \"WPC\"\n  | \"WPPO\"\n  | \"WRPF\";\n\ninterface InternalState {\n  selectedOption: AutoFillOption;\n}\n\nconst traditionalDefaults: Partial<MeetState> = {\n  divisions: [\n    \"Open\",\n    \"Youth\",\n    \"T13-15\",\n    \"T16-17\",\n    \"T18-19\",\n    \"J20-23\",\n    \"S35-39\",\n    \"M40-44\",\n    \"M45-49\",\n    \"M50-54\",\n    \"M55-59\",\n    \"M60-64\",\n    \"M65-69\",\n    \"M70-74\",\n    \"M75-79\",\n    \"M80+\",\n  ],\n  weightClassesKgMen: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  weightClassesKgWomen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90],\n  weightClassesKgMx: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  formula: \"Wilks\",\n  ageCoefficients: \"FosterMcCulloch\",\n  combineSleevesAndWraps: false,\n  combineSingleAndMulti: false,\n  allow4thAttempts: true,\n};\n\nconst bpDefaults: Partial<MeetState> = {\n  divisions: [\n    \"MR-O\",\n    \"MR-Sj\",\n    \"MR-Jr\",\n    \"MR-M1\",\n    \"MR-M2\",\n    \"MR-M3\",\n    \"MR-M4\",\n    \"MR-M5\",\n    \"MR-G\",\n    \"FR-O\",\n    \"FR-Sj\",\n    \"FR-Jr\",\n    \"FR-M1\",\n    \"FR-M2\",\n    \"FR-M3\",\n    \"FR-M4\",\n    \"FR-M5\",\n    \"FR-G\",\n    \"M-O\",\n    \"M-Sj\",\n    \"M-Jr\",\n    \"M-M1\",\n    \"M-M2\",\n    \"M-M3\",\n    \"M-M4\",\n    \"M-M5\",\n    \"M-G\",\n    \"F-O\",\n    \"F-Sj\",\n    \"F-Jr\",\n    \"F-M1\",\n    \"F-M2\",\n    \"F-M3\",\n    \"F-M4\",\n    \"F-M5\",\n    \"F-G\",\n  ],\n  weightClassesKgMen: [53, 59, 66, 74, 83, 93, 105, 120],\n  weightClassesKgWomen: [43, 47, 52, 57, 63, 69, 76, 84],\n  weightClassesKgMx: [53, 59, 66, 74, 83, 93, 105, 120],\n  formula: \"IPF GL Points\",\n  ageCoefficients: \"FosterMcCulloch\",\n  combineSleevesAndWraps: false,\n  combineSingleAndMulti: false,\n  allow4thAttempts: false,\n};\n\nconst gpcDefaults: Partial<MeetState> = {\n  divisions: [\n    \"F-JE\",\n    \"F-JR\",\n    \"F-M1E\",\n    \"F-M1R\",\n    \"F-M2E\",\n    \"F-M2R\",\n    \"F-M3E\",\n    \"F-M3R\",\n    \"F-M4E\",\n    \"F-M4R\",\n    \"F-M5E\",\n    \"F-M5R\",\n    \"F-M6E\",\n    \"F-M6R\",\n    \"F-M7E\",\n    \"F-M7R\",\n    \"F-M8E\",\n    \"F-M8R\",\n    \"F-M9E\",\n    \"F-M9R\",\n    \"F-OE\",\n    \"F-OR\",\n    \"F-SME\",\n    \"F-SMR\",\n    \"F-T1E\",\n    \"F-T1R\",\n    \"F-T2E\",\n    \"F-T2R\",\n    \"F-T3E\",\n    \"F-T3R\",\n    \"M-JE\",\n    \"M-JR\",\n    \"M-M1E\",\n    \"M-M1R\",\n    \"M-M2E\",\n    \"M-M2R\",\n    \"M-M3E\",\n    \"M-M3R\",\n    \"M-M4E\",\n    \"M-M4R\",\n    \"M-M5E\",\n    \"M-M5R\",\n    \"M-M6E\",\n    \"M-M6R\",\n    \"M-M7E\",\n    \"M-M7R\",\n    \"M-M8E\",\n    \"M-M8R\",\n    \"M-M9E\",\n    \"M-M9R\",\n    \"M-OE\",\n    \"M-OR\",\n    \"M-SME\",\n    \"M-SMR\",\n    \"M-T1E\",\n    \"M-T1R\",\n    \"M-T2E\",\n    \"M-T2R\",\n    \"M-T3E\",\n    \"M-T3R\",\n  ],\n  weightClassesKgMen: [56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  weightClassesKgWomen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90, 110],\n  weightClassesKgMx: [56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  formula: \"Glossbrenner\",\n  ageCoefficients: \"FosterMcCulloch\",\n  combineSleevesAndWraps: true,\n  combineSingleAndMulti: true,\n  allow4thAttempts: true,\n};\n\nconst rpsDefaults: Partial<MeetState> = {\n  divisions: [\n    // Raw Classic (Bare), Amateur.\n    \"RC-Y-A\",\n    \"RC-T14-A\",\n    \"RC-T16-A\",\n    \"RC-T18-A\",\n    \"RC-J20-A\",\n    \"RC-O-A\",\n    \"RC-S33-A\",\n    \"RC-M40-A\",\n    \"RC-M45-A\",\n    \"RC-M50-A\",\n    \"RC-M55-A\",\n    \"RC-M60-A\",\n    \"RC-M65-A\",\n    \"RC-M70-A\",\n    \"RC-M75-A\",\n    \"RC-M80-A\",\n    \"RC-M85-A\",\n    \"RC-M90-A\",\n    \"RC-M95-A\",\n    \"RC-M100-A\",\n    \"RC-PF-A\",\n    \"RC-MIL-A\",\n    \"RC-CF-A\",\n    \"RC-AA-A\",\n\n    // Raw Classic (Bare), Pro.\n    \"RC-Y-P\",\n    \"RC-T14-P\",\n    \"RC-T16-P\",\n    \"RC-T18-P\",\n    \"RC-J20-P\",\n    \"RC-O-P\",\n    \"RC-S33-P\",\n    \"RC-M40-P\",\n    \"RC-M45-P\",\n    \"RC-M50-P\",\n    \"RC-M55-P\",\n    \"RC-M60-P\",\n    \"RC-M65-P\",\n    \"RC-M70-P\",\n    \"RC-M75-P\",\n    \"RC-M80-P\",\n    \"RC-M85-P\",\n    \"RC-M90-P\",\n    \"RC-M95-P\",\n    \"RC-M100-P\",\n    \"RC-PF-P\",\n    \"RC-MIL-P\",\n    \"RC-CF-P\",\n    \"RC-AA-P\",\n\n    // Raw Classic (Bare), Elite.\n    \"RC-Y-E\",\n    \"RC-T14-E\",\n    \"RC-T16-E\",\n    \"RC-T18-E\",\n    \"RC-J20-E\",\n    \"RC-O-E\",\n    \"RC-S33-E\",\n    \"RC-M40-E\",\n    \"RC-M45-E\",\n    \"RC-M50-E\",\n    \"RC-M55-E\",\n    \"RC-M60-E\",\n    \"RC-M65-E\",\n    \"RC-M70-E\",\n    \"RC-M75-E\",\n    \"RC-M80-E\",\n    \"RC-M85-E\",\n    \"RC-M90-E\",\n    \"RC-M95-E\",\n    \"RC-M100-E\",\n    \"RC-PF-E\",\n    \"RC-MIL-E\",\n    \"RC-CF-E\",\n    \"RC-AA-E\",\n\n    // Raw Modern (Sleeves + Wraps), Amateur.\n    \"RM-Y-A\",\n    \"RM-T14-A\",\n    \"RM-T16-A\",\n    \"RM-T18-A\",\n    \"RM-J20-A\",\n    \"RM-O-A\",\n    \"RM-S33-A\",\n    \"RM-M40-A\",\n    \"RM-M45-A\",\n    \"RM-M50-A\",\n    \"RM-M55-A\",\n    \"RM-M60-A\",\n    \"RM-M65-A\",\n    \"RM-M70-A\",\n    \"RM-M75-A\",\n    \"RM-M80-A\",\n    \"RM-M85-A\",\n    \"RM-M90-A\",\n    \"RM-M95-A\",\n    \"RM-M100-A\",\n    \"RM-PF-A\",\n    \"RM-MIL-A\",\n    \"RM-CF-A\",\n    \"RM-AA-A\",\n\n    // Raw Modern (Sleeves + Wraps), Pro.\n    \"RM-Y-P\",\n    \"RM-T14-P\",\n    \"RM-T16-P\",\n    \"RM-T18-P\",\n    \"RM-J20-P\",\n    \"RM-O-P\",\n    \"RM-S33-P\",\n    \"RM-M40-P\",\n    \"RM-M45-P\",\n    \"RM-M50-P\",\n    \"RM-M55-P\",\n    \"RM-M60-P\",\n    \"RM-M65-P\",\n    \"RM-M70-P\",\n    \"RM-M75-P\",\n    \"RM-M80-P\",\n    \"RM-M85-P\",\n    \"RM-M90-P\",\n    \"RM-M95-P\",\n    \"RM-M100-P\",\n    \"RM-PF-P\",\n    \"RM-MIL-P\",\n    \"RM-CF-P\",\n    \"RM-AA-P\",\n\n    // Raw Modern (Sleeves + Wraps), Elite.\n    \"RM-Y-E\",\n    \"RM-T14-E\",\n    \"RM-T16-E\",\n    \"RM-T18-E\",\n    \"RM-J20-E\",\n    \"RM-O-E\",\n    \"RM-S33-E\",\n    \"RM-M40-E\",\n    \"RM-M45-E\",\n    \"RM-M50-E\",\n    \"RM-M55-E\",\n    \"RM-M60-E\",\n    \"RM-M65-E\",\n    \"RM-M70-E\",\n    \"RM-M75-E\",\n    \"RM-M80-E\",\n    \"RM-M85-E\",\n    \"RM-M90-E\",\n    \"RM-M95-E\",\n    \"RM-M100-E\",\n    \"RM-PF-E\",\n    \"RM-MIL-E\",\n    \"RM-CF-E\",\n    \"RM-AA-E\",\n\n    // Single-ply, Amateur.\n    \"SP-Y-A\",\n    \"SP-T14-A\",\n    \"SP-T16-A\",\n    \"SP-T18-A\",\n    \"SP-J20-A\",\n    \"SP-O-A\",\n    \"SP-S33-A\",\n    \"SP-M40-A\",\n    \"SP-M45-A\",\n    \"SP-M50-A\",\n    \"SP-M55-A\",\n    \"SP-M60-A\",\n    \"SP-M65-A\",\n    \"SP-M70-A\",\n    \"SP-M75-A\",\n    \"SP-M80-A\",\n    \"SP-M85-A\",\n    \"SP-M90-A\",\n    \"SP-M95-A\",\n    \"SP-M100-A\",\n    \"SP-PF-A\",\n    \"SP-MIL-A\",\n    \"SP-CF-A\",\n    \"SP-AA-A\",\n\n    // Single-ply, Pro.\n    \"SP-Y-P\",\n    \"SP-T14-P\",\n    \"SP-T16-P\",\n    \"SP-T18-P\",\n    \"SP-J20-P\",\n    \"SP-O-P\",\n    \"SP-S33-P\",\n    \"SP-M40-P\",\n    \"SP-M45-P\",\n    \"SP-M50-P\",\n    \"SP-M55-P\",\n    \"SP-M60-P\",\n    \"SP-M65-P\",\n    \"SP-M70-P\",\n    \"SP-M75-P\",\n    \"SP-M80-P\",\n    \"SP-M85-P\",\n    \"SP-M90-P\",\n    \"SP-M95-P\",\n    \"SP-M100-P\",\n    \"SP-PF-P\",\n    \"SP-MIL-P\",\n    \"SP-CF-P\",\n    \"SP-AA-P\",\n\n    // Single-ply, Elite.\n    \"SP-Y-E\",\n    \"SP-T14-E\",\n    \"SP-T16-E\",\n    \"SP-T18-E\",\n    \"SP-J20-E\",\n    \"SP-O-E\",\n    \"SP-S33-E\",\n    \"SP-M40-E\",\n    \"SP-M45-E\",\n    \"SP-M50-E\",\n    \"SP-M55-E\",\n    \"SP-M60-E\",\n    \"SP-M65-E\",\n    \"SP-M70-E\",\n    \"SP-M75-E\",\n    \"SP-M80-E\",\n    \"SP-M85-E\",\n    \"SP-M90-E\",\n    \"SP-M95-E\",\n    \"SP-M100-E\",\n    \"SP-PF-E\",\n    \"SP-MIL-E\",\n    \"SP-CF-E\",\n    \"SP-AA-E\",\n\n    // Multi-ply, Amateur.\n    \"MP-Y-A\",\n    \"MP-T14-A\",\n    \"MP-T16-A\",\n    \"MP-T18-A\",\n    \"MP-J20-A\",\n    \"MP-O-A\",\n    \"MP-S33-A\",\n    \"MP-M40-A\",\n    \"MP-M45-A\",\n    \"MP-M50-A\",\n    \"MP-M55-A\",\n    \"MP-M60-A\",\n    \"MP-M65-A\",\n    \"MP-M70-A\",\n    \"MP-M75-A\",\n    \"MP-M80-A\",\n    \"MP-M85-A\",\n    \"MP-M90-A\",\n    \"MP-M95-A\",\n    \"MP-M100-A\",\n    \"MP-PF-A\",\n    \"MP-MIL-A\",\n    \"MP-CF-A\",\n    \"MP-AA-A\",\n\n    // Multi-ply, Pro.\n    \"MP-Y-P\",\n    \"MP-T14-P\",\n    \"MP-T16-P\",\n    \"MP-T18-P\",\n    \"MP-J20-P\",\n    \"MP-O-P\",\n    \"MP-S33-P\",\n    \"MP-M40-P\",\n    \"MP-M45-P\",\n    \"MP-M50-P\",\n    \"MP-M55-P\",\n    \"MP-M60-P\",\n    \"MP-M65-P\",\n    \"MP-M70-P\",\n    \"MP-M75-P\",\n    \"MP-M80-P\",\n    \"MP-M85-P\",\n    \"MP-M90-P\",\n    \"MP-M95-P\",\n    \"MP-M100-P\",\n    \"MP-PF-P\",\n    \"MP-MIL-P\",\n    \"MP-CF-P\",\n    \"MP-AA-P\",\n\n    // Multi-ply, Elite.\n    \"MP-Y-E\",\n    \"MP-T14-E\",\n    \"MP-T16-E\",\n    \"MP-T18-E\",\n    \"MP-J20-E\",\n    \"MP-O-E\",\n    \"MP-S33-E\",\n    \"MP-M40-E\",\n    \"MP-M45-E\",\n    \"MP-M50-E\",\n    \"MP-M55-E\",\n    \"MP-M60-E\",\n    \"MP-M65-E\",\n    \"MP-M70-E\",\n    \"MP-M75-E\",\n    \"MP-M80-E\",\n    \"MP-M85-E\",\n    \"MP-M90-E\",\n    \"MP-M95-E\",\n    \"MP-M100-E\",\n    \"MP-PF-E\",\n    \"MP-MIL-E\",\n    \"MP-CF-E\",\n    \"MP-AA-E\",\n  ],\n  weightClassesKgMen: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 118, 125, 140],\n  weightClassesKgWomen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90, 100, 110],\n  weightClassesKgMx: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 118, 125, 140],\n  formula: \"Wilks\",\n  ageCoefficients: \"FosterMcCulloch\",\n  combineSleevesAndWraps: true,\n  combineSingleAndMulti: false,\n  allow4thAttempts: true,\n};\n\nconst spfDefaults: Partial<MeetState> = {\n  divisions: [\n    \"Open\",\n    \"Pre-Teen\",\n    \"T13-15\",\n    \"T16-17\",\n    \"T18-19\",\n    \"J20-23\",\n    \"S33-39\",\n    \"M40-44\",\n    \"M45-49\",\n    \"M50-54\",\n    \"M55-59\",\n    \"M60-64\",\n    \"M65-69\",\n    \"M70-74\",\n    \"M75-79\",\n    \"G80+\",\n    \"FPM\",\n    \"Crossfit\",\n  ],\n  weightClassesKgMen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 118, 125, 140],\n  weightClassesKgWomen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90, 100, 110],\n  weightClassesKgMx: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 118, 125, 140],\n  formula: \"Schwartz/Malone\",\n  ageCoefficients: \"FosterMcCulloch\",\n  combineSleevesAndWraps: false,\n  combineSingleAndMulti: false,\n  allow4thAttempts: true,\n};\n\nconst upaDefaults: Partial<MeetState> = {\n  divisions: [\n    \"FG\",\n    \"FG-AD\",\n    \"FGR\",\n    \"FGR-AD\",\n    \"FJ\",\n    \"FJ-AD\",\n    \"FJR\",\n    \"FJR-AD\",\n    \"FJRE\",\n    \"FJRE-AD\",\n    \"FM1\",\n    \"FM1-AD\",\n    \"FM1R\",\n    \"FM1R-AD\",\n    \"FM1RE\",\n    \"FM1RE-AD\",\n    \"FM2\",\n    \"FM2-AD\",\n    \"FM2R\",\n    \"FM2R-AD\",\n    \"FM2RE\",\n    \"FM2RE-AD\",\n    \"FM3\",\n    \"FM3-AD\",\n    \"FM3R\",\n    \"FM3R-AD\",\n    \"FM3RE\",\n    \"FM3RE-AD\",\n    \"FM4\",\n    \"FM4-AD\",\n    \"FM4R\",\n    \"FM4R-AD\",\n    \"FM4RE\",\n    \"FM4RE-AD\",\n    \"FM5\",\n    \"FM5-AD\",\n    \"FM5R\",\n    \"FM5R-AD\",\n    \"FM5RE\",\n    \"FM5RE-AD\",\n    \"FM6\",\n    \"FM6-AD\",\n    \"FM6R\",\n    \"FM6R-AD\",\n    \"FM6RE\",\n    \"FM6RE-AD\",\n    \"FM7\",\n    \"FM7-AD\",\n    \"FM7R\",\n    \"FM7R-AD\",\n    \"FM7RE\",\n    \"FM7RE-AD\",\n    \"FM8\",\n    \"FM8-AD\",\n    \"FM8R\",\n    \"FM8R-AD\",\n    \"FM8RE\",\n    \"FM8RE-AD\",\n    \"FM9\",\n    \"FM9-AD\",\n    \"FM9R\",\n    \"FM9R-AD\",\n    \"FM9RE\",\n    \"FM9RE-AD\",\n    \"FMX\",\n    \"FMX-AD\",\n    \"FMXR\",\n    \"FMXR-AD\",\n    \"FMXRE\",\n    \"FMXRE-AD\",\n    \"FO\",\n    \"FO-AD\",\n    \"FOR\",\n    \"FOR-AD\",\n    \"FORE\",\n    \"FORE-AD\",\n    \"FPFR\",\n    \"FPFR-AD\",\n    \"FS\",\n    \"FS-AD\",\n    \"FSR\",\n    \"FSR-AD\",\n    \"FSRE\",\n    \"FSRE-AD\",\n    \"FT1\",\n    \"FT1-AD\",\n    \"FT1R\",\n    \"FT1R-AD\",\n    \"FT1RE\",\n    \"FT1RE-AD\",\n    \"FT2\",\n    \"FT2-AD\",\n    \"FT2R\",\n    \"FT2R-AD\",\n    \"FT2RE\",\n    \"FT2RE-AD\",\n    \"FT3\",\n    \"FT3-AD\",\n    \"FT3R\",\n    \"FT3R-AD\",\n    \"FT3RE\",\n    \"FT3RE-AD\",\n    \"FTX\",\n    \"FTX-AD\",\n    \"FTXR\",\n    \"FTXR-AD\",\n    \"FTXRE\",\n    \"FTXRE-AD\",\n    \"MG\",\n    \"MG-AD\",\n    \"MGR\",\n    \"MGR-AD\",\n    \"MJ\",\n    \"MJ-AD\",\n    \"MJR\",\n    \"MJR-AD\",\n    \"MJRE\",\n    \"MJRE-AD\",\n    \"MM1\",\n    \"MM1-AD\",\n    \"MM1R\",\n    \"MM1R-AD\",\n    \"MM1RE\",\n    \"MM1RE-AD\",\n    \"MM2\",\n    \"MM2-AD\",\n    \"MM2R\",\n    \"MM2R-AD\",\n    \"MM2RE\",\n    \"MM2RE-AD\",\n    \"MM3\",\n    \"MM3-AD\",\n    \"MM3R\",\n    \"MM3R-AD\",\n    \"MM3RE\",\n    \"MM3RE-AD\",\n    \"MM4\",\n    \"MM4-AD\",\n    \"MM4R\",\n    \"MM4R-AD\",\n    \"MM4RE\",\n    \"MM4RE-AD\",\n    \"MM5\",\n    \"MM5-AD\",\n    \"MM5R\",\n    \"MM5R-AD\",\n    \"MM5RE\",\n    \"MM5RE-AD\",\n    \"MM6\",\n    \"MM6-AD\",\n    \"MM6R\",\n    \"MM6R-AD\",\n    \"MM6RE\",\n    \"MM6RE-AD\",\n    \"MM7\",\n    \"MM7-AD\",\n    \"MM7R\",\n    \"MM7R-AD\",\n    \"MM7RE\",\n    \"MM7RE-AD\",\n    \"MM8\",\n    \"MM8-AD\",\n    \"MM8R\",\n    \"MM8R-AD\",\n    \"MM8RE\",\n    \"MM8RE-AD\",\n    \"MM9\",\n    \"MM9-AD\",\n    \"MM9R\",\n    \"MM9R-AD\",\n    \"MM9RE\",\n    \"MM9RE-AD\",\n    \"MMX\",\n    \"MMX-AD\",\n    \"MMXR\",\n    \"MMXR-AD\",\n    \"MMXRE\",\n    \"MMXRE-AD\",\n    \"MO\",\n    \"MO-AD\",\n    \"MOR\",\n    \"MOR-AD\",\n    \"MORE\",\n    \"MORE-AD\",\n    \"MPFR\",\n    \"MPFR-AD\",\n    \"MS\",\n    \"MS-AD\",\n    \"MSR\",\n    \"MSR-AD\",\n    \"MSRE\",\n    \"MSRE-AD\",\n    \"MT1\",\n    \"MT1-AD\",\n    \"MT1R\",\n    \"MT1R-AD\",\n    \"MT1RE\",\n    \"MT1RE-AD\",\n    \"MT2\",\n    \"MT2-AD\",\n    \"MT2R\",\n    \"MT2R-AD\",\n    \"MT2RE\",\n    \"MT2RE-AD\",\n    \"MT3\",\n    \"MT3-AD\",\n    \"MT3R\",\n    \"MT3R-AD\",\n    \"MT3RE\",\n    \"MT3RE-AD\",\n    \"MTX\",\n    \"MTX-AD\",\n    \"MTXR\",\n    \"MTXR-AD\",\n    \"MTXRE\",\n    \"MTXRE-AD\",\n  ],\n  weightClassesKgMen: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  weightClassesKgWomen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90],\n  weightClassesKgMx: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  formula: \"Schwartz/Malone\",\n  ageCoefficients: \"FosterMcCulloch\",\n  combineSleevesAndWraps: true,\n  combineSingleAndMulti: true,\n  allow4thAttempts: true,\n};\n\nconst usaplDefaults: Partial<MeetState> = {\n  divisions: [\n    \"MR-O\",\n    \"MR-Y\",\n    \"MR-Y1\",\n    \"MR-Y2\",\n    \"MR-Y3\",\n    \"MR-T1\",\n    \"MR-T2\",\n    \"MR-T3\",\n    \"MR-Jr\",\n    \"MR-M1a\",\n    \"MR-M1b\",\n    \"MR-M2a\",\n    \"MR-M2b\",\n    \"MR-M3a\",\n    \"MR-M3b\",\n    \"MR-M4a\",\n    \"MR-M4b\",\n    \"MR-M5a\",\n    \"MR-M5b\",\n    \"MR-M6a\",\n    \"MR-M6b\",\n    \"MR-G\",\n    \"M-O\",\n    \"M-Y\",\n    \"M-Y1\",\n    \"M-Y2\",\n    \"M-Y3\",\n    \"M-T1\",\n    \"M-T2\",\n    \"M-T3\",\n    \"M-Jr\",\n    \"M-M1a\",\n    \"M-M1b\",\n    \"M-M2a\",\n    \"M-M2b\",\n    \"M-M3a\",\n    \"M-M3b\",\n    \"M-M4a\",\n    \"M-M4b\",\n    \"M-M5a\",\n    \"M-M5b\",\n    \"M-M6a\",\n    \"M-M6b\",\n    \"M-G\",\n    \"FR-O\",\n    \"FR-Y\",\n    \"FR-Y1\",\n    \"FR-Y2\",\n    \"FR-Y3\",\n    \"FR-T1\",\n    \"FR-T2\",\n    \"FR-T3\",\n    \"FR-Jr\",\n    \"FR-M1a\",\n    \"FR-M1b\",\n    \"FR-M2a\",\n    \"FR-M2b\",\n    \"FR-M3a\",\n    \"FR-M3b\",\n    \"FR-M4a\",\n    \"FR-M4b\",\n    \"FR-M5a\",\n    \"FR-M5b\",\n    \"FR-M6a\",\n    \"FR-M6b\",\n    \"FR-G\",\n    \"F-O\",\n    \"F-Y\",\n    \"F-Y1\",\n    \"F-Y2\",\n    \"F-Y3\",\n    \"F-T1\",\n    \"F-T2\",\n    \"F-T3\",\n    \"F-Jr\",\n    \"F-M1a\",\n    \"F-M1b\",\n    \"F-M2a\",\n    \"F-M2b\",\n    \"F-M3a\",\n    \"F-M3b\",\n    \"F-M4a\",\n    \"F-M4b\",\n    \"F-M5a\",\n    \"F-M5b\",\n    \"F-M6a\",\n    \"F-M6b\",\n    \"F-G\",\n  ],\n  weightClassesKgMen: [53, 59, 66, 74, 83, 93, 105, 120],\n  weightClassesKgWomen: [43, 47, 52, 57, 63, 69, 76, 84],\n  weightClassesKgMx: [53, 59, 66, 74, 83, 93, 105, 120],\n  formula: \"IPF GL Points\",\n  ageCoefficients: \"FosterMcCulloch\",\n  combineSleevesAndWraps: false,\n  combineSingleAndMulti: false,\n  allow4thAttempts: false,\n};\n\nconst uspaDefaults: Partial<MeetState> = {\n  divisions: [\n    \"Open\",\n    \"Y4-12\",\n    \"J13-15\",\n    \"J16-17\",\n    \"J18-19\",\n    \"J20-23\",\n    \"S35-39\",\n    \"M40-44\",\n    \"M45-49\",\n    \"M50-54\",\n    \"M55-59\",\n    \"M60-64\",\n    \"M65-69\",\n    \"M70-74\",\n    \"M75-79\",\n    \"M80+\",\n  ],\n  weightClassesKgMen: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  weightClassesKgWomen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90],\n  weightClassesKgMx: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  formula: \"Dots\",\n  ageCoefficients: \"FosterMcCulloch\",\n  combineSleevesAndWraps: false,\n  combineSingleAndMulti: false,\n  allow4thAttempts: true,\n};\n\nconst uspcDefaults: Partial<MeetState> = {\n  divisions: [\n    \"Open\",\n    \"J10-12\",\n    \"J13-15\",\n    \"J16-17\",\n    \"J18-19\",\n    \"J20-23\",\n    \"S35-39\",\n    \"M40-44\",\n    \"M45-49\",\n    \"M50-54\",\n    \"M55-59\",\n    \"M60-64\",\n    \"M65-69\",\n    \"M70-74\",\n    \"M75-79\",\n    \"M80+\",\n  ],\n  weightClassesKgMen: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  weightClassesKgWomen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90, 100, 110],\n  weightClassesKgMx: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  formula: \"Wilks2020\",\n  ageCoefficients: \"FosterMcCulloch\",\n  combineSleevesAndWraps: false,\n  combineSingleAndMulti: false,\n  allow4thAttempts: true,\n};\n\nconst wabdlDefaults: Partial<MeetState> = {\n  divisions: [\n    \"Open\",\n    \"T12-13\",\n    \"T14-15\",\n    \"T16-17\",\n    \"T18-19\",\n    \"J20-25\",\n    \"S33-39\",\n    \"M40-46\",\n    \"M47-53\",\n    \"M54-60\",\n    \"M61-67\",\n    \"M68-74\",\n    \"M75-79\",\n    \"M80-84\",\n    \"M85-89\",\n    \"M90+\",\n  ],\n  weightClassesKgMen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 117.5, 125, 140],\n  weightClassesKgWomen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90, 100],\n  weightClassesKgMx: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 117.5, 125, 140],\n  formula: \"Schwartz/Malone\",\n  ageCoefficients: \"FosterMcCulloch\",\n  combineSleevesAndWraps: false,\n  combineSingleAndMulti: false,\n  allow4thAttempts: true,\n};\n\nconst wpDefaults: Partial<MeetState> = {\n  divisions: [\n    \"Open\",\n    \"Y14-17\",\n    \"J18-23\",\n    \"S33-39\",\n    \"M40-46\",\n    \"M47-53\",\n    \"M54-60\",\n    \"M61-67\",\n    \"M68-74\",\n    \"M75-79\",\n    \"M80-84\",\n    \"M85-89\",\n    \"M90+\",\n  ],\n  weightClassesKgMen: [62, 69, 77, 85, 94, 105, 120],\n  weightClassesKgWomen: [48, 53, 58, 64, 72, 84, 100],\n  weightClassesKgMx: [62, 69, 77, 85, 94, 105, 120],\n  formula: \"Wilks2020\",\n  ageCoefficients: \"FosterMcCulloch\",\n  combineSleevesAndWraps: false,\n  combineSingleAndMulti: false,\n  allow4thAttempts: false,\n};\n\nconst wpcDefaults: Partial<MeetState> = {\n  divisions: [\n    \"F_GCR\",\n    \"F_GCR_A\",\n    \"F_GEM\",\n    \"F_GEM_A\",\n    \"F_GES\",\n    \"F_GES_A\",\n    \"F_GR\",\n    \"F_GR_A\",\n    \"F_JCR\",\n    \"F_JCR_A\",\n    \"F_JEM\",\n    \"F_JEM_A\",\n    \"F_JES\",\n    \"F_JES_A\",\n    \"F_JR\",\n    \"F_JR_A\",\n    \"F_MCR_1\",\n    \"F_MCR_1_A\",\n    \"F_MCR_2\",\n    \"F_MCR_2_A\",\n    \"F_MCR_3\",\n    \"F_MCR_3_A\",\n    \"F_MCR_4\",\n    \"F_MCR_4_A\",\n    \"F_MCR_5\",\n    \"F_MCR_5_A\",\n    \"F_MCR_6\",\n    \"F_MCR_6_A\",\n    \"F_MCR_7\",\n    \"F_MCR_7_A\",\n    \"F_MCR_8\",\n    \"F_MCR_8_A\",\n    \"F_MCR_9\",\n    \"F_MCR_9_A\",\n    \"F_MCR_X\",\n    \"F_MCR_X_A\",\n    \"F_MEM_1\",\n    \"F_MEM_1_A\",\n    \"F_MEM_2\",\n    \"F_MEM_2_A\",\n    \"F_MEM_3\",\n    \"F_MEM_3_A\",\n    \"F_MEM_4\",\n    \"F_MEM_4_A\",\n    \"F_MEM_5\",\n    \"F_MEM_5_A\",\n    \"F_MEM_6\",\n    \"F_MEM_6_A\",\n    \"F_MEM_7\",\n    \"F_MEM_7_A\",\n    \"F_MEM_8\",\n    \"F_MEM_8_A\",\n    \"F_MEM_9\",\n    \"F_MEM_9_A\",\n    \"F_MEM_X\",\n    \"F_MEM_X_A\",\n    \"F_MES_1\",\n    \"F_MES_1_A\",\n    \"F_MES_2\",\n    \"F_MES_2_A\",\n    \"F_MES_3\",\n    \"F_MES_3_A\",\n    \"F_MES_4\",\n    \"F_MES_4_A\",\n    \"F_MES_5\",\n    \"F_MES_5_A\",\n    \"F_MES_6\",\n    \"F_MES_6_A\",\n    \"F_MES_7\",\n    \"F_MES_7_A\",\n    \"F_MES_8\",\n    \"F_MES_8_A\",\n    \"F_MES_9\",\n    \"F_MES_9_A\",\n    \"F_MES_X\",\n    \"F_MES_X_A\",\n    \"F_MR_1\",\n    \"F_MR_1_A\",\n    \"F_MR_2\",\n    \"F_MR_2_A\",\n    \"F_MR_3\",\n    \"F_MR_3_A\",\n    \"F_MR_4\",\n    \"F_MR_4_A\",\n    \"F_MR_5\",\n    \"F_MR_5_A\",\n    \"F_MR_6\",\n    \"F_MR_6_A\",\n    \"F_MR_7\",\n    \"F_MR_7_A\",\n    \"F_MR_8\",\n    \"F_MR_8_A\",\n    \"F_MR_9\",\n    \"F_MR_9_A\",\n    \"F_MR_X\",\n    \"F_MR_X_A\",\n    \"F_NEM\",\n    \"F_NR\",\n    \"F_OCR\",\n    \"F_OCR_A\",\n    \"F_OEM\",\n    \"F_OEM_A\",\n    \"F_OES\",\n    \"F_OES_A\",\n    \"F_OR\",\n    \"F_OR_A\",\n    \"F_SCR\",\n    \"F_SCR_A\",\n    \"F_SEM\",\n    \"F_SEM_A\",\n    \"F_SES\",\n    \"F_SES_A\",\n    \"F_SOR\",\n    \"F_SOR_A\",\n    \"F_SR\",\n    \"F_SR_A\",\n    \"F_TCR_1\",\n    \"F_TCR_1_A\",\n    \"F_TCR_2\",\n    \"F_TCR_2_A\",\n    \"F_TCR_3\",\n    \"F_TCR_3_A\",\n    \"F_TCR_X\",\n    \"F_TCR_X_A\",\n    \"F_TEM_1\",\n    \"F_TEM_1_A\",\n    \"F_TEM_2\",\n    \"F_TEM_2_A\",\n    \"F_TEM_3\",\n    \"F_TEM_3_A\",\n    \"F_TEM_X\",\n    \"F_TEM_X_A\",\n    \"F_TES_1\",\n    \"F_TES_1_A\",\n    \"F_TES_2\",\n    \"F_TES_2_A\",\n    \"F_TES_3\",\n    \"F_TES_3_A\",\n    \"F_TES_X\",\n    \"F_TES_X_A\",\n    \"F_TR_1\",\n    \"F_TR_1_A\",\n    \"F_TR_2\",\n    \"F_TR_2_A\",\n    \"F_TR_3\",\n    \"F_TR_3_A\",\n    \"F_TR_X\",\n    \"F_TR_X_A\",\n    \"F_YCR\",\n    \"F_YCR_A\",\n    \"F_YEM\",\n    \"F_YEM_A\",\n    \"F_YES\",\n    \"F_YES_A\",\n    \"F_YR\",\n    \"F_YR_A\",\n    \"M_GCR\",\n    \"M_GCR_A\",\n    \"M_GEM\",\n    \"M_GEM_A\",\n    \"M_GES\",\n    \"M_GES_A\",\n    \"M_GR\",\n    \"M_GR_A\",\n    \"M_JCR\",\n    \"M_JCR_A\",\n    \"M_JEM\",\n    \"M_JEM_A\",\n    \"M_JES\",\n    \"M_JES_A\",\n    \"M_JR\",\n    \"M_JR_A\",\n    \"M_MCR_1\",\n    \"M_MCR_1_A\",\n    \"M_MCR_2\",\n    \"M_MCR_2_A\",\n    \"M_MCR_3\",\n    \"M_MCR_3_A\",\n    \"M_MCR_4\",\n    \"M_MCR_4_A\",\n    \"M_MCR_5\",\n    \"M_MCR_5_A\",\n    \"M_MCR_6\",\n    \"M_MCR_6_A\",\n    \"M_MCR_7\",\n    \"M_MCR_7_A\",\n    \"M_MCR_8\",\n    \"M_MCR_8_A\",\n    \"M_MCR_9\",\n    \"M_MCR_9_A\",\n    \"M_MCR_X\",\n    \"M_MCR_X_A\",\n    \"M_MEM_1\",\n    \"M_MEM_1_A\",\n    \"M_MEM_2\",\n    \"M_MEM_2_A\",\n    \"M_MEM_3\",\n    \"M_MEM_3_A\",\n    \"M_MEM_4\",\n    \"M_MEM_4_A\",\n    \"M_MEM_5\",\n    \"M_MEM_5_A\",\n    \"M_MEM_6\",\n    \"M_MEM_6_A\",\n    \"M_MEM_7\",\n    \"M_MEM_7_A\",\n    \"M_MEM_8\",\n    \"M_MEM_8_A\",\n    \"M_MEM_9\",\n    \"M_MEM_9_A\",\n    \"M_MEM_X\",\n    \"M_MEM_X_A\",\n    \"M_MES_1\",\n    \"M_MES_1_A\",\n    \"M_MES_2\",\n    \"M_MES_2_A\",\n    \"M_MES_3\",\n    \"M_MES_3_A\",\n    \"M_MES_4\",\n    \"M_MES_4_A\",\n    \"M_MES_5\",\n    \"M_MES_5_A\",\n    \"M_MES_6\",\n    \"M_MES_6_A\",\n    \"M_MES_7\",\n    \"M_MES_7_A\",\n    \"M_MES_8\",\n    \"M_MES_8_A\",\n    \"M_MES_9\",\n    \"M_MES_9_A\",\n    \"M_MES_X\",\n    \"M_MES_X_A\",\n    \"M_MR_1\",\n    \"M_MR_1_A\",\n    \"M_MR_2\",\n    \"M_MR_2_A\",\n    \"M_MR_3\",\n    \"M_MR_3_A\",\n    \"M_MR_4\",\n    \"M_MR_4_A\",\n    \"M_MR_5\",\n    \"M_MR_5_A\",\n    \"M_MR_6\",\n    \"M_MR_6_A\",\n    \"M_MR_7\",\n    \"M_MR_7_A\",\n    \"M_MR_8\",\n    \"M_MR_8_A\",\n    \"M_MR_9\",\n    \"M_MR_9_A\",\n    \"M_MR_X\",\n    \"M_MR_X_A\",\n    \"M_NEM\",\n    \"M_NEM_A\",\n    \"M_NR\",\n    \"M_NR_A\",\n    \"M_OCR\",\n    \"M_OCR_A\",\n    \"M_OEM\",\n    \"M_OEM_A\",\n    \"M_OES\",\n    \"M_OES_A\",\n    \"M_OR\",\n    \"M_OR_A\",\n    \"M_PFEM\",\n    \"M_PFEM_A\",\n    \"M_PFR_A\",\n    \"M_SCR\",\n    \"M_SCR_A\",\n    \"M_SEM\",\n    \"M_SEM_A\",\n    \"M_SES\",\n    \"M_SES_A\",\n    \"M_SOEM\",\n    \"M_SOEM_A\",\n    \"M_SOR\",\n    \"M_SOR_A\",\n    \"M_SR\",\n    \"M_SR_A\",\n    \"M_TCR_1\",\n    \"M_TCR_1_A\",\n    \"M_TCR_2\",\n    \"M_TCR_2_A\",\n    \"M_TCR_3\",\n    \"M_TCR_3_A\",\n    \"M_TCR_X\",\n    \"M_TCR_X_A\",\n    \"M_TEM_1\",\n    \"M_TEM_1_A\",\n    \"M_TEM_2\",\n    \"M_TEM_2_A\",\n    \"M_TEM_3\",\n    \"M_TEM_3_A\",\n    \"M_TEM_X\",\n    \"M_TEM_X_A\",\n    \"M_TES_1\",\n    \"M_TES_1_A\",\n    \"M_TES_2\",\n    \"M_TES_2_A\",\n    \"M_TES_3\",\n    \"M_TES_3_A\",\n    \"M_TES_X\",\n    \"M_TES_X_A\",\n    \"M_TR_1\",\n    \"M_TR_1_A\",\n    \"M_TR_2\",\n    \"M_TR_2_A\",\n    \"M_TR_3\",\n    \"M_TR_3_A\",\n    \"M_TR_X\",\n    \"M_TR_X_A\",\n    \"M_YCR\",\n    \"M_YCR_A\",\n    \"M_YEM\",\n    \"M_YEM_A\",\n    \"M_YR\",\n    \"M_YR_A\",\n  ],\n  weightClassesKgMen: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  weightClassesKgWomen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90],\n  weightClassesKgMx: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  formula: \"Glossbrenner\",\n  ageCoefficients: \"FosterMcCulloch\",\n  combineSleevesAndWraps: true,\n  combineSingleAndMulti: true,\n  allow4thAttempts: true,\n};\n\nconst wppoDefaults: Partial<MeetState> = {\n  divisions: [\"Open\", \"J15-20\"],\n  weightClassesKgMen: [49, 54, 59, 65, 72, 80, 88, 97, 107],\n  weightClassesKgWomen: [41, 45, 50, 55, 61, 67, 73, 79, 86],\n  weightClassesKgMx: [49, 54, 59, 65, 72, 80, 88, 97, 107],\n  formula: \"AH\",\n  ageCoefficients: \"None\",\n  combineSleevesAndWraps: false,\n  combineSingleAndMulti: false,\n  allow4thAttempts: true,\n\n  showAlternateUnits: false,\n};\n\nconst wrpfDefaults: Partial<MeetState> = {\n  divisions: [\n    \"J8-9\",\n    \"J10-11\",\n    \"J12-13\",\n    \"J14-16\",\n    \"J17-19\",\n    \"J20-23\",\n    \"Open\",\n    \"S35-39\",\n    \"M40-44\",\n    \"M45-49\",\n    \"M50-54\",\n    \"M55-59\",\n    \"M60-64\",\n    \"M65-69\",\n    \"M70-74\",\n    \"M75-79\",\n    \"M80+\",\n  ],\n  weightClassesKgMen: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  weightClassesKgWomen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90],\n  weightClassesKgMx: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  formula: \"Wilks\",\n  ageCoefficients: \"FosterMcCulloch\",\n  combineSleevesAndWraps: false,\n  combineSingleAndMulti: false,\n  allow4thAttempts: true,\n};\n\nclass AutoFillRules extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n    this.state = {\n      selectedOption: \"Traditional\",\n    };\n  }\n\n  handleSelectChange = (event: FormEvent<FormControlTypeHack>) => {\n    const value = event.currentTarget.value as AutoFillOption;\n    // Only handle any valid values & assist the compiler in giving us a compile error if AutoFillOption has more values added\n    switch (value) {\n      case \"Traditional\":\n      case \"BP\":\n      case \"GPC\":\n      case \"RPS\":\n      case \"SPF\":\n      case \"UPA\":\n      case \"USPA\":\n      case \"USPC\":\n      case \"USAPL\":\n      case \"WABDL\":\n      case \"WP\":\n      case \"WPC\":\n      case \"WPPO\":\n      case \"WRPF\":\n        this.setState({ selectedOption: value });\n        break;\n\n      default:\n        checkExhausted(value);\n        throw new Error(`Expected a value that corresponds to an AutoFillOption, instead got \"${value}\"`);\n    }\n  };\n\n  handleClick = () => {\n    switch (this.state.selectedOption) {\n      case \"Traditional\":\n        this.props.updateMeet(traditionalDefaults);\n        this.props.onChange();\n        return;\n      case \"BP\":\n        this.props.updateMeet(bpDefaults);\n        this.props.onChange();\n        return;\n      case \"GPC\":\n        this.props.updateMeet(gpcDefaults);\n        this.props.onChange();\n        return;\n      case \"RPS\":\n        this.props.updateMeet(rpsDefaults);\n        this.props.onChange();\n        return;\n      case \"SPF\":\n        this.props.updateMeet(spfDefaults);\n        this.props.onChange();\n        return;\n      case \"UPA\":\n        this.props.updateMeet(upaDefaults);\n        this.props.onChange();\n        return;\n      case \"USAPL\":\n        this.props.updateMeet(usaplDefaults);\n        this.props.onChange();\n        return;\n      case \"USPA\":\n        this.props.updateMeet(uspaDefaults);\n        this.props.onChange();\n        return;\n      case \"USPC\":\n        this.props.updateMeet(uspcDefaults);\n        this.props.onChange();\n        return;\n      case \"WABDL\":\n        this.props.updateMeet(wabdlDefaults);\n        this.props.onChange();\n        return;\n      case \"WP\":\n        this.props.updateMeet(wpDefaults);\n        this.props.onChange();\n        return;\n      case \"WPC\":\n        this.props.updateMeet(wpcDefaults);\n        this.props.onChange();\n        return;\n      case \"WPPO\":\n        this.props.updateMeet(wppoDefaults);\n        this.props.onChange();\n        return;\n      case \"WRPF\":\n        this.props.updateMeet(wrpfDefaults);\n        this.props.onChange();\n        return;\n      default:\n        checkExhausted(this.state.selectedOption);\n        return;\n    }\n  };\n\n  render() {\n    const lang = this.props.language;\n\n    const stringTraditional = getString(\"meet-setup.rules-traditional\", lang);\n    const stringBP = getString(\"meet-setup.rules-bp\", lang);\n    const stringGPC = getString(\"meet-setup.rules-gpc\", lang);\n    const stringRPS = getString(\"meet-setup.rules-rps\", lang);\n    const stringSPF = getString(\"meet-setup.rules-spf\", lang);\n    const stringUPA = getString(\"meet-setup.rules-upa\", lang);\n    const stringUSAPL = getString(\"meet-setup.rules-usapl\", lang);\n    const stringUSPA = getString(\"meet-setup.rules-uspa\", lang);\n    const stringUSPC = getString(\"meet-setup.rules-uspc\", lang);\n    const stringWABDL = getString(\"meet-setup.rules-wabdl\", lang);\n    const stringWP = getString(\"meet-setup.rules-wp\", lang);\n    const stringWPC = getString(\"meet-setup.rules-wpc\", lang);\n    const stringWPPO = getString(\"meet-setup.rules-wppo\", lang);\n    const stringWRPF = getString(\"meet-setup.rules-wrpf\", lang);\n\n    return (\n      <div>\n        <FormGroup>\n          <Form.Label>\n            <FormattedMessage id=\"meet-setup.label-auto-fill-rules\" defaultMessage=\"Auto-Fill Rules\" />\n          </Form.Label>\n          <div>\n            <FormControl\n              as=\"select\"\n              onChange={this.handleSelectChange}\n              value={this.state.selectedOption}\n              style={{ width: \"70%\", display: \"inline-block\" }}\n              className=\"custom-select\"\n            >\n              <option key=\"Traditional\" value=\"Traditional\">\n                {stringTraditional}\n              </option>\n              <option key=\"BP\" value=\"BP\">\n                {stringBP}\n              </option>\n              <option key=\"GPC\" value=\"GPC\">\n                {stringGPC}\n              </option>\n              <option key=\"RPS\" value=\"RPS\">\n                {stringRPS}\n              </option>\n              <option key=\"SPF\" value=\"SPF\">\n                {stringSPF}\n              </option>\n              <option key=\"UPA\" value=\"UPA\">\n                {stringUPA}\n              </option>\n              <option key=\"USAPL\" value=\"USAPL\">\n                {stringUSAPL}\n              </option>\n              <option key=\"USPA\" value=\"USPA\">\n                {stringUSPA}\n              </option>\n              <option key=\"USPC\" value=\"USPC\">\n                {stringUSPC}\n              </option>\n              <option key=\"WABDL\" value=\"WABDL\">\n                {stringWABDL}\n              </option>\n              <option key=\"WP\" value=\"WP\">\n                {stringWP}\n              </option>\n              <option key=\"WPC\" value=\"WPC\">\n                {stringWPC}\n              </option>\n              <option key=\"WPPO\" value=\"WPPO\">\n                {stringWPPO}\n              </option>\n              <option key=\"WRPF\" value=\"WRPF\">\n                {stringWRPF}\n              </option>\n            </FormControl>\n\n            <Button onClick={this.handleClick} variant=\"primary\" style={{ width: \"25%\", marginLeft: \"5%\" }}>\n              <FormattedMessage id=\"meet-setup.button-autofill\" defaultMessage=\"Auto-Fill\" />\n            </Button>\n          </div>\n        </FormGroup>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  federation: state.meet.federation,\n  language: state.language,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    updateMeet: (changes) => dispatch(updateMeet(changes)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AutoFillRules);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Form from \"react-bootstrap/Form\";\n\nimport CreatableSelect from \"react-select/creatable\";\n\nimport { getString } from \"../../logic/strings\";\n\nimport { setDivisions } from \"../../actions/meetSetupActions\";\n\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { Language } from \"../../types/dataTypes\";\nimport { Dispatch } from \"redux\";\nimport { ValueType } from \"react-select\";\n\nconst components = {\n  DropdownIndicator: null,\n};\n\ninterface OptionType {\n  label: string;\n  value: string;\n}\n\nconst createOption = (label: string): OptionType => ({\n  label,\n  value: label,\n});\n\ninterface StateProps {\n  divisions: ReadonlyArray<string>;\n  language: Language;\n}\n\ninterface DispatchProps {\n  setDivisions: (divisions: ReadonlyArray<string>) => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\ninterface InternalState {\n  inputValue: string;\n  value: Array<OptionType>;\n}\n\nclass DivisionSelect extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    const objarray = [];\n    for (let i = 0; i < props.divisions.length; i++) {\n      const division = props.divisions[i];\n      objarray.push({ value: division, label: division });\n    }\n\n    this.state = {\n      inputValue: \"\",\n      value: objarray,\n    };\n\n    this.maybeUpdateRedux = this.maybeUpdateRedux.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  // Updates the Redux store if a division was added or removed.\n  // Since updates are synchronous, we can simply check length.\n  maybeUpdateRedux = (objarray: Array<OptionType>): void => {\n    // objarray is a list of {value: \"foo\", label: \"foo\"} objects.\n    if (objarray.length === this.props.divisions.length) {\n      return;\n    }\n\n    // The divisions changed: save to Redux.\n    const divisions = [];\n    for (let i = 0; i < objarray.length; i++) {\n      divisions.push(objarray[i].label);\n    }\n    this.props.setDivisions(divisions);\n  };\n\n  // Handles the case of deleting an existing division.\n  handleChange = (value: ValueType<OptionType> | null): void => {\n    if (value instanceof Array) {\n      this.setState({ value: value });\n      this.maybeUpdateRedux(value);\n    } else if (value === null) {\n      this.setState({ value: [] });\n      this.maybeUpdateRedux([]);\n    }\n  };\n\n  // Reflects the current typing status in the state.\n  handleInputChange = (inputValue: string): void => {\n    this.setState({ inputValue: inputValue });\n  };\n\n  // Handles the case of creating a new division.\n  handleKeyDown = (event: React.KeyboardEvent<HTMLElement>): void => {\n    const { inputValue, value } = this.state;\n    if (!inputValue) return;\n    if (event.key === \"Enter\" || event.key === \"Tab\") {\n      // Disallow creating redundant divisions.\n      for (let i = 0; i < value.length; i++) {\n        if (value[i].label === inputValue) {\n          // Silently drop the redundant division.\n          this.setState({ inputValue: \"\" });\n          event.preventDefault();\n          return;\n        }\n      }\n\n      const newValue = [...value, createOption(inputValue)];\n      this.setState({\n        inputValue: \"\",\n        value: newValue,\n      });\n      this.maybeUpdateRedux(newValue);\n      event.preventDefault();\n    }\n  };\n\n  render() {\n    const { inputValue, value } = this.state;\n    const placeholder = getString(\"meet-setup.divisions-placeholder\", this.props.language);\n    return (\n      <Form.Group>\n        <Form.Label>\n          <FormattedMessage id=\"meet-setup.divisions-label\" defaultMessage=\"Divisions (prefer short codes!)\" />\n        </Form.Label>\n        <CreatableSelect\n          components={components}\n          inputValue={inputValue}\n          isMulti\n          menuIsOpen={false}\n          onChange={this.handleChange}\n          onInputChange={this.handleInputChange}\n          onKeyDown={this.handleKeyDown}\n          placeholder={placeholder}\n          value={value}\n        />\n      </Form.Group>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  divisions: state.meet.divisions,\n  language: state.language,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    setDivisions: (divisions) => dispatch(setDivisions(divisions)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DivisionSelect);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Form from \"react-bootstrap/Form\";\n\nimport CreatableSelect from \"react-select/creatable\";\n\nimport { getString } from \"../../logic/strings\";\nimport { string2number, displayWeight } from \"../../logic/units\";\n\nimport { setWeightClasses } from \"../../actions/meetSetupActions\";\n\nimport { Language, Sex } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { checkExhausted } from \"../../types/utils\";\nimport { Dispatch } from \"redux\";\nimport { ValueType } from \"react-select\";\n\nconst components = {\n  DropdownIndicator: null,\n};\n\ntype OptionType = {\n  label: string;\n  value: string;\n};\n\nconst createOption = (label: string): OptionType => ({\n  label,\n  value: label.replace(\",\", \".\"),\n});\n\ninterface OwnProps {\n  label: string;\n  sex: Sex;\n}\n\ninterface StateProps {\n  classes: ReadonlyArray<number>;\n  language: Language;\n}\n\ninterface DispatchProps {\n  setWeightClasses: (sex: Sex, classesKg: ReadonlyArray<number>) => void;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\ninterface InternalState {\n  inputValue: string;\n  value: Array<OptionType>;\n}\n\nclass WeightClassesSelect extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    const objarray: Array<OptionType> = [];\n    for (let i = 0; i < props.classes.length; i++) {\n      const c = displayWeight(props.classes[i], props.language);\n      objarray.push(createOption(c));\n    }\n\n    this.state = {\n      inputValue: \"\",\n      value: objarray,\n    };\n\n    this.maybeUpdateRedux = this.maybeUpdateRedux.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  // Updates the Redux store if a weightclass was added or removed.\n  // Since updates are synchronous, we can simply check length.\n  maybeUpdateRedux = (objarray: Array<OptionType>): void => {\n    if (objarray.length === this.props.classes.length) {\n      return;\n    }\n\n    // The classes changed: save to Redux.\n    const classes = [];\n    for (let i = 0; i < objarray.length; i++) {\n      classes.push(Number(objarray[i].value));\n    }\n    this.props.setWeightClasses(this.props.sex, classes);\n  };\n\n  handleChange = (value: ValueType<OptionType> | null): void => {\n    if (value instanceof Array) {\n      this.setState({ value: value });\n      this.maybeUpdateRedux(value);\n    } else if (value === null) {\n      this.setState({ value: [] });\n      this.maybeUpdateRedux([]);\n    }\n  };\n\n  // Reflects the current typing status in the state.\n  handleInputChange = (inputValue: string): void => {\n    this.setState({ inputValue: inputValue });\n  };\n\n  // Handles the case of creating a new weightclass.\n  handleKeyDown = (event: React.KeyboardEvent<HTMLElement>): void => {\n    const { inputValue, value } = this.state;\n    if (!inputValue) return;\n    if (event.key === \"Enter\" || event.key === \"Tab\") {\n      const asNumber = string2number(inputValue);\n\n      // Disallow creating non-numeric inputs.\n      if (isNaN(asNumber) || !isFinite(asNumber)) {\n        this.setState({ inputValue: \"\" });\n        event.preventDefault();\n        return;\n      }\n\n      // Disallow negative inputs.\n      // The string check is for negative zero.\n      if (asNumber < 0 || inputValue.includes(\"-\")) {\n        this.setState({ inputValue: \"\" });\n        event.preventDefault();\n        return;\n      }\n\n      // Disallow creating redundant classes.\n      for (let i = 0; i < value.length; i++) {\n        if (string2number(value[i].label) === asNumber) {\n          // Silently drop the redundant weightclass.\n          this.setState({ inputValue: \"\" });\n          event.preventDefault();\n          return;\n        }\n      }\n\n      // Sort the new value into the array.\n      let newValue = [...value, createOption(inputValue)];\n      newValue = newValue.sort((a, b) => Number(a.value) - Number(b.value));\n\n      this.setState({\n        inputValue: \"\",\n        value: newValue,\n      });\n      this.maybeUpdateRedux(newValue);\n      event.preventDefault();\n    }\n  };\n\n  render() {\n    const { inputValue, value } = this.state;\n    const placeholder = getString(\"meet-setup.placeholder-classes\", this.props.language);\n\n    return (\n      <Form.Group>\n        <Form.Label>{this.props.label}</Form.Label>\n        <CreatableSelect\n          components={components}\n          inputValue={inputValue}\n          isMulti\n          menuIsOpen={false}\n          onChange={this.handleChange}\n          onInputChange={this.handleInputChange}\n          onKeyDown={this.handleKeyDown}\n          placeholder={placeholder}\n          value={value}\n        />\n      </Form.Group>\n    );\n  }\n}\n\nconst selectClassesBySex = (sex: Sex, state: GlobalState): ReadonlyArray<number> => {\n  switch (sex) {\n    case \"M\":\n      return state.meet.weightClassesKgMen;\n    case \"F\":\n      return state.meet.weightClassesKgWomen;\n    case \"Mx\":\n      return state.meet.weightClassesKgMx;\n    default:\n      checkExhausted(sex);\n      return state.meet.weightClassesKgMen;\n  }\n};\n\nconst mapStateToProps = (state: GlobalState, ownProps: OwnProps): StateProps => {\n  return {\n    classes: selectClassesBySex(ownProps.sex, state),\n    language: state.language,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    setWeightClasses: (sex, classesKg) => dispatch(setWeightClasses(sex, classesKg)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeightClassesSelect);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { setBarAndCollarsWeightKg } from \"../../actions/meetSetupActions\";\nimport { getString } from \"../../logic/strings\";\nimport { kg2lbs, lbs2kg } from \"../../logic/units\";\n\nimport { Language, Lift, Validation } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { checkExhausted } from \"../../types/utils\";\nimport { Dispatch } from \"redux\";\nimport { SetBarAndCollarsWeightKgAction } from \"../../types/actionTypes\";\nimport NumberInput from \"../common/NumberInput\";\n\ninterface OwnProps {\n  lift: Lift;\n}\n\ninterface StateProps {\n  inKg: boolean;\n  squatBarAndCollarsWeightKg: number;\n  benchBarAndCollarsWeightKg: number;\n  deadliftBarAndCollarsWeightKg: number;\n  language: Language;\n}\n\ninterface DispatchProps {\n  setBarAndCollarsWeightKg: (lift: Lift, weight: number) => SetBarAndCollarsWeightKgAction;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\ninterface InternalState {\n  initialValue: number;\n}\n\nclass BarAndCollarsWeightKg extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    this.validate = this.validate.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n    const weight = this.getInitialBarAndCollarsWeightKg(this.props.lift);\n\n    this.state = {\n      initialValue: this.props.inKg ? weight : kg2lbs(weight),\n    };\n  }\n\n  getInitialBarAndCollarsWeightKg = (lift: Lift): number => {\n    switch (lift) {\n      case \"S\":\n        return this.props.squatBarAndCollarsWeightKg;\n      case \"B\":\n        return this.props.benchBarAndCollarsWeightKg;\n      case \"D\":\n        return this.props.deadliftBarAndCollarsWeightKg;\n      default:\n        checkExhausted(lift);\n        return 0;\n    }\n  };\n\n  validate = (n: number): Validation => {\n    // Don't use isInteger() since decimals are allowed.\n    if (isNaN(n) || !isFinite(n) || n < 5 || n > 1000) {\n      return \"error\";\n    }\n    return \"success\";\n  };\n\n  handleChange = (n: number) => {\n    if (this.validate(n) === \"success\") {\n      const weight = this.props.inKg ? n : lbs2kg(n);\n      this.props.setBarAndCollarsWeightKg(this.props.lift, weight);\n    }\n  };\n\n  getLiftLabel = (lift: Lift, inKg: boolean, language: Language): string => {\n    switch (lift) {\n      case \"S\":\n        if (inKg) {\n          return getString(\"meet-setup.bar-weight-squat-kg\", language);\n        } else {\n          return getString(\"meet-setup.bar-weight-squat-lbs\", language);\n        }\n      case \"B\":\n        if (inKg) {\n          return getString(\"meet-setup.bar-weight-bench-kg\", language);\n        } else {\n          return getString(\"meet-setup.bar-weight-bench-lbs\", language);\n        }\n      case \"D\":\n        if (inKg) {\n          return getString(\"meet-setup.bar-weight-deadlift-kg\", language);\n        } else {\n          return getString(\"meet-setup.bar-weight-deadlift-lbs\", language);\n        }\n      default:\n        checkExhausted(lift);\n        return \"\";\n    }\n  };\n\n  render() {\n    return (\n      <NumberInput\n        initialValue={this.state.initialValue}\n        step={2.5}\n        validate={this.validate}\n        onChange={this.handleChange}\n        label={this.getLiftLabel(this.props.lift, this.props.inKg, this.props.language)}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  inKg: state.meet.inKg,\n  squatBarAndCollarsWeightKg: state.meet.squatBarAndCollarsWeightKg,\n  benchBarAndCollarsWeightKg: state.meet.benchBarAndCollarsWeightKg,\n  deadliftBarAndCollarsWeightKg: state.meet.deadliftBarAndCollarsWeightKg,\n  language: state.language,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    setBarAndCollarsWeightKg: (lift: Lift, weightKg: number) => dispatch(setBarAndCollarsWeightKg(lift, weightKg)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BarAndCollarsWeightKg);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines a widget for selecting a plate color.\n\nimport React from \"react\";\nimport { ColorResult, TwitterPicker } from \"react-color\";\n\nimport { PlateColors } from \"../../constants/plateColors\";\n\nimport styles from \"./ColorPicker.module.scss\";\nimport * as Popper from \"react-popper\";\n\ninterface OwnProps {\n  color: string;\n  onChange: (color: string) => void;\n}\n\ntype Props = OwnProps;\n\ninterface InternalState {\n  displayColorPicker: boolean;\n  color: string;\n\n  // Handle returned by setTimeout() for the timeout that closes the color\n  // selector popup after the mouse leaves and time has elapsed.\n  timeoutId: any;\n}\n\nclass ColorPicker extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      displayColorPicker: false,\n      color: props.color,\n      timeoutId: null,\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleMouseLeave = this.handleMouseLeave.bind(this);\n    this.handleMouseEnter = this.handleMouseEnter.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleClick = () => {\n    clearTimeout(this.state.timeoutId);\n    this.setState({ displayColorPicker: !this.state.displayColorPicker, timeoutId: null });\n  };\n\n  handleMouseLeave = () => {\n    // Close the popup after a second has elapsed.\n    // This gives the user a chance to bring the mouse back into the popup.\n    const timeoutId = setTimeout(() => {\n      this.setState({ displayColorPicker: false, timeoutId: null });\n    }, 1000);\n    this.setState({ timeoutId: timeoutId });\n  };\n\n  handleMouseEnter = () => {\n    // Prevent any close-popup timeout from executing.\n    if (this.state.timeoutId !== null) {\n      clearTimeout(this.state.timeoutId);\n      this.setState({ timeoutId: null });\n    }\n  };\n\n  handleChange = (color: ColorResult, event: any) => {\n    // @types/react-color doesn't define an event for onChange but it is published in\n    // their documentation: https://casesandberg.github.io/react-color/#api-onChange\n    // If the event was a MouseEvent|TouchEvent (i.e they clicked a swatch) we assume\n    // that the user wants the panel to close immediately.\n    const displayColorPicker = event.clientX === undefined;\n    const hex = color.hex.toUpperCase();\n    this.setState({ displayColorPicker, color: hex });\n    this.props.onChange(hex);\n  };\n\n  render() {\n    const colors = Object.values(PlateColors);\n    let picker = null;\n    if (this.state.displayColorPicker) {\n      picker = (\n        <Popper.Popper placement=\"bottom-end\">\n          {({ ref, style, placement }) => (\n            <div ref={ref} style={style} className={styles.onTop} data-placement={placement}>\n              <TwitterPicker\n                color={this.state.color}\n                colors={colors}\n                triangle=\"hide\"\n                onChange={this.handleChange as any}\n              />\n            </div>\n          )}\n        </Popper.Popper>\n      );\n    }\n\n    return (\n      <Popper.Manager>\n        <div onMouseLeave={this.handleMouseLeave} onMouseEnter={this.handleMouseEnter}>\n          <Popper.Reference>\n            {({ ref }) => (\n              <div ref={ref} className={styles.swatch} onClick={this.handleClick}>\n                <div className={styles.color} style={{ background: this.state.color }} />\n              </div>\n            )}\n          </Popper.Reference>\n          {picker}\n        </div>\n      </Popper.Manager>\n    );\n  }\n}\n\nexport default ColorPicker;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Displays the selector for determining how many plates are available\n// to loaders on one side, and what color it is, for a single plate weight.\n\nimport React, { FunctionComponent } from \"react\";\n\nimport NumberInput from \"../common/NumberInput\";\nimport ColorPicker from \"./ColorPicker\";\n\nimport { Validation } from \"../../types/dataTypes\";\n\ninterface Props {\n  id: string;\n  weightKg: number;\n  displayWeight: string; // What kind of a plate this is.\n  pairCount: number;\n  color: string;\n  onChange: (weightKg: number, id: string, amount: number, color: string) => void;\n}\n\nconst validate = (n: number): Validation => {\n  if (!Number.isInteger(n) || n < 0 || n > 50) {\n    return \"error\";\n  }\n  return \"success\";\n};\n\nconst PlateInput: FunctionComponent<Props> = (props) => {\n  return (\n    <tr key={props.id}>\n      <td>{props.displayWeight}</td>\n      <td>\n        <div style={{ maxWidth: \"130px\" }}>\n          <NumberInput\n            initialValue={props.pairCount}\n            step={1}\n            validate={validate}\n            onChange={(count) => props.onChange(props.weightKg, props.id, count, props.color)}\n            marginBottom=\"0px\"\n          />\n        </div>\n      </td>\n      <td>\n        <ColorPicker\n          color={props.color}\n          onChange={(color) => props.onChange(props.weightKg, props.id, props.pairCount, color)}\n        />\n      </td>\n    </tr>\n  );\n};\n\nexport default PlateInput;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Displays the selector for determining how many plates are available\n// to loaders on one side.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Table from \"react-bootstrap/Table\";\n\nimport { setPlateConfig } from \"../../actions/meetSetupActions\";\n\nimport { getString } from \"../../logic/strings\";\nimport { displayWeight, kg2lbs } from \"../../logic/units\";\n\nimport { Language, Plate } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { Dispatch } from \"redux\";\nimport { isString } from \"../../types/utils\";\nimport { isNumber } from \"util\";\nimport PlateInput from \"./PlateInput\";\n\ninterface StateProps {\n  inKg: boolean;\n  plates: ReadonlyArray<Plate>;\n  language: Language;\n}\n\ninterface DispatchProps {\n  setPlateConfig: (weight: number, amount: number, color: string) => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\nclass Plates extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    this.validateAmountInput = this.validateAmountInput.bind(this);\n    this.updateHandler = this.updateHandler.bind(this);\n  }\n\n  validateAmountInput: (id: string) => \"error\" | null | undefined = (id) => {\n    const widget: any = document.getElementById(id);\n\n    // This can happen because the FormGroup is created before the widget exists.\n    if (widget === null) return;\n    const value = widget.value;\n\n    if (value === undefined) return \"error\";\n\n    // Ensure that the value is an integer in a reasonable range.\n    const asNum = Number(value);\n    if (Math.floor(asNum) !== asNum) return \"error\";\n    if (asNum < 0 || asNum > 20) return \"error\";\n    if (String(asNum) !== value) return \"error\";\n\n    return null;\n  };\n\n  updateHandler = (weightKg: number, id: string, amount: string | number | string[] | undefined, color: string) => {\n    if (!isString(amount) && !isNumber(amount)) {\n      throw new Error(`Expected either a string or a number, but got ${amount}`);\n    }\n\n    if (this.validateAmountInput(id) === \"error\") {\n      // Although no state is set, this is used to trigger the FormGroup\n      // to re-query the validationState on change.\n      return this.setState({});\n    }\n\n    this.props.setPlateConfig(weightKg, Number(amount), color);\n  };\n\n  renderWeightRow = (weightKg: number, amount: number, color: string) => {\n    // The input event value isn't passed by the event, so we assign a unique ID\n    // and then just search the whole document for it.\n    const id = \"weight\" + String(weightKg);\n    const weight = this.props.inKg ? weightKg : kg2lbs(weightKg);\n\n    return (\n      <PlateInput\n        id={id}\n        key={id}\n        weightKg={weightKg}\n        displayWeight={displayWeight(weight, this.props.language)}\n        pairCount={amount}\n        color={color}\n        onChange={this.updateHandler}\n      />\n    );\n  };\n\n  render() {\n    const plateRows = this.props.plates.map((obj: Plate) =>\n      this.renderWeightRow(obj.weightKg, obj.pairCount, obj.color)\n    );\n    const unitId = this.props.inKg ? \"meet-setup.plates-kg\" : \"meet-setup.plates-lbs\";\n    const stringPlate = getString(unitId, this.props.language);\n\n    return (\n      <div>\n        <Table striped size=\"sm\" hover style={{ margin: \"0px\" }}>\n          <thead>\n            <tr>\n              <th>{stringPlate}</th>\n              <th>\n                <FormattedMessage id=\"meet-setup.plates-num-pairs\" defaultMessage=\"Pairs of Plates\" />\n              </th>\n              <th>\n                <FormattedMessage id=\"meet-setup.plates-color\" defaultMessage=\"Color\" />\n              </th>\n            </tr>\n          </thead>\n          <tbody>{plateRows}</tbody>\n        </Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  inKg: state.meet.inKg,\n  plates: state.meet.plates,\n  language: state.language,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    setPlateConfig: (weightKg, amount, color) => dispatch(setPlateConfig(weightKg, amount, color)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Plates);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n//\n// This is a split Yes/No button\n\nimport React, { FunctionComponent } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Button from \"react-bootstrap/Button\";\n\ninterface Props {\n  value: boolean;\n  setValue: (bool: boolean) => void;\n  label: JSX.Element | string;\n  yes: string;\n  no: string;\n}\n\nconst YesNoButton: FunctionComponent<Props> = (props) => {\n  return (\n    <Form.Group>\n      <Form.Label>{props.label}</Form.Label>\n      <ButtonGroup style={{ width: \"100%\" }}>\n        <Button active={!props.value} variant=\"outline-secondary\" onClick={() => props.setValue(false)}>\n          {props.no}\n        </Button>\n        <Button active={props.value} variant=\"outline-secondary\" onClick={() => props.setValue(true)}>\n          {props.yes}\n        </Button>\n      </ButtonGroup>\n    </Form.Group>\n  );\n};\n\nexport default YesNoButton;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React, { FormEvent } from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Card from \"react-bootstrap/Card\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\nimport Row from \"react-bootstrap/Row\";\n\nimport ValidatedInput from \"../ValidatedInput\";\n\nimport MeetDate from \"./MeetDate\";\nimport MeetLength from \"./MeetLength\";\nimport PlatformCounts from \"./PlatformCounts\";\nimport AutoFillRules from \"./AutoFillRules\";\nimport DivisionSelect from \"./DivisionSelect\";\nimport WeightClassesSelect from \"./WeightClassesSelect\";\nimport BarAndCollarsWeightKg from \"./BarAndCollarsWeightKg\";\nimport Plates from \"./Plates\";\nimport YesNoButton from \"../common/YesNoButton\";\n\nimport { getString } from \"../../logic/strings\";\nimport { updateMeet, setInKg } from \"../../actions/meetSetupActions\";\n\nimport { GlobalState, MeetState } from \"../../types/stateTypes\";\nimport { Dispatch } from \"redux\";\nimport { FormControlTypeHack, assertString, assertFormula, assertAgeCoefficients } from \"../../types/utils\";\nimport { Language, Validation } from \"../../types/dataTypes\";\n\ninterface StateProps {\n  meet: MeetState;\n  language: Language;\n}\n\ninterface DispatchProps {\n  setMeetName: (name: string) => void;\n  setCountry: (country: string) => void;\n  setState: (state: string) => void;\n  setCity: (city: string) => void;\n  setFederation: (fed: string) => void;\n  setCombineSleevesAndWraps: (bool: boolean) => void;\n  setCombineSingleAndMulti: (bool: boolean) => void;\n  setAllow4thAttempts: (bool: boolean) => void;\n  setInKg: (bool: boolean) => void;\n  setShowAlternateUnits: (bool: boolean) => void;\n  setFormula: (event: FormEvent<FormControlTypeHack>) => void;\n  setAgeCoefficients: (event: FormEvent<FormControlTypeHack>) => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\ninterface InternalState {\n  // This is a number used to derive a `key` for many widgets.\n  // Incrementing the ticker can be used to force a re-render.\n  // This is used to re-render things after the \"Auto-Fill\" button is pressed.\n  ticker: number;\n}\n\nclass MeetSetup extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      ticker: 0,\n    };\n  }\n\n  validateRequiredText = (value?: string): Validation => {\n    if (!value) return \"warning\";\n    if (value.includes('\"')) return \"error\";\n    return \"success\";\n  };\n\n  render() {\n    // This is used as a key to force unit-dependent components to re-initialize state.\n    const inKg = String(this.props.meet.inKg);\n    const language = this.props.language;\n\n    const stringMeetName = getString(\"meet-setup.meet-name\", language);\n    const stringFederation = getString(\"common.federation\", language);\n    const stringCountry = getString(\"common.country\", language);\n    const stringStateProvince = getString(\"meet-setup.state-province\", language);\n    const stringCityTown = getString(\"meet-setup.city-town\", language);\n\n    const stringKilograms = getString(\"common.kilograms\", language);\n    const stringPounds = getString(\"common.pounds\", language);\n\n    const stringMensClasses = getString(\"meet-setup.label-classes-men\", language);\n    const stringWomensClasses = getString(\"meet-setup.label-classes-women\", language);\n    const stringMxClasses = getString(\"meet-setup.label-classes-mx\", language);\n\n    const stringAH = getString(\"formula.ah\", language);\n    const stringBodyweightMultiple = getString(\"formula.bodyweight-multiple\", language);\n    const stringDots = getString(\"formula.dots\", language);\n    const stringGlossbrenner = getString(\"formula.glossbrenner\", language);\n    const stringIPFGLPoints = getString(\"formula.ipf-gl-points\", language);\n    const stringIPFPoints = getString(\"formula.ipf-points\", language);\n    const stringNASAPoints = getString(\"formula.nasa-points\", language);\n    // const stringReshel = getString(\"formula.reshel\", language);\n    const stringSchwartzMalone = getString(\"formula.schwartz-malone\", language);\n    const stringTotal = getString(\"formula.total\", language);\n    const stringWilks = getString(\"formula.wilks\", language);\n    const stringWilks2020 = getString(\"formula.wilks2020\", language);\n    const stringNone = getString(\"age-coefficients.none\", language);\n    const stringFosterMcCulloch = getString(\"age-coefficients.foster-mcculloch\", language);\n    const stringNo = getString(\"common.response-no\", language);\n    const stringYes = getString(\"common.response-yes\", language);\n\n    const stringAlsoKilograms = getString(\"meet-setup.label-also-show-kilograms\", language);\n    const stringAlsoPounds = getString(\"meet-setup.label-also-show-pounds\", language);\n\n    return (\n      <Container>\n        <Row>\n          <Col md={4}>\n            <Card>\n              <Card.Header>\n                <FormattedMessage id=\"meet-setup.header-sanction-info\" defaultMessage=\"Sanction Information\" />\n              </Card.Header>\n              <Card.Body>\n                <ValidatedInput\n                  label={stringMeetName}\n                  placeholder={stringMeetName}\n                  initialValue={this.props.meet.name}\n                  validate={this.validateRequiredText}\n                  onSuccess={this.props.setMeetName}\n                  keepMargin={true}\n                />\n                <ValidatedInput\n                  label={stringFederation}\n                  placeholder={stringFederation}\n                  initialValue={this.props.meet.federation}\n                  validate={this.validateRequiredText}\n                  onSuccess={this.props.setFederation}\n                  keepMargin={true}\n                />\n                <ValidatedInput\n                  label={stringCountry}\n                  placeholder={stringCountry}\n                  initialValue={this.props.meet.country}\n                  validate={this.validateRequiredText}\n                  onSuccess={this.props.setCountry}\n                  keepMargin={true}\n                />\n                <ValidatedInput\n                  label={stringStateProvince}\n                  placeholder={stringStateProvince}\n                  initialValue={this.props.meet.state}\n                  validate={this.validateRequiredText}\n                  onSuccess={this.props.setState}\n                  keepMargin={true}\n                />\n                <ValidatedInput\n                  label={stringCityTown}\n                  placeholder={stringCityTown}\n                  initialValue={this.props.meet.city}\n                  validate={this.validateRequiredText}\n                  onSuccess={this.props.setCity}\n                  keepMargin={true}\n                />\n                <MeetDate />\n                <MeetLength />\n                <PlatformCounts />\n              </Card.Body>\n            </Card>\n          </Col>\n\n          <Col md={4}>\n            <Card>\n              <Card.Header>\n                <FormattedMessage id=\"meet-setup.header-rules\" defaultMessage=\"Competition Rules\" />\n              </Card.Header>\n              <Card.Body>\n                <AutoFillRules onChange={() => this.setState({ ticker: this.state.ticker + 1 })} />\n                <DivisionSelect key={this.state.ticker + \"-divselect\"} />\n                <WeightClassesSelect sex=\"M\" label={stringMensClasses} key={this.state.ticker + \"-M\"} />\n                <WeightClassesSelect sex=\"F\" label={stringWomensClasses} key={this.state.ticker + \"-F\"} />\n                <WeightClassesSelect sex=\"Mx\" label={stringMxClasses} key={this.state.ticker + \"-Mx\"} />\n\n                <FormGroup key={this.state.ticker + \"-formula\"}>\n                  <Form.Label>\n                    <FormattedMessage id=\"meet-setup.formula\" defaultMessage=\"Best Lifter Formula\" />\n                  </Form.Label>\n                  <FormControl\n                    as=\"select\"\n                    value={this.props.meet.formula}\n                    onChange={this.props.setFormula}\n                    className=\"custom-select\"\n                  >\n                    <option value=\"AH\">{stringAH}</option>\n                    <option value=\"Bodyweight Multiple\">{stringBodyweightMultiple}</option>\n                    <option value=\"Dots\">{stringDots}</option>\n                    <option value=\"Glossbrenner\">{stringGlossbrenner}</option>\n                    <option value=\"IPF GL Points\">{stringIPFGLPoints}</option>\n                    <option value=\"IPF Points\">{stringIPFPoints}</option>\n                    <option value=\"NASA Points\">{stringNASAPoints}</option>\n                    <option value=\"Schwartz/Malone\">{stringSchwartzMalone}</option>\n                    <option value=\"Total\">{stringTotal}</option>\n                    <option value=\"Wilks\">{stringWilks}</option>\n                    <option value=\"Wilks2020\">{stringWilks2020}</option>\n                  </FormControl>\n                </FormGroup>\n\n                <FormGroup key={this.state.ticker + \"-ageCoefficients\"}>\n                  <Form.Label>\n                    <FormattedMessage\n                      id=\"meet-setup.age-coefficients\"\n                      defaultMessage=\"Age Coefficients for Best Juniors/Masters Lifter\"\n                    />\n                  </Form.Label>\n                  <FormControl\n                    as=\"select\"\n                    value={this.props.meet.ageCoefficients}\n                    onChange={this.props.setAgeCoefficients}\n                    className=\"custom-select\"\n                  >\n                    <option key=\"None\" value=\"None\">\n                      {stringNone}\n                    </option>\n                    <option key=\"FosterMcCulloch\" value=\"FosterMcCulloch\">\n                      {stringFosterMcCulloch}\n                    </option>\n                  </FormControl>\n                </FormGroup>\n\n                <FormGroup key={this.state.ticker + \"-sleeves-wraps\"}>\n                  <YesNoButton\n                    label={\n                      <FormattedMessage\n                        id=\"meet-setup.combine-sleeves-wraps\"\n                        defaultMessage=\"Should Sleeves and Wraps be combined for placing?\"\n                      />\n                    }\n                    value={this.props.meet.combineSleevesAndWraps}\n                    setValue={this.props.setCombineSleevesAndWraps}\n                    yes={stringYes}\n                    no={stringNo}\n                  />\n                </FormGroup>\n\n                <FormGroup key={this.state.ticker + \"-single-multi\"}>\n                  <YesNoButton\n                    label={\n                      <FormattedMessage\n                        id=\"meet-setup.combine-single-multi\"\n                        defaultMessage=\"Should Single-ply and Multi-ply be combined for placing?\"\n                      />\n                    }\n                    value={this.props.meet.combineSingleAndMulti}\n                    setValue={this.props.setCombineSingleAndMulti}\n                    yes={stringYes}\n                    no={stringNo}\n                  />\n                </FormGroup>\n\n                <FormGroup key={this.state.ticker + \"-4th-attempts\"}>\n                  <YesNoButton\n                    label={\n                      <FormattedMessage\n                        id=\"meet-setup.allow-4th-attempts\"\n                        defaultMessage=\"Can lifters take 4th attempts for records?\"\n                      />\n                    }\n                    value={this.props.meet.allow4thAttempts}\n                    setValue={this.props.setAllow4thAttempts}\n                    yes={stringYes}\n                    no={stringNo}\n                  />\n                </FormGroup>\n              </Card.Body>\n            </Card>\n          </Col>\n\n          <Col md={4}>\n            <Card>\n              <Card.Header>\n                <FormattedMessage id=\"meet-setup.header-loading\" defaultMessage=\"Weights and Loading\" />\n              </Card.Header>\n              <Card.Body>\n                <FormGroup>\n                  <YesNoButton\n                    label={\n                      <FormattedMessage\n                        id=\"meet-setup.units\"\n                        defaultMessage=\"In what units are attempts and bodyweights?\"\n                      />\n                    }\n                    value={this.props.meet.inKg}\n                    setValue={this.props.setInKg}\n                    yes={stringKilograms}\n                    no={stringPounds}\n                  />\n                </FormGroup>\n\n                <FormGroup>\n                  <YesNoButton\n                    label={this.props.meet.inKg ? stringAlsoPounds : stringAlsoKilograms}\n                    value={this.props.meet.showAlternateUnits}\n                    setValue={this.props.setShowAlternateUnits}\n                    yes={stringYes}\n                    no={stringNo}\n                  />\n                </FormGroup>\n\n                <BarAndCollarsWeightKg key={\"S\" + inKg} lift=\"S\" />\n                <BarAndCollarsWeightKg key={\"B\" + inKg} lift=\"B\" />\n                <BarAndCollarsWeightKg key={\"D\" + inKg} lift=\"D\" />\n                <Plates />\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  meet: state.meet,\n  language: state.language,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  setMeetName: (name: string) => dispatch(updateMeet({ name: name })),\n  setCountry: (country: string) => dispatch(updateMeet({ country: country })),\n  setState: (state: string) => dispatch(updateMeet({ state: state })),\n  setCity: (city: string) => dispatch(updateMeet({ city: city })),\n  setFederation: (fed: string) => dispatch(updateMeet({ federation: fed })),\n  setCombineSleevesAndWraps: (bool) => dispatch(updateMeet({ combineSleevesAndWraps: bool })),\n  setCombineSingleAndMulti: (bool) => dispatch(updateMeet({ combineSingleAndMulti: bool })),\n  setAllow4thAttempts: (bool) => dispatch(updateMeet({ allow4thAttempts: bool })),\n  setInKg: (bool) => dispatch(setInKg(bool)),\n  setShowAlternateUnits: (bool) => dispatch(updateMeet({ showAlternateUnits: bool })),\n  setFormula: (event) =>\n    assertString(event.currentTarget.value) &&\n    assertFormula(event.currentTarget.value) &&\n    dispatch(updateMeet({ formula: event.currentTarget.value })),\n  setAgeCoefficients: (event) =>\n    assertString(event.currentTarget.value) &&\n    assertAgeCoefficients(event.currentTarget.value) &&\n    dispatch(updateMeet({ ageCoefficients: event.currentTarget.value })),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MeetSetup);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from \"react\";\n\nimport MeetSetup from \"../components/meet-setup/MeetSetup\";\nimport styles from \"../components/common/ContentArea.module.scss\";\n\nclass MeetSetupContainer extends React.Component<{}> {\n  render() {\n    return (\n      <div className={styles.contentArea}>\n        <MeetSetup />\n      </div>\n    );\n  }\n}\n\nexport default MeetSetupContainer;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the table of LifterRows\n// Generalized to accept a rowRenderer component, so that different pages\n// can render different row level items, while re-using the logic in this component\n// to handle rendering one row per lifter\n// This is the parent component that determines how many rows to render,\n// what data each row should see, etc.\n\nimport React from \"react\";\n\nimport { Entry } from \"../../types/dataTypes\";\n\ninterface OwnProps {\n  entries: ReadonlyArray<Entry>;\n  rowRenderer: any;\n}\n\ntype Props = OwnProps;\n\nconst LifterTable: React.FC<Props> = (props) => {\n  const renderRows = () => {\n    const LifterRow = props.rowRenderer;\n    const { entries } = props;\n    return entries.map((entry) => <LifterRow key={entry.id} id={entry.id} />);\n  };\n\n  return <div>{renderRows()}</div>;\n};\n\nexport default LifterTable;\n","// vim: set ts=2 sts=2 sw=2 et:\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// This provides an alternative interface to react-intl's <FormattedMessage/>.\n//\n// FormattedMessage defines a *new* internationalizable message.\n// In contrast, LocalizedString fetches an *existing* message from the same store\n// and reports it as a simple string (with no formatting or parsing).\n//\n// This enables reuse of translations, so long as the IDs are stable.\n\nimport React from \"react\";\nimport { IntlContext } from \"react-intl\";\n\nimport { TranslationId } from \"../../types/dataTypes\";\n\ninterface OwnProps {\n  id: TranslationId; // As listed in 'src/translations/en.json'.\n}\n\ntype Props = OwnProps;\n\nclass LocalizedString extends React.Component<Props> {\n  render() {\n    return (\n      <IntlContext.Consumer>\n        {(intl) => {\n          return intl.messages[this.props.id];\n        }}\n      </IntlContext.Consumer>\n    );\n  }\n}\n\nexport default LocalizedString;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { Validation } from \"../types/dataTypes\";\n\n// Validates a string date in the ISO8601 \"YYYY-MM-DD\" format.\nexport const validateIso8601Date = (s?: string): Validation => {\n  if (typeof s !== \"string\") return \"error\";\n\n  if (s === \"\") return null;\n  if (s.length !== \"YYYY-MM-DD\".length) return \"error\";\n\n  const pieces: Array<string> = s.split(\"-\");\n  if (pieces.length !== 3) return \"error\";\n\n  const [yearStr, monthStr, dayStr] = pieces;\n\n  // Ensure that the strings only contain numbers, because the Number() constructor\n  // will ignore whitespace.\n  const onlyNumbers = /^[0-9]+$/;\n\n  if (!yearStr.match(onlyNumbers)) return \"error\";\n  if (!monthStr.match(onlyNumbers)) return \"error\";\n  if (!dayStr.match(onlyNumbers)) return \"error\";\n\n  const year = Number(yearStr);\n  const month = Number(monthStr);\n  const day = Number(dayStr);\n\n  if (isNaN(year) || isNaN(month) || isNaN(day)) return \"error\";\n  if (year <= 0 || month <= 0 || month > 12 || day <= 0 || day > 31) return \"error\";\n\n  // Disallow dates that are out of the plausible range for powerlifting.\n  if (year < 1880 || year >= new Date().getFullYear() + 2) return \"error\";\n\n  return \"success\";\n};\n\n// Validates a string date in the European DD-MM-YYYY format.\nexport const validateEuropeanDate = (s?: string): Validation => {\n  if (typeof s !== \"string\") return \"error\";\n\n  if (s === \"\") return null;\n  if (s.length !== \"DD-MM-YYYY\".length) return \"error\";\n\n  const pieces: Array<string> = s.split(\"-\");\n  if (pieces.length !== 3) return \"error\";\n\n  const [dayStr, monthStr, yearStr] = pieces;\n\n  // Ensure that the strings only contain numbers, because the Number() constructor\n  // will ignore whitespace.\n  const onlyNumbers = /^[0-9]+$/;\n\n  if (!dayStr.match(onlyNumbers)) return \"error\";\n  if (!monthStr.match(onlyNumbers)) return \"error\";\n  if (!yearStr.match(onlyNumbers)) return \"error\";\n\n  const year = Number(yearStr);\n  const month = Number(monthStr);\n  const day = Number(dayStr);\n\n  if (isNaN(year) || isNaN(month) || isNaN(day)) return \"error\";\n  if (year <= 0 || month <= 0 || month > 12 || day <= 0 || day > 31) return \"error\";\n\n  // Disallow dates that are out of the plausible range for powerlifting.\n  if (year < 1880 || year >= new Date().getFullYear() + 2) return \"error\";\n\n  return \"success\";\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { Validation } from \"../types/dataTypes\";\n\n// Validates a simple positive integer.\nexport const validatePositiveInteger = (s?: string, inclusiveMax?: number): Validation => {\n  if (typeof s !== \"string\") return \"error\";\n\n  if (s === \"\") return null;\n\n  // Ensure that the string only contains numbers, because the Number() constructor\n  // will ignore whitespace.\n  const onlyNumbers = /^[0-9]+$/;\n  if (!s.match(onlyNumbers)) return \"error\";\n\n  // The number shouldn't start with an unnecessary zero.\n  if (s.startsWith(\"0\")) return \"error\";\n\n  const n = Number(s);\n\n  // Ensure the number is a positive integer.\n  if (isNaN(n)) return \"error\";\n  if (!Number.isInteger(n)) return \"error\";\n  if (n <= 0) return \"error\";\n\n  // Allow an optional inclusive upper bound check.\n  if (typeof inclusiveMax === \"number\") {\n    if (n > inclusiveMax) return \"error\";\n  }\n\n  return \"success\";\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport {\n  NewRegistrationAction,\n  DeleteRegistrationAction,\n  UpdateRegistrationAction,\n  MergePlatformAction,\n  AssignLotNumbersAction,\n} from \"../types/actionTypes\";\nimport { Entry } from \"../types/dataTypes\";\n\n// Adds a blank (or default-initalized) row to the registrations table.\nexport const newRegistration = (obj: Partial<Entry>): NewRegistrationAction => {\n  return {\n    type: \"NEW_REGISTRATION\",\n    overwriteDefaults: obj,\n  };\n};\n\n// Deletes an existing entry from the registrations table.\n//\n// Corresponding data from the registration is *not* deleted, for example\n// from the lifting page, but because the state.registrations.lookups map\n// will no longer find an associated entry given a global unique EntryId,\n// the data will simply stop being displayed.\n//\n// The global ID from the deleted entry is not recycled.\nexport const deleteRegistration = (entryId: number): DeleteRegistrationAction => {\n  return {\n    type: \"DELETE_REGISTRATION\",\n    entryId: entryId,\n  };\n};\n\n// Updates an existing entry in the registrations table.\n//\n// Because there are a lot of fields in a single entry, for the sake of\n// simplicity, this is a general method that knows how to update the\n// existing entry object with whatever has changed, as passed\n// through object properties.\nexport const updateRegistration = (entryId: number, obj: Partial<Entry>): UpdateRegistrationAction => {\n  return {\n    type: \"UPDATE_REGISTRATION\",\n    entryId: entryId,\n    changes: obj,\n  };\n};\n\n// Deletes all entries assigned to a given (day, platform), and then adds entries\n// assigned to that (day, platform) from a foreign save state.\nexport const mergePlatform = (day: number, platform: number, platformEntries: Array<Entry>): MergePlatformAction => {\n  return {\n    type: \"MERGE_PLATFORM\",\n    day: day,\n    platform: platform,\n    platformEntries: platformEntries,\n  };\n};\n\nexport const assignLotNumbers = (lotNumbers: number[]): AssignLotNumbersAction => {\n  return {\n    type: \"ASSIGN_LOT_NUMBERS\",\n    lotNumbers,\n  };\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines a row in the LifterTable on the Registration page.\n// This provides a bunch of widgets, each of which correspond to\n// the state of a single entry.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Row from \"react-bootstrap/Row\";\n\nimport Select, { ValueType } from \"react-select\";\n\nimport { getString, localizeEvent } from \"../../logic/strings\";\nimport { displayNumber, string2number } from \"../../logic/units\";\nimport LocalizedString from \"../translations/LocalizedString\";\nimport ValidatedInput from \"../ValidatedInput\";\n\nimport { validateIso8601Date, validateEuropeanDate } from \"../../validation/iso8601Date\";\nimport { validatePositiveInteger } from \"../../validation/positiveInteger\";\n\nimport { deleteRegistration, updateRegistration } from \"../../actions/registrationActions\";\nimport { FormControlTypeHack, checkExhausted, assertString, assertFlight, assertSex } from \"../../types/utils\";\nimport { Entry, Equipment, Language, Validation } from \"../../types/dataTypes\";\nimport { Dispatch } from \"redux\";\nimport { GlobalState, MeetState } from \"../../types/stateTypes\";\n\ntype OptionType = {\n  label: string;\n  value: string;\n};\n\ninterface OwnProps {\n  id: number;\n}\n\ninterface StateProps {\n  meet: MeetState;\n  entry: Entry;\n  language: Language;\n}\n\ninterface DispatchProps {\n  deleteRegistration: (entryId: number) => void;\n  updateRegistration: (entryId: number, obj: Partial<Entry>) => void;\n}\n\ninterface InternalState {\n  selectedDay: number;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nclass LifterRow extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    // Store the Day in state to update the Platform options when the Day changes.\n    // Store the Birth Date in state to re-render when a new date is selected\n    this.state = {\n      selectedDay: props.entry.day,\n    };\n\n    this.deleteRegistrationClick = this.deleteRegistrationClick.bind(this);\n    this.updateRegistrationDay = this.updateRegistrationDay.bind(this);\n    this.updateRegistrationPlatform = this.updateRegistrationPlatform.bind(this);\n    this.updateRegistrationFlight = this.updateRegistrationFlight.bind(this);\n    this.updateRegistrationName = this.updateRegistrationName.bind(this);\n    this.updateRegistrationSex = this.updateRegistrationSex.bind(this);\n    this.updateRegistrationLot = this.updateRegistrationLot.bind(this);\n    this.updateRegistrationMemberId = this.updateRegistrationMemberId.bind(this);\n    this.updateRegistrationBirthDate = this.updateRegistrationBirthDate.bind(this);\n    this.updateRegistrationAge = this.updateRegistrationAge.bind(this);\n    this.updateRegistrationCountry = this.updateRegistrationCountry.bind(this);\n    this.updateRegistrationState = this.updateRegistrationState.bind(this);\n    this.updateRegistrationDivisions = this.updateRegistrationDivisions.bind(this);\n    this.updateRegistrationEvents = this.updateRegistrationEvents.bind(this);\n    this.updateRegistrationEquipment = this.updateRegistrationEquipment.bind(this);\n    this.updateRegistrationGuest = this.updateRegistrationGuest.bind(this);\n    this.updateRegistrationTeam = this.updateRegistrationTeam.bind(this);\n    this.updateRegistrationInstagram = this.updateRegistrationInstagram.bind(this);\n    this.updateRegistrationNotes = this.updateRegistrationNotes.bind(this);\n  }\n\n  deleteRegistrationClick() {\n    this.props.deleteRegistration(this.props.id);\n  }\n\n  updateRegistrationDay(event: React.FormEvent<FormControlTypeHack>) {\n    const day = Number(event.currentTarget.value);\n    const entry = this.props.entry;\n\n    // Also check whether the platform is now impossible.\n    let platform = entry.platform;\n    if (platform > this.props.meet.platformsOnDays[day - 1]) {\n      platform = 1; // This matches the default behavior of the select element.\n    }\n\n    if (entry.day !== day) {\n      this.setState({ selectedDay: day });\n      this.props.updateRegistration(this.props.id, { day: day, platform: platform });\n    }\n  }\n\n  updateRegistrationPlatform(event: React.FormEvent<FormControlTypeHack>) {\n    const platform = Number(event.currentTarget.value);\n    if (this.props.entry.platform !== platform) {\n      this.props.updateRegistration(this.props.id, { platform: platform });\n    }\n  }\n\n  updateRegistrationFlight(event: React.FormEvent<FormControlTypeHack>) {\n    const value = event.currentTarget.value;\n    if (this.props.entry.flight !== value && assertString(value) && assertFlight(value)) {\n      this.props.updateRegistration(this.props.id, { flight: value });\n    }\n  }\n\n  updateRegistrationName(event: React.FocusEvent<FormControlTypeHack>) {\n    const name = event.currentTarget.value;\n    if (this.props.entry.name !== name && assertString(name)) {\n      this.props.updateRegistration(this.props.id, { name: name });\n    }\n  }\n\n  updateRegistrationSex(event: React.FormEvent<FormControlTypeHack>) {\n    const sex = event.currentTarget.value;\n    if (this.props.entry.sex !== sex && assertString(sex) && assertSex(sex)) {\n      this.props.updateRegistration(this.props.id, { sex: sex });\n    }\n  }\n\n  updateRegistrationLot(event: React.FormEvent<FormControlTypeHack> & { currentTarget: { value: string } }) {\n    const asNumber = string2number(event.currentTarget.value);\n    if (asNumber >= 0 && asNumber !== this.props.entry.lot) {\n      this.props.updateRegistration(this.props.id, { lot: asNumber });\n    }\n  }\n\n  updateRegistrationMemberId = (event: React.FormEvent<FormControlTypeHack>) => {\n    const memberId = event.currentTarget.value;\n    if (this.props.entry.memberId !== memberId && typeof memberId === \"string\") {\n      this.props.updateRegistration(this.props.id, { memberId: memberId });\n    }\n  };\n\n  updateRegistrationBirthDate = (birthDate: string) => {\n    if (this.props.entry.birthDate !== birthDate) {\n      this.props.updateRegistration(this.props.id, { birthDate: birthDate });\n    }\n  };\n\n  updateRegistrationAge = (age: string) => {\n    const num = string2number(age);\n    if (this.props.entry.age !== num) {\n      this.props.updateRegistration(this.props.id, { age: num });\n    }\n  };\n\n  updateRegistrationCountry = (country: string) => {\n    if (this.props.entry.country !== country) {\n      this.props.updateRegistration(this.props.id, { country: country });\n    }\n  };\n\n  updateRegistrationState = (state: string) => {\n    if (this.props.entry.state !== state) {\n      this.props.updateRegistration(this.props.id, { state: state });\n    }\n  };\n\n  updateRegistrationDivisions(value: ValueType<OptionType> | null) {\n    if (value instanceof Array) {\n      // Since updates are synchronous, we can just compare lengths.\n      if (value.length !== this.props.entry.divisions.length) {\n        const divisions = [];\n        for (let i = 0; i < value.length; i++) {\n          divisions.push(value[i].value);\n        }\n        this.props.updateRegistration(this.props.id, { divisions: divisions });\n      }\n    } else if (value === null) {\n      // Null happens when the list has been cleared fully.\n      if (this.props.entry.divisions.length > 0) {\n        this.props.updateRegistration(this.props.id, { divisions: [] });\n      }\n    }\n  }\n\n  updateRegistrationEvents(value: ValueType<OptionType> | null) {\n    if (value instanceof Array) {\n      // Since updates are synchronous, we can just compare lengths.\n      if (value.length !== this.props.entry.events.length) {\n        const events = [];\n        for (let i = 0; i < value.length; i++) {\n          events.push(value[i].value);\n        }\n        this.props.updateRegistration(this.props.id, { events: events });\n      }\n    } else if (value === null) {\n      // Null happens when the list has been cleared fully.\n      if (this.props.entry.events.length > 0) {\n        this.props.updateRegistration(this.props.id, { events: [] });\n      }\n    }\n  }\n\n  updateRegistrationEquipment(event: React.FormEvent<FormControlTypeHack>) {\n    const equipment = event.currentTarget.value as Equipment;\n    if (this.props.entry.equipment !== equipment) {\n      // Ensure value is something we expect & assist the compiler in helping us\n      switch (equipment) {\n        case \"Bare\":\n        case \"Sleeves\":\n        case \"Wraps\":\n        case \"Single-ply\":\n        case \"Multi-ply\":\n        case \"Unlimited\":\n          this.props.updateRegistration(this.props.id, { equipment: equipment });\n          break;\n        default:\n          checkExhausted(equipment);\n          break;\n      }\n    }\n  }\n\n  updateRegistrationGuest = (event: React.FocusEvent<FormControlTypeHack>) => {\n    if (event.currentTarget.value === \"true\") {\n      this.props.updateRegistration(this.props.id, { guest: true });\n    } else {\n      this.props.updateRegistration(this.props.id, { guest: false });\n    }\n  };\n\n  updateRegistrationTeam = (event: React.FocusEvent<FormControlTypeHack>) => {\n    if (assertString(event.currentTarget.value)) {\n      this.props.updateRegistration(this.props.id, { team: event.currentTarget.value });\n    }\n  };\n\n  updateRegistrationInstagram = (event: React.FocusEvent<FormControlTypeHack>) => {\n    if (assertString(event.currentTarget.value)) {\n      this.props.updateRegistration(this.props.id, { instagram: event.currentTarget.value });\n    }\n  };\n\n  updateRegistrationNotes = (event: React.FocusEvent<FormControlTypeHack>) => {\n    if (assertString(event.currentTarget.value)) {\n      this.props.updateRegistration(this.props.id, { notes: event.currentTarget.value });\n    }\n  };\n\n  // FIXME: Could be shared with weighins logic.\n  validateAge = (value?: string): Validation => {\n    if (value === \"\") return null;\n\n    const pos: Validation = validatePositiveInteger(value);\n    if (pos === \"success\") {\n      // Complain a little if the age is implausible.\n      const n = Number(value);\n      if (n <= 4 || n > 100) return \"warning\";\n    }\n    return pos;\n  };\n\n  render() {\n    const entry = this.props.entry;\n    const language = this.props.language;\n\n    const dayOptions = [];\n    for (let i = 1; i <= this.props.meet.lengthDays; i++) {\n      dayOptions.push(\n        <option value={i} key={i}>\n          {i}\n        </option>\n      );\n    }\n\n    const platformOptions = [];\n    for (let i = 1; i <= this.props.meet.platformsOnDays[entry.day - 1]; i++) {\n      platformOptions.push(\n        <option value={i} key={i}>\n          {i}\n        </option>\n      );\n    }\n\n    const divisionOptions = [];\n    for (let i = 0; i < this.props.meet.divisions.length; i++) {\n      const division = this.props.meet.divisions[i];\n      divisionOptions.push({ value: division, label: division });\n    }\n\n    const selectedDivisions = [];\n    for (let i = 0; i < entry.divisions.length; i++) {\n      const division = entry.divisions[i];\n      selectedDivisions.push({ value: division, label: division });\n    }\n\n    const selectedEvents = [];\n    for (let i = 0; i < entry.events.length; i++) {\n      const event = entry.events[i];\n      selectedEvents.push({ value: event, label: localizeEvent(event, language) });\n    }\n\n    const gridStyle = { padding: \"0px\", margin: \"0px\" };\n\n    const stringCountry = getString(\"common.country\", language);\n    const stringState = getString(\"registration.state-province\", language);\n    const stringBirthDatePlaceholder = getString(\"registration.birthdate-placeholder\", language);\n    const stringMemberIdPlaceholder = getString(\"registration.member-id-placeholder\", language);\n    const stringSelectPlaceholder = getString(\"common.select-placeholder\", language);\n\n    const eventOptions = [\n      { value: \"S\", label: getString(\"event.s\", language) },\n      { value: \"B\", label: getString(\"event.b\", language) },\n      { value: \"D\", label: getString(\"event.d\", language) },\n      { value: \"BD\", label: getString(\"event.bd\", language) },\n      { value: \"SBD\", label: getString(\"event.sbd\", language) },\n      { value: \"SB\", label: getString(\"event.sb\", language) },\n      { value: \"SD\", label: getString(\"event.sd\", language) },\n    ];\n\n    return (\n      <Card style={{ overflow: \"visible\", marginBottom: \"17px\" }}>\n        <Card.Header style={{ display: \"flex\" }}>\n          <Form.Control type=\"text\" placeholder=\"\" value={entry.name} onChange={this.updateRegistrationName} />\n          <Button\n            onClick={this.deleteRegistrationClick}\n            variant=\"danger\"\n            style={{ marginLeft: \"15px\", minWidth: \"100px\" }}\n          >\n            <LocalizedString id=\"registration.button-delete\" />\n          </Button>\n        </Card.Header>\n        <Card.Body>\n          <Container style={gridStyle}>\n            <Row>\n              {/* Day */}\n              <Col md={1}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.day-label\" defaultMessage=\"Day\" />\n                  </Form.Label>\n                  <Form.Control\n                    value={this.state.selectedDay.toString()}\n                    as=\"select\"\n                    onChange={this.updateRegistrationDay}\n                    className=\"custom-select\"\n                  >\n                    {dayOptions}\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n\n              {/* Platform */}\n              <Col md={1}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.platform-label\" defaultMessage=\"Platform\" />\n                  </Form.Label>\n                  <Form.Control\n                    value={entry.platform.toString()}\n                    as=\"select\"\n                    onChange={this.updateRegistrationPlatform}\n                    className=\"custom-select\"\n                  >\n                    {platformOptions}\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n\n              {/* Flight */}\n              <Col md={1}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.flight-label\" defaultMessage=\"Flight\" />\n                  </Form.Label>\n                  <Form.Control\n                    value={entry.flight}\n                    as=\"select\"\n                    onChange={this.updateRegistrationFlight}\n                    className=\"custom-select\"\n                  >\n                    <option value=\"A\">{getString(\"flight.a\", language)}</option>\n                    <option value=\"B\">{getString(\"flight.b\", language)}</option>\n                    <option value=\"C\">{getString(\"flight.c\", language)}</option>\n                    <option value=\"D\">{getString(\"flight.d\", language)}</option>\n                    <option value=\"E\">{getString(\"flight.e\", language)}</option>\n                    <option value=\"F\">{getString(\"flight.f\", language)}</option>\n                    <option value=\"G\">{getString(\"flight.g\", language)}</option>\n                    <option value=\"H\">{getString(\"flight.h\", language)}</option>\n                    <option value=\"I\">{getString(\"flight.i\", language)}</option>\n                    <option value=\"J\">{getString(\"flight.j\", language)}</option>\n                    <option value=\"K\">{getString(\"flight.k\", language)}</option>\n                    <option value=\"L\">{getString(\"flight.l\", language)}</option>\n                    <option value=\"M\">{getString(\"flight.m\", language)}</option>\n                    <option value=\"N\">{getString(\"flight.n\", language)}</option>\n                    <option value=\"O\">{getString(\"flight.o\", language)}</option>\n                    <option value=\"P\">{getString(\"flight.p\", language)}</option>\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n\n              {/* Sex */}\n              <Col md={1}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.sex-label\" defaultMessage=\"Sex\" />\n                  </Form.Label>\n                  <Form.Control\n                    value={entry.sex}\n                    as=\"select\"\n                    onChange={this.updateRegistrationSex}\n                    className=\"custom-select\"\n                  >\n                    <option value=\"M\">{getString(\"sex.m\", language)}</option>\n                    <option value=\"F\">{getString(\"sex.f\", language)}</option>\n                    <option value=\"Mx\">{getString(\"sex.mx\", language)}</option>\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n\n              {/* Equipment */}\n              <Col md={2}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.equipment-label\" defaultMessage=\"Equipment\" />\n                  </Form.Label>\n                  <Form.Control\n                    value={entry.equipment}\n                    as=\"select\"\n                    onChange={this.updateRegistrationEquipment}\n                    className=\"custom-select\"\n                  >\n                    <option value=\"Bare\">{getString(\"equipment.bare\", language)}</option>\n                    <option value=\"Sleeves\">{getString(\"equipment.sleeves\", language)}</option>\n                    <option value=\"Wraps\">{getString(\"equipment.wraps\", language)}</option>\n                    <option value=\"Single-ply\">{getString(\"equipment.single-ply\", language)}</option>\n                    <option value=\"Multi-ply\">{getString(\"equipment.multi-ply\", language)}</option>\n                    <option value=\"Unlimited\">{getString(\"equipment.unlimited\", language)}</option>\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n\n              {/* Divisions */}\n              <Col md={4}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.divisions-label\" defaultMessage=\"Divisions\" />\n                  </Form.Label>\n                  <Select\n                    menuPlacement=\"auto\"\n                    placeholder={stringSelectPlaceholder}\n                    options={divisionOptions}\n                    isClearable={false}\n                    isMulti={true}\n                    onChange={this.updateRegistrationDivisions}\n                    value={selectedDivisions}\n                  />\n                </Form.Group>\n              </Col>\n\n              {/* Events */}\n              <Col md={2}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.events-label\" defaultMessage=\"Events\" />\n                  </Form.Label>\n                  <Select\n                    menuPlacement=\"auto\"\n                    placeholder={stringSelectPlaceholder}\n                    options={eventOptions}\n                    isClearable={false}\n                    isMulti={true}\n                    onChange={this.updateRegistrationEvents}\n                    value={selectedEvents}\n                  />\n                </Form.Group>\n              </Col>\n            </Row>\n          </Container>\n\n          <Container style={gridStyle}>\n            <Row>\n              {/* Date of Birth */}\n              <Col md={2}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.birthdate-label\" defaultMessage=\"Date of Birth\" />\n                  </Form.Label>\n                  <ValidatedInput\n                    initialValue={entry.birthDate}\n                    placeholder={stringBirthDatePlaceholder}\n                    validate={validateEuropeanDate}\n                    onSuccess={this.updateRegistrationBirthDate}\n                  />\n                </Form.Group>\n              </Col>\n\n              {/* Age */}\n              <Col md={1}>\n                <Form.Group>\n                  <Form.Label>{getString(\"common.age\", language)}</Form.Label>\n                  <ValidatedInput\n                    initialValue={entry.age === 0 ? \"\" : displayNumber(entry.age, language)}\n                    placeholder={getString(\"common.age\", language)}\n                    validate={this.validateAge}\n                    onSuccess={this.updateRegistrationAge}\n                  />\n                </Form.Group>\n              </Col>\n\n              {/* Member ID */}\n              <Col md={2}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.member-id-label\" defaultMessage=\"Member ID\" />\n                  </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder={stringMemberIdPlaceholder}\n                    value={entry.memberId}\n                    onChange={this.updateRegistrationMemberId}\n                  />\n                </Form.Group>\n              </Col>\n\n              {/* Country */}\n              <Col md={2}>\n                <Form.Group>\n                  <Form.Label>{stringCountry}</Form.Label>\n                  <ValidatedInput\n                    initialValue={entry.country}\n                    placeholder={stringCountry}\n                    validate={(s) => (s === \"\" ? null : \"success\")}\n                    onSuccess={this.updateRegistrationCountry}\n                  />\n                </Form.Group>\n              </Col>\n\n              {/* State */}\n              <Col md={1}>\n                <Form.Group>\n                  <Form.Label>{stringState}</Form.Label>\n                  <ValidatedInput\n                    initialValue={entry.state}\n                    placeholder={stringState}\n                    validate={(s) => (s === \"\" ? null : \"success\")}\n                    onSuccess={this.updateRegistrationState}\n                  />\n                </Form.Group>\n              </Col>\n\n              {/* Lot Number */}\n              <Col md={1}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.lot-label\" defaultMessage=\"Lot #\" />\n                  </Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    min=\"0\"\n                    value={entry.lot === 0 ? \"\" : entry.lot.toString()}\n                    onChange={this.updateRegistrationLot}\n                  />\n                </Form.Group>\n              </Col>\n\n              {/* Guest */}\n              <Col md={1}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.guest-label\" defaultMessage=\"Guest\" />\n                  </Form.Label>\n                  <Form.Control\n                    value={entry.guest ? entry.guest.toString() : \"false\"}\n                    as=\"select\"\n                    onChange={this.updateRegistrationGuest}\n                    className=\"custom-select\"\n                  >\n                    <option value=\"false\">{getString(\"common.response-no\", language)}</option>\n                    <option value=\"true\">{getString(\"common.response-yes\", language)}</option>\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n\n              {/* Team */}\n              <Col md={2}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.team-label\" defaultMessage=\"Team\" />\n                  </Form.Label>\n                  <Form.Control type=\"text\" placeholder=\"\" value={entry.team} onChange={this.updateRegistrationTeam} />\n                </Form.Group>\n              </Col>\n            </Row>\n          </Container>\n\n          <Container style={gridStyle}>\n            <Row>\n              {/* Notes */}\n              <Col md={2}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.instagram-label\" defaultMessage=\"Instagram\" />\n                  </Form.Label>\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                      <InputGroup.Text>@</InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control\n                      type=\"text\"\n                      placeholder=\"\"\n                      value={entry.instagram}\n                      onChange={this.updateRegistrationInstagram}\n                    />\n                  </InputGroup>\n                </Form.Group>\n              </Col>\n\n              {/* Notes */}\n              <Col md={10}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.notes-label\" defaultMessage=\"Notes (for your personal use)\" />\n                  </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"\"\n                    value={entry.notes}\n                    onChange={this.updateRegistrationNotes}\n                  />\n                </Form.Group>\n              </Col>\n            </Row>\n          </Container>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState, ownProps: OwnProps): StateProps => {\n  // Only have props for the entry corresponding to this one row.\n  const lookup = state.registration.lookup;\n  const entry = state.registration.entries[lookup[ownProps.id]];\n\n  return {\n    meet: state.meet,\n    entry: entry,\n    language: state.language,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    deleteRegistration: (entryId: number) => dispatch(deleteRegistration(entryId)),\n    updateRegistration: (entryId: number, obj: Partial<Entry>) => dispatch(updateRegistration(entryId, obj)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LifterRow);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the button that adds a new entry to the registrations table.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Button from \"react-bootstrap/Button\";\n\nimport { newRegistration } from \"../../actions/registrationActions\";\n\nimport { Entry } from \"../../types/dataTypes\";\nimport { Dispatch } from \"redux\";\n\ninterface DispatchProps {\n  newRegistration: (obj: Partial<Entry>) => void;\n}\n\ntype Props = DispatchProps;\n\nclass NewButton extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick = () => {\n    this.props.newRegistration({});\n  };\n\n  render() {\n    return (\n      <Button onClick={this.handleClick} variant=\"primary\" size=\"lg\" block>\n        <FormattedMessage id=\"registration.button-new-lifter\" defaultMessage=\"New Lifter\" />\n      </Button>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    newRegistration: (obj: Partial<Entry>) => dispatch(newRegistration(obj)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(NewButton);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines a general CSV manipulation class.\n// This is a JS port of the Python \"oplcsv.py\" library used by the OpenPowerlifting\n// main data project.\n\n// Makes a string suitable for inclusion in a simple CSV file,\n// by deleting all commas and double quotes.\nexport const csvString = (x?: number | string): string => {\n  if (x === undefined) return \"\";\n  let s = String(x);\n\n  // The OpenPowerlifting format uses commas and disallow double-quotes.\n  s = s.replace(/,/g, \" \");\n  s = s.replace(/\"/g, \" \");\n\n  // The number \"0\" is also never written out explicitly; the empty string is preferred.\n  if (s === \"0\") return \"\";\n\n  // Clean up some formatting.\n  s = s.replace(/ {2}/g, \" \").trim();\n  return s;\n};\n\n// Makes a string of a Date object.\n//\n// By default, Excel will reformat our pretty ISO8601 dates (2019-11-30) into\n// a localized, ambiguous variant (11/30/2019). This happens sufficiently often\n// in submitted meet results that it's worth a workaround.\n//\n// Prepending a single-quote character to the date string stops the reformatting.\nexport const csvDate = (iso8601?: string): string => {\n  if (iso8601 === undefined || iso8601 === \"\") return \"\";\n  return csvString(\"'\" + iso8601);\n};\n\n// Returns the in-spreadsheet name of a column. In standard spreadsheet software,\n// rows are numeric (1, 2, 3, ...) and columns are alphabetic (A, B, C, ...).\n// For errors, we'd like to report the column that's wrong.\n//\n// The 'index' input is zero-indexed.\nexport const getSpreadsheetColumnName = (index: number): string => {\n  const alphabet: string = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n\n  // Column name accumulator.\n  // It's built by taking repeated mods in base 26: therefore new characters\n  // are appended to the left of the accumulator.\n  let acc: string = \"\";\n  let n: number = index;\n\n  while (n >= alphabet.length) {\n    const mod = n % alphabet.length;\n    const remainder = Math.floor(n / alphabet.length);\n\n    acc = alphabet[mod] + acc;\n\n    // The subtraction is because this isn't a pure modulus operator:\n    // by analogy to base-10, \"AA\" is equivalent to \"00\", and we want to render\n    // that.\n    n = remainder - 1;\n  }\n\n  return alphabet[n] + acc;\n};\n\n// A class for managing simple CSV files. Double-quotes and commas are disallowed.\nexport class Csv {\n  fieldnames: Array<string>; // Column names.\n  rows: Array<Array<string>>; // Individual rows.\n\n  constructor() {\n    this.fieldnames = [];\n    this.rows = [];\n  }\n\n  length(): number {\n    return this.rows.length;\n  }\n\n  index(name: string): number {\n    return this.fieldnames.indexOf(name);\n  }\n\n  appendColumn(name: string): void {\n    this.fieldnames.push(name);\n    for (let i = 0; i < this.rows.length; i++) {\n      this.rows[i].push(\"\");\n    }\n  }\n\n  appendColumns(namelist: Array<string>): void {\n    this.fieldnames = this.fieldnames.concat(namelist);\n    for (let i = 0; i < this.rows.length; i++) {\n      for (let j = 0; j < namelist.length; j++) {\n        this.rows[i].push(\"\");\n      }\n    }\n  }\n\n  insertColumn(index: number, name: string): void {\n    this.fieldnames.splice(index, 0, name);\n    for (let i = 0; i < this.rows.length; i++) {\n      this.rows[i].splice(index, 0, \"\");\n    }\n  }\n\n  removeColumnByIndex(index: number): void {\n    this.fieldnames.splice(index, 1);\n    for (let i = 0; i < this.rows.length; i++) {\n      this.rows[i].splice(index, 1);\n    }\n  }\n\n  removeColumnByName(name: string): void {\n    for (let i = 0; i < this.fieldnames.length; i++) {\n      if (this.fieldnames[i] === name) {\n        this.removeColumnByIndex(i);\n        return;\n      }\n    }\n  }\n\n  removeEmptyColumns(): void {\n    for (let i = 0; i < this.fieldnames.length; i++) {\n      let empty = true;\n      for (let j = 0; j < this.rows.length; j++) {\n        if (this.rows[j][i] !== \"\") {\n          empty = false;\n          break;\n        }\n      }\n      if (empty === true) {\n        this.removeColumnByIndex(i);\n        this.removeEmptyColumns();\n        return;\n      }\n    }\n  }\n\n  // Attempts to fill in this CSV object from a string.\n  // On success, returns the `this` Csv object.\n  // On failure, returns an error string with a user-presentable message.\n  fromString(s: string): Csv | string {\n    // The string cannot contain double-quotes: programs use those to allow\n    // in-field commas, which we disallow.\n    if (s.includes('\"')) {\n      let e = 'Double-quotes (\") are disallowed.';\n      e += \" Double-quotes can be automatically inserted by spreadsheet software\";\n      e += \" when a field contains a comma. Make sure to delete all in-field commas.\";\n      return e;\n    }\n\n    // Split by newline. It's OK for \\r to remain: we'll strip each field later.\n    // This always produces an array of length at least 1.\n    //\n    // Trim the string first: it's OK if files end with \"\\n\".\n    const lines = s.trim().split(\"\\n\");\n\n    // The first row contains fieldnames.\n    const fieldnames = lines[0].split(\",\").map((x) => x.trim());\n\n    // Any rows after the first contain data.\n    const rows = [];\n    for (let i = 1; i < lines.length; ++i) {\n      const row = lines[i].split(\",\").map((x) => x.trim());\n      rows.push(row);\n    }\n\n    // Sanity checking time!\n    // Every column must be named.\n    for (let i = 0; i < fieldnames.length; ++i) {\n      if (fieldnames[i] === \"\") {\n        const colname = getSpreadsheetColumnName(i);\n        return \"Column \" + colname + \" is missing a column name.\";\n      }\n    }\n\n    // Every row must have the same length as the fieldnames row.\n    for (let i = 0; i < rows.length; ++i) {\n      if (rows[i].length !== fieldnames.length) {\n        const rownum = i + 2; // 1-indexed, and the first row is fieldnames.\n        let e = \"Row \" + rownum + \" has \" + rows[i].length + \" columns,\";\n        e += \" but the first row has \" + fieldnames.length + \" columns.\";\n        return e;\n      }\n    }\n\n    this.fieldnames = fieldnames;\n    this.rows = rows;\n    return this;\n  }\n\n  toString(): string {\n    const headers = this.fieldnames.join(\",\");\n    const strRows: Array<string> = [];\n    for (let i = 0; i < this.rows.length; i++) {\n      strRows.push(this.rows[i].join(\",\"));\n    }\n    return headers + \"\\n\" + strRows.join(\"\\n\") + \"\\n\";\n  }\n}\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines logic for parsing strings into OpenLifter datatypes.\n// The strings can come from the user and are therefore untrusted.\n\nimport { Equipment, Event, Sex } from \"../types/dataTypes\";\n\n// Strictly parse a string to an integer. Negatives are allowed.\nexport const parseInteger = (s: string): number | undefined => {\n  // Characters will be compared to ASCII charcodes.\n  const ascii_0 = 0x30;\n  const ascii_9 = 0x39;\n  const ascii_minus = 0x2d;\n\n  // Disallow the empty string.\n  if (s.length === 0) {\n    return;\n  }\n\n  // Check the string character-by-character.\n  for (let i = 0; i < s.length; ++i) {\n    const charcode = s.charCodeAt(i);\n\n    // A single negative is allowed at the front.\n    if (i === 0 && charcode === ascii_minus) {\n      continue;\n    } else if (charcode < ascii_0 || charcode > ascii_9) {\n      return;\n    }\n  }\n\n  return parseInt(s, 10);\n};\n\n// Loosely parse a string to a Sex.\nexport const parseSex = (s: string): Sex | undefined => {\n  const lower = s.toLowerCase();\n  if (lower === \"m\") return \"M\";\n  if (lower === \"f\") return \"F\";\n  if (lower === \"mx\") return \"Mx\";\n  return;\n};\n\n// Loosely parse a string to an Equipment.\nexport const parseEquipment = (s: string): Equipment | undefined => {\n  const lower = s.toLowerCase();\n  if (lower === \"bare\") return \"Bare\";\n  if (lower === \"sleeves\") return \"Sleeves\";\n  if (lower === \"wraps\") return \"Wraps\";\n  if (lower === \"unlimited\") return \"Unlimited\";\n\n  // Be more forgiving on these ones: nobody remembers the dash.\n  if (lower.startsWith(\"single\")) return \"Single-ply\";\n  if (lower.startsWith(\"multi\")) return \"Multi-ply\";\n  return;\n};\n\n// Parse a string to an Event.\n// Valid characters are \"SBD\", which must occur in that order.\nexport const parseEvent = (s: string): Event | undefined => {\n  if (s === \"\") {\n    return;\n  }\n\n  // Allow lowercase variants like \"sbd\".\n  const lower = s.toLowerCase();\n  const has_squat = lower.includes(\"s\");\n  const has_bench = lower.includes(\"b\");\n  const has_deadlift = lower.includes(\"d\");\n\n  let acc = \"\";\n  if (has_squat) acc += \"S\";\n  if (has_bench) acc += \"B\";\n  if (has_deadlift) acc += \"D\";\n\n  // Having reconstructed the string in the right order, check whether it matches.\n  if (acc !== s) {\n    return;\n  }\n\n  return s as Event;\n};\n\n// Strictly parse a YYYY-MM-DD date.\nexport const parseDate = (s: string): string | undefined => {\n  // Allow a prepended single-quote, inserted for purposes of preventing\n  // Excel auto-localization.\n  s = s.replace(\"'\", \"\");\n\n  // \"YYYY-MM-DD\".length === 10.\n  if (s.length !== 10) {\n    return;\n  }\n\n  const pieces = s.split(\"-\");\n  if (pieces.length !== 3) {\n    return;\n  }\n\n  if (pieces[0].length !== 4 || pieces[1].length !== 2 || pieces[2].length !== 2) {\n    return;\n  }\n\n  const year = parseInteger(pieces[0]);\n  const month = parseInteger(pieces[1]);\n  const day = parseInteger(pieces[2]);\n\n  if (typeof year !== \"number\" || year < 1920) return;\n  if (typeof month !== \"number\" || month < 1 || month > 12) return;\n  if (typeof day !== \"number\" || day < 1 || day > 31) return;\n\n  return s;\n};\n\n// Strictly parse a DD-MM-YYYY date.\nexport const parseEuropeanDate = (s: string): string | undefined => {\n  // Allow a prepended single-quote, inserted for purposes of preventing\n  // Excel auto-localization.\n  s = s.replace(\"'\", \"\");\n\n  // \"DD-MM-YYYY\".length === 10.\n  if (s.length !== 10) {\n    return;\n  }\n\n  const pieces = s.split(\"-\");\n  if (pieces.length !== 3) {\n    return;\n  }\n\n  if (pieces[0].length !== 2 || pieces[1].length !== 2 || pieces[2].length !== 4) {\n    return;\n  }\n\n  const day = parseInteger(pieces[0]);\n  const month = parseInteger(pieces[1]);\n  const year = parseInteger(pieces[2]);\n\n  if (typeof day !== \"number\" || day < 1 || day > 31) return;\n  if (typeof month !== \"number\" || month < 1 || month > 12) return;\n  if (typeof year !== \"number\" || year < 1920) return;\n\n  return s;\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines logic for importing Registration data from a CSV file.\n// The CSV format is very strict: no double-quotes allowed, commas are always\n// separators, and the format of each field must exactly match our internal format.\n\nimport { csvDate, Csv, getSpreadsheetColumnName } from \"../export/csv\";\nimport { newDefaultEntry } from \"../entry\";\n\nimport { parseInteger, parseEuropeanDate } from \"../parsers\";\nimport { getString, delocalizeEquipment, delocalizeEvent, delocalizeFlight, delocalizeSex } from \"../strings\";\nimport { displayNumber } from \"../units\";\n\nimport { Entry, Language } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\n\n// Generates a string representing a downloadable CSV file, for use as an example\n// of the registration format.\n//\n// This is in code so that it can live right next to loadRegistrations()\n// for easier long-term maintenance.\nexport const makeExampleRegistrationsCsv = (language: Language): string => {\n  const csv = new Csv();\n  csv.rows = [[]]; // appendColumns() will resize the dummy row correctly.\n\n  const day = getString(\"import.column-day\", language);\n  const platform = getString(\"import.column-platform\", language);\n  const flight = getString(\"import.column-flight\", language);\n  const name = getString(\"import.column-name\", language);\n  const sex = getString(\"import.column-sex\", language);\n  const equipment = getString(\"import.column-equipment\", language);\n  const division1 = getString(\"import.column-division-n\", language).replace(\"{N}\", \"1\");\n  const division2 = getString(\"import.column-division-n\", language).replace(\"{N}\", \"2\");\n  const division3 = getString(\"import.column-division-n\", language).replace(\"{N}\", \"3\");\n  const event1 = getString(\"import.column-event-n\", language).replace(\"{N}\", \"1\");\n  const event2 = getString(\"import.column-event-n\", language).replace(\"{N}\", \"2\");\n  const event3 = getString(\"import.column-event-n\", language).replace(\"{N}\", \"3\");\n  const birthdate = getString(\"import.column-birthdate\", language);\n  const age = getString(\"import.column-age\", language);\n  const squatRackInfo = getString(\"import.column-squatRack\", language);\n  const benchRackInfo = getString(\"import.column-benchRack\", language);\n  const memberid = getString(\"import.column-memberid\", language);\n  const country = getString(\"import.column-country\", language);\n  const state = getString(\"import.column-state\", language);\n  const lot = getString(\"import.column-lot\", language);\n  const guest = getString(\"import.column-guest\", language);\n  const team = getString(\"import.column-team\", language);\n  const instagram = getString(\"import.column-instagram\", language);\n  const notes = getString(\"import.column-notes\", language);\n\n  csv.appendColumns([day, platform, flight, name, sex, equipment]);\n  csv.appendColumns([division1, division2, division3, event1, event2, event3]);\n  csv.appendColumns([birthdate, age, squatRackInfo, benchRackInfo, memberid, country, state]);\n  csv.appendColumns([lot, team, guest, instagram, notes]);\n\n  csv.rows[0][csv.index(day)] = \"1\";\n  csv.rows[0][csv.index(platform)] = \"1\";\n  csv.rows[0][csv.index(flight)] = getString(\"flight.a\", language);\n  csv.rows[0][csv.index(name)] = getString(\"import.example-name\", language);\n  csv.rows[0][csv.index(sex)] = getString(\"import.example-sex\", language);\n  csv.rows[0][csv.index(equipment)] = getString(\"equipment.sleeves\", language);\n  csv.rows[0][csv.index(division1)] = getString(\"import.example-division1\", language);\n  csv.rows[0][csv.index(division2)] = getString(\"import.example-division2\", language);\n  // Intentionally blank: csv.rows[0][csv.index(division3)]\n  csv.rows[0][csv.index(event1)] = getString(\"event.sbd\", language);\n  csv.rows[0][csv.index(event2)] = getString(\"event.bd\", language);\n  // Intentionally blank: csv.rows[0][csv.index(event3)]\n  csv.rows[0][csv.index(birthdate)] = csvDate(getString(\"import.example-birthdate\", language));\n  // Intentionally blank: csv.rows[0][csv.index(age)]\n  csv.rows[0][csv.index(squatRackInfo)] = \"13\";\n  csv.rows[0][csv.index(benchRackInfo)] = \"7/16\";\n  // Intentionally blank: csv.rows[0][csv.index(memberid)]\n  csv.rows[0][csv.index(country)] = getString(\"import.example-country\", language);\n  csv.rows[0][csv.index(state)] = getString(\"import.example-state\", language);\n  // Intentionally blank: csv.rows[0][csv.index(lot)]\n  csv.rows[0][csv.index(guest)] = getString(\"common.response-yes\", language);\n  // Intentionally blank: csv.rows[0][csv.index(team)]\n  // Intentionally blank: csv.rows[0][csv.index(team)]\n  csv.rows[0][csv.index(instagram)] = getString(\"import.example-instagram\", language);\n  csv.rows[0][csv.index(notes)] = getString(\"import.example-notes\", language);\n\n  return csv.toString();\n};\n\n// Attempts to load registration information from a CSV object.\n//\n// On success, returns an array of Entry objects.\n//   NOTE CAREFULLY that the global state is not updated by this function.\n//   The caller must integrate the Entry objects, updating EntryID Tracking.\n// On failure, returns an error string with a user-presentable message.\nexport const loadRegistrations = (state: GlobalState, csv: Csv, language: Language): Array<Entry> | string => {\n  const division_template = getString(\"import.column-division-n\", language);\n  const event_template = getString(\"import.column-event-n\", language);\n\n  const col_day = getString(\"import.column-day\", language);\n  const col_platform = getString(\"import.column-platform\", language);\n  const col_flight = getString(\"import.column-flight\", language);\n  const col_name = getString(\"import.column-name\", language);\n  const col_sex = getString(\"import.column-sex\", language);\n  const col_equipment = getString(\"import.column-equipment\", language);\n  const col_division1 = division_template.replace(\"{N}\", \"1\");\n  const col_division2 = division_template.replace(\"{N}\", \"2\");\n  const col_division3 = division_template.replace(\"{N}\", \"3\");\n  const col_division4 = division_template.replace(\"{N}\", \"4\");\n  const col_division5 = division_template.replace(\"{N}\", \"5\");\n  const col_event1 = event_template.replace(\"{N}\", \"1\");\n  const col_event2 = event_template.replace(\"{N}\", \"2\");\n  const col_event3 = event_template.replace(\"{N}\", \"3\");\n  const col_event4 = event_template.replace(\"{N}\", \"4\");\n  const col_event5 = event_template.replace(\"{N}\", \"5\");\n  const col_birthdate = getString(\"import.column-birthdate\", language);\n  const col_age = getString(\"import.column-age\", language);\n  const col_squatRackInfo = getString(\"import.column-squatRack\", language);\n  const col_benchRackInfo = getString(\"import.column-benchRack\", language);\n  const col_memberid = getString(\"import.column-memberid\", language);\n  const col_country = getString(\"import.column-country\", language);\n  const col_state = getString(\"import.column-state\", language);\n  const col_lot = getString(\"import.column-lot\", language);\n  const col_guest = getString(\"import.column-guest\", language);\n  const col_team = getString(\"import.column-team\", language);\n  const col_instagram = getString(\"import.column-instagram\", language);\n  const col_notes = getString(\"import.column-notes\", language);\n\n  // Every fieldname must be either mandatory or optional.\n  const MANDATORY_FIELDNAMES = [\n    col_day,\n    col_platform,\n    col_flight,\n    col_name,\n    col_sex,\n    col_equipment,\n    col_division1,\n    col_event1,\n  ];\n  const OPTIONAL_FIELDNAMES = [\n    col_division2,\n    col_division3,\n    col_division4,\n    col_division5,\n    col_event2,\n    col_event3,\n    col_event4,\n    col_event5,\n    col_birthdate,\n    col_age,\n    col_squatRackInfo,\n    col_benchRackInfo,\n    col_memberid,\n    col_country,\n    col_state,\n    col_lot,\n    col_guest,\n    col_team,\n    col_instagram,\n    col_notes,\n  ];\n\n  // Check the existent fieldnames for sanity.\n  for (let i = 0; i < csv.fieldnames.length; ++i) {\n    const name: string = csv.fieldnames[i];\n\n    // Every fieldname that appears must be known.\n    if (!MANDATORY_FIELDNAMES.includes(name) && !OPTIONAL_FIELDNAMES.includes(name)) {\n      const colname = getSpreadsheetColumnName(i);\n      const allfields: string = MANDATORY_FIELDNAMES.join(\", \") + \", \" + OPTIONAL_FIELDNAMES.join(\", \");\n\n      const e = getString(\"error.csv-unknown-header\", language);\n      return e.replace(\"{name}\", name).replace(\"{ABC}\", colname).replace(\"{validList}\", allfields);\n    }\n\n    // Fieldnames cannot be repeated.\n    for (let j = i + 1; j < csv.fieldnames.length; ++j) {\n      if (csv.fieldnames[j] === csv.fieldnames[i]) {\n        const iname = getSpreadsheetColumnName(i);\n        const jname = getSpreadsheetColumnName(j);\n\n        const e = getString(\"error.csv-duplicate-header\", language);\n        return e.replace(\"{name}\", csv.fieldnames[i]).replace(\"{firstABC}\", iname).replace(\"{secondABC}\", jname);\n      }\n    }\n  }\n\n  // Check that all of the MANDATORY_FIELDNAMES are included.\n  for (let i = 0; i < MANDATORY_FIELDNAMES.length; ++i) {\n    if (!csv.fieldnames.includes(MANDATORY_FIELDNAMES[i])) {\n      const e = getString(\"error.csv-missing-header\", language);\n      return e.replace(\"{name}\", MANDATORY_FIELDNAMES[i]);\n    }\n  }\n\n  // The \"Platform\" column\" must occur after the \"Day\" column: the parsing\n  // below is stateful, and needs to know how many platforms are on that day\n  // when it reads in the platform value.\n  if (csv.fieldnames.indexOf(col_platform) <= csv.fieldnames.indexOf(col_day)) {\n    const e = getString(\"error.csv-day-platform-order\", language);\n    return e.replace(\"{day}\", col_day).replace(\"{platform}\", col_platform);\n  }\n\n  // The caller needs to update this field on the state later, if successful.\n  let nextEntryId = state.registration.nextEntryId;\n  const entries: Array<Entry> = [];\n\n  const errprefix_template = getString(\"error.csv-field-prefix\", language);\n\n  // The fieldnames are valid! Now we can start building Entries.\n  for (let i = 0; i < csv.rows.length; ++i) {\n    const entry: Entry = newDefaultEntry(nextEntryId++);\n    entries.push(entry);\n\n    // Iterate over each field and integrate it into the Entry object.\n    const row: Array<string> = csv.rows[i];\n    for (let j = 0; j < row.length; ++j) {\n      const fieldname = csv.fieldnames[j];\n      const val = row[j];\n\n      // User-visible row number, for error messages.\n      // The first row is for the fieldnames, and spreadsheet programs are 1-indexed.\n      const rowstr = displayNumber(i + 2, language);\n\n      // Start building the error string early, since it's repeated a lot.\n      const errprefix = errprefix_template\n        .replace(\"{cellType}\", fieldname)\n        .replace(\"{cellValue}\", val)\n        .replace(\"{rowNumber}\", rowstr);\n\n      if (fieldname === col_day) {\n        // Default to 1.\n        if (val === \"\") {\n          entry.day = 1;\n        } else {\n          const integer = parseInteger(val);\n\n          // Must be an integer.\n          if (typeof integer !== \"number\") {\n            return errprefix + getString(\"error.csv-field-suffix-integer\", language);\n          }\n\n          // Can't be less than one: there's always at least one day.\n          if (integer < 1) {\n            return errprefix + getString(\"error.csv-field-suffix-positive\", language);\n          }\n\n          // Can't be greater than the number of days specified in the GlobalState.\n          const numDays = state.meet.lengthDays;\n          if (integer > numDays) {\n            const e = getString(\"error.csv-field-suffix-day-overflow\", language);\n            return errprefix + e.replace(\"{numDays}\", String(numDays));\n          }\n\n          // All checks passed!\n          entry.day = integer;\n        }\n      } else if (fieldname === col_platform) {\n        // Default to 1.\n        if (val === \"\") {\n          entry.platform = 1;\n        } else {\n          const integer = parseInteger(val);\n\n          // Must be an integer.\n          if (typeof integer !== \"number\") {\n            return errprefix + getString(\"error.csv-field-suffix-integer\", language);\n          }\n\n          // Can't be less than one: there's always at least one platform.\n          if (integer < 1) {\n            return errprefix + getString(\"error.csv-field-suffix-positive\", language);\n          }\n\n          // Can't be greater than the number of platforms specified in the GlobalState.\n          // The \"Day\" column is guaranteed to already have been parsed: code above\n          // makes sure the \"Day\" column is before the \"Platform\" column.\n          const day = entry.day;\n          const platforms = state.meet.platformsOnDays[day];\n          if (integer > platforms) {\n            const e = getString(\"error.csv-field-suffix-platform-overflow\", language);\n            return errprefix + e.replace(\"{dayNumber}\", String(day)).replace(\"{numPlatforms}\", String(platforms));\n          }\n\n          // All checks passed!\n          entry.platform = integer;\n        }\n      } else if (fieldname === col_flight) {\n        // Default to A.\n        if (val === \"\") {\n          entry.flight = \"A\";\n        } else {\n          try {\n            entry.flight = delocalizeFlight(val, language);\n          } catch (err) {\n            return errprefix + getString(\"error.csv-field-suffix-flight-invalid\", language);\n          }\n        }\n      } else if (fieldname === col_name) {\n        if (val === \"\") {\n          return errprefix + getString(\"error.csv-field-suffix-name-blank\", language);\n        }\n        entry.name = val;\n      } else if (fieldname === col_sex) {\n        try {\n          entry.sex = delocalizeSex(val, language);\n        } catch (err) {\n          const e = getString(\"error.csv-field-suffix-sex-invalid\", language);\n          const m = getString(\"sex.m\", language);\n          const f = getString(\"sex.f\", language);\n          const mx = getString(\"sex.mx\", language);\n          return errprefix + e.replace(\"{M}\", m).replace(\"{F}\", f).replace(\"{Mx}\", mx);\n        }\n      } else if (fieldname === col_equipment) {\n        try {\n          entry.equipment = delocalizeEquipment(val, language);\n        } catch (err) {\n          const e = getString(\"error.csv-field-suffix-equipment-invalid\", language);\n          const bare = getString(\"equipment.bare\", language);\n          const sleeves = getString(\"equipment.sleeves\", language);\n          const wraps = getString(\"equipment.wraps\", language);\n          const single = getString(\"equipment.single-ply\", language);\n          const multi = getString(\"equipment.multi-ply\", language);\n          return (\n            errprefix +\n            e\n              .replace(\"{bare}\", bare)\n              .replace(\"{sleeves}\", sleeves)\n              .replace(\"{wraps}\", wraps)\n              .replace(\"{single}\", single)\n              .replace(\"{multi}\", multi)\n          );\n        }\n      } else if (\n        fieldname === col_division1 ||\n        fieldname === col_division2 ||\n        fieldname === col_division3 ||\n        fieldname === col_division4 ||\n        fieldname === col_division5\n      ) {\n        if (val === \"\") {\n          // Only the first Division is mandatory.\n          if (fieldname === col_division1) {\n            return errprefix + getString(\"error.csv-field-suffix-division-blank\", language);\n          }\n        } else {\n          // Check that it appears as a valid division.\n          if (!state.meet.divisions.includes(val)) {\n            return errprefix + getString(\"error.csv-field-suffix-division-invalid\", language);\n          }\n\n          // Check that it wasn't already added.\n          if (entry.divisions.includes(val)) {\n            return errprefix + getString(\"error.csv-field-suffix-division-duplicate\", language);\n          }\n\n          entry.divisions.push(val);\n        }\n      } else if (\n        fieldname === col_event1 ||\n        fieldname === col_event2 ||\n        fieldname === col_event3 ||\n        fieldname === col_event4 ||\n        fieldname === col_event5\n      ) {\n        if (val === \"\") {\n          // Only the first Event is mandatory.\n          if (fieldname === col_event1) {\n            return errprefix + getString(\"error.csv-field-suffix-event-blank\", language);\n          }\n        } else {\n          try {\n            const evt = delocalizeEvent(val, language);\n\n            // Check for duplicates.\n            if (entry.events.includes(evt)) {\n              return errprefix + getString(\"error.csv-field-suffix-event-duplicate\", language);\n            }\n            entry.events.push(evt);\n          } catch (err) {\n            const e = getString(\"error.csv-field-suffix-event-invalid\", language);\n            const sbd = getString(\"event.sbd\", language);\n            const bd = getString(\"event.bd\", language);\n            const sb = getString(\"event.sb\", language);\n            const sd = getString(\"event.sd\", language);\n            const s = getString(\"event.s\", language);\n            const b = getString(\"event.b\", language);\n            const d = getString(\"event.d\", language);\n            return (\n              errprefix +\n              e\n                .replace(\"{SBD}\", sbd)\n                .replace(\"{BD}\", bd)\n                .replace(\"{SB}\", sb)\n                .replace(\"{SD}\", sd)\n                .replace(\"{S}\", s)\n                .replace(\"{B}\", b)\n                .replace(\"{D}\", d)\n            );\n          }\n        }\n      } else if (fieldname === col_birthdate) {\n        // BirthDate is optional.\n        if (val !== \"\") {\n          const bd = parseEuropeanDate(val);\n          if (typeof bd !== \"string\") {\n            return errprefix + getString(\"error.csv-field-suffix-date-format\", language);\n          }\n\n          entry.birthDate = bd;\n        }\n      } else if (fieldname === col_age) {\n        // Age is optional.\n        if (val !== \"\") {\n          const integer = parseInteger(val);\n          if (typeof integer !== \"number\" || integer < 1) {\n            return errprefix + getString(\"error.csv-field-empty-or-positive\", language);\n          }\n\n          // All checks passed!\n          entry.age = integer;\n        }\n      } else if (fieldname === col_squatRackInfo) {\n        entry.squatRackInfo = val;\n      } else if (fieldname === col_benchRackInfo) {\n        entry.benchRackInfo = val;\n      } else if (fieldname === col_memberid) {\n        entry.memberId = val;\n      } else if (fieldname === col_country) {\n        entry.country = val;\n      } else if (fieldname === col_state) {\n        entry.state = val;\n      } else if (fieldname === col_lot) {\n        // Empty strings are allowed: just doesn't use lots.\n        if (val !== \"\") {\n          const integer = parseInteger(val);\n          if (typeof integer !== \"number\" || integer < 1) {\n            return errprefix + getString(\"error.csv-field-empty-or-positive\", language);\n          }\n\n          // All checks passed!\n          entry.lot = integer;\n        }\n      } else if (fieldname === col_guest) {\n        if (val === getString(\"common.response-yes\", language)) {\n          entry.guest = true;\n        } else if (val === getString(\"common.response-no\", language)) {\n          entry.guest = false;\n        } else if (val === \"\") {\n          entry.guest = false;\n        } else {\n          const e = getString(\"error.csv-field-unknown-boolean\", language);\n          const yes = getString(\"common.response-yes\", language);\n          const no = getString(\"common.response-no\", language);\n          return errprefix + e.replace(\"{Yes}\", yes).replace(\"{No}\", no);\n        }\n      } else if (fieldname === col_team) {\n        entry.team = val;\n      } else if (fieldname === col_instagram) {\n        entry.instagram = val;\n      } else if (fieldname === col_notes) {\n        entry.notes = val;\n      } else {\n        return 'Missing handler for the \"' + fieldname + '\" column';\n      }\n    }\n  }\n\n  return entries;\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Exports registration data to a CSV file.\n\nimport { csvDate, csvString, Csv } from \"./csv\";\nimport { getString, localizeEquipment, localizeEvent, localizeFlight, localizeSex } from \"../strings\";\n\nimport { Language } from \"../../types/dataTypes\";\nimport { RegistrationState } from \"../../types/stateTypes\";\n\nconst boolToYesNo = (b: boolean, language: Language): string => {\n  if (b === true) {\n    return getString(\"common.response-yes\", language);\n  }\n  return getString(\"common.response-no\", language);\n};\n\nexport const makeRegistrationsCsv = (registration: RegistrationState, language: Language): string => {\n  const csv = new Csv();\n\n  const division_template = getString(\"import.column-division-n\", language);\n  const event_template = getString(\"import.column-event-n\", language);\n\n  const col_day = getString(\"import.column-day\", language);\n  const col_platform = getString(\"import.column-platform\", language);\n  const col_flight = getString(\"import.column-flight\", language);\n  const col_name = getString(\"import.column-name\", language);\n  const col_sex = getString(\"import.column-sex\", language);\n  const col_equipment = getString(\"import.column-equipment\", language);\n  const col_division1 = division_template.replace(\"{N}\", \"1\");\n  const col_event1 = event_template.replace(\"{N}\", \"1\");\n  const col_birthdate = getString(\"import.column-birthdate\", language);\n  const col_age = getString(\"import.column-age\", language);\n  const col_squatRackInfo = getString(\"import.column-squatRack\", language);\n  const col_benchRackInfo = getString(\"import.column-benchRack\", language);\n  const col_memberid = getString(\"import.column-memberid\", language);\n  const col_country = getString(\"import.column-country\", language);\n  const col_state = getString(\"import.column-state\", language);\n  const col_lot = getString(\"import.column-lot\", language);\n  const col_guest = getString(\"import.column-guest\", language);\n  const col_team = getString(\"import.column-team\", language);\n  const col_instagram = getString(\"import.column-instagram\", language);\n  const col_notes = getString(\"import.column-notes\", language);\n\n  csv.appendColumns([col_day, col_platform, col_flight, col_name, col_sex, col_equipment]);\n  csv.appendColumns([col_division1, col_event1]); // Base cases. Others inserted by need.\n  csv.appendColumns([col_birthdate, col_age, col_squatRackInfo, col_benchRackInfo, col_memberid]);\n  csv.appendColumns([col_country, col_state, col_lot, col_guest, col_team, col_instagram, col_notes]);\n\n  for (let i = 0; i < registration.entries.length; ++i) {\n    const entry = registration.entries[i];\n\n    const row: Array<string> = new Array(csv.fieldnames.length).fill(\"\");\n    row[csv.index(col_day)] = csvString(entry.day);\n    row[csv.index(col_platform)] = csvString(entry.platform);\n    row[csv.index(col_flight)] = csvString(localizeFlight(entry.flight, language));\n    row[csv.index(col_name)] = csvString(entry.name);\n    row[csv.index(col_sex)] = csvString(localizeSex(entry.sex, language));\n    row[csv.index(col_equipment)] = csvString(localizeEquipment(entry.equipment, language));\n    row[csv.index(col_birthdate)] = csvDate(entry.birthDate);\n    row[csv.index(col_age)] = csvString(entry.age);\n    row[csv.index(col_squatRackInfo)] = csvString(entry.squatRackInfo);\n    row[csv.index(col_benchRackInfo)] = csvString(entry.benchRackInfo);\n    row[csv.index(col_memberid)] = csvString(entry.memberId);\n    row[csv.index(col_country)] = csvString(entry.country);\n    row[csv.index(col_state)] = csvString(entry.state);\n    row[csv.index(col_lot)] = csvString(entry.lot);\n    row[csv.index(col_guest)] = csvString(boolToYesNo(entry.guest, language));\n    row[csv.index(col_team)] = csvString(entry.team);\n    row[csv.index(col_instagram)] = csvString(entry.instagram);\n    row[csv.index(col_notes)] = csvString(entry.notes);\n\n    // Divisions.\n    for (let j = 0; j < entry.divisions.length; ++j) {\n      const division: string = entry.divisions[j];\n      const column: string = division_template.replace(\"{N}\", String(j + 1));\n\n      // Create the column if necessary. The previously numbered column exists.\n      if (csv.index(column) === -1) {\n        const prevIndex = csv.index(division_template.replace(\"{N}\", String(j)));\n        csv.insertColumn(prevIndex + 1, column); // Make space in other rows.\n        row.splice(prevIndex + 1, 0, \"\"); // Make space in this row.\n      }\n      row[csv.index(column)] = csvString(division);\n    }\n\n    // Events.\n    for (let j = 0; j < entry.events.length; ++j) {\n      const event = entry.events[j];\n      const column: string = event_template.replace(\"{N}\", String(j + 1));\n\n      // Create the column if necessary. The previously numbered column exists.\n      if (csv.index(column) === -1) {\n        const prevIndex = csv.index(event_template.replace(\"{N}\", String(j)));\n        csv.insertColumn(prevIndex + 1, column); // Make space in other rows.\n        row.splice(prevIndex + 1, 0, \"\"); // Make space in this row.\n      }\n      row[csv.index(column)] = csvString(localizeEvent(event, language));\n    }\n\n    csv.rows.push(row);\n  }\n\n  return csv.toString();\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Common functions shared by the Randomize feature.\n\n// Generate a gibberish string, between 0-11 characters.\nimport { lbs2kg } from \"../../logic/units\";\n\nexport const randomString = (): string => {\n  // Converts each digit to a value in base 36.\n  return Math.random().toString(36).substr(2);\n};\n\n// Generate a random integer between max and min, inclusive.\nexport const randomInt = (min: number, max: number) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\n// Generate a random floating-point number with a set number of fractional digits.\nexport const randomFixedPoint = (min: number, max: number, fixedPoints: number) => {\n  const power = Math.pow(10, fixedPoints);\n\n  // Construct an integer from [0, (max - min + 1) * 10^fixedPoints].\n  const k = Math.floor(Math.random() * (max - min + 1) * power);\n\n  // Translate it back to normal space.\n  return k / power + min;\n};\n\nexport const randomAttemptWithMin = (inKg: boolean, min: number) => {\n  const multiple = 2.5;\n  if (inKg) {\n    return Math.floor(randomFixedPoint(min, 360, 1) / multiple) * multiple;\n  } else {\n    return lbs2kg(Math.floor(randomFixedPoint(min, 800, 1) / multiple) * multiple);\n  }\n};\n\nexport const randomAttempt = (inKg: boolean) => {\n  const min = inKg ? 25 : 55;\n  return randomAttemptWithMin(inKg, min);\n};\n\n// Randomly shuffle an array in-place using the Fisher-Yates algorithm.\n//\n// For each element, swap it with a randomly-chosen element of greater or equal index.\nexport const shuffle = <T>(array: Array<Readonly<T>>): void => {\n  const numElements = array.length;\n\n  for (let i = 0; i < numElements - 1; i++) {\n    // Randomly select an element of greater or equal index.\n    const switchIndex = randomInt(i, numElements - 1);\n\n    // Swap the two elements.\n    const temp = array[i];\n    array[i] = array[switchIndex];\n    array[switchIndex] = temp;\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// The parent component of the Registration page, contained by the RegistrationContainer.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Button from \"react-bootstrap/Button\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Card from \"react-bootstrap/Card\";\n\nimport { faSpinner, faTimes, faRandom, faSort } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport LifterTable from \"./LifterTable\";\nimport LifterRow from \"./LifterRow\";\nimport NewButton from \"./NewButton\";\nimport ErrorModal from \"../ErrorModal\";\n\nimport { Csv } from \"../../logic/export/csv\";\nimport { makeExampleRegistrationsCsv, loadRegistrations } from \"../../logic/import/registration-csv\";\nimport { makeRegistrationsCsv } from \"../../logic/export/registrations\";\nimport { getString } from \"../../logic/strings\";\n\nimport { newRegistration, deleteRegistration, assignLotNumbers } from \"../../actions/registrationActions\";\n\nimport { saveAs } from \"file-saver\";\n\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { Entry } from \"../../types/dataTypes\";\nimport { Dispatch } from \"redux\";\nimport { DropdownButton, Dropdown } from \"react-bootstrap\";\nimport { shuffle } from \"../debug/RandomizeHelpers\";\n\ninterface StateProps {\n  global: GlobalState;\n}\n\ninterface DispatchProps {\n  newRegistration: (obj: Partial<Entry>) => void;\n  deleteRegistration: (id: number) => void;\n  assignLotNumbers: (lotNumbers: number[]) => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\ninterface InternalState {\n  // Controls the ErrorModal popup. Shown when error !== \"\".\n  error: string;\n  // Used for showing spinning indicators when loading files\n  isLoadingFiles: boolean;\n}\n\n// Used to distinguish between the Overwrite and Append modes.\nlet globalImportKind: string = \"Overwrite\";\n\nclass RegistrationView extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n    this.handleDownloadCsvTemplateClick = this.handleDownloadCsvTemplateClick.bind(this);\n    this.handleExportCsvClick = this.handleExportCsvClick.bind(this);\n    this.handleOverwriteClick = this.handleOverwriteClick.bind(this);\n    this.handleAppendClick = this.handleAppendClick.bind(this);\n    this.handleLoadFileInput = this.handleLoadFileInput.bind(this);\n    this.handleSequentialLotNumbersClick = this.handleSequentialLotNumbersClick.bind(this);\n    this.handleRandomLotNumbersClick = this.handleRandomLotNumbersClick.bind(this);\n    this.handleRemoveLotNumbersClick = this.handleRemoveLotNumbersClick.bind(this);\n    this.closeErrorModal = this.closeErrorModal.bind(this);\n\n    this.state = { error: \"\", isLoadingFiles: false };\n  }\n\n  handleDownloadCsvTemplateClick = () => {\n    const text = makeExampleRegistrationsCsv(this.props.global.language);\n    const blob = new Blob([text], { type: \"application/text;charset=utf-8\" });\n    const filename = getString(\"import.template-filename\", this.props.global.language) + \".csv\";\n    saveAs(blob, filename);\n  };\n\n  handleExportCsvClick = () => {\n    let meetname = this.props.global.meet.name;\n    if (meetname === \"\") {\n      meetname = getString(\"common.unnamed-filename\", this.props.global.language);\n    }\n    meetname = meetname.replace(/ /g, \"-\");\n\n    const language = this.props.global.language;\n    const text = makeRegistrationsCsv(this.props.global.registration, language);\n    const blob = new Blob([text], { type: \"application/text;charset=utf-8\" });\n\n    const basename = getString(\"import.export-filename\", this.props.global.language);\n    const filename = basename.replace(\"{MeetName}\", meetname) + \".csv\";\n    saveAs(blob, filename);\n  };\n\n  handleOverwriteClick = () => {\n    globalImportKind = \"Overwrite\";\n    const loadhelper = document.getElementById(\"loadhelper\");\n    if (loadhelper !== null) {\n      loadhelper.click();\n    }\n  };\n\n  handleSequentialLotNumbersClick = () => {\n    this.updateLotNumbers(\"AssignSequentially\");\n  };\n\n  handleRandomLotNumbersClick = () => {\n    this.updateLotNumbers(\"AssignRandomly\");\n  };\n\n  handleRemoveLotNumbersClick = () => {\n    this.updateLotNumbers(\"RemoveAll\");\n  };\n\n  updateLotNumbers = (manipulation: \"AssignSequentially\" | \"AssignRandomly\" | \"RemoveAll\"): void => {\n    const entries = this.props.global.registration.entries;\n    let lotNumbers: number[];\n\n    // Removing lot numbers is as simple as setting the number to 0\n    if (manipulation === \"RemoveAll\") {\n      lotNumbers = entries.map(() => 0);\n    } else {\n      // If not removing, generate a set of sequential lot numbers for all lifters.\n      lotNumbers = entries.map((_entry, index) => index + 1);\n    }\n\n    // If randomization was requested, shuffle the lot number array in-place.\n    if (manipulation === \"AssignRandomly\") {\n      shuffle(lotNumbers);\n    }\n\n    // Finally, update the lot numbers in the state\n    this.props.assignLotNumbers(lotNumbers);\n  };\n\n  handleAppendClick = () => {\n    globalImportKind = \"Append\";\n    const loadhelper = document.getElementById(\"loadhelper\");\n    if (loadhelper !== null) {\n      loadhelper.click();\n    }\n  };\n\n  handleLoadFileInput = () => {\n    const loadHelper = document.getElementById(\"loadhelper\");\n    if (loadHelper === null || !(loadHelper instanceof HTMLInputElement) || loadHelper.files === null) {\n      return;\n    }\n\n    const selectedFile = loadHelper.files[0];\n    const rememberThis = this;\n\n    const reader = new FileReader();\n\n    reader.onload = function () {\n      // If this occurs, we've introduced a bug when initiating the file reader, or the read failed.\n      // Add this check as a guard so the typing is narrowed\n      if (typeof reader.result !== \"string\") {\n        window.alert(\"Unable to load file: an unexpected internal error occured\");\n        return;\n      }\n\n      const csv = new Csv();\n      const maybeError = csv.fromString(reader.result.replace(/;/g, \",\"));\n\n      // Check if an error message occurred.\n      if (typeof maybeError === \"string\") {\n        rememberThis.setState({ error: maybeError });\n        return;\n      }\n\n      // Convert the Csv to an Array<Entry>.\n      const language = rememberThis.props.global.language;\n      const maybeEntries = loadRegistrations(rememberThis.props.global, csv, language);\n      if (typeof maybeEntries === \"string\") {\n        rememberThis.setState({ error: maybeEntries });\n        return;\n      }\n\n      // Successfully parsed and loaded!\n      const entries: Array<Entry> = maybeEntries;\n\n      // If the mode is \"Overwrite\", delete all existing Entries.\n      if (globalImportKind === \"Overwrite\") {\n        const entryIds = rememberThis.props.global.registration.entries.map((e) => e.id);\n        for (let i = 0; i < entryIds.length; ++i) {\n          rememberThis.props.deleteRegistration(entryIds[i]);\n        }\n      }\n\n      // Add all the new Entries.\n      for (let i = 0; i < entries.length; ++i) {\n        // Deleting the 'id' field causes newRegistration() to assign a valid one.\n        delete entries[i].id;\n        rememberThis.props.newRegistration(entries[i]);\n      }\n    };\n\n    reader.onloadstart = function () {\n      rememberThis.setState({ isLoadingFiles: true });\n    };\n\n    reader.onloadend = function () {\n      rememberThis.setState({ isLoadingFiles: false });\n    };\n\n    reader.readAsText(selectedFile);\n  };\n\n  closeErrorModal = () => {\n    this.setState({ error: \"\" });\n  };\n\n  render() {\n    const numEntries = this.props.global.registration.entries.length;\n    const dropdownIconStyle = { width: \"16px\", marginRight: \"6px\" };\n\n    return (\n      <div>\n        <ErrorModal\n          error={this.state.error}\n          title={getString(\"registration.importation-error\", this.props.global.language)}\n          show={this.state.error !== \"\"}\n          close={this.closeErrorModal}\n        />\n\n        <Card style={{ marginBottom: \"17px\" }}>\n          <Card.Header>\n            <FormattedMessage id=\"registration.auto-import-card-header\" defaultMessage=\"Auto-Import Registrations\" />\n          </Card.Header>\n          <Card.Body>\n            <Button variant=\"info\" onClick={this.handleDownloadCsvTemplateClick}>\n              <FormattedMessage id=\"registration.button-download-template\" defaultMessage=\"Download Template\" />\n            </Button>\n\n            <Button\n              variant=\"success\"\n              disabled={numEntries === 0}\n              onClick={this.handleExportCsvClick}\n              style={{ marginLeft: \"14px\" }}\n            >\n              <FormattedMessage id=\"registration.button-export-to-csv\" defaultMessage=\"Export to CSV\" />\n            </Button>\n\n            <ButtonGroup style={{ marginLeft: \"14px\" }}>\n              <Button variant=\"danger\" onClick={this.handleOverwriteClick}>\n                {this.state.isLoadingFiles && <FontAwesomeIcon style={{ marginRight: \"5px\" }} icon={faSpinner} spin />}\n                <FormattedMessage\n                  id=\"registration.button-overwrite-from-csv\"\n                  defaultMessage=\"Overwrite Registrations from CSV\"\n                />\n              </Button>\n              <Button variant=\"warning\" onClick={this.handleAppendClick}>\n                <FormattedMessage\n                  id=\"registration.button-append-from-csv\"\n                  defaultMessage=\"Append Registrations from CSV\"\n                />\n              </Button>\n            </ButtonGroup>\n          </Card.Body>\n        </Card>\n\n        <Card style={{ marginBottom: \"17px\" }}>\n          <Card.Header>\n            <FormattedMessage id=\"registration.tools-header\" defaultMessage=\"Tools\" />\n          </Card.Header>\n          <Card.Body>\n            <ButtonGroup vertical>\n              <DropdownButton\n                as={ButtonGroup}\n                title={\n                  <FormattedMessage id=\"registration.dropdown-manage-lot-numbers\" defaultMessage=\"Manage Lot Numbers\" />\n                }\n                id=\"registration.button-assign-lot-numbers\"\n              >\n                <Dropdown.Item onClick={this.handleSequentialLotNumbersClick}>\n                  <FontAwesomeIcon icon={faSort} style={dropdownIconStyle} />\n                  <FormattedMessage\n                    id=\"registration.button-assign-lot-numbers-sequentially\"\n                    defaultMessage=\"Assign Sequentially\"\n                  />\n                </Dropdown.Item>\n                <Dropdown.Item onClick={this.handleRandomLotNumbersClick}>\n                  <FontAwesomeIcon icon={faRandom} style={dropdownIconStyle} />\n                  <FormattedMessage\n                    id=\"registration.button-assign-lot-numbers-randomly\"\n                    defaultMessage=\"Assign Randomly\"\n                  />\n                </Dropdown.Item>\n                <Dropdown.Item onClick={this.handleRemoveLotNumbersClick}>\n                  <FontAwesomeIcon icon={faTimes} style={dropdownIconStyle} />\n                  <FormattedMessage id=\"registration.button-remove-lot-numbers\" defaultMessage=\"Remove Lot Numbers\" />\n                </Dropdown.Item>\n              </DropdownButton>\n            </ButtonGroup>\n          </Card.Body>\n        </Card>\n\n        <LifterTable entries={this.props.global.registration.entries} rowRenderer={LifterRow} />\n        <NewButton />\n\n        <input\n          id=\"loadhelper\"\n          type=\"file\"\n          accept=\".csv\"\n          style={{ display: \"none\" }}\n          onChange={this.handleLoadFileInput}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  global: state,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    newRegistration: (obj: Partial<Entry>) => dispatch(newRegistration(obj)),\n    deleteRegistration: (id: number) => dispatch(deleteRegistration(id)),\n    assignLotNumbers: (lotNumbers: number[]) => dispatch(assignLotNumbers(lotNumbers)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegistrationView);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Container for the Registration page.\n\nimport React from \"react\";\n\nimport RegistrationView from \"../components/registration/RegistrationView\";\nimport styles from \"../components/common/ContentArea.module.scss\";\n\nclass RegistrationContainer extends React.Component<{}> {\n  render() {\n    return (\n      <div className={styles.contentArea}>\n        <RegistrationView />\n      </div>\n    );\n  }\n}\n\nexport default RegistrationContainer;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Table from \"react-bootstrap/Table\";\n\nimport { getString } from \"../../logic/strings\";\n\nimport { Entry, Language } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\n\ninterface OwnProps {\n  entries: Array<Entry>;\n  rowRenderer: any;\n  inLiftingPage?: boolean;\n}\n\ninterface StateProps {\n  inKg: boolean;\n  language: Language;\n}\n\ntype Props = OwnProps & StateProps;\n\nclass LifterTable extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n    this.renderRows = this.renderRows.bind(this);\n    this.renderHeader = this.renderHeader.bind(this);\n  }\n\n  renderRows = () => {\n    const LifterRow = this.props.rowRenderer;\n    const { entries } = this.props;\n    const inLiftingPage = this.props.inLiftingPage === true;\n\n    return entries.map((entry) => <LifterRow key={entry.id} id={entry.id} inLiftingPage={inLiftingPage} />);\n  };\n\n  renderHeader = () => {\n    // Styling for small, single-character selector columns.\n    const shortStyle = { width: \"85px\" };\n\n    const inKg = this.props.inKg;\n\n    const bodyweightId = inKg ? \"weigh-ins.bodyweight-header-kg\" : \"weigh-ins.bodyweight-header-lbs\";\n    const squatId = inKg ? \"weigh-ins.squat-header-kg\" : \"weigh-ins.squat-header-lbs\";\n    const benchId = inKg ? \"weigh-ins.bench-header-kg\" : \"weigh-ins.bench-header-lbs\";\n    const deadliftId = inKg ? \"weigh-ins.deadlift-header-kg\" : \"weigh-ins.deadlift-header-lbs\";\n\n    return (\n      <tr>\n        <th style={shortStyle}>\n          <FormattedMessage id=\"weigh-ins.platform-header\" defaultMessage=\"Platform\" />\n        </th>\n        <th style={shortStyle}>\n          <FormattedMessage id=\"weigh-ins.platform-flight\" defaultMessage=\"Flight\" />\n        </th>\n        <th>{getString(\"lifting.column-lifter\", this.props.language)}</th>\n\n        <th style={shortStyle}>{getString(\"common.age\", this.props.language)}</th>\n        <th style={shortStyle}>{getString(bodyweightId, this.props.language)}</th>\n        <th style={shortStyle}>\n          <FormattedMessage id=\"weigh-ins.squat-rack-header\" defaultMessage=\"Squat Rack\" />\n        </th>\n        <th style={shortStyle}>{getString(squatId, this.props.language)}</th>\n        <th style={shortStyle}>\n          <FormattedMessage id=\"weigh-ins.bench-rack-header\" defaultMessage=\"Bench Rack\" />\n        </th>\n        <th style={shortStyle}>{getString(benchId, this.props.language)}</th>\n        <th style={shortStyle}>{getString(deadliftId, this.props.language)}</th>\n      </tr>\n    );\n  };\n\n  render() {\n    return (\n      <Table hover size=\"sm\" style={{ margin: \"0px\" }}>\n        <thead>{this.renderHeader()}</thead>\n        <tbody>{this.renderRows()}</tbody>\n      </Table>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  inKg: state.meet.inKg,\n  language: state.language,\n});\n\nexport default connect(mapStateToProps)(LifterTable);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport {\n  EnterAttemptAction,\n  MarkLiftAction,\n  SetLiftingGroupAction,\n  OverrideAttemptAction,\n  OverrideEntryIdAction,\n  SetTableInfoAction,\n} from \"../types/actionTypes\";\nimport { Flight, Lift } from \"../types/dataTypes\";\nimport { LiftingState } from \"../types/stateTypes\";\n\n// Sets a weightKg that doesn't have a good/failed value, for entering in attempts.\nexport const enterAttempt = (\n  entryId: number,\n  lift: Lift,\n  attemptOneIndexed: number,\n  weightKg: number\n): EnterAttemptAction => {\n  return {\n    type: \"ENTER_ATTEMPT\",\n    entryId: entryId,\n    lift: lift,\n    attemptOneIndexed: attemptOneIndexed,\n    weightKg: weightKg,\n  };\n};\n\n// Marks a lift \"good\" or \"failed\".\n//\n// entryId is the ID of the affected entry, a Number.\n// lift is \"S\", \"B\", or \"D\".\n// attempt is 1,2,3, etc., up to MAX_ATTEMPTS.\n// success is a bool for whether to mark the lift as a success or as a failure.\nexport const markLift = (entryId: number, lift: Lift, attemptOneIndexed: number, success: boolean): MarkLiftAction => {\n  return {\n    type: \"MARK_LIFT\",\n    entryId: entryId,\n    lift: lift,\n    attemptOneIndexed: attemptOneIndexed,\n    success: success,\n  };\n};\n\n// Sets the current group of lifters.\n// This is always manually set by the score table.\nexport const setLiftingGroup = (day: number, platform: number, flight: Flight, lift: Lift): SetLiftingGroupAction => {\n  return {\n    type: \"SET_LIFTING_GROUP\",\n    day: day,\n    platform: platform,\n    flight: flight,\n    lift: lift,\n  };\n};\n\n// Overrides the calculated meet progress logic by forcing display of an attempt,\n// even if it has already been marked \"good lift\" or \"no lift\".\nexport const overrideAttempt = (attempt: number): OverrideAttemptAction => {\n  return {\n    type: \"OVERRIDE_ATTEMPT\",\n    attempt: attempt,\n  };\n};\n\n// Overrides the calculated meet progress logic by forcing display of a specific lifter,\n// even if they have already had their attempt entered.\nexport const overrideEntryId = (entryId: number): OverrideEntryIdAction => {\n  return {\n    type: \"OVERRIDE_ENTRY_ID\",\n    entryId: entryId,\n  };\n};\n\n// Updates arbitrary fields in the LiftingState.\n//\n// The intention is to use action just for table customization: things like\n// column widths, column visibility, and other such options.\n//\n// Having this interface lets us keep the number of actions low: separate\n// actions for each kind of modification is not really useful.\nexport const setTableInfo = (obj: Partial<LiftingState>): SetTableInfoAction => {\n  return {\n    type: \"SET_TABLE_INFO\",\n    changes: obj,\n  };\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines an input of a single weight, during configuration.\n// Since it's for configuration, it doesn't have an associated success/failure value.\n//\n// For consistency purposes, weights are always stored in kg.\n\nimport React, { FormEvent } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport FormControl from \"react-bootstrap/FormControl\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\n\nimport { updateRegistration } from \"../../actions/registrationActions\";\nimport { enterAttempt } from \"../../actions/liftingActions\";\n\nimport { liftToAttemptFieldName } from \"../../logic/entry\";\nimport { kg2lbs, lbs2kg, string2number, displayWeight } from \"../../logic/units\";\n\nimport { Entry, Language, Lift, Validation } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { FormControlTypeHack, assertString } from \"../../types/utils\";\nimport { Dispatch } from \"redux\";\n\ninterface OwnProps {\n  id: number; // The EntryID.\n\n  // The valid type here should be all keys of Entry where the value is a number\n  // Something like keyof<Partial> where (key,value) => typeof value === Number - if that is possible in typescript?\n  // Otherwise manually specifying all the valid keys of Entry is a fair approach too!\n  field?: \"bodyweightKg\";\n  disabled: boolean;\n\n  // Optional attributes used only for lifts (as opposed to for bodyweights).\n  placeholder?: string;\n  lift?: Lift;\n  attemptOneIndexed?: number;\n  multipleOf?: number;\n}\n\ninterface StateProps {\n  inKg: boolean;\n  weightKg: number;\n  language: Language;\n}\n\ninterface DispatchProps {\n  updateRegistration: (entryId: number, obj: Partial<Entry>) => void;\n  enterAttempt: (entryId: number, lift: Lift, attemptOneIndexed: number, weightKg: number) => void;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\ninterface InternalState {\n  weightStr: string;\n}\n\nclass WeightInput extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n    this.validate = this.validate.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n\n    let weight = this.props.weightKg;\n    if (!this.props.inKg) {\n      weight = kg2lbs(weight);\n    }\n\n    // Internal state, for purposes of validation.\n    // To avoid confusion (auto-rounding) when typing, just store a String.\n    this.state = {\n      // Prefer displaying an empty string to 0.0.\n      weightStr: weight === 0.0 ? \"\" : displayWeight(weight, props.language),\n    };\n  }\n\n  validate = (): Validation => {\n    const weightNum = string2number(this.state.weightStr);\n    if (isNaN(weightNum) || weightNum < 0) return \"error\";\n    if (this.props.multipleOf !== undefined && weightNum % this.props.multipleOf !== 0.0) {\n      return \"warning\";\n    }\n    if (this.state.weightStr.length > 0) return \"success\";\n    return null;\n  };\n\n  // Update the internal state, used for validation.\n  handleChange = (event: FormEvent<FormControlTypeHack>) => {\n    const weightStr = event.currentTarget.value;\n    if (assertString(weightStr)) {\n      this.setState({ weightStr: weightStr });\n    }\n  };\n\n  // Update the Redux store.\n  handleBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n    const weightNum = string2number(event.currentTarget.value);\n\n    if (this.validate() === \"error\") {\n      return;\n    }\n\n    const weightKg = this.props.inKg ? weightNum : lbs2kg(weightNum);\n    if (this.props.weightKg === weightKg) {\n      return;\n    }\n\n    // If \"attempt\" is set, a specific attempt is selected.\n    if (this.props.attemptOneIndexed !== undefined && this.props.lift !== undefined) {\n      const attemptOneIndexed = this.props.attemptOneIndexed;\n      const lift = this.props.lift;\n      this.props.enterAttempt(this.props.id, lift, attemptOneIndexed, weightKg);\n    } else if (this.props.field !== undefined) {\n      // Otherwise, the field is a Number.\n      const newfields: Partial<Entry> = {};\n      newfields[this.props.field] = weightKg;\n      this.props.updateRegistration(this.props.id, newfields);\n    }\n  };\n\n  render() {\n    // FormGroup provides a default padding of 15, but FormGroup is only being\n    // used here to accept a validationState. It's not really a group.\n    const undoDefaultPadding = { marginBottom: \"0\" };\n    const validation: Validation = this.validate();\n\n    return (\n      <FormGroup style={undoDefaultPadding}>\n        <FormControl\n          disabled={this.props.disabled}\n          placeholder={this.props.placeholder}\n          type=\"text\"\n          value={this.state.weightStr}\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n          isValid={validation === \"success\"}\n          isInvalid={validation === \"error\"}\n          className={validation === \"warning\" ? \"is-warning\" : undefined}\n        />\n      </FormGroup>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState, ownProps: OwnProps): StateProps => {\n  // Only have props for the entry corresponding to this one row.\n  const lookup = state.registration.lookup;\n  const entry = state.registration.entries[lookup[ownProps.id]];\n\n  // If `field` is set, then read the Number from the given field name.\n  let weightKg = 0.0;\n  if (ownProps.field !== undefined) {\n    weightKg = entry[ownProps.field];\n  } else if (ownProps.lift !== undefined && ownProps.attemptOneIndexed !== undefined) {\n    // Otherwise, refer to a specific lift and attempt.\n    const lift = ownProps.lift;\n    const attemptOneIndexed = ownProps.attemptOneIndexed;\n    const field = liftToAttemptFieldName(lift);\n    weightKg = entry[field][attemptOneIndexed - 1];\n  }\n\n  return {\n    inKg: state.meet.inKg,\n    weightKg: weightKg,\n    language: state.language,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    updateRegistration: (entryId, obj) => dispatch(updateRegistration(entryId, obj)),\n    enterAttempt: (entryId, lift, attemptOneIndexed, weightKg) =>\n      dispatch(enterAttempt(entryId, lift, attemptOneIndexed, weightKg)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeightInput);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines a row in the LifterTable on the Weigh-ins page.\n// This provides a bunch of widgets, each of which correspond to\n// the state of a single entry.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport FormControl from \"react-bootstrap/FormControl\";\n\nimport ValidatedInput from \"../ValidatedInput\";\nimport WeightInput from \"./WeightInput\";\n\nimport { getAge } from \"../../logic/entry\";\nimport { getString, localizeFlight } from \"../../logic/strings\";\nimport { displayNumber } from \"../../logic/units\";\nimport { validatePositiveInteger } from \"../../validation/positiveInteger\";\n\nimport { updateRegistration } from \"../../actions/registrationActions\";\n\nimport { Entry, Language, Validation } from \"../../types/dataTypes\";\nimport { GlobalState, MeetState } from \"../../types/stateTypes\";\nimport { Dispatch } from \"redux\";\nimport { FormControlTypeHack, assertFlight, assertString } from \"../../types/utils\";\n\ninterface OwnProps {\n  id: number;\n  inLiftingPage?: boolean;\n}\n\ninterface StateProps {\n  meet: MeetState;\n  entry: Entry;\n  language: Language;\n}\n\ninterface DispatchProps {\n  updateRegistration: (entryId: number, obj: Partial<Entry>) => void;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nclass LifterRow extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n    this.updateRegistrationFlight = this.updateRegistrationFlight.bind(this);\n    this.updateRegistrationSquatRackInfo = this.updateRegistrationSquatRackInfo.bind(this);\n    this.updateRegistrationBenchRackInfo = this.updateRegistrationBenchRackInfo.bind(this);\n    this.updateRegistrationAge = this.updateRegistrationAge.bind(this);\n  }\n\n  updateRegistrationFlight = (event: React.FormEvent<FormControlTypeHack>) => {\n    const flight = event.currentTarget.value;\n    if (this.props.entry.flight !== flight && assertString(flight) && assertFlight(flight)) {\n      this.props.updateRegistration(this.props.id, { flight: flight });\n    }\n  };\n\n  updateRegistrationSquatRackInfo = (value: string) => {\n    if (this.props.entry.squatRackInfo !== value) {\n      this.props.updateRegistration(this.props.id, { squatRackInfo: value });\n    }\n  };\n\n  updateRegistrationBenchRackInfo = (value: string) => {\n    if (this.props.entry.benchRackInfo !== value) {\n      this.props.updateRegistration(this.props.id, { benchRackInfo: value });\n    }\n  };\n\n  updateRegistrationAge = (value: string) => {\n    const age: number = value === \"\" ? 0 : Number(value);\n    if (this.props.entry.age !== age) {\n      this.props.updateRegistration(this.props.id, { age: age });\n    }\n  };\n\n  validateAge = (value?: string): Validation => {\n    if (value === \"\") return null;\n\n    const pos: Validation = validatePositiveInteger(value);\n    if (pos === \"success\") {\n      // Complain a little if the age is implausible.\n      const n = Number(value);\n      if (n <= 4 || n > 100) return \"warning\";\n    }\n    return pos;\n  };\n\n  validateRack = (value?: string): Validation => {\n    if (value === \"\") return null;\n    return \"success\";\n  };\n\n  render() {\n    const language = this.props.language;\n    const entry = this.props.entry;\n\n    // Check whether the event(s) include a given lift.\n    let hasSquat = false;\n    let hasBench = false;\n    let hasDeadlift = false;\n    for (let i = 0; i < entry.events.length; i++) {\n      const event = entry.events[i];\n      if (event.includes(\"S\")) {\n        hasSquat = true;\n      }\n      if (event.includes(\"B\")) {\n        hasBench = true;\n      }\n      if (event.includes(\"D\")) {\n        hasDeadlift = true;\n      }\n    }\n\n    // Check whether the first attempt already occurred.\n    const disableSquatWeight = !hasSquat || entry.squatStatus[0] !== 0;\n    const disableBenchWeight = !hasBench || entry.benchStatus[0] !== 0;\n    const disableDeadliftWeight = !hasDeadlift || entry.deadliftStatus[0] !== 0;\n\n    // Only show the Flight selector if the Weigh-ins page is non-embedded.\n    let flight: string | JSX.Element = localizeFlight(entry.flight, language);\n    if (this.props.inLiftingPage !== true) {\n      // Can be undefined.\n      flight = (\n        <FormControl\n          value={entry.flight}\n          as=\"select\"\n          onChange={this.updateRegistrationFlight}\n          className=\"custom-select\"\n        >\n          <option value=\"A\">{getString(\"flight.a\", language)}</option>\n          <option value=\"B\">{getString(\"flight.b\", language)}</option>\n          <option value=\"C\">{getString(\"flight.c\", language)}</option>\n          <option value=\"D\">{getString(\"flight.d\", language)}</option>\n          <option value=\"E\">{getString(\"flight.e\", language)}</option>\n          <option value=\"F\">{getString(\"flight.f\", language)}</option>\n          <option value=\"G\">{getString(\"flight.g\", language)}</option>\n          <option value=\"H\">{getString(\"flight.h\", language)}</option>\n          <option value=\"I\">{getString(\"flight.i\", language)}</option>\n          <option value=\"J\">{getString(\"flight.j\", language)}</option>\n          <option value=\"K\">{getString(\"flight.k\", language)}</option>\n          <option value=\"L\">{getString(\"flight.l\", language)}</option>\n          <option value=\"M\">{getString(\"flight.m\", language)}</option>\n          <option value=\"N\">{getString(\"flight.n\", language)}</option>\n          <option value=\"O\">{getString(\"flight.o\", language)}</option>\n          <option value=\"P\">{getString(\"flight.p\", language)}</option>\n        </FormControl>\n      );\n    }\n\n    const age = getAge(entry, this.props.meet.date);\n    const ageStr = age === 0 ? getString(\"common.age\", language) : displayNumber(age, language);\n\n    return (\n      <tr>\n        <td>{entry.platform}</td>\n        <td>{flight}</td>\n        <td>{entry.name}</td>\n\n        <td>\n          <ValidatedInput\n            initialValue={entry.age === 0 ? \"\" : displayNumber(entry.age, language)}\n            placeholder={ageStr}\n            validate={this.validateAge}\n            onSuccess={this.updateRegistrationAge}\n          />\n        </td>\n\n        <td>\n          <WeightInput\n            id={this.props.id}\n            field=\"bodyweightKg\"\n            placeholder={getString(\"weigh-ins.bodyweight-placeholder\", language)}\n            disabled={false}\n          />\n        </td>\n\n        <td>\n          <ValidatedInput\n            initialValue={entry.squatRackInfo}\n            placeholder={hasSquat ? getString(\"weigh-ins.squat-rack-placeholder\", language) : undefined}\n            disabled={!hasSquat}\n            validate={this.validateRack}\n            onSuccess={this.updateRegistrationSquatRackInfo}\n          />\n        </td>\n\n        <td>\n          <WeightInput\n            id={this.props.id}\n            lift=\"S\"\n            multipleOf={2.5}\n            attemptOneIndexed={1}\n            placeholder={hasSquat ? getString(\"weigh-ins.squat-placeholder\", language) : undefined}\n            disabled={disableSquatWeight}\n          />\n        </td>\n\n        <td>\n          <ValidatedInput\n            initialValue={entry.benchRackInfo}\n            placeholder={hasBench ? getString(\"weigh-ins.bench-rack-placeholder\", language) : undefined}\n            disabled={!hasBench}\n            validate={this.validateRack}\n            onSuccess={this.updateRegistrationBenchRackInfo}\n          />\n        </td>\n\n        <td>\n          <WeightInput\n            id={this.props.id}\n            lift=\"B\"\n            multipleOf={2.5}\n            attemptOneIndexed={1}\n            placeholder={hasBench ? getString(\"weigh-ins.bench-placeholder\", language) : undefined}\n            disabled={disableBenchWeight}\n          />\n        </td>\n\n        <td>\n          <WeightInput\n            id={this.props.id}\n            lift=\"D\"\n            multipleOf={2.5}\n            attemptOneIndexed={1}\n            placeholder={hasDeadlift ? getString(\"weigh-ins.deadlift-placeholder\", language) : undefined}\n            disabled={disableDeadliftWeight}\n          />\n        </td>\n      </tr>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState, ownProps: OwnProps): StateProps => {\n  // Only have props for the entry corresponding to this one row.\n  const lookup = state.registration.lookup;\n  const entry = state.registration.entries[lookup[ownProps.id]];\n\n  return {\n    meet: state.meet,\n    entry: entry,\n    language: state.language,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    updateRegistration: (entryId: number, obj: Partial<Entry>) => dispatch(updateRegistration(entryId, obj)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LifterRow);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// The parent component of the Weigh-ins page, contained by the WeighinsContainer.\n// The Weigh-ins page updates more information in the Registration state.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Card from \"react-bootstrap/Card\";\n\nimport { getLiftersOnDay } from \"../../logic/entry\";\nimport LifterTable from \"./LifterTable\";\nimport LifterRow from \"./LifterRow\";\n\nimport { Entry } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\n\n// For use when embedded inside the Lifting page.\ninterface OwnProps {\n  day?: number;\n  platform?: number;\n  inLiftingPage?: boolean; // The weigh-ins page can be embedded.\n}\n\ninterface StateProps {\n  entries: ReadonlyArray<Entry>;\n}\n\ntype Props = Readonly<OwnProps> & Readonly<StateProps>;\n\nclass WeighinsView extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n    this.getNumDaysFromEntries = this.getNumDaysFromEntries.bind(this);\n  }\n\n  // Figure out how many days there are by looking at the entries themselves.\n  //\n  // The meet page information may be unreliable: someone might have created\n  // a second day, added a lifter to it, then removed the second day without\n  // yet updating that lifter.\n  //\n  // This is an attempt to make that error more obvious, so it can be corrected.\n  getNumDaysFromEntries = () => {\n    let max_day = 0;\n    const entries = this.props.entries;\n    for (let i = 0; i < entries.length; i++) {\n      const entry = entries[i];\n      if (entry.day > max_day) {\n        max_day = entry.day;\n      }\n    }\n    return max_day;\n  };\n\n  render() {\n    // Determine whether this is being shown embedded in the Lifting page.\n    const inLiftingPage = this.props.inLiftingPage === true;\n\n    // Make a separate panel for each day.\n    const numDays = this.getNumDaysFromEntries();\n    const dayCards = [];\n    for (let i = 1; i <= numDays; i++) {\n      const lifters = getLiftersOnDay(this.props.entries, i);\n\n      // Skip if the OwnProps excluded this selection.\n      if (lifters.length === 0) {\n        continue;\n      }\n\n      // Present the lifters in sorted order.\n      lifters.sort((a, b) => {\n        if (a.platform !== b.platform) return a.platform - b.platform;\n        if (a.flight !== b.flight) return a.flight < b.flight ? -1 : 1;\n        if (a.name < b.name) return -1;\n        if (a.name > b.name) return 1;\n        return 0;\n      });\n\n      dayCards.push(\n        <Card key={i} style={{ marginBottom: \"17px\" }}>\n          <Card.Header>\n            <FormattedMessage\n              id=\"weigh-ins.day-header\"\n              defaultMessage=\"Day {dayNumber} Weigh-ins\"\n              values={{ dayNumber: i }}\n            />\n          </Card.Header>\n          <Card.Body>\n            <LifterTable entries={lifters} rowRenderer={LifterRow} inLiftingPage={inLiftingPage} />\n          </Card.Body>\n        </Card>\n      );\n    }\n\n    // If there are no days thus far, show a default warning panel.\n    if (dayCards.length === 0) {\n      dayCards.push(\n        <Card key={0}>\n          <Card.Header>\n            <FormattedMessage id=\"weigh-ins.empty-header\" defaultMessage=\"Waiting for Registration\" />\n          </Card.Header>\n          <Card.Body>\n            <FormattedMessage\n              id=\"weigh-ins.empty-body\"\n              defaultMessage=\"Add lifters on the Registration page before weighing them in.\"\n            />\n          </Card.Body>\n        </Card>\n      );\n    }\n\n    return <div>{dayCards}</div>;\n  }\n}\n\nconst mapStateToProps = (state: GlobalState, ownProps: OwnProps): StateProps => {\n  const { day, platform } = ownProps;\n  let entries = state.registration.entries;\n\n  // Filter if requested by the OwnProps.\n  if (typeof day === \"number\" && typeof platform === \"number\") {\n    entries = entries.filter((e) => e.day === day && e.platform === platform);\n  }\n\n  return { entries };\n};\n\nexport default connect(mapStateToProps)(WeighinsView);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Container for the Weighins page.\n\nimport React from \"react\";\n\nimport WeighinsView from \"../components/weighins/WeighinsView\";\nimport styles from \"../components/common/ContentArea.module.scss\";\n\nclass WeighinsContainer extends React.Component<{}> {\n  render() {\n    return (\n      <div className={styles.contentArea}>\n        <WeighinsView />\n      </div>\n    );\n  }\n}\n\nexport default WeighinsContainer;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { kg2lbs, displayWeight } from \"../logic/units\";\n\nimport { PlateColors } from \"../constants/plateColors\";\n\nimport { Plate, LoadedPlate } from \"../types/dataTypes\";\n\n// Convert from kg to lbs with rounding to 2 decimal places.\n// It's OK that this is slow, since it rarely executes.\nconst safeKg2Lbs = (kg: number): number => {\n  return Number(displayWeight(kg2lbs(kg)));\n};\n\n// Returns a list of plate weights in loading order.\n// Any unloadable remainder is reported as a final number with a negative value.\nexport const selectPlates = (\n  loadingKg: number,\n  barAndCollarsWeightKg: number,\n  plates: ReadonlyArray<Plate>,\n  inKg: boolean\n): Array<LoadedPlate> => {\n  // Flow doesn't like it when arguments get redefined.\n  let loadingAny = loadingKg;\n  let barAndCollarsWeightAny = barAndCollarsWeightKg;\n  let platesAny = plates;\n\n  // Convert to pounds, avoiding floating point errors.\n  if (inKg === false) {\n    loadingAny = safeKg2Lbs(loadingKg);\n    barAndCollarsWeightAny = safeKg2Lbs(barAndCollarsWeightKg);\n    platesAny = plates.map((x) => ({ ...x, weightKg: safeKg2Lbs(x.weightKg) }));\n  }\n\n  // Sort a copy of the platesAny array by descending weight.\n  const sortedPlates = platesAny.slice().sort((a, b) => {\n    return b.weightKg - a.weightKg;\n  });\n\n  let sideWeightKg = (loadingAny - barAndCollarsWeightAny) / 2;\n  const loading: Array<LoadedPlate> = [];\n\n  // Run through each plate in order, applying as many of that plate as will fit.\n  for (let i = 0; i < sortedPlates.length; i++) {\n    const weightKg = sortedPlates[i].weightKg;\n    const color = sortedPlates[i].color;\n    let pairCount = sortedPlates[i].pairCount;\n    while (pairCount > 0 && weightKg <= sideWeightKg) {\n      pairCount--;\n      sideWeightKg -= weightKg;\n      loading.push({ weightAny: weightKg, isAlreadyLoaded: false, color: color });\n    }\n  }\n\n  // Report any remainder as a negative number.\n  if (sideWeightKg > 0) {\n    loading.push({ weightAny: -sideWeightKg, isAlreadyLoaded: false, color: PlateColors.PLATE_DEFAULT_RED });\n  }\n  return loading;\n};\n\n// Helper function: like Array.findIndex(), but starting from a specific index.\nconst findWeightFrom = (loading: Array<LoadedPlate>, startFrom: number, weight: number): number => {\n  for (let i = startFrom; i < loading.length; i++) {\n    if (loading[i].weightAny === weight) return i;\n  }\n  return -1;\n};\n\n// Sets the 'isAlreadyLoaded' property of each LoadedPlate relative to another loading.\n//\n// Both 'loading' and 'relativeTo' are sorted in non-ascending order of weight.\nexport const makeLoadingRelative = (loading: Array<LoadedPlate>, relativeTo: Array<LoadedPlate>): void => {\n  let finger = 0; // Increasing index into the relativeTo array.\n\n  // For each plate in the loading, look for a matching plate in relativeTo[finger..].\n  // When found, move the finger past that point.\n  for (let i = 0; i < loading.length; i++) {\n    const loadedPlate = loading[i];\n    const index = findWeightFrom(relativeTo, finger, loadedPlate.weightAny);\n    if (index >= 0) {\n      finger = index + 1;\n      loadedPlate.isAlreadyLoaded = true;\n    }\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// This is the widget that gives a visual display of the weights on the bar,\n// used by the loading crew.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport { displayWeight } from \"../../logic/units\";\nimport { PlateColors } from \"../../constants/plateColors\";\n\nimport { Language, Lift, LoadedPlate } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\n\nimport styles from \"./BarLoad.module.scss\";\n\nconst kgToStyleMap = new Map<number, string>([\n  [50, styles.kg50],\n  [25, styles.kg25],\n  [20, styles.kg20],\n  [15, styles.kg15],\n  [10, styles.kg10],\n  [5, styles.kg5],\n  [2.5, styles.kg2p5],\n  [1.25, styles.kg1p25],\n  [1, styles.kg1],\n  [0.75, styles.kg0p75],\n  [0.5, styles.kg0p5],\n  [0.25, styles.kg0p25],\n]);\n\nconst weightKgToStyle = (weightKg: number): string => kgToStyleMap.get(weightKg) || styles.error;\n\nconst lbsToStyleMap = new Map<number, string>([\n  [100, styles.lbs100],\n  [55, styles.lbs55],\n  [45, styles.lbs45],\n  [35, styles.lbs35],\n  [25, styles.lbs25],\n  [10, styles.lbs10],\n  [5, styles.lbs5],\n  [2.5, styles.lbs2p5],\n  [1.25, styles.lbs1p25],\n  [0.5, styles.lbs0p5],\n]);\n\nconst weightLbsToStyle = (weightLbs: number): string => lbsToStyleMap.get(weightLbs) || styles.error;\n\nconst weightTextMap = new Map<number, string>([\n  [1.25, \"1¼\"],\n  [0.75, \"¾\"],\n  [0.5, \"½\"],\n  [0.25, \"¼\"],\n]);\n\nconst weightAnyToText = (weightAny: number, language: Language): string =>\n  weightTextMap.get(weightAny) || displayWeight(weightAny, language);\n\ninterface PlateInfoProps {\n  loading: LoadedPlate[];\n  inKg: boolean;\n  language: Language;\n}\n\n// Turns the selectPlates() array into divs.\nconst PlatesDiv: React.FC<PlateInfoProps> = ({ loading, inKg, language }) => {\n  const divs = [];\n  let i = 0;\n\n  // Iterate on a group of plates of the same weight at a time.\n  while (i < loading.length) {\n    const weightAny = loading[i].weightAny;\n\n    // If the weight is negative, it's an error report.\n    if (weightAny < 0) {\n      divs.push(\n        <div key={\"error\"} className={styles.error}>\n          ?{displayWeight(-1 * weightAny, language)}\n        </div>\n      );\n      break;\n    }\n\n    // Count how many times this same plate kind appears consecutively.\n    let plateCount = 1;\n    for (let j = i + 1; j < loading.length && loading[j].weightAny === weightAny; j++) {\n      plateCount++;\n    }\n\n    // If that plate is large and occurs a bunch, show a counter.\n    const showCounter = plateCount >= 3;\n\n    // Push each of the plates individually.\n    for (let j = 0; j < plateCount; j++) {\n      const plate = loading[i + j];\n      const counter = String(j + 1);\n\n      // Light backgrounds need dark text.\n      const is_light =\n        plate.color === PlateColors.PLATE_DEFAULT_WHITE || plate.color === PlateColors.PLATE_DEFAULT_YELLOW;\n\n      const style = {\n        backgroundColor: plate.color,\n        opacity: plate.isAlreadyLoaded ? 0.25 : undefined,\n        color: is_light ? \"#232323\" : \"#FFFFFF\",\n        // White plates need a border.\n        border: plate.color === PlateColors.PLATE_DEFAULT_WHITE ? \"1.5px solid #232323\" : undefined,\n      };\n\n      divs.push(\n        <div\n          key={weightAny + \"-\" + counter}\n          className={inKg ? weightKgToStyle(weightAny) : weightLbsToStyle(weightAny)}\n          style={style}\n        >\n          <div>{weightAnyToText(weightAny, language)}</div>\n          {showCounter ? <div>{counter}</div> : null}\n        </div>\n      );\n    }\n\n    i += plateCount;\n  }\n\n  return <>{divs}</>;\n};\n\ninterface RackInfoProps {\n  lift: Lift;\n  rackInfo: string;\n}\n\nconst RackInfoDiv: React.FC<RackInfoProps> = ({ lift, rackInfo }) => {\n  // Only show rack info for lifts that use a rack.\n  if (lift === \"D\") return null;\n\n  return (\n    <div key={rackInfo} className={styles.rackInfo}>\n      <FormattedMessage\n        id=\"lifting.rack-info\"\n        defaultMessage=\"Rack {rackInfo}\"\n        values={{\n          rackInfo: rackInfo,\n        }}\n      />\n    </div>\n  );\n};\n\ninterface OwnProps {\n  loading: Array<LoadedPlate>;\n  rackInfo: string;\n  inKg: boolean;\n}\n\ninterface StateProps {\n  lift: Lift;\n  language: Language;\n}\n\ntype Props = OwnProps & StateProps;\n\nconst BarLoad: React.FC<Props> = ({ lift, loading, inKg, language, rackInfo }) => (\n  <div className={styles.container}>\n    <div className={styles.bar} />\n    <PlatesDiv loading={loading} inKg={inKg} language={language} />\n    <div className={styles.collar} />\n    <div className={styles.bar} />\n    <RackInfoDiv lift={lift} rackInfo={rackInfo} />\n  </div>\n);\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  lift: state.lifting.lift,\n  language: state.language,\n});\n\nexport default connect(mapStateToProps)(BarLoad);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// The left card on the lifting page, showing information about the current lifter\n// and helpful information for the loading crew.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport { selectPlates, makeLoadingRelative } from \"../../logic/barLoad\";\nimport { liftToAttemptFieldName } from \"../../logic/entry\";\nimport { getString } from \"../../logic/strings\";\nimport { kg2lbs, displayWeightOnePlace } from \"../../logic/units\";\n\nimport BarLoad from \"./BarLoad\";\n\nimport styles from \"./LeftCard.module.scss\";\n\nimport { Entry, Language, LoadedPlate, Plate } from \"../../types/dataTypes\";\nimport { GlobalState, LiftingState, RegistrationState } from \"../../types/stateTypes\";\n\ninterface OwnProps {\n  attemptOneIndexed: number;\n  orderedEntries: Array<Entry>;\n  currentEntryId: number | null;\n  nextEntryId: number | null;\n  nextAttemptOneIndexed: number | null;\n}\n\ninterface StateProps {\n  inKg: boolean;\n  showAlternateUnits: boolean;\n  squatBarAndCollarsWeightKg: number;\n  benchBarAndCollarsWeightKg: number;\n  deadliftBarAndCollarsWeightKg: number;\n  plates: ReadonlyArray<Plate>;\n  registration: RegistrationState;\n  lifting: LiftingState;\n  language: Language;\n}\n\ntype Props = OwnProps & StateProps;\n\ninterface BarLoadOptions {\n  weightKg: number;\n  weightLbs: number;\n  rackInfo: string;\n}\n\nclass LeftCard extends React.Component<Props> {\n  getBarLoadProps = (entryId: number | null, attemptOneIndexed: number | null): BarLoadOptions => {\n    const lift = this.props.lifting.lift;\n    const fieldKg = liftToAttemptFieldName(lift);\n\n    // Defaults, in case of no lifter.\n    if (entryId === null || entryId === undefined || attemptOneIndexed === null || attemptOneIndexed === undefined) {\n      return { weightKg: 0, weightLbs: 0, rackInfo: \"\" };\n    }\n\n    const idx = this.props.registration.lookup[entryId];\n    const entry = this.props.registration.entries[idx];\n\n    const weightKg = entry[fieldKg][attemptOneIndexed - 1];\n    const weightLbs = kg2lbs(weightKg);\n\n    let rackInfo = \"\";\n    if (lift === \"S\") rackInfo = entry.squatRackInfo;\n    if (lift === \"B\") rackInfo = entry.benchRackInfo;\n\n    return { weightKg, weightLbs, rackInfo };\n  };\n\n  getBarAndCollarsWeightKg = (): number => {\n    switch (this.props.lifting.lift) {\n      case \"S\":\n        return this.props.squatBarAndCollarsWeightKg;\n      case \"B\":\n        return this.props.benchBarAndCollarsWeightKg;\n      case \"D\":\n        return this.props.deadliftBarAndCollarsWeightKg;\n      default:\n        return 0;\n    }\n  };\n\n  render() {\n    const current = this.getBarLoadProps(this.props.currentEntryId, this.props.attemptOneIndexed);\n    const next = this.getBarLoadProps(this.props.nextEntryId, this.props.nextAttemptOneIndexed);\n\n    // Show one decimal point, and omit it if possible.\n    const language = this.props.language;\n    const weightKgText = displayWeightOnePlace(current.weightKg, language);\n    const weightLbsText = displayWeightOnePlace(current.weightLbs, language);\n\n    const barAndCollarsWeightKg = this.getBarAndCollarsWeightKg();\n\n    // Calculate both loadings.\n    const currentLoading: Array<LoadedPlate> = selectPlates(\n      current.weightKg,\n      barAndCollarsWeightKg,\n      this.props.plates,\n      this.props.inKg\n    );\n    const nextLoading: Array<LoadedPlate> = selectPlates(\n      next.weightKg,\n      barAndCollarsWeightKg,\n      this.props.plates,\n      this.props.inKg\n    );\n\n    // Set the next loading relative to the current loading.\n    if (next.weightKg >= current.weightKg) {\n      makeLoadingRelative(nextLoading, currentLoading);\n    }\n\n    let nextEntryName = undefined;\n    if (typeof this.props.nextEntryId === \"number\") {\n      const idx = this.props.registration.lookup[this.props.nextEntryId];\n      nextEntryName = this.props.registration.entries[idx].name;\n    }\n\n    const nextBarLoad =\n      next.weightKg === 0 ? undefined : (\n        <div className={styles.loadingBar}>\n          <div className={styles.nextText}>\n            <FormattedMessage\n              id=\"lifting.next-up\"\n              defaultMessage=\"NEXT UP – {lifter}\"\n              values={{\n                lifter: nextEntryName,\n              }}\n            />\n          </div>\n          <div className={styles.barArea}>\n            <BarLoad\n              key={String(next.weightKg) + next.rackInfo}\n              loading={nextLoading}\n              rackInfo={next.rackInfo}\n              inKg={this.props.inKg}\n            />\n          </div>\n        </div>\n      );\n\n    let attemptTemplate = \"\";\n    if (this.props.inKg) {\n      if (this.props.showAlternateUnits) {\n        attemptTemplate = getString(\"lifting.current-weight-kg-lbs\", language);\n      } else {\n        attemptTemplate = getString(\"lifting.current-weight-kg\", language);\n      }\n    } else {\n      if (this.props.showAlternateUnits) {\n        attemptTemplate = getString(\"lifting.current-weight-lbs-kg\", language);\n      } else {\n        attemptTemplate = getString(\"lifting.current-weight-lbs\", language);\n      }\n    }\n\n    return (\n      <div className={styles.container}>\n        <div className={styles.activeCard}>\n          <div className={styles.loadingBar}>\n            <div className={styles.attemptText}>\n              {attemptTemplate.replace(\"{kg}\", weightKgText).replace(\"{lbs}\", weightLbsText)}\n            </div>\n            <div className={styles.barArea}>\n              <BarLoad\n                key={String(current.weightKg) + current.rackInfo}\n                loading={currentLoading}\n                rackInfo={current.rackInfo}\n                inKg={this.props.inKg}\n              />\n            </div>\n          </div>\n        </div>\n        {nextBarLoad}\n        <img src=\"atc-logo.png\" style={{width: \"40%\", display: \"block\", margin: \"auto\"}}/>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => {\n  return {\n    inKg: state.meet.inKg,\n    showAlternateUnits: state.meet.showAlternateUnits,\n    squatBarAndCollarsWeightKg: state.meet.squatBarAndCollarsWeightKg,\n    benchBarAndCollarsWeightKg: state.meet.benchBarAndCollarsWeightKg,\n    deadliftBarAndCollarsWeightKg: state.meet.deadliftBarAndCollarsWeightKg,\n    plates: state.meet.plates,\n    registration: state.registration,\n    lifting: state.lifting,\n    language: state.language,\n  };\n};\n\nexport default connect(mapStateToProps)(LeftCard);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// An editable component for attempt manipulation in the LiftingContent.\n\nimport React, { FormEvent } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Form from \"react-bootstrap/Form\";\n\nimport { liftToAttemptFieldName, liftToStatusFieldName } from \"../../logic/entry\";\nimport { enterAttempt } from \"../../actions/liftingActions\";\nimport { kg2lbs, lbs2kg, string2number, displayWeight } from \"../../logic/units\";\n\nimport { Entry, Language, Lift, Validation } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\n\nimport styles from \"./LiftingTable.module.scss\";\nimport { FormControlTypeHack } from \"../../types/utils\";\nimport { Dispatch } from \"redux\";\n\ninterface StateProps {\n  inKg: boolean;\n  language: Language;\n}\n\ninterface OwnProps {\n  entry: Entry;\n  lift: Lift;\n  attemptOneIndexed: number;\n  id: string;\n}\n\ninterface DispatchProps {\n  enterAttempt: (entryId: number, lift: Lift, attemptOneIndexed: number, weightKg: number) => void;\n}\n\ntype Props = StateProps & OwnProps & DispatchProps;\n\ninterface InternalState {\n  lastGoodValue: string;\n  value: string;\n}\n\nclass AttemptInput extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    this.validate = this.validate.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n\n    const fieldKg = liftToAttemptFieldName(this.props.lift);\n    const weightKg: number = this.props.entry[fieldKg][this.props.attemptOneIndexed - 1];\n\n    let weightStr = \"\";\n    if (weightKg !== 0) {\n      weightStr = displayWeight(this.props.inKg ? weightKg : kg2lbs(weightKg), this.props.language);\n    }\n\n    this.state = {\n      lastGoodValue: weightStr,\n      value: weightStr,\n    };\n  }\n\n  validate = (): Validation => {\n    let { value } = this.state;\n    if (value === \"\") return null;\n\n    // Allow use of commas as decimal separator.\n    value = value.replace(\",\", \".\");\n\n    // Handle all errors before all warnings.\n    // Check that the input is a number.\n    const asNumber = Number(value);\n    if (isNaN(asNumber)) return \"error\";\n    if (!isFinite(asNumber)) return \"error\";\n    if (asNumber < 0) return \"error\";\n\n    // The bar weight must be monotonically increasing between attempts.\n    if (this.props.attemptOneIndexed > 1) {\n      const asKg = this.props.inKg ? asNumber : lbs2kg(asNumber);\n\n      const entry = this.props.entry;\n      const fieldKg = liftToAttemptFieldName(this.props.lift);\n      const fieldStatus = liftToStatusFieldName(this.props.lift);\n\n      const prevAttemptOneIndexed = this.props.attemptOneIndexed - 1;\n\n      // Check for validity against all previous attempts.\n      for (let i = 0; i < prevAttemptOneIndexed; ++i) {\n        const prevWeightKg = entry[fieldKg][i];\n\n        // Disallow this weight if it's a decrease from a previous attempt.\n        if (prevWeightKg > asKg) return \"error\";\n\n        if (prevWeightKg === asKg) {\n          const prevStatus = entry[fieldStatus][i];\n\n          // Disallow this weight if it was already successfully lifted.\n          if (prevStatus === 1) return \"error\";\n\n          // If the weight is a repeat but has no status, allow it, but complain.\n          if (prevStatus === 0) return \"warning\";\n        }\n      }\n    }\n\n    if (asNumber % 2.5 !== 0) return \"warning\";\n    return null;\n  };\n\n  handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === \"Enter\") {\n      event.currentTarget.blur();\n    }\n  };\n\n  handleChange = (event: FormEvent<FormControlTypeHack>) => {\n    const value = event.currentTarget.value;\n    if (typeof value === \"string\") {\n      let fixups = value.replace(\" \", \"\");\n\n      // Dvorak \"e\" corresponds to QWERTY \".\", but also is used in exponential\n      // notation, which is a fairly impactful typo.\n      fixups = value.replace(\"e\", \".\");\n\n      this.setState({ value: fixups });\n    }\n  };\n\n  handleBlur = () => {\n    if (this.validate() === \"error\") {\n      this.setState({ value: this.state.lastGoodValue });\n      return;\n    }\n\n    const entryId = this.props.entry.id;\n    const lift = this.props.lift;\n    const attemptOneIndexed = this.props.attemptOneIndexed;\n    const asNumber = string2number(this.state.value);\n    const weightKg = this.props.inKg ? asNumber : lbs2kg(asNumber);\n\n    this.props.enterAttempt(entryId, lift, attemptOneIndexed, weightKg);\n    this.setState({ lastGoodValue: this.state.value });\n  };\n\n  render() {\n    const validation: Validation = this.validate();\n\n    return (\n      <Form.Group style={{ marginBottom: 0 }}>\n        <Form.Control\n          id={this.props.id}\n          type=\"text\"\n          placeholder=\"\"\n          value={this.state.value}\n          onKeyDown={this.handleKeyDown}\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n          // Nothing for Valid == we don't want borders.\n          isInvalid={validation === \"error\"}\n          // Special rules in the _openlifter.scss override warning styles.\n          // Makes the borders look normal but shows a yellow background.\n          className={(validation === \"warning\" ? \"is-warning \" : \"\") + styles.attemptInput + \" attempt-input\"}\n        />\n      </Form.Group>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  inKg: state.meet.inKg,\n  language: state.language,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  enterAttempt: (entryId, lift, attemptOneIndexed, weightKg) =>\n    dispatch(enterAttempt(entryId, lift, attemptOneIndexed, weightKg)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AttemptInput);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the calculation of AH points, used by ParaPL.\n// Taken from https://gitlab.com/openpowerlifting/opl-data/blob/master/modules/coefficients/src/ah.rs\n\nimport { Sex } from \"../../types/dataTypes\";\nimport { checkExhausted } from \"../../types/utils\";\n\n// Calculates the AH coefficient for men.\n//\n// The full formula is defined in Excel:\n//  =ROUND($AM$1/(POWER(LOG(I13),$AM$2))*M13,2)\n//\n// Where:\n//  I13: Bodyweight\n//  M13: Lift Attempt\n//  AM1: 3.2695\n//  AM2: 1.95\nfunction ahMen(bodyweightKg: number): number {\n  const AM1: number = 3.2695;\n  const AM2: number = 1.95;\n\n  const adjusted = Math.min(Math.max(bodyweightKg, 32.0), 157.0);\n\n  return AM1 / Math.pow(Math.log10(adjusted), AM2);\n}\n\n// Calculates the AH coefficient for women.\n//\n// The full formula is defined in Excel:\n//  =ROUND($AG$1/(POWER(LOG(I13),$AG$10))*M13,2)\n//\n// Where:\n//  I13: Bodyweight\n//  M13: Lift Attempt\n//  AG1: 2.7566\n//  AG10: 1.8\nfunction ahWomen(bodyweightKg: number): number {\n  const AG1: number = 2.7566;\n  const AG10: number = 1.8;\n\n  const adjusted = Math.min(Math.max(bodyweightKg, 28.0), 112.0);\n\n  return AG1 / Math.pow(Math.log10(adjusted), AG10);\n}\n\n// Calculates AH (Haleczko) points, used in ParaPL bench-only meets.\nexport const ah = (sex: Sex, bodyweightKg: number, totalKg: number): number => {\n  switch (sex) {\n    case \"M\":\n    case \"Mx\":\n      return ahMen(bodyweightKg) * totalKg;\n    case \"F\":\n      return ahWomen(bodyweightKg) * totalKg;\n    default:\n      checkExhausted(sex);\n      return 0;\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the calculation of Dots points.\n//\n// Dots were introduced by the German IPF Affiliate BVDK after the IPF switched to\n// IPF Points, which do not allow comparing between sexes. The BVDK hosts team\n// competitions that allow lifters of all sexes to compete on a singular team.\n//\n// Since Wilks points have been ostracized from the IPF, and IPF Points are\n// unsuitable, German lifters therefore came up with their own formula.\n//\n// The author of the Dots formula is Tim Konertz <tim.konertz@outlook.com>.\n//\n// Tim says that Dots is an acronym for \"Dynamic Objective Team Scoring,\"\n// but that they chose the acronym before figuring out the expansion.\n//\n// Implementation taken from the main OpenPowerlifting repo, also AGPLv3+.\n\nimport { Sex } from \"../../types/dataTypes\";\nimport { checkExhausted } from \"../../types/utils\";\n\nfunction dotsPoly(a: number, b: number, c: number, d: number, e: number, x: number): number {\n  const x2 = x * x;\n  const x3 = x2 * x;\n  const x4 = x3 * x;\n  return 500.0 / (a * x4 + b * x3 + c * x2 + d * x + e);\n}\n\nexport function dotsMen(bodyweightKg: number): number {\n  const A = -0.000001093;\n  const B = 0.0007391293;\n  const C = -0.1918759221;\n  const D = 24.0900756;\n  const E = -307.75076;\n\n  const adjusted = Math.max(Math.min(bodyweightKg, 210.0), 40.0);\n  return dotsPoly(A, B, C, D, E, adjusted);\n}\n\nexport function dotsWomen(bodyweightKg: number): number {\n  const A = -0.0000010706;\n  const B = 0.0005158568;\n  const C = -0.1126655495;\n  const D = 13.6175032;\n  const E = -57.96288;\n\n  const adjusted = Math.max(Math.min(bodyweightKg, 150.0), 40.0);\n  return dotsPoly(A, B, C, D, E, adjusted);\n}\n\nexport const dots = (sex: Sex, bodyweightKg: number, totalKg: number): number => {\n  if (bodyweightKg === 0 || totalKg === 0) {\n    return 0.0;\n  }\n\n  switch (sex) {\n    case \"M\":\n    case \"Mx\":\n      return dotsMen(bodyweightKg) * totalKg;\n    case \"F\":\n      return dotsWomen(bodyweightKg) * totalKg;\n    default:\n      checkExhausted(sex);\n      return 0;\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines Foster-McCulloch age coefficients.\n//\n// These are taken from the OpenPowerlifting coefficients module,\n// translated from the original Rust code.\n\nconst AGE_COEFFICIENTS = [\n  // Coefficients in the range of 0-4 are clearly nonsense.\n  0.0, // 0\n  0.0, // 1\n  0.0, // 2\n  0.0, // 3\n  0.0, // 4\n  // These coefficients don't actually exist, and are just low-balled best guesses.\n  // Kids really shouldn't be competing in this sport...\n  // Ranges from age 5 to 13.\n  1.73, // 5\n  1.67, // 6\n  1.61, // 7\n  1.55, // 8\n  1.49, // 9\n  1.43, // 10\n  1.38, // 11\n  1.33, // 12\n  1.28, // 13\n  // Foster coefficients:\n  // http://www.usapl-sd.com/Formulas/Foster.htm\n  // Ranges from age 14 to 22.\n  1.23, // 14\n  1.18, // 15\n  1.13, // 16\n  1.08, // 17\n  1.06, // 18\n  1.04, // 19\n  1.03, // 20\n  1.02, // 21\n  1.01, // 22\n  // Lifters in the range 23-40 receive no handicap.\n  1.0, // 23\n  1.0, // 24\n  1.0, // 25\n  1.0, // 26\n  1.0, // 27\n  1.0, // 28\n  1.0, // 29\n  1.0, // 30\n  1.0, // 31\n  1.0, // 32\n  1.0, // 33\n  1.0, // 34\n  1.0, // 35\n  1.0, // 36\n  1.0, // 37\n  1.0, // 38\n  1.0, // 39\n  1.0, // 40\n  // McCulloch coefficients:\n  //  http://www.usapl-sd.com/Formulas/Mcculloch.htm (contains some errors).\n  // Errors were corrected using the Masters coefficients from:\n  //  http://worldpowerliftingcongress.com/wp-content/uploads/2015/02/Glossbrenner.htm\n  // Ranges from age 41 to 80.\n  1.01, // 41\n  1.02, // 42\n  1.031, // 43\n  1.043, // 44\n  1.055, // 45\n  1.068, // 46\n  1.082, // 47\n  1.097, // 48\n  1.113, // 49\n  1.13, // 50\n  1.147, // 51\n  1.165, // 52\n  1.184, // 53\n  1.204, // 54\n  1.225, // 55\n  1.246, // 56\n  1.268, // 57\n  1.291, // 58\n  1.315, // 59\n  1.34, // 60\n  1.366, // 61\n  1.393, // 62\n  1.421, // 63\n  1.45, // 64\n  1.48, // 65\n  1.511, // 66\n  1.543, // 67\n  1.576, // 68\n  1.61, // 69\n  1.645, // 70\n  1.681, // 71\n  1.718, // 72\n  1.756, // 73\n  1.795, // 74\n  1.835, // 75\n  1.876, // 76\n  1.918, // 77\n  1.961, // 78\n  2.005, // 79\n  2.05, // 80\n  // These coefficients taken from:\n  // http://www.usapltwinportsrawopen.com/resources/USAPL+Age+Coefficients.pdf\n  // Ranges from age 81 to 90.\n  2.096, // 81\n  2.143, // 82\n  2.19, // 83\n  2.238, // 84\n  2.287, // 85\n  2.337, // 86\n  2.388, // 87\n  2.44, // 88\n  2.494, // 89\n  2.549, // 90\n  // Coefficients above 90 were just guessed at, and are unstandardized.\n  2.605, // 91\n  2.662, // 92\n  2.72, // 93\n  2.779, // 94\n  2.839, // 95\n  2.9, // 96\n  2.962, // 97\n  3.025, // 98\n  3.089, // 99\n  3.154, // 100\n];\n\n// Maps the given age into the table above.\nexport const fosterMcCulloch = (age: number): number => {\n  if (!Number.isInteger(age) || age <= 0) {\n    return 1.0;\n  }\n\n  // Greater-than is correct here: (age) is used to index into table, not (age-1).\n  if (age > AGE_COEFFICIENTS.length) {\n    return 1.0;\n  }\n\n  return AGE_COEFFICIENTS[age];\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the calculation of Schwartz-Malone points.\n// Taken from https://gitlab.com/openpowerlifting/opl-data.\n\nimport { Sex } from \"../../types/dataTypes\";\n\n// Calculates the Schwartz coefficient, used for men.\n//\n// The Schwartz formula replaced the Hoffinan formula.\n// Schwartz was proposed around February 1971.\n//\n// The exact formula was found in the magazine Powerlifting USA,\n// Vol.6, No.2, August 1982, on page 61. That text is reproduced below:\n//\n// Computerized Schwartz Formula...Dr. Lyle Schwartz has often been\n// asked for a means by which the formula he has given Powerlifting can be\n// programmed into a computer or a hand held calculator with sufficient\n// memory. To obtain the Schwartz Formula (SF) for bodyweights (BW) bet-\n// ween 40 and 126 kg, the expression is: SF = 0.631926 exp(+01) -\n// 0.262349 exp(+00) (BW) + 0.511550 exp(-02) (BW)^2 - 0.519738\n// exp(-04) (BW)^3 + 0.267626 exp(-06) (BW)^4 - 0.540132 exp(-09)\n// (BW)^5 - 0.728875 exp(-13) (BW)^6. For higher bodyweights, the follow-\n// ing simple formulae are used: for BW 126-136, SF = 0.5210-0.0012\n// (BW - 125), for BW 136-146, SF = 0.5090-0011 (BW - 135), for BW\n// 146-156, SF = 0.4980-0.0010 (BW - 145), and for BW 156-166, SF =\n// 0.4880-0.0090 (BW - 156)\n//\n// Schwartz is quoted as saying about the formula's development,\n//\n// \"Since powerlifting was still a young sport in the early 1970s\n// there was uneven development in the three lifts on the part of most\n// self-trained athletes. I compensated for such unevenness by creating\n// artificial 'best' totals by adding together the current records in the\n// individual lifts. A 'best' total would have been achieved by that ideal\n// lifter who could match the best performances to date in all three\n// powerlifts. Then I fitted these data to an artificial curve and picked\n// off numbers from the curve.\"\nexport const schwartz_coefficient = (bodyweightKg: number): number => {\n  const adjusted = Math.min(Math.max(bodyweightKg, 40.0), 166.0);\n\n  if (adjusted <= 126.0) {\n    const x0 = 0.631926 * 10.0;\n    const x1 = 0.262349 * adjusted;\n    const x2 = 0.51155 * Math.pow(10.0, -2) * Math.pow(adjusted, 2);\n    const x3 = 0.519738 * Math.pow(10.0, -4) * Math.pow(adjusted, 3);\n    const x4 = 0.267626 * Math.pow(10.0, -6) * Math.pow(adjusted, 4);\n    const x5 = 0.540132 * Math.pow(10.0, -9) * Math.pow(adjusted, 5);\n    const x6 = 0.728875 * Math.pow(10.0, -13) * Math.pow(adjusted, 6);\n    return x0 - x1 + x2 - x3 + x4 - x5 - x6;\n  } else if (adjusted <= 136.0) {\n    return 0.521 - 0.0012 * (adjusted - 125.0);\n  } else if (adjusted <= 146.0) {\n    return 0.509 - 0.0011 * (adjusted - 135.0);\n  } else if (adjusted <= 156.0) {\n    return 0.498 - 0.001 * (adjusted - 145.0);\n  } else {\n    // The final formula as published for this piece does not match\n    // the coefficient tables.\n    //\n    // From the tables, the step is exactly 0.0004 per pound, which\n    // has been converted to kg below.\n    //\n    // For reference, the published original is:\n    //   0.4880 - 0.0090 * (adjusted - 156.0)\n    return 0.4879 - 0.00088185 * (adjusted - 155.0);\n  }\n};\n\n// Calculates the Malone coefficient, used for women.\nexport const malone_coefficient = (bodyweightKg: number): number => {\n  // Values calculated by fitting to coefficient tables.\n  const A = 106.011586323613;\n  const B = -1.293027130579051;\n  const C = 0.322935585328304;\n\n  // Lower bound chosen at point where Malone = max(Wilks).\n  const adjusted = Math.max(bodyweightKg, 29.24);\n\n  return A * Math.pow(adjusted, B) + C;\n};\n\n// Calculates Schwartz-Malone points.\n//\n// Schwartz-Malone is an older system that was superseded by Wilks.\nexport const schwartzmalone = (sex: Sex, bodyweightKg: number, totalKg: number): number => {\n  switch (sex) {\n    case \"M\":\n      return schwartz_coefficient(bodyweightKg) * totalKg;\n    case \"F\":\n      return malone_coefficient(bodyweightKg) * totalKg;\n    default:\n      return 0;\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the calculation of Wilks points.\n// Taken from https://gitlab.com/openpowerlifting/ipf-points-calculator.\n\nimport { Sex } from \"../../types/dataTypes\";\nimport { checkExhausted } from \"../../types/utils\";\n\nfunction wilksPoly(a: number, b: number, c: number, d: number, e: number, f: number, x: number): number {\n  const x2 = x * x;\n  const x3 = x2 * x;\n  const x4 = x3 * x;\n  const x5 = x4 * x;\n  return 500.0 / (a + b * x + c * x2 + d * x3 + e * x4 + f * x5);\n}\n\nexport function wilksMen(bodyweightKg: number): number {\n  const normalized = Math.min(Math.max(bodyweightKg, 40.0), 201.9);\n  return wilksPoly(-216.0475144, 16.2606339, -0.002388645, -0.00113732, 7.01863e-6, -1.291e-8, normalized);\n}\n\nexport function wilksWomen(bodyweightKg: number): number {\n  const normalized = Math.min(Math.max(bodyweightKg, 26.51), 154.53);\n  return wilksPoly(\n    594.31747775582,\n    -27.23842536447,\n    0.82112226871,\n    -0.00930733913,\n    0.00004731582,\n    -0.00000009054,\n    normalized\n  );\n}\n\nexport const wilks = (sex: Sex, bodyweightKg: number, totalKg: number): number => {\n  switch (sex) {\n    case \"M\":\n    case \"Mx\":\n      return wilksMen(bodyweightKg) * totalKg;\n    case \"F\":\n      return wilksWomen(bodyweightKg) * totalKg;\n    default:\n      checkExhausted(sex);\n      return 0;\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the calculation of Glossbrenner points.\n// Taken from https://gitlab.com/openpowerlifting/opl-data.\n\nimport { schwartz_coefficient, malone_coefficient } from \"./schwartzmalone\";\nimport { wilksMen, wilksWomen } from \"./wilks\";\n\nimport { Sex } from \"../../types/dataTypes\";\nimport { checkExhausted } from \"../../types/utils\";\n\nconst glossbrenner_coefficient_men = (bodyweightKg: number): number => {\n  // Glossbrenner is defined piecewise.\n  if (bodyweightKg < 153.05) {\n    return (schwartz_coefficient(bodyweightKg) + wilksMen(bodyweightKg)) / 2.0;\n  } else {\n    // Linear coefficients found by fitting to a table.\n    const A = -0.000821668402557;\n    const B = 0.676940740094416;\n    return (schwartz_coefficient(bodyweightKg) + A * bodyweightKg + B) / 2.0;\n  }\n};\n\nconst glossbrenner_coefficient_women = (bodyweightKg: number): number => {\n  // Glossbrenner is defined piecewise.\n  if (bodyweightKg < 106.3) {\n    return (malone_coefficient(bodyweightKg) + wilksWomen(bodyweightKg)) / 2.0;\n  } else {\n    // Linear coefficients found by fitting to a table.\n    const A = -0.000313738002024;\n    const B = 0.852664892884785;\n    return (malone_coefficient(bodyweightKg) + A * bodyweightKg + B) / 2.0;\n  }\n};\n\n// Calculates Glossbrenner points.\n//\n// Glossbrenner is the average of two older systems, Schwartz-Malone and Wilks,\n// with a piecewise linear section.\n//\n// This points system is most often used by GPC affiliates.\nexport const glossbrenner = (sex: Sex, bodyweightKg: number, totalKg: number): number => {\n  switch (sex) {\n    case \"M\":\n    case \"Mx\":\n      return glossbrenner_coefficient_men(bodyweightKg) * totalKg;\n    case \"F\":\n      return glossbrenner_coefficient_women(bodyweightKg) * totalKg;\n    default:\n      checkExhausted(sex);\n      return 0;\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the calculation of IPF GL (GOODLIFT) Points.\n\nimport { Sex, Event, Equipment } from \"../../types/dataTypes\";\n\ntype Coefficients = Array<number>;\ntype ByEvent = {\n  SBD: Coefficients;\n  B: Coefficients;\n};\ntype ByEquipment = {\n  Sleeves: ByEvent;\n  \"Single-ply\": ByEvent;\n};\ntype BySex = {\n  M: ByEquipment;\n  F: ByEquipment;\n};\n\nconst PARAMETERS: BySex = {\n  M: {\n    Sleeves: {\n      SBD: [1199.72839, 1025.18162, 0.00921],\n      B: [320.98041, 281.40258, 0.01008],\n    },\n    \"Single-ply\": {\n      SBD: [1236.25115, 1449.21864, 0.01644],\n      B: [381.22073, 733.79378, 0.02398],\n    },\n  },\n  F: {\n    Sleeves: {\n      SBD: [610.32796, 1045.59282, 0.03048],\n      B: [142.40398, 442.52671, 0.04724],\n    },\n    \"Single-ply\": {\n      SBD: [758.63878, 949.31382, 0.02435],\n      B: [221.82209, 357.00377, 0.02937],\n    },\n  },\n};\n\nexport const goodlift = (\n  totalKg: number,\n  bodyweightKg: number,\n  sex: Sex,\n  equipment: Equipment,\n  event: Event\n): number => {\n  if (totalKg === 0) return 0;\n  if (bodyweightKg < 40) return 0;\n\n  // Restrict inputs to only the defined subset.\n  let normalizedEquipment = equipment;\n  if (equipment === \"Bare\" || equipment === \"Wraps\") {\n    normalizedEquipment = \"Sleeves\";\n  } else if (equipment === \"Multi-ply\" || equipment === \"Unlimited\") {\n    normalizedEquipment = \"Single-ply\";\n  }\n  if (normalizedEquipment !== \"Sleeves\" && normalizedEquipment !== \"Single-ply\") {\n    return 0;\n  }\n\n  // Consider Mx athletes as M, since that's the harsher formula.\n  let normalizedSex = sex;\n  if (sex === \"Mx\") normalizedSex = \"M\";\n\n  if (event !== \"SBD\" && event !== \"B\") return 0;\n  if (normalizedSex !== \"M\" && normalizedSex !== \"F\") return 0;\n\n  const params = PARAMETERS[normalizedSex][normalizedEquipment][event];\n  const denom = params[0] - params[1] * Math.exp(-1.0 * params[2] * bodyweightKg);\n  const glp = denom === 0 ? 0 : Math.max(0, (totalKg * 100.0) / denom);\n  if (isNaN(glp) || bodyweightKg < 35) {\n    return 0.0;\n  }\n  return glp;\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the calculation of IPF Points.\n// Taken from https://gitlab.com/openpowerlifting/ipf-points-calculator.\n\nimport { Sex, Event, Equipment } from \"../../types/dataTypes\";\n\ntype Coefficients = Array<number>;\ntype ByEvent = {\n  SBD: Coefficients;\n  S: Coefficients;\n  B: Coefficients;\n  D: Coefficients;\n};\ntype ByEquipment = {\n  Sleeves: ByEvent;\n  \"Single-ply\": ByEvent;\n};\ntype BySex = {\n  M: ByEquipment;\n  F: ByEquipment;\n};\n\nconst PARAMETERS: BySex = {\n  M: {\n    Sleeves: {\n      SBD: [310.67, 857.785, 53.216, 147.0835],\n      S: [123.1, 363.085, 25.1667, 75.4311],\n      B: [86.4745, 259.155, 17.57845, 53.122],\n      D: [103.5355, 244.765, 15.3714, 31.5022],\n    },\n    \"Single-ply\": {\n      SBD: [387.265, 1121.28, 80.6324, 222.4896],\n      S: [150.485, 446.445, 36.5155, 103.7061],\n      B: [133.94, 441.465, 35.3938, 113.0057],\n      D: [110.135, 263.66, 14.996, 23.011],\n    },\n  },\n  F: {\n    Sleeves: {\n      SBD: [125.1435, 228.03, 34.5246, 86.8301],\n      S: [50.479, 105.632, 19.1846, 56.2215],\n      B: [25.0485, 43.848, 6.7172, 13.952],\n      D: [47.136, 67.349, 9.1555, 13.67],\n    },\n    \"Single-ply\": {\n      SBD: [176.58, 373.315, 48.4534, 110.0103],\n      S: [74.6855, 171.585, 21.9475, 52.2948],\n      B: [49.106, 124.209, 23.199, 67.4926],\n      D: [51.002, 69.8265, 8.5802, 5.7258],\n    },\n  },\n};\n\nexport const ipfpoints = (\n  totalKg: number,\n  bodyweightKg: number,\n  sex: Sex,\n  equipment: Equipment,\n  event: Event\n): number => {\n  if (totalKg === 0) return 0;\n  if (bodyweightKg < 40) return 0;\n\n  // Restrict inputs to only the defined subset.\n  let normalizedEquipment = equipment;\n  if (equipment === \"Bare\" || equipment === \"Wraps\") {\n    normalizedEquipment = \"Sleeves\";\n  } else if (equipment === \"Multi-ply\" || equipment === \"Unlimited\") {\n    normalizedEquipment = \"Single-ply\";\n  }\n  if (normalizedEquipment !== \"Sleeves\" && normalizedEquipment !== \"Single-ply\") {\n    return 0;\n  }\n\n  // Consider Mx athletes as M, since that's the harsher formula.\n  let normalizedSex = sex;\n  if (sex === \"Mx\") normalizedSex = \"M\";\n\n  if (event !== \"SBD\" && event !== \"S\" && event !== \"B\" && event !== \"D\") return 0;\n  if (normalizedSex !== \"M\" && normalizedSex !== \"F\") return 0;\n\n  const params = PARAMETERS[normalizedSex][normalizedEquipment][event];\n  const bw_log = Math.log(bodyweightKg);\n\n  const mean = params[0] * bw_log - params[1];\n  const dev = params[2] * bw_log - params[3];\n\n  const points = 500 + (100 * (totalKg - mean)) / dev;\n  if (isNaN(points) || points < 0) {\n    return 0;\n  }\n  return points;\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the calculation of Reshel points.\n//\n// Reshel is published as a table, with rounded x-values and rounded y-values.\n// No formula is given. We attempted to fit a function to the curve.\n//\n// The formula here is accurate to about 0.01, and is most inaccurate between\n// 70-80kg for men. Elsewhere it fits very closely.\n\nimport { Sex } from \"../../types/dataTypes\";\nimport { checkExhausted } from \"../../types/utils\";\n\nexport function reshelMen(bodyweightKg: number): number {\n  // Coefficients determined by GNUPlot. They need improvement.\n  const a: number = 23740.8329088123;\n  const b: number = -9.75618720662844;\n  const c: number = 0.787990994925928;\n  const d: number = -2.68445158813578;\n\n  const normalized = Math.min(Math.max(bodyweightKg, 50.0), 174.75);\n  return a * Math.pow(normalized + b, d) + c;\n}\n\nexport function reshelWomen(bodyweightKg: number): number {\n  // Coefficients determined by GNUPlot. They need improvement.\n  const a: number = 239.894659799145;\n  const b: number = -20.5105859285582;\n  const c: number = 1.16052601684125;\n  const d: number = -1.61417872668708;\n\n  const normalized = Math.min(Math.max(bodyweightKg, 40.0), 118.75);\n  return a * Math.pow(normalized + b, d) + c;\n}\n\nexport const reshel = (sex: Sex, bodyweightKg: number, totalKg: number): number => {\n  switch (sex) {\n    case \"M\":\n    case \"Mx\":\n      return reshelMen(bodyweightKg) * totalKg;\n    case \"F\":\n      return reshelWomen(bodyweightKg) * totalKg;\n    default:\n      checkExhausted(sex);\n      return 0;\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the calculation of Wilks 2020 points.\n\nimport { Sex } from \"../../types/dataTypes\";\nimport { checkExhausted } from \"../../types/utils\";\n\nfunction wilks2020Poly(a: number, b: number, c: number, d: number, e: number, f: number, x: number): number {\n  const x2 = x * x;\n  const x3 = x2 * x;\n  const x4 = x3 * x;\n  const x5 = x4 * x;\n  return 600.0 / (a + b * x + c * x2 + d * x3 + e * x4 + f * x5);\n}\n\nexport function wilks2020Men(bodyweightKg: number): number {\n  const normalized = Math.min(Math.max(bodyweightKg, 40.0), 200.95);\n  return wilks2020Poly(\n    47.4617885411949,\n    8.47206137941125,\n    0.073694103462609,\n    -0.00139583381094385,\n    0.00000707665973070743,\n    -0.0000000120804336482315,\n    normalized\n  );\n}\n\nexport function wilks2020Women(bodyweightKg: number): number {\n  const normalized = Math.min(Math.max(bodyweightKg, 40.0), 150.95);\n  return wilks2020Poly(\n    -125.425539779509,\n    13.7121941940668,\n    -0.0330725063103405,\n    -0.0010504000506583,\n    0.00000938773881462799,\n    -0.000000023334613884954,\n    normalized\n  );\n}\n\nexport const wilks2020 = (sex: Sex, bodyweightKg: number, totalKg: number): number => {\n  switch (sex) {\n    case \"M\":\n    case \"Mx\":\n      return wilks2020Men(bodyweightKg) * totalKg;\n    case \"F\":\n      return wilks2020Women(bodyweightKg) * totalKg;\n    default:\n      checkExhausted(sex);\n      return 0;\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Wraps all the points functions into a common interface.\n\nimport { ah } from \"./ah\";\nimport { bodyweight_multiple } from \"./bodyweight-multiple\";\nimport { dots } from \"./dots\";\nimport { fosterMcCulloch } from \"./foster-mcculloch\";\nimport { glossbrenner } from \"./glossbrenner\";\nimport { goodlift } from \"./goodlift\";\nimport { ipfpoints } from \"./ipf\";\nimport { nasapoints } from \"./nasa\";\nimport { reshel } from \"./reshel\";\nimport { schwartzmalone } from \"./schwartzmalone\";\nimport { wilks } from \"./wilks\";\nimport { wilks2020 } from \"./wilks2020\";\n\nimport { getAge } from \"../entry\";\nimport { kg2lbs } from \"../units\";\n\nimport { AgeCoefficients, Entry, Event, Equipment, Formula, Sex } from \"../../types/dataTypes\";\nimport { checkExhausted } from \"../../types/utils\";\n\nexport const getPoints = (formula: Formula, entry: Entry, event: Event, totalKg: number, inKg: boolean): number => {\n  // Some of the data are singular properties of the entry.\n  const sex: Sex = entry.sex;\n  const equipment: Equipment = entry.equipment;\n  const bodyweightKg: number = entry.bodyweightKg;\n\n  switch (formula) {\n    case \"AH\":\n      return ah(sex, bodyweightKg, totalKg);\n    case \"Bodyweight Multiple\":\n      return bodyweight_multiple(bodyweightKg, totalKg);\n    case \"Dots\":\n      return dots(sex, bodyweightKg, totalKg);\n    case \"Glossbrenner\":\n      return glossbrenner(sex, bodyweightKg, totalKg);\n    case \"IPF GL Points\":\n      return goodlift(totalKg, bodyweightKg, sex, equipment, event);\n    case \"IPF Points\":\n      return ipfpoints(totalKg, bodyweightKg, sex, equipment, event);\n    case \"NASA Points\":\n      return nasapoints(bodyweightKg, totalKg);\n    case \"Reshel\":\n      return reshel(sex, bodyweightKg, totalKg);\n    case \"Schwartz/Malone\":\n      return schwartzmalone(sex, bodyweightKg, totalKg);\n    case \"Total\":\n      return inKg ? totalKg : kg2lbs(totalKg);\n    case \"Wilks\":\n      return wilks(sex, bodyweightKg, totalKg);\n    case \"Wilks2020\":\n      return wilks2020(sex, bodyweightKg, totalKg);\n    default:\n      checkExhausted(formula);\n      return 0;\n  }\n};\n\nexport const getAgeAdjustedPoints = (\n  ageCoefficients: AgeCoefficients,\n  meetDate: string,\n  formula: Formula,\n  entry: Entry,\n  event: Event,\n  totalKg: number,\n  inKg: boolean\n): number => {\n  const points = getPoints(formula, entry, event, totalKg, inKg);\n\n  switch (ageCoefficients) {\n    case \"None\":\n      return points;\n    case \"FosterMcCulloch\":\n      return fosterMcCulloch(getAge(entry, meetDate)) * points;\n    default:\n      checkExhausted(ageCoefficients);\n      return 0;\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the calculation of points as a multiple of bodyweight.\n//\n// Although this logic is very simple, there is some finesse to avoid\n// division by zero that is easier to write once and import than repeat.\n\nexport const bodyweight_multiple = (bodyweightKg: number, totalKg: number): number => {\n  if (bodyweightKg <= 0 || totalKg <= 0) {\n    return 0;\n  }\n  return totalKg / bodyweightKg;\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the calculation of NASA Points.\n// They are defined in a coefficient table: http://nasa-sports.com/coefficient-system/\n// It turns out that they are a simple line.\n\nexport const nasapoints = (bodyweightKg: number, totalKg: number): number => {\n  // The function was determined using fitting in GNUPlot:\n  //\n  // Final set of parameters            Asymptotic Standard Error\n  // =======================            ==========================\n  // m               = 0.00620912       +/- 1.265e-06    (0.02037%)\n  // b               = 0.565697         +/- 0.0001322    (0.02337%)\n  const m = 0.00620912;\n  const b = 0.565697;\n\n  if (bodyweightKg < 30) return 0; // Arbitrary lower bound.\n  return (totalKg / bodyweightKg) * (m * bodyweightKg + b);\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { liftToAttemptFieldName, liftToStatusFieldName, MAX_ATTEMPTS } from \"./entry\";\n\nimport { LiftingOrder, Entry, FieldKg, FieldStatus } from \"../types/dataTypes\";\nimport { LiftingState } from \"../types/stateTypes\";\n\n// Helper function: for a given entry, see what attempt number would be next.\n//\n// Returns a number >= 1 if the entry is still lifting, representing the next attempt.\n// Returns zero if the entry does not have any pending attempts.\nconst getNextAttemptNumberForEntry = (entry: Entry, fieldKg: FieldKg, fieldStatus: FieldStatus): number => {\n  const weightsKg = entry[fieldKg];\n  const statuses = entry[fieldStatus];\n\n  // Lifters only set the next attempt, so loop backwards,\n  // looking for the first attempt that meets the criteria.\n  for (let i = MAX_ATTEMPTS - 1; i >= 0; i--) {\n    if (weightsKg[i] !== 0 && statuses[i] === 0) {\n      return i + 1;\n    }\n  }\n  return 0;\n};\n\n// Helper function: for a given entry, see the maximum attempt number made.\n//\n// Returns a number >= 1 representing the highest-numbered attempt attempted.\n// Returns zero if the entry has not attempted any attempts.\nconst getMaxAttemptNumberForEntry = (entry: Entry, fieldKg: FieldKg, fieldStatus: FieldStatus): number => {\n  const weightsKg = entry[fieldKg];\n  const statuses = entry[fieldStatus];\n\n  for (let i = MAX_ATTEMPTS - 1; i >= 0; i--) {\n    if (weightsKg[i] !== 0 && statuses[i] !== 0) {\n      return i + 1;\n    }\n  }\n  return 0;\n};\n\n// Determine the current active attempt for the current lift.\n//\n// An attempt is active if either:\n// 1. It has been overridden by the Attempt selector.\n// 2. There exists an attempt of that number with no success/failure value,\n//    and there is no lower attempt number with that property.\n//\n// Returns a number in the (inclusive) range of [1, MAX_ATTEMPTS].\n// If there is not enough data to make a decision, returns 1.\nconst getActiveAttemptNumber = (entriesInFlight: Array<Entry>, lifting: LiftingState): number => {\n  const lift = lifting.lift;\n  const fieldKg = liftToAttemptFieldName(lift);\n  const fieldStatus = liftToStatusFieldName(lift);\n\n  // Allow manual override.\n  if (lifting.overrideAttempt !== null) {\n    return Number(lifting.overrideAttempt);\n  }\n\n  // Iterate in reverse, looking for the earliest attempt that hasn't been lifted.\n  let earliestAttemptOneIndexed = MAX_ATTEMPTS + 1;\n  for (let i = 0; i < entriesInFlight.length; i++) {\n    const entry = entriesInFlight[i];\n    const next = getNextAttemptNumberForEntry(entry, fieldKg, fieldStatus);\n    // Zero return value means \"no pending attempts for this entry.\"\n    if (next > 0 && next < earliestAttemptOneIndexed) {\n      earliestAttemptOneIndexed = next;\n    }\n  }\n\n  // The lowest pending attempt number is the current one.\n  if (earliestAttemptOneIndexed < MAX_ATTEMPTS + 1) {\n    return earliestAttemptOneIndexed;\n  }\n\n  // In the case of no pending lifts, try to helpfully infer the next attempt.\n  let latestAttemptOneIndexed = 0;\n  for (let i = 0; i < entriesInFlight.length; i++) {\n    const entry = entriesInFlight[i];\n    const max = getMaxAttemptNumberForEntry(entry, fieldKg, fieldStatus);\n    // Zero return value means \"no attempted attempts for this entry.\"\n    if (max > latestAttemptOneIndexed) {\n      latestAttemptOneIndexed = max;\n    }\n  }\n\n  // If >0, we know there are no pending attempts, and we know that everyone\n  // has taken all of the Nth attempt. So we should display the (N+1)th attempt.\n  if (latestAttemptOneIndexed > 0) {\n    // Don't auto-advance from 3rd to 4th attempts.\n    // However, if we're already on 4th attempts, stay there.\n    if (latestAttemptOneIndexed + 1 >= 4) {\n      return latestAttemptOneIndexed;\n    }\n\n    // Roll-over to the next attempt (with no pending entries).\n    return latestAttemptOneIndexed + 1;\n  }\n\n  // Otherwise, just default to the first attempt.\n  return 1;\n};\n\n// Helper function for recursive comparison.\nexport const compareEntriesByAttempt = (a: Entry, b: Entry, fieldKg: FieldKg, attemptOneIndexed: number): number => {\n  const aKg = a[fieldKg][attemptOneIndexed - 1];\n  const bKg = b[fieldKg][attemptOneIndexed - 1];\n\n  // If non-equal, sort by weight, ascending.\n  if (aKg !== bKg) return aKg - bKg;\n\n  // If the federation uses lot numbers, break ties using lot.\n  if (a.lot !== 0 && b.lot !== 0) return a.lot - b.lot;\n\n  // If this is not the first attempt, preserve the order from the last attempt.\n  if (attemptOneIndexed > 1) {\n    return compareEntriesByAttempt(a, b, fieldKg, attemptOneIndexed - 1);\n  }\n\n  // Try to break ties using bodyweight, with the lighter lifter going first.\n  if (a.bodyweightKg !== b.bodyweightKg) return a.bodyweightKg - b.bodyweightKg;\n\n  // If we've run out of properties by which to compare them, resort to Name.\n  if (a.name < b.name) return -1;\n  if (a.name > b.name) return 1;\n  return 0;\n};\n\n// Helper function: performs an in-place sort on an array of entries.\n// Assumes that zero entries are not mixed in with non-zero entries.\nexport const orderEntriesByAttempt = (\n  entries: Array<Entry>,\n  fieldKg: FieldKg,\n  attemptOneIndexed: number\n): Array<Entry> => {\n  return entries.sort((a, b) => {\n    return compareEntriesByAttempt(a, b, fieldKg, attemptOneIndexed);\n  });\n};\n\n// Returns a copy of the entries in lifting order for the current attempt.\nconst orderEntriesForAttempt = (\n  entriesInFlight: Array<Entry>,\n  lifting: LiftingState,\n  attemptOneIndexed: number\n): Array<Entry> => {\n  const lift = lifting.lift;\n  const fieldKg = liftToAttemptFieldName(lift);\n\n  const attemptZeroIndexed = attemptOneIndexed - 1;\n  const existsNextAttempt = attemptOneIndexed + 1 <= MAX_ATTEMPTS;\n  const existsPrevAttempt = attemptOneIndexed > 1;\n\n  // Divide the entries into disjoint groups:\n  const byNextAttempt: Array<Entry> = []; // Entries sorted by their next attempt.\n  const byThisAttempt: Array<Entry> = []; // Entries sorted by this attempt.\n  const byPrevAttempt: Array<Entry> = []; // Entries sorted by previous attempt.\n  const notLifting: Array<Entry> = []; // Entries that don't have this or next attempts in.\n\n  for (let i = 0; i < entriesInFlight.length; i++) {\n    const entry = entriesInFlight[i];\n\n    if (existsNextAttempt && entry[fieldKg][attemptZeroIndexed + 1] !== 0) {\n      byNextAttempt.push(entry);\n    } else if (entry[fieldKg][attemptZeroIndexed] !== 0) {\n      byThisAttempt.push(entry);\n    } else if (existsPrevAttempt && entry[fieldKg][attemptZeroIndexed - 1] !== 0) {\n      byPrevAttempt.push(entry);\n    } else {\n      notLifting.push(entry);\n    }\n  }\n\n  // Perform sorting on the relative groups.\n  if (existsNextAttempt) {\n    orderEntriesByAttempt(byNextAttempt, fieldKg, attemptOneIndexed + 1);\n  }\n  orderEntriesByAttempt(byThisAttempt, fieldKg, attemptOneIndexed);\n  if (existsPrevAttempt) {\n    orderEntriesByAttempt(byPrevAttempt, fieldKg, attemptOneIndexed - 1);\n  }\n  orderEntriesByAttempt(notLifting, fieldKg, attemptOneIndexed);\n\n  // Arrange these three groups consecutively.\n  return Array.prototype.concat(byNextAttempt, byThisAttempt, byPrevAttempt, notLifting);\n};\n\n// Returns either the current entry ID or null if no active entry.\n//\n// In the ordered entries, the earliest lifter that hasn't gone yet is going.\n// This can be manually overridden by UI controls.\nconst getCurrentEntryId = (\n  lifting: LiftingState,\n  orderedEntries: Array<Entry>,\n  attemptOneIndexed: number\n): number | null => {\n  const lift = lifting.lift;\n  const fieldKg = liftToAttemptFieldName(lift);\n  const fieldStatus = liftToStatusFieldName(lift);\n\n  // Only respect an overridden EntryId if it appears in the entry list.\n  // The EntryId may have been deleted in the meantime.\n  if (lifting.overrideEntryId !== null) {\n    for (let i = 0; i < orderedEntries.length; i++) {\n      if (orderedEntries[i].id === lifting.overrideEntryId) {\n        return Number(lifting.overrideEntryId);\n      }\n    }\n  }\n\n  for (let i = 0; i < orderedEntries.length; i++) {\n    const entry = orderedEntries[i];\n    const idx = attemptOneIndexed - 1;\n    if (entry[fieldKg][idx] !== 0 && entry[fieldStatus][idx] === 0) {\n      return entry.id;\n    }\n  }\n  return null;\n};\n\ntype NextEntryInfo = {\n  entryId: number;\n  attemptOneIndexed: number;\n};\n\n// Returns either an Object of {entryId, attemptOneIndexed}, or null.\nconst getNextEntryInfo = (\n  lifting: LiftingState,\n  currentEntryId: number | null,\n  orderedEntries: Array<Entry>,\n  attemptOneIndexed: number\n): NextEntryInfo | null => {\n  const lift = lifting.lift;\n  const fieldKg = liftToAttemptFieldName(lift);\n  const fieldStatus = liftToStatusFieldName(lift);\n\n  if (currentEntryId === null) {\n    return null;\n  }\n\n  // Find the index of the currentEntryId in the orderedEntries.\n  const currentEntryIndex = orderedEntries.findIndex((e) => e.id === currentEntryId);\n  if (currentEntryIndex === -1) {\n    return null;\n  }\n\n  // Walk forward, looking for additional valid attempts.\n  for (let i = currentEntryIndex + 1; i < orderedEntries.length; i++) {\n    const hasAttempt = orderedEntries[i][fieldKg][attemptOneIndexed - 1] !== 0;\n    const notTaken = orderedEntries[i][fieldStatus][attemptOneIndexed - 1] === 0;\n\n    if (hasAttempt && notTaken) {\n      return {\n        entryId: orderedEntries[i].id,\n        attemptOneIndexed: attemptOneIndexed,\n      };\n    }\n  }\n\n  // If none were found walking forward, check the next attempt by wrapping around.\n  if (attemptOneIndexed + 1 > MAX_ATTEMPTS) {\n    return null;\n  }\n  const nextAttemptOneIndexed = attemptOneIndexed + 1;\n\n  for (let i = 0; i < currentEntryIndex; i++) {\n    const hasAttempt = orderedEntries[i][fieldKg][nextAttemptOneIndexed - 1] !== 0;\n    const notTaken = orderedEntries[i][fieldStatus][nextAttemptOneIndexed - 1] === 0;\n\n    if (hasAttempt && notTaken) {\n      return {\n        entryId: orderedEntries[i].id,\n        attemptOneIndexed: nextAttemptOneIndexed,\n      };\n    }\n  }\n\n  return null;\n};\n\n// Main application logic. Resolves the LiftingState to a LiftingOrder.\nexport const getLiftingOrder = (entriesInFlight: Array<Entry>, lifting: LiftingState): LiftingOrder => {\n  const attemptOneIndexed = getActiveAttemptNumber(entriesInFlight, lifting);\n  const orderedEntries = orderEntriesForAttempt(entriesInFlight, lifting, attemptOneIndexed);\n  const currentEntryId = getCurrentEntryId(lifting, orderedEntries, attemptOneIndexed);\n  const nextEntryInfo = getNextEntryInfo(lifting, currentEntryId, orderedEntries, attemptOneIndexed);\n\n  return {\n    orderedEntries: orderedEntries,\n    attemptOneIndexed: attemptOneIndexed,\n    currentEntryId: currentEntryId,\n    nextAttemptOneIndexed: nextEntryInfo ? nextEntryInfo.attemptOneIndexed : null,\n    nextEntryId: nextEntryInfo ? nextEntryInfo.entryId : null,\n  };\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the logic for calculating the division Place of a lifter, shared between\n// the Lifting page, the Rankings page, and data export code.\n//\n// The algorithm used is particularly bad -- the foremost goal was to make an interface\n// that allowed for maximum code reuse between the Rankings and Lifting pages,\n// which have slightly different needs.\n\nimport { getProjectedEventTotalKg, getFinalEventTotalKg, liftToAttemptFieldName } from \"./entry\";\nimport { compareEntriesByAttempt } from \"./liftingOrder\";\nimport { getWeightClassStr } from \"../reducers/meetReducer\";\n\nimport { Sex, Event, Equipment, Entry, Lift } from \"../types/dataTypes\";\nimport { checkExhausted } from \"../types/utils\";\n\nexport type Place = number | \"DQ\";\n\n// Determines how the total is calculated.\ntype ResultsType = \"Projected\" | \"Final\";\n\n// Specifies a competition category under which entries can be ranked together.\nexport type Category = {\n  sex: Sex;\n  event: Event;\n  equipment: Equipment;\n  division: string;\n  weightClassStr: string;\n};\n\n// Wraps up all the entries in a category with the category's descriptors.\nexport type CategoryResults = {\n  category: Category;\n  orderedEntries: Array<Entry>;\n};\n\n// Generates a unique String out of a Category, for purposes of using as a Map key.\nconst categoryToKey = (category: Category): string => {\n  return JSON.stringify(category);\n};\nconst keyToCategory = (key: string): Category => {\n  return JSON.parse(key);\n};\n\n// Helper function for sortByPlaceInCategory().\n//\n// Determines the last successful Lift (for example, \"B\") for the Entry in\n// the given Event category.\n//\n// Lifters have already been checked to have a non-zero total.\nconst getLastSuccessfulLift = (event: Event, entry: Entry): Lift => {\n  // Iterate backwards over the Event types.\n  for (let i = event.length - 1; i >= 0; --i) {\n    const lift = event[i];\n    switch (lift) {\n      case \"S\":\n        if (entry.squatStatus.includes(1)) {\n          return \"S\";\n        }\n        break;\n      case \"B\":\n        if (entry.benchStatus.includes(1)) {\n          return \"B\";\n        }\n        break;\n      case \"D\":\n        if (entry.deadliftStatus.includes(1)) {\n          return \"D\";\n        }\n        break;\n      default:\n        return \"S\";\n    }\n  }\n  return \"S\";\n};\n\n// Helper function for sortByPlaceInCategory().\n//\n// Determines the last successful attempt (only counting the first three) for\n// the Entry for the given Lift.\n//\n// The caller already knows that a successful attempt was made, since it\n// passed getLastSuccessfulLift().\nconst getLastSuccessfulAttempt = (lift: Lift, entry: Entry): number => {\n  let statuses = null;\n  switch (lift) {\n    case \"S\":\n      statuses = entry.squatStatus;\n      break;\n    case \"B\":\n      statuses = entry.benchStatus;\n      break;\n    case \"D\":\n      statuses = entry.deadliftStatus;\n      break;\n    default:\n      checkExhausted(lift);\n      return 0;\n  }\n\n  // Consider only the first three attempts, in reverse.\n  for (let i = 2; i >= 0; --i) {\n    if (statuses[i] === 1) return i;\n  }\n  return 0;\n};\n\n// Returns a copy of the entries array sorted by Place.\n// All entries are assumed to be part of the same category.\nconst sortByPlaceInCategory = (entries: ReadonlyArray<Entry>, category: Category, type: ResultsType): Array<Entry> => {\n  const event = category.event;\n\n  // Clone the entries array to avoid modifying the original.\n  const clonedEntries = entries.slice();\n\n  // Sort in the given category, first place having the lowest index.\n  clonedEntries.sort((a, b) => {\n    // If either of the lifters are guests, sort the guest last\n    if (a.guest !== b.guest) {\n      return Number(a.guest) - Number(b.guest);\n    }\n    // Otherwise, both lifters are non-guests or guests, so sort as per usual\n    let aTotal = 0;\n\n    // First sort by Total, higher sorting lower.\n    if (type === \"Projected\") {\n      aTotal = getProjectedEventTotalKg(a, event);\n      const bTotal = getProjectedEventTotalKg(b, event);\n      if (aTotal !== bTotal) return bTotal - aTotal;\n    } else if (type === \"Final\") {\n      aTotal = getFinalEventTotalKg(a, event);\n      const bTotal = getFinalEventTotalKg(b, event);\n      if (aTotal !== bTotal) return bTotal - aTotal;\n    }\n\n    // If totals are equal, sort by Bodyweight, lower sorting lower.\n    if (a.bodyweightKg !== b.bodyweightKg) return a.bodyweightKg - b.bodyweightKg;\n\n    // If totals are zero, neither lifter took a successful attempt,\n    // so just sort arbitrarily by name.\n    if (aTotal === 0) {\n      if (a.name < b.name) return -1;\n      if (a.name > b.name) return 1;\n      return 0;\n    }\n\n    // If totals are equal and bodyweights are equal, the winner is the\n    // lifter who reached the total first. Because our implementation is\n    // stateless and doesn't remember lifting order, this gets complicated.\n    //\n    // For purposes of simplicity, this is broken into cases.\n    //\n    // At this point, the logic requires that each lifter have taken at least\n    // one successful attempt -- this is validated by checking the total\n    // against zero above.\n    //\n    // Case 1: If the lifters' last successful lifts were for different Lifts,\n    //         then the lifter with the earlier lift in SBD order wins.\n    const aLastSuccessfulLift = getLastSuccessfulLift(event, a);\n    const bLastSuccessfulLift = getLastSuccessfulLift(event, b);\n    const aLastSuccessfulLiftIndex = [\"S\", \"B\", \"D\"].indexOf(aLastSuccessfulLift);\n    const bLastSuccessfulLiftIndex = [\"S\", \"B\", \"D\"].indexOf(bLastSuccessfulLift);\n    if (aLastSuccessfulLiftIndex !== bLastSuccessfulLiftIndex) {\n      return aLastSuccessfulLiftIndex - bLastSuccessfulLiftIndex;\n    }\n\n    // Case 2: If the lifters reached the total on the same lift but on different\n    //         attempts, the lifter with the earlier attempt wins.\n    const lift: Lift = aLastSuccessfulLift;\n    const aLastSuccessfulAttempt: number = getLastSuccessfulAttempt(lift, a);\n    const bLastSuccessfulAttempt: number = getLastSuccessfulAttempt(lift, b);\n    if (aLastSuccessfulAttempt !== bLastSuccessfulAttempt) {\n      return aLastSuccessfulAttempt - bLastSuccessfulAttempt;\n    }\n\n    // Case 3: If the lifters reached the total on the same lift and on the same\n    //         attempt, defer to the lifting order to determine who lifted first.\n    const attempt = aLastSuccessfulAttempt;\n    return compareEntriesByAttempt(a, b, liftToAttemptFieldName(lift), attempt);\n  });\n\n  return clonedEntries;\n};\n\n// Determines the sort order by Event.\nconst getEventSortOrder = (ev: Event): number => {\n  return [\"SBD\", \"BD\", \"SB\", \"SD\", \"S\", \"B\", \"D\"].indexOf(ev);\n};\n\n// Determines the sort order by Equipment.\nconst getEquipmentSortOrder = (eq: Equipment): number => {\n  return [\"Bare\", \"Sleeves\", \"Wraps\", \"Single-ply\", \"Multi-ply\", \"Unlimited\"].indexOf(eq);\n};\n\n// Determines the sort order by Sex.\nconst getSexSortOrder = (sex: Sex): number => {\n  switch (sex) {\n    case \"F\":\n      return 0;\n    case \"M\":\n      return 1;\n    case \"Mx\":\n      return 2;\n    default:\n      checkExhausted(sex);\n      return 3;\n  }\n};\n\n// Determines the sort (and therefore presentation) order for the Category Results.\n// The input array is sorted in-place; nothing is returned.\nexport const sortCategoryResults = (results: Array<CategoryResults>): void => {\n  results.sort((a, b) => {\n    const catA = a.category;\n    const catB = b.category;\n\n    // First, sort by Sex.\n    const aSex = getSexSortOrder(catA.sex);\n    const bSex = getSexSortOrder(catB.sex);\n    if (aSex !== bSex) return aSex - bSex;\n\n    // Next, sort by Event.\n    const aEvent = getEventSortOrder(catA.event);\n    const bEvent = getEventSortOrder(catB.event);\n    if (aEvent !== bEvent) return aEvent - bEvent;\n\n    // Next, sort by Equipment.\n    const aEquipment = getEquipmentSortOrder(catA.equipment);\n    const bEquipment = getEquipmentSortOrder(catB.equipment);\n    if (aEquipment !== bEquipment) return aEquipment - bEquipment;\n\n    // Next, sort by Division as string.\n    if (catA.division < catB.division) return -1;\n    if (catA.division > catB.division) return 1;\n\n    // Finally, sort by WeightClass.\n    // Any SHW class should be placed at the end.\n    const aIsSHW: boolean = catA.weightClassStr.includes(\"+\");\n    const bIsSHW: boolean = catB.weightClassStr.includes(\"+\");\n    if (aIsSHW && !bIsSHW) return 1;\n    if (!aIsSHW && bIsSHW) return -1;\n    // parseInt() ignores the \"+\" at the end of SHW class strings.\n    const aWeightClass = catA.weightClassStr === \"\" ? 0 : parseInt(catA.weightClassStr);\n    const bWeightClass = catB.weightClassStr === \"\" ? 0 : parseInt(catB.weightClassStr);\n    return aWeightClass - bWeightClass;\n  });\n};\n\nconst mapSexToClasses = (\n  sex: Sex,\n  men: ReadonlyArray<number>,\n  women: ReadonlyArray<number>,\n  mx: ReadonlyArray<number>\n): ReadonlyArray<number> => {\n  switch (sex) {\n    case \"M\":\n      return men;\n    case \"F\":\n      return women;\n    case \"Mx\":\n      return mx;\n    default:\n      checkExhausted(sex);\n      return men;\n  }\n};\n\n// Generates objects representing every present category of competition,\n// with each entry given a Place designation.\n//\n// The returned objects are sorted in intended order of presentation.\nconst getAllResults = (\n  entries: ReadonlyArray<Entry>,\n  weightClassesKgMen: ReadonlyArray<number>,\n  weightClassesKgWomen: ReadonlyArray<number>,\n  weightClassesKgMx: ReadonlyArray<number>,\n  combineSleevesAndWraps: boolean,\n  combineSingleAndMulti: boolean,\n  type: ResultsType\n): Array<CategoryResults> => {\n  // Generate a map from category to the entries within that category.\n  // The map is populated by iterating over each entry and having the entry\n  // append itself to per-category lists.\n  const categoryMap = new Map<string, Entry[]>();\n  for (let i = 0; i < entries.length; i++) {\n    const e = entries[i];\n\n    // Remember consistent properties.\n    const sex = e.sex;\n    const classesForSex = mapSexToClasses(sex, weightClassesKgMen, weightClassesKgWomen, weightClassesKgMx);\n    const weightClassStr = getWeightClassStr(classesForSex, e.bodyweightKg);\n\n    // If the results combine Sleeves and Wraps, promote Sleeves to Wraps.\n    let equipment = e.equipment;\n    if (combineSleevesAndWraps && equipment === \"Sleeves\") {\n      equipment = \"Wraps\";\n    } else if (combineSingleAndMulti && equipment === \"Single-ply\") {\n      equipment = \"Multi-ply\";\n    }\n\n    // Iterate over every combination of division and event, adding to the map.\n    //\n    // This code also intentionally executes if `e.divisions.length === 0`.\n    // This is used to handle an exceptional case where a meet director expects\n    // all lifters to compete Open, but has failed to specify any division\n    // on the registration page, believing that to be unneeded.\n    //\n    // If that special case were not handled, the lifter would disappear from results.\n    const numDivisions = e.divisions.length;\n    let dividx: number = 0;\n    do {\n      const division = numDivisions > 0 ? e.divisions[dividx] : \"\";\n\n      for (let evidx = 0; evidx < e.events.length; evidx++) {\n        const event = e.events[evidx];\n        const category = { sex, event, equipment, division, weightClassStr };\n        const key = categoryToKey(category);\n\n        const catEntries = categoryMap.get(key);\n        catEntries === undefined ? categoryMap.set(key, [e]) : catEntries.push(e);\n      }\n    } while (++dividx < numDivisions);\n  }\n\n  // Iterate over each category and assign a Place to the entries therein.\n  const results = [];\n  for (const [key, catEntries] of categoryMap) {\n    const category = keyToCategory(key);\n    const orderedEntries = sortByPlaceInCategory(catEntries, category, type);\n    results.push({ category, orderedEntries });\n  }\n\n  sortCategoryResults(results);\n  return results;\n};\n\nexport const getProjectedResults = (\n  entries: ReadonlyArray<Entry>,\n  weightClassesKgMen: ReadonlyArray<number>,\n  weightClassesKgWomen: ReadonlyArray<number>,\n  weightClassesKgMx: ReadonlyArray<number>,\n  combineSleevesAndWraps: boolean,\n  combineSingleAndMulti: boolean\n): Array<CategoryResults> => {\n  return getAllResults(\n    entries,\n    weightClassesKgMen,\n    weightClassesKgWomen,\n    weightClassesKgMx,\n    combineSleevesAndWraps,\n    combineSingleAndMulti,\n    \"Projected\"\n  );\n};\n\nexport const getFinalResults = (\n  entries: ReadonlyArray<Entry>,\n  weightClassesKgMen: ReadonlyArray<number>,\n  weightClassesKgWomen: ReadonlyArray<number>,\n  weightClassesKgMx: ReadonlyArray<number>,\n  combineSleevesAndWraps: boolean,\n  combineSingleAndMulti: boolean\n): Array<CategoryResults> => {\n  return getAllResults(\n    entries,\n    weightClassesKgMen,\n    weightClassesKgWomen,\n    weightClassesKgMx,\n    combineSleevesAndWraps,\n    combineSingleAndMulti,\n    \"Final\"\n  );\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// The main component of the Lifting page, contained by the LiftingView.\n\nimport React, { CSSProperties } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport AttemptInput from \"./AttemptInput\";\nimport LocalizedString from \"../translations/LocalizedString\";\n\nimport { getWeightClassStr, getWeightClassLbsStr } from \"../../reducers/meetReducer\";\nimport { getPoints } from \"../../logic/coefficients/coefficients\";\nimport { getProjectedTotalKg, getFinalTotalKg, liftToAttemptFieldName, liftToStatusFieldName } from \"../../logic/entry\";\n\nimport { getProjectedResults, getFinalResults } from \"../../logic/divisionPlace\";\nimport { kg2lbs, displayWeight, displayPoints, displayPlaceOrdinal } from \"../../logic/units\";\n\nimport { CategoryResults } from \"../../logic/divisionPlace\";\nimport { Entry, Equipment, Language, Lift, Sex } from \"../../types/dataTypes\";\nimport { GlobalState, MeetState, LiftingState, RegistrationState } from \"../../types/stateTypes\";\n\nimport styles from \"./LiftingTable.module.scss\";\nimport { checkExhausted } from \"../../types/utils\";\nimport { getString } from \"../../logic/strings\";\n\ninterface OwnProps {\n  attemptOneIndexed: number;\n  orderedEntries: Array<Entry>;\n  currentEntryId: number | null;\n}\n\ninterface StateProps {\n  meet: MeetState;\n  registration: RegistrationState;\n  lifting: LiftingState;\n  language: Language;\n}\n\ntype Props = OwnProps & StateProps;\n\n// List of possible columns that can be rendered.\n// The main render() function decides what columns to render,\n// and communicates its selection with each row's renderer.\ntype ColumnType =\n  | \"Lifter\"\n  | \"Bodyweight\"\n  | \"WeightClass\"\n  | \"Division\"\n  | \"Lot\"\n  | \"Equipment\"\n  | \"Age\"\n  | \"S1\"\n  | \"S2\"\n  | \"S3\"\n  | \"S4\" // eslint-disable-line\n  | \"B1\"\n  | \"B2\"\n  | \"B3\"\n  | \"B4\" // eslint-disable-line\n  | \"D1\"\n  | \"D2\"\n  | \"D3\"\n  | \"D4\" // eslint-disable-line\n  | \"BestSquat\"\n  | \"BestBench\" // eslint-disable-line\n  | \"Spacer1\"\n  | \"Spacer2\"\n  | \"ProjectedTotal\"\n  | \"ProjectedPoints\"\n  | \"FinalTotal\"\n  | \"FinalPoints\"\n  | \"Place\";\n\n// This is a global for remembering the last AttemptInput that was rendered.\n// After the \"No Lift\" or \"Good Lift\" buttons are clicked, the last-rendered\n// AttemptInput is given focus by an event handler.\n//\n// This works because the LiftingTable is always re-rendered when one of\n// those buttons is clicked, and because there's only one LiftingTable.\nexport let globalFocusAttemptInputId: string | null = null;\n\n// The logic for globalFocusAttemptInputId is looking for the AttemptInput\n// that's all the way on the right, and as far down the table as possible.\nlet globalHighestAttemptInputAttempt: number = 0;\n\nclass LiftingTable extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n    this.renderRows = this.renderRows.bind(this);\n    this.renderBest3AttemptField = this.renderBest3AttemptField.bind(this);\n    this.renderAttemptField = this.renderAttemptField.bind(this);\n    this.renderCell = this.renderCell.bind(this);\n  }\n\n  renderBest3AttemptField = (entry: Entry, lift: Lift, columnType: ColumnType) => {\n    const fieldKg = liftToAttemptFieldName(lift);\n    const fieldStatus = liftToStatusFieldName(lift);\n\n    // Look for either the best lift or the lightest no-lift.\n    let best3 = 0.0;\n    let lightestFailed = 0.0;\n\n    for (let i = 0; i < 3; i++) {\n      const kg = entry[fieldKg][i];\n\n      if (entry[fieldStatus][i] === 1) {\n        best3 = Math.max(best3, kg);\n      } else if (entry[fieldStatus][i] === -1) {\n        lightestFailed = lightestFailed === 0 ? kg : Math.min(lightestFailed, kg);\n      }\n    }\n\n    // Render cells using attempt coloring.\n    if (best3 !== 0) {\n      const asNumber = this.props.meet.inKg ? best3 : kg2lbs(best3);\n      return (\n        <td key={columnType} className={styles.goodlift}>\n          {displayWeight(asNumber, this.props.language)}\n        </td>\n      );\n    }\n    if (lightestFailed !== 0) {\n      const asNumber = this.props.meet.inKg ? lightestFailed : kg2lbs(lightestFailed);\n      return (\n        <td key={columnType} className={styles.nolift}>\n          {displayWeight(asNumber, this.props.language)}\n        </td>\n      );\n    }\n\n    // Show an empty cell by default.\n    return <td key={columnType} />;\n  };\n\n  renderAttemptField = (entry: Entry, lift: Lift, attemptOneIndexed: number, columnType: ColumnType) => {\n    const fieldKg = liftToAttemptFieldName(lift);\n    const fieldStatus = liftToStatusFieldName(lift);\n\n    const kg = entry[fieldKg][attemptOneIndexed - 1];\n    const status = entry[fieldStatus][attemptOneIndexed - 1];\n    const wStr = displayWeight(this.props.meet.inKg ? kg : kg2lbs(kg), this.props.language);\n    const displayStr = kg === 0 ? \"\" : wStr;\n\n    // Get a unique ID for each AttemptInput.\n    // This is used in combination with the globalFocusAttemptInputId to give\n    // focus to the last-rendered AttemptInput after a button is clicked.\n    const id = \"AttemptInput-\" + entry.id + \"-\" + lift + attemptOneIndexed;\n\n    // If the lifter was manually selected, always show an AttemptInput.\n    // This allows manual correction of weights when a misload occurs,\n    // even though the lift has already been marked good lift / no lift.\n    if (this.props.lifting.overrideEntryId === entry.id && attemptOneIndexed === this.props.attemptOneIndexed) {\n      // Is this a better match for giving focus?\n      if (attemptOneIndexed >= globalHighestAttemptInputAttempt) {\n        globalHighestAttemptInputAttempt = attemptOneIndexed;\n        globalFocusAttemptInputId = id;\n      }\n\n      return (\n        <td key={columnType} className={styles.attemptInputCell}>\n          <AttemptInput id={id} entry={entry} lift={lift} attemptOneIndexed={attemptOneIndexed} />\n        </td>\n      );\n    }\n\n    // If the attempt was already made, render a colored text field.\n    // The weight cannot be changed after the fact.\n    if (status !== 0) {\n      const className = status === 1 ? styles.goodlift : styles.nolift;\n      const maybeNegative = status === 1 ? \"\" : \"-\";\n      return (\n        <td key={columnType} className={className}>\n          {maybeNegative}\n          {displayStr}\n        </td>\n      );\n    }\n\n    // If the attempt isn't for the current lift, just show the number.\n    if (lift !== this.props.lifting.lift) {\n      return <td key={columnType}>{displayStr}</td>;\n    }\n\n    // Was any previous attempt taken?\n    let anyPreviousAttemptTaken = false;\n    for (let i = 1; i < attemptOneIndexed; i++) {\n      if (entry[fieldStatus][i - 1] !== 0) {\n        anyPreviousAttemptTaken = true;\n        break;\n      }\n    }\n\n    // Show a text input box if either:\n    // 1. This column is for the current attempt, and the lifter has a previous attempt.\n    // 2. This column is for the next attempt, and the lifter took the current attempt.\n    // 3. For whatever reason, someone managed to specify a weight.\n    const currentAndHasPrevious = attemptOneIndexed === this.props.attemptOneIndexed && anyPreviousAttemptTaken;\n    const nextAndTookLast =\n      attemptOneIndexed === this.props.attemptOneIndexed + 1 &&\n      entry[fieldStatus][this.props.attemptOneIndexed - 1] !== 0;\n\n    if (kg !== 0 || currentAndHasPrevious || nextAndTookLast) {\n      // Is this a better match for giving focus?\n      if (attemptOneIndexed >= globalHighestAttemptInputAttempt) {\n        globalHighestAttemptInputAttempt = attemptOneIndexed;\n        globalFocusAttemptInputId = id;\n      }\n\n      return (\n        <td key={columnType} className={styles.attemptInputCell}>\n          <AttemptInput id={id} entry={entry} lift={lift} attemptOneIndexed={attemptOneIndexed} />\n        </td>\n      );\n    }\n\n    // Default handler.\n    return <td key={columnType}>{displayStr}</td>;\n  };\n\n  mapSexToClasses = (sex: Sex, meetState: MeetState): ReadonlyArray<number> => {\n    switch (sex) {\n      case \"M\":\n        return meetState.weightClassesKgMen;\n      case \"F\":\n        return meetState.weightClassesKgWomen;\n      case \"Mx\":\n        return meetState.weightClassesKgMx;\n      default:\n        checkExhausted(sex);\n        return meetState.weightClassesKgMen;\n    }\n  };\n\n  renderCell = (entry: Entry, columnType: ColumnType, categoryResults: Array<CategoryResults>): JSX.Element => {\n    switch (columnType) {\n      case \"Lifter\": {\n        let cell: string | JSX.Element = entry.name;\n\n        // Bold the name of the current lifter.\n        if (this.props.currentEntryId === entry.id) {\n          cell = <b>{entry.name}</b>;\n        }\n\n        return (\n          <td key={columnType} className={styles.textCell}>\n            {cell}\n          </td>\n        );\n      }\n      case \"Bodyweight\": {\n        const bw = entry.bodyweightKg;\n        const bwStr = displayWeight(this.props.meet.inKg ? bw : kg2lbs(bw), this.props.language);\n        return <td key={columnType}>{bw === 0 ? null : bwStr}</td>;\n      }\n      case \"WeightClass\": {\n        const bw = entry.bodyweightKg;\n        const classesForSex = this.mapSexToClasses(entry.sex, this.props.meet);\n        const weightClass = this.props.meet.inKg\n          ? getWeightClassStr(classesForSex, bw, this.props.language)\n          : getWeightClassLbsStr(classesForSex, bw);\n        return <td key={columnType}>{bw === 0 ? null : weightClass}</td>;\n      }\n      case \"Division\": {\n        // Just show the first division in the list, if any.\n        // Changing this requires coordination with the \"Place\" column code.\n        const firstDiv = entry.divisions.length > 0 ? entry.divisions[0] : null;\n        return (\n          <td key={columnType} className={styles.textCell}>\n            {firstDiv}\n          </td>\n        );\n      }\n      case \"Lot\": {\n        return (\n          <td key={columnType} className={styles.textCell}>\n            {entry.lot === 0 ? \"\" : entry.lot}\n          </td>\n        );\n      }\n      case \"Equipment\": {\n        // Use shorter names to actually fit in the table.\n        let equipment: string | Equipment = entry.equipment;\n        if (equipment === \"Single-ply\") equipment = \"Single\";\n        if (equipment === \"Multi-ply\") equipment = \"Multi\";\n        return <td key={columnType}>{equipment}</td>;\n      }\n      case \"Age\":\n        return <td key={columnType}>{entry.age}</td>;\n      case \"S1\":\n        return this.renderAttemptField(entry, \"S\", 1, columnType);\n      case \"S2\":\n        return this.renderAttemptField(entry, \"S\", 2, columnType);\n      case \"S3\":\n        return this.renderAttemptField(entry, \"S\", 3, columnType);\n      case \"S4\":\n        return this.renderAttemptField(entry, \"S\", 4, columnType);\n      case \"B1\":\n        return this.renderAttemptField(entry, \"B\", 1, columnType);\n      case \"B2\":\n        return this.renderAttemptField(entry, \"B\", 2, columnType);\n      case \"B3\":\n        return this.renderAttemptField(entry, \"B\", 3, columnType);\n      case \"B4\":\n        return this.renderAttemptField(entry, \"B\", 4, columnType);\n      case \"D1\":\n        return this.renderAttemptField(entry, \"D\", 1, columnType);\n      case \"D2\":\n        return this.renderAttemptField(entry, \"D\", 2, columnType);\n      case \"D3\":\n        return this.renderAttemptField(entry, \"D\", 3, columnType);\n      case \"D4\":\n        return this.renderAttemptField(entry, \"D\", 4, columnType);\n      case \"BestSquat\":\n        return this.renderBest3AttemptField(entry, \"S\", columnType);\n      case \"BestBench\":\n        return this.renderBest3AttemptField(entry, \"B\", columnType);\n      case \"Spacer1\": // fallthrough\n      case \"Spacer2\":\n        return <td key={columnType} className={styles.spacerCell} />;\n      case \"ProjectedTotal\": {\n        const totalKg = getProjectedTotalKg(entry);\n        const asNumber = this.props.meet.inKg ? totalKg : kg2lbs(totalKg);\n        return <td key={columnType}>{totalKg === 0 ? null : displayWeight(asNumber, this.props.language)}</td>;\n      }\n      case \"ProjectedPoints\": {\n        const totalKg: number = getProjectedTotalKg(entry);\n        const event = entry.events.length > 0 ? entry.events[0] : \"SBD\";\n        const points: number = getPoints(this.props.meet.formula, entry, event, totalKg, this.props.meet.inKg);\n\n        // Normally this column is hidden for \"Total\", but it's handled just in case.\n        if (this.props.meet.formula === \"Total\") {\n          return <td key={columnType}>{points !== 0 ? displayWeight(points, this.props.language) : null}</td>;\n        }\n        return <td key={columnType}>{points !== 0 ? displayPoints(points, this.props.language) : null}</td>;\n      }\n      case \"FinalTotal\": {\n        const totalKg = getFinalTotalKg(entry);\n        const asNumber = this.props.meet.inKg ? totalKg : kg2lbs(totalKg);\n        return <td key={columnType}>{totalKg === 0 ? null : displayWeight(asNumber, this.props.language)}</td>;\n      }\n      case \"FinalPoints\": {\n        const totalKg: number = getFinalTotalKg(entry);\n        const event = entry.events.length > 0 ? entry.events[0] : \"SBD\";\n        const points: number = getPoints(this.props.meet.formula, entry, event, totalKg, this.props.meet.inKg);\n\n        // Normally this column is hidden for \"Total\", but it's handled just in case.\n        if (this.props.meet.formula === \"Total\") {\n          return <td key={columnType}>{points !== 0 ? displayWeight(points, this.props.language) : null}</td>;\n        }\n        return <td key={columnType}>{points !== 0 ? displayPoints(points, this.props.language) : null}</td>;\n      }\n      case \"Place\": {\n        // If the lifter has no total, then don't report a place.\n        if (getFinalTotalKg(entry) === 0) return <td key={columnType} />;\n\n        // If the lifter is a guest, they cannot place, so just display the guest symbol.\n        if (entry.guest) return <td key={columnType}>{getString(\"results.lifter-guest\", this.props.language)}</td>;\n\n        // Just show the Place from the first division in the list.\n        // This is the same division as shown in the \"Division\" column.\n        if (entry.divisions.length === 0) return <td key={columnType} />;\n        const firstDiv = entry.divisions[0];\n\n        // Look at all the categories, and find the first one including this division\n        // and entry. Because the categories are in sorted order, SBD takes priority\n        // over B by default.\n        for (let i = 0; i < categoryResults.length; i++) {\n          const result = categoryResults[i];\n          if (result.category.division !== firstDiv) {\n            continue;\n          }\n\n          const catEntries = result.orderedEntries;\n          for (let j = 0; j < catEntries.length; j++) {\n            const catEntry = catEntries[j];\n\n            if (catEntry.id === entry.id) {\n              // We can use the index into the array as their place, since it sorted and guests will be last in the array\n              const ordinal = displayPlaceOrdinal(j + 1, entry, this.props.language);\n              return <td key={columnType}>{ordinal}</td>;\n            }\n          }\n        }\n\n        return <td key={columnType} />; // Shouldn't happen.\n      }\n      default:\n        checkExhausted(columnType);\n        return <td key={columnType} />;\n    }\n  };\n\n  renderRows = (columns: Array<ColumnType>, categoryResults: Array<CategoryResults>) => {\n    const orderedEntries = this.props.orderedEntries;\n    const currentEntryId = this.props.currentEntryId;\n\n    const rows = [];\n    for (let i = 0; i < orderedEntries.length; i++) {\n      const entry = orderedEntries[i];\n\n      // Iterate over each columnType, handling each.\n      const cells = [];\n      for (let col = 0; col < columns.length; col++) {\n        const columnType = columns[col];\n        cells.push(this.renderCell(entry, columnType, categoryResults));\n      }\n\n      const isCurrent = entry.id === currentEntryId;\n      const rowClassName = isCurrent ? styles.current : \"\";\n      rows.push(\n        <tr key={entry.id} className={rowClassName}>\n          {cells}\n        </tr>\n      );\n    }\n    return rows;\n  };\n\n  getColumnHeaderLabel = (columnType: ColumnType) => {\n    switch (columnType) {\n      case \"Lifter\":\n        return <LocalizedString id=\"lifting.column-lifter\" />;\n      case \"Bodyweight\":\n        return <LocalizedString id=\"lifting.column-bodyweight\" />;\n      case \"WeightClass\":\n        return <LocalizedString id=\"lifting.column-weightclass\" />;\n      case \"Division\":\n        return <LocalizedString id=\"lifting.column-division\" />;\n      case \"Lot\":\n        return <LocalizedString id=\"lifting.column-lot\" />;\n      case \"Equipment\":\n        return <LocalizedString id=\"lifting.column-equipment\" />;\n      case \"Age\":\n        return <LocalizedString id=\"lifting.column-age\" />;\n      case \"S1\":\n        return <LocalizedString id=\"lifting.column-s1\" />;\n      case \"S2\":\n        return <LocalizedString id=\"lifting.column-s2\" />;\n      case \"S3\":\n        return <LocalizedString id=\"lifting.column-s3\" />;\n      case \"S4\":\n        return <LocalizedString id=\"lifting.column-s4\" />;\n      case \"B1\":\n        return <LocalizedString id=\"lifting.column-b1\" />;\n      case \"B2\":\n        return <LocalizedString id=\"lifting.column-b2\" />;\n      case \"B3\":\n        return <LocalizedString id=\"lifting.column-b3\" />;\n      case \"B4\":\n        return <LocalizedString id=\"lifting.column-b4\" />;\n      case \"D1\":\n        return <LocalizedString id=\"lifting.column-d1\" />;\n      case \"D2\":\n        return <LocalizedString id=\"lifting.column-d2\" />;\n      case \"D3\":\n        return <LocalizedString id=\"lifting.column-d3\" />;\n      case \"D4\":\n        return <LocalizedString id=\"lifting.column-d4\" />;\n      case \"BestSquat\":\n        return <LocalizedString id=\"lifting.column-bestsquat\" />;\n      case \"BestBench\":\n        return <LocalizedString id=\"lifting.column-bestbench\" />;\n      case \"Spacer1\": // fallthrough\n      case \"Spacer2\":\n        return \"\";\n      case \"ProjectedTotal\":\n        return <LocalizedString id=\"lifting.column-projectedtotal\" />;\n      case \"ProjectedPoints\":\n        return <LocalizedString id=\"lifting.column-projectedpoints\" />;\n      case \"FinalTotal\":\n        return <LocalizedString id=\"lifting.column-projectedtotal\" />;\n      case \"FinalPoints\":\n        return <LocalizedString id=\"lifting.column-finalpoints\" />;\n      case \"Place\":\n        return <LocalizedString id=\"lifting.column-place\" />;\n      default:\n        checkExhausted(columnType);\n        return \"\";\n    }\n  };\n\n  render() {\n    // Reset this: hunting for a new AttemptIndex.\n    globalHighestAttemptInputAttempt = 0;\n\n    // Select the columns for display.\n    const columns: Array<ColumnType> = [\"Lifter\"];\n    // If the score table set the division column with to zero, hide it.\n    if (this.props.lifting.columnDivisionWidthPx !== 0) {\n      columns.push(\"Division\");\n    }\n    columns.push(\"Bodyweight\", \"WeightClass\");\n\n    // The \"Lot\" column is only shown if lot numbers are used.\n    for (let i = 0; i < this.props.orderedEntries.length; ++i) {\n      if (this.props.orderedEntries[i].lot !== 0) {\n        columns.push(\"Lot\");\n        break;\n      }\n    }\n\n    // Select lift columns based off the current lift.\n    if (this.props.lifting.lift === \"S\") {\n      columns.push(\"Spacer1\");\n      columns.push(\"S1\", \"S2\", \"S3\");\n      if (this.props.attemptOneIndexed === 4) {\n        columns.push(\"S4\");\n      }\n      columns.push(\"Spacer2\");\n      columns.push(\"B1\", \"D1\");\n    } else if (this.props.lifting.lift === \"B\") {\n      columns.push(\"BestSquat\", \"Spacer1\", \"B1\", \"B2\", \"B3\");\n      if (this.props.attemptOneIndexed === 4) {\n        columns.push(\"B4\");\n      }\n      columns.push(\"Spacer2\", \"D1\");\n    } else if (this.props.lifting.lift === \"D\") {\n      columns.push(\"BestSquat\", \"BestBench\", \"Spacer1\", \"D1\", \"D2\", \"D3\");\n      if (this.props.attemptOneIndexed === 4) {\n        columns.push(\"D4\");\n      }\n      columns.push(\"Spacer2\");\n    }\n\n    // Use projected totals for everything before 2nd attempt deadlifts.\n    const useProjected = this.props.lifting.lift !== \"D\" || this.props.attemptOneIndexed < 2;\n    columns.push(useProjected ? \"ProjectedTotal\" : \"FinalTotal\");\n    if (this.props.meet.formula !== \"Total\") {\n      columns.push(useProjected ? \"ProjectedPoints\" : \"FinalPoints\");\n    }\n    columns.push(\"Place\");\n\n    // Build headers.\n    const headers = [];\n    const highlightColumn = this.props.lifting.lift + String(this.props.attemptOneIndexed);\n    for (let i = 0; i < columns.length; i++) {\n      const column = columns[i];\n      let className = styles.smallCell;\n      let style: CSSProperties | undefined;\n\n      if (column === \"Lifter\") {\n        className = styles.nameCell;\n      } else if (column === \"Division\") {\n        className = styles.divisionCell;\n        if (this.props.lifting.columnDivisionWidthPx) {\n          style = { width: this.props.lifting.columnDivisionWidthPx + \"px\" };\n        }\n      } else if (column === \"Spacer1\" || column === \"Spacer2\") {\n        className = styles.spacerCell;\n      } else if (column === highlightColumn) {\n        className = styles.activeColumn;\n      }\n\n      headers.push(\n        <th key={column} className={className} style={style}>\n          {this.getColumnHeaderLabel(column)}\n        </th>\n      );\n    }\n\n    // Calculate the Division placings for each of the lifters.\n    const categoryResults = useProjected\n      ? getProjectedResults(\n          this.props.registration.entries,\n          this.props.meet.weightClassesKgMen,\n          this.props.meet.weightClassesKgWomen,\n          this.props.meet.weightClassesKgMx,\n          this.props.meet.combineSleevesAndWraps,\n          this.props.meet.combineSingleAndMulti\n        )\n      : getFinalResults(\n          this.props.registration.entries,\n          this.props.meet.weightClassesKgMen,\n          this.props.meet.weightClassesKgWomen,\n          this.props.meet.weightClassesKgMx,\n          this.props.meet.combineSleevesAndWraps,\n          this.props.meet.combineSingleAndMulti\n        );\n\n    return (\n      <table className={styles.liftingtable}>\n        <thead>\n          <tr>{headers}</tr>\n        </thead>\n        <tbody>{this.renderRows(columns, categoryResults)}</tbody>\n      </table>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => {\n  return {\n    meet: state.meet,\n    registration: state.registration,\n    lifting: state.lifting,\n    language: state.language,\n  };\n};\n\nexport default connect(mapStateToProps)(LiftingTable);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// The footer of the Lifting page, contained by the LiftingView.\n// This is the parent element of the controls that affect present lifting state.\n\nimport React, { FormEvent } from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Button from \"react-bootstrap/Button\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Form from \"react-bootstrap/Form\";\n\nimport { globalFocusAttemptInputId } from \"./LiftingTable\";\n\nimport { getString, localizeFlight } from \"../../logic/strings\";\nimport { displayNumber } from \"../../logic/units\";\n\nimport { markLift, overrideAttempt, overrideEntryId, setLiftingGroup } from \"../../actions/liftingActions\";\n\nimport { Entry, Flight, Language, Lift } from \"../../types/dataTypes\";\nimport { GlobalState, LiftingState } from \"../../types/stateTypes\";\n\nimport styles from \"./LiftingFooter.module.scss\";\nimport { Dispatch } from \"redux\";\nimport { FormControlTypeHack, assertFlight, assertString, assertLift } from \"../../types/utils\";\n\ninterface OwnProps {\n  attemptOneIndexed: number;\n  orderedEntries: ReadonlyArray<Readonly<Entry>>;\n  currentEntryId: number | null;\n  flightsOnPlatform: ReadonlyArray<Flight>;\n  toggleReplaceTableWithWeighins: () => void;\n}\n\ninterface StateProps {\n  lifting: LiftingState;\n  lengthDays: number;\n  platformsOnDays: ReadonlyArray<number>;\n  allow4thAttempts: boolean;\n  language: Language;\n}\n\ninterface DispatchProps {\n  setLiftingGroup: (day: number, platform: number, flight: Flight, lift: Lift) => void;\n  overrideAttempt: (attempt: number) => void;\n  overrideEntryId: (entryId: number) => void;\n  markLift: (entryId: number, lift: Lift, attempt: number, success: boolean) => void;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nclass LiftingFooter extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    this.handleDayChange = this.handleDayChange.bind(this);\n    this.handlePlatformChange = this.handlePlatformChange.bind(this);\n    this.handleFlightChange = this.handleFlightChange.bind(this);\n    this.handleLiftChange = this.handleLiftChange.bind(this);\n\n    this.handleOnMouseEnter = this.handleOnMouseEnter.bind(this);\n    this.handleGoodLift = this.handleGoodLift.bind(this);\n    this.handleNoLift = this.handleNoLift.bind(this);\n\n    this.handleAttemptChange = this.handleAttemptChange.bind(this);\n    this.handleLifterChange = this.handleLifterChange.bind(this);\n\n    this.setFocusAttemptInputTimeout = this.setFocusAttemptInputTimeout.bind(this);\n\n    this.makeLifterOptions = this.makeLifterOptions.bind(this);\n  }\n\n  handleDayChange = (event: FormEvent<FormControlTypeHack>) => {\n    const day = Number(event.currentTarget.value);\n    const flight = this.props.lifting.flight;\n    const lift = this.props.lifting.lift;\n\n    // If the new day has fewer platforms, reset the platform selector also.\n    let platform = this.props.lifting.platform;\n    if (platform > this.props.platformsOnDays[day - 1]) {\n      platform = 1;\n    }\n\n    this.props.setLiftingGroup(day, platform, flight, lift);\n  };\n\n  handlePlatformChange = (event: FormEvent<FormControlTypeHack>) => {\n    const day = this.props.lifting.day;\n    const platform = Number(event.currentTarget.value);\n    const flight = this.props.lifting.flight;\n    const lift = this.props.lifting.lift;\n    this.props.setLiftingGroup(day, platform, flight, lift);\n  };\n\n  handleFlightChange = (event: FormEvent<FormControlTypeHack>) => {\n    const day = this.props.lifting.day;\n    const platform = this.props.lifting.platform;\n    const flight = event.currentTarget.value;\n    const lift = this.props.lifting.lift;\n    if (assertString(flight) && assertFlight(flight)) {\n      this.props.setLiftingGroup(day, platform, flight, lift);\n    }\n  };\n\n  handleLiftChange = (event: FormEvent<FormControlTypeHack>) => {\n    const day = this.props.lifting.day;\n    const platform = this.props.lifting.platform;\n    const flight = \"A\"; // Always reset to Flight A.\n    const lift = event.currentTarget.value;\n    if (assertString(lift) && assertLift(lift)) {\n      this.props.setLiftingGroup(day, platform, flight, lift);\n    }\n  };\n\n  handleAttemptChange = (event: FormEvent<FormControlTypeHack>) => {\n    const attempt = Number(event.currentTarget.value);\n    this.props.overrideAttempt(attempt);\n  };\n\n  handleLifterChange = (event: FormEvent<FormControlTypeHack>) => {\n    const entryId = Number(event.currentTarget.value);\n    this.props.overrideEntryId(entryId);\n  };\n\n  // After a \"No Lift\" or \"Good Lift\" button is clicked, try to change focus\n  // to the AttemptInput that the score table is likely to want to type into.\n  setFocusAttemptInputTimeout = () => {\n    if (globalFocusAttemptInputId === null) {\n      return;\n    }\n\n    // Auto-focusing is significantly less useful on 3rd attempts and beyond.\n    if (this.props.attemptOneIndexed >= 3) {\n      return;\n    }\n\n    setTimeout(function () {\n      if (globalFocusAttemptInputId === null) {\n        return;\n      }\n\n      const elem = document.getElementById(globalFocusAttemptInputId);\n      if (elem) {\n        elem.focus();\n      }\n    }, 100);\n  };\n\n  // This resolves Issue #224. The Good Lift and No Lift buttons are connected\n  // to onMouseDown handlers to greatly improve responsive feel. However, that\n  // means that an onBlur event is not fired for any AttemptInput that is\n  // currently being edited. We need to ensure that it's fired, just as if we\n  // were using a normal onClick handler.\n  //\n  // To ensure that any current AttemptInput is blurred, an onMouseEnter handler\n  // is added that always blurs the currently-focused element. Because there are\n  // several hundred milliseconds between onMouseEnter and onMouseDown due to\n  // human reaction timing, the onBlur event will fully-execute before onMouseDown.\n  handleOnMouseEnter = () => {\n    const activeElement = document.activeElement;\n    if (activeElement instanceof HTMLElement) {\n      activeElement.blur();\n    }\n  };\n\n  handleGoodLift = () => {\n    // If there's no active entry, there's nothing to set.\n    if (this.props.currentEntryId === null) {\n      return;\n    }\n\n    const entryId = Number(this.props.currentEntryId);\n    const lift = this.props.lifting.lift;\n    const attempt = this.props.attemptOneIndexed;\n    this.props.markLift(entryId, lift, attempt, true);\n    this.setFocusAttemptInputTimeout();\n  };\n\n  handleNoLift = () => {\n    // If there's no active entry, there's nothing to set.\n    if (this.props.currentEntryId === null) {\n      return;\n    }\n\n    const entryId = Number(this.props.currentEntryId);\n    const lift = this.props.lifting.lift;\n    const attempt = this.props.attemptOneIndexed;\n    this.props.markLift(entryId, lift, attempt, false);\n    this.setFocusAttemptInputTimeout();\n  };\n\n  // Check whether \"document.fullscreenElement\" exists, including prefixes.\n  hasFullscreenElement = (): boolean => {\n    const doc: any = document;\n    if (doc.fullscreenElement) return true;\n    if (doc.webkitFullscreenElement) return true;\n    if (doc.mozFullscreenElement) return true;\n    if (doc.msFullscreenElement) return true;\n    return false;\n  };\n\n  // Calls exitFullscreen(), but with prefixes.\n  exitFullscreen = () => {\n    const doc: any = document;\n    if (typeof doc.exitFullscreen === \"function\") doc.exitFullscreen();\n    else if (typeof doc.webkitExitFullscreen === \"function\") doc.webkitExitFullscreen();\n    else if (typeof doc.mozExitFullscreen === \"function\") doc.mozExitFullscreen();\n    else if (typeof doc.msExitFullscreen === \"function\") doc.msExitFullscreen();\n  };\n\n  // Calls requestFullscreen(), but with prefixes.\n  requestFullscreen = (e: any) => {\n    if (typeof e.requestFullscreen === \"function\") e.requestFullscreen();\n    else if (typeof e.webkitRequestFullscreen === \"function\") e.webkitRequestFullscreen();\n    else if (typeof e.mozRequestFullscreen === \"function\") e.mozRequestFullscreen();\n    else if (typeof e.msRequestFullscreen === \"function\") e.msRequestFullscreen();\n  };\n\n  // Called when the \"Toggle Fullscreen\" button is clicked.\n  handleFullscreen = () => {\n    // Document must be typecast to \"any\" because the fullscreen properties\n    // used here aren't defined in the Flow Document type definition.\n    if (this.hasFullscreenElement() === true) {\n      this.exitFullscreen();\n    } else {\n      const liftingView = document.getElementById(\"liftingView\");\n      if (liftingView !== null) {\n        this.requestFullscreen(liftingView);\n      }\n    }\n  };\n\n  makeLifterOptions = () => {\n    const orderedEntries = this.props.orderedEntries;\n\n    if (orderedEntries.length === 0) {\n      return (\n        <option value={0} key={0}>\n          {getString(\"lifting.footer-no-lifters\", this.props.language)}\n        </option>\n      );\n    }\n\n    const lifterOptions = [];\n    for (let i = 0; i < orderedEntries.length; i++) {\n      const entry = orderedEntries[i];\n      lifterOptions.push(\n        <option value={entry.id} key={entry.id}>\n          {entry.name}\n        </option>\n      );\n    }\n    return lifterOptions;\n  };\n\n  render() {\n    const language = this.props.language;\n    const numPlatforms = this.props.platformsOnDays[this.props.lifting.day - 1];\n\n    const dayOptions = [];\n    const dayTemplate = getString(\"lifting.footer-day-template\", language);\n    for (let i = 1; i <= this.props.lengthDays; i++) {\n      dayOptions.push(\n        <option value={i} key={i}>\n          {dayTemplate.replace(\"{N}\", displayNumber(i, language))}\n        </option>\n      );\n    }\n\n    const platformOptions = [];\n    const platformTemplate = getString(\"lifting.footer-platform-template\", language);\n    for (let i = 1; i <= numPlatforms; i++) {\n      platformOptions.push(\n        <option value={i} key={i}>\n          {platformTemplate.replace(\"{N}\", displayNumber(i, language))}\n        </option>\n      );\n    }\n\n    const liftOptions = [\n      <option key={\"S\"} value={\"S\"}>\n        {getString(\"lifting.footer-squat\", language)}\n      </option>,\n      <option key={\"B\"} value={\"B\"}>\n        {getString(\"lifting.footer-bench\", language)}\n      </option>,\n      <option key={\"D\"} value={\"D\"}>\n        {getString(\"lifting.footer-deadlift\", language)}\n      </option>,\n    ];\n\n    const flightOptions = [];\n    const flightTemplate = getString(\"lifting.footer-flight-template\", language);\n    for (let i = 0; i < this.props.flightsOnPlatform.length; i++) {\n      const flight = this.props.flightsOnPlatform[i];\n      const key = this.props.lifting.day + \"-\" + this.props.lifting.platform + \"-\" + i;\n      flightOptions.push(\n        <option value={flight} key={key}>\n          {flightTemplate.replace(\"{flight}\", localizeFlight(flight, language))}\n        </option>\n      );\n    }\n    if (flightOptions.length === 0) {\n      flightOptions.push(<option key=\"none\">{getString(\"lifting.footer-no-flights\", language)}</option>);\n    }\n\n    const attemptOptions = [];\n    const attemptTemplate = getString(\"lifting.footer-attempt-template\", language);\n    for (let i = 1; i <= 3; i++) {\n      attemptOptions.push(\n        <option key={i} value={i}>\n          {attemptTemplate.replace(\"{N}\", displayNumber(i, language))}\n        </option>\n      );\n    }\n    if (this.props.allow4thAttempts === true) {\n      attemptOptions.push(\n        <option key={4} value={4}>\n          {attemptTemplate.replace(\"{N}\", displayNumber(4, language))}\n        </option>\n      );\n    }\n\n    const currentEntryId = this.props.currentEntryId === null ? undefined : this.props.currentEntryId.toString();\n\n    return (\n      <div className={styles.footer}>\n        <div className={styles.leftControls}>\n          <Form.Control\n            as=\"select\"\n            value={this.props.lifting.day.toString()}\n            onChange={this.handleDayChange}\n            className={`custom-select ${styles.selector}`}\n          >\n            {dayOptions}\n          </Form.Control>\n          <Form.Control\n            as=\"select\"\n            value={this.props.lifting.platform.toString()}\n            onChange={this.handlePlatformChange}\n            className={`custom-select ${styles.selector}`}\n          >\n            {platformOptions}\n          </Form.Control>\n          <Form.Control\n            as=\"select\"\n            value={this.props.lifting.lift}\n            onChange={this.handleLiftChange}\n            className={`custom-select ${styles.selector}`}\n          >\n            {liftOptions}\n          </Form.Control>\n          <Form.Control\n            key={\"flight-\" + this.props.lifting.flight}\n            as=\"select\"\n            value={this.props.lifting.flight}\n            onChange={this.handleFlightChange}\n            className={`custom-select ${styles.selector}`}\n          >\n            {flightOptions}\n          </Form.Control>\n          <Form.Control\n            value={this.props.attemptOneIndexed.toString()}\n            as=\"select\"\n            onChange={this.handleAttemptChange}\n            className={`custom-select ${styles.selector}`}\n          >\n            {attemptOptions}\n          </Form.Control>\n          <Form.Control\n            value={currentEntryId}\n            as=\"select\"\n            onChange={this.handleLifterChange}\n            className={`custom-select ${styles.selector}`}\n          >\n            {this.makeLifterOptions()}\n          </Form.Control>\n        </div>\n\n        <div className={styles.rightControls}>\n          <ButtonGroup>\n            <Button variant=\"outline-primary\" onClick={this.props.toggleReplaceTableWithWeighins}>\n              <FormattedMessage id=\"lifting.button-toggle-weigh-ins\" defaultMessage=\"Toggle Weigh-ins\" />\n            </Button>\n            <Button variant=\"outline-secondary\" onClick={this.handleFullscreen} className={styles.fullscreen}>\n              <FormattedMessage id=\"lifting.button-toggle-fullscreen\" defaultMessage=\"Toggle Fullscreen\" />\n            </Button>\n          </ButtonGroup>\n          <button\n            type=\"button\"\n            onMouseEnter={this.handleOnMouseEnter}\n            onMouseDown={this.handleNoLift}\n            className={styles.noLift}\n          >\n            <FormattedMessage id=\"lifting.button-no-lift\" defaultMessage=\"No Lift\" />\n          </button>\n          <button\n            type=\"button\"\n            onMouseEnter={this.handleOnMouseEnter}\n            onMouseDown={this.handleGoodLift}\n            className={styles.goodLift}\n          >\n            <FormattedMessage id=\"lifting.button-good-lift\" defaultMessage=\"Good Lift\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState) => {\n  return {\n    lengthDays: state.meet.lengthDays,\n    platformsOnDays: state.meet.platformsOnDays,\n    allow4thAttempts: state.meet.allow4thAttempts,\n    lifting: state.lifting,\n    language: state.language,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    setLiftingGroup: (day: number, platform: number, flight: Flight, lift: Lift) =>\n      dispatch(setLiftingGroup(day, platform, flight, lift)),\n    overrideAttempt: (attempt: number) => dispatch(overrideAttempt(attempt)),\n    overrideEntryId: (entryId: number) => dispatch(overrideEntryId(entryId)),\n    markLift: (entryId: number, lift: Lift, attempt: number, success: boolean) =>\n      dispatch(markLift(entryId, lift, attempt, success)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LiftingFooter);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// The top bar of the Lifting page, containing huge text about the current lifter.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport LocalizedString from \"../translations/LocalizedString\";\nimport { localizeEquipment } from \"../../logic/strings\";\nimport { displayNumber } from \"../../logic/units\";\n\nimport { Entry, Language } from \"../../types/dataTypes\";\nimport { GlobalState, RegistrationState } from \"../../types/stateTypes\";\n\nimport styles from \"./LiftingHeader.module.scss\";\n\ninterface OwnProps {\n  attemptOneIndexed: number;\n  orderedEntries: Array<Entry>;\n  currentEntryId: number | null;\n}\n\ninterface StateProps {\n  registration: RegistrationState;\n  language: Language;\n}\n\ntype Props = OwnProps & StateProps;\n\nclass LiftingHeader extends React.Component<Props> {\n  render() {\n    // Defaults, in case of no lifter.\n    let lifterName = <LocalizedString id=\"lifting.flight-complete\" />;\n    let info = \"\";\n\n    // In the case of a lifter, set fields.\n    if (this.props.currentEntryId !== null && this.props.currentEntryId !== undefined) {\n      const idx = this.props.registration.lookup[this.props.currentEntryId];\n      const entry = this.props.registration.entries[idx];\n      lifterName = <span>{entry.name}</span>;\n\n      const infoBuilder: Array<string> = [];\n\n      if (typeof entry.instagram === \"string\" && entry.instagram !== \"\") {\n        infoBuilder.push(\"@\" + entry.instagram);\n      } else {\n        infoBuilder.push(\"\"); // Causes a separator dot to display.\n      }\n      if (entry.age > 0) {\n        infoBuilder.push(displayNumber(entry.age, this.props.language));\n      }\n      infoBuilder.push(localizeEquipment(entry.equipment, this.props.language));\n      if (entry.divisions.length > 0) {\n        infoBuilder.push(entry.divisions.join(\", \"));\n      }\n\n      info = infoBuilder.join(\" · \");\n    }\n\n    return (\n      <div className={styles.header}>\n        <div className={styles.lifterName}>{lifterName}</div>\n        <div className={styles.info}>{info}</div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => {\n  return {\n    registration: state.registration,\n    language: state.language,\n  };\n};\n\nexport default connect(mapStateToProps)(LiftingHeader);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// This defines a widget for manually adjusting the width of a column\n// in the LiftingTable. The width information is stored in the LiftingState.\n//\n// The value is stored in the LiftingState in pixels, but is presented\n// here as (pixels / 9) to make it look nicer. 9 is used because most columns\n// are set to 72px, which is divisible by 9.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Form from \"react-bootstrap/Form\";\n\nimport { setTableInfo } from \"../../actions/liftingActions\";\n\nimport { Validation } from \"../../types/dataTypes\";\nimport { GlobalState, LiftingState } from \"../../types/stateTypes\";\nimport { FormControlTypeHack, isString } from \"../../types/utils\";\nimport { Dispatch } from \"redux\";\nimport { isNumber } from \"util\";\n\ntype WidthFields = \"columnDivisionWidthPx\";\n\ninterface OwnProps {\n  label: string; // The label to display.\n  fieldName: WidthFields; // Field on the LiftingState to change.\n}\n\ninterface StateProps {\n  lifting: LiftingState;\n}\n\ninterface DispatchProps {\n  setTableInfo: (changes: Partial<LiftingState>) => void;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\ninterface InternalState {\n  value: number | string;\n}\n\n// To show smaller numbers, the actual pixel count is divided by this.\nconst MULTIPLE: number = 9;\n\nclass ColumnWidth extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    this.validate = this.validate.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      value: Math.ceil(this.props.lifting[this.props.fieldName] / MULTIPLE),\n    };\n  }\n\n  validate = (): Validation => {\n    const { value } = this.state;\n    const asNumber = Number(value);\n\n    if (isNaN(asNumber) || asNumber < 0 || asNumber > 1000) {\n      return \"error\";\n    }\n    return \"success\";\n  };\n\n  handleChange = (event: React.FormEvent<FormControlTypeHack>) => {\n    const value = event.currentTarget.value;\n    if (!isNumber(value) && !isString(value)) {\n      throw new Error(`Expected either a number or a string, but got \"${value}\"`);\n    }\n\n    this.setState({ value: value }, () => {\n      // As callback, save successful value into Redux store.\n      if (this.validate() !== \"error\") {\n        // TODO: figure out how to type this nicely. For now, use any\n        const changes: any = {};\n        changes[this.props.fieldName] = Math.floor(Number(value) * MULTIPLE);\n        this.props.setTableInfo(changes);\n      }\n    });\n  };\n\n  render() {\n    const validation: Validation = this.validate();\n\n    return (\n      <Form.Group>\n        <Form.Label>{this.props.label}</Form.Label>\n        <Form.Control\n          type=\"number\"\n          pattern=\"[0-9]+\"\n          min=\"0\"\n          step=\"1\"\n          value={this.state.value.toString()}\n          onChange={this.handleChange}\n          isValid={validation === \"success\"}\n          isInvalid={validation === \"error\"}\n          className={validation === \"warning\" ? \"is-warning\" : undefined}\n        />\n      </Form.Group>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  lifting: state.lifting,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    setTableInfo: (changes: Partial<LiftingState>) => dispatch(setTableInfo(changes)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ColumnWidth);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// The parent component of the Lifting page, contained by the LiftingContainer.\n//\n// The LiftingTable, LiftingFooter, etc. all share calculated state.\n// This class performs the state calculations and communicates that to its\n// sub-components via props.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Card from \"react-bootstrap/Card\";\n\nimport LeftCard from \"./LeftCard\";\nimport LiftingFooter from \"./LiftingFooter\";\nimport LiftingHeader from \"./LiftingHeader\";\nimport LiftingTable from \"./LiftingTable\";\nimport WeighinsView from \"../weighins/WeighinsView\";\n\nimport ColumnWidth from \"./ColumnWidth\";\n\nimport { getString } from \"../../logic/strings\";\n\nimport styles from \"./LiftingView.module.scss\";\n\nimport { getLiftingOrder } from \"../../logic/liftingOrder\";\n\nimport { Entry, Flight, Language } from \"../../types/dataTypes\";\nimport { GlobalState, MeetState, LiftingState } from \"../../types/stateTypes\";\n\ninterface StateProps {\n  meet: MeetState;\n  lifting: LiftingState;\n  flightsOnPlatform: Array<Flight>;\n  entriesInFlight: Array<Entry>;\n  language: Language;\n}\n\ntype Props = StateProps;\n\ninterface InternalState {\n  // If true, the LiftingTable is replaced with the Weighins page.\n  // This lets the score table change arbitrary rack height and attempt information\n  // without removing the current lifter or bar load displays.\n  replaceTableWithWeighins: boolean;\n}\n\nclass LiftingView extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n    this.toggleReplaceTableWithWeighins = this.toggleReplaceTableWithWeighins.bind(this);\n    this.state = {\n      replaceTableWithWeighins: false,\n    };\n  }\n\n  toggleReplaceTableWithWeighins = (): void => {\n    this.setState({\n      replaceTableWithWeighins: !this.state.replaceTableWithWeighins,\n    });\n  };\n\n  render() {\n    const now = getLiftingOrder(this.props.entriesInFlight, this.props.lifting);\n\n    let rightElement = null;\n    if (this.state.replaceTableWithWeighins === false) {\n      rightElement = (\n        <LiftingTable\n          attemptOneIndexed={now.attemptOneIndexed}\n          orderedEntries={now.orderedEntries}\n          currentEntryId={now.currentEntryId}\n        />\n      );\n    } else {\n      rightElement = (\n        <WeighinsView day={this.props.lifting.day} platform={this.props.lifting.platform} inLiftingPage={true} />\n      );\n    }\n\n    return (\n      <div>\n        <Card style={{ margin: \"12px 20px\" }}>\n          <Card.Body>\n            <div style={{ width: \"160px\" }}>\n              <ColumnWidth\n                label={getString(\"lifting.division-column-width-label\", this.props.language)}\n                fieldName=\"columnDivisionWidthPx\"\n              />\n            </div>\n            <h3>\n              <FormattedMessage\n                id=\"lifting.garish-instructions\"\n                defaultMessage=\"To fit to the screen, zoom the browser in or out and then press Toggle Fullscreen.\"\n              />\n            </h3>\n          </Card.Body>\n        </Card>\n        <div id=\"liftingView\" className={styles.liftingView}>\n          <LiftingHeader\n            attemptOneIndexed={now.attemptOneIndexed}\n            orderedEntries={now.orderedEntries}\n            currentEntryId={now.currentEntryId}\n          />\n\n          <div className={styles.middleParentContainer}>\n            <div className={styles.leftCardContainer}>\n              <LeftCard\n                attemptOneIndexed={now.attemptOneIndexed}\n                orderedEntries={now.orderedEntries}\n                currentEntryId={now.currentEntryId}\n                nextEntryId={now.nextEntryId}\n                nextAttemptOneIndexed={now.nextAttemptOneIndexed}\n              />\n            </div>\n\n            <div className={styles.rightCardContainer}>{rightElement}</div>\n          </div>\n\n          <LiftingFooter\n            attemptOneIndexed={now.attemptOneIndexed}\n            orderedEntries={now.orderedEntries}\n            currentEntryId={now.currentEntryId}\n            flightsOnPlatform={this.props.flightsOnPlatform}\n            toggleReplaceTableWithWeighins={this.toggleReplaceTableWithWeighins}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => {\n  const day = state.lifting.day;\n  const platform = state.lifting.platform;\n  const flight = state.lifting.flight;\n\n  const entriesOnPlatform = state.registration.entries.filter(\n    (entry) => entry.day === day && entry.platform === platform\n  );\n\n  // Determine available flights from the entries themselves.\n  const flights: Array<Flight> = [];\n  for (let i = 0; i < entriesOnPlatform.length; i++) {\n    const entry = entriesOnPlatform[i];\n    if (flights.indexOf(entry.flight) === -1) {\n      flights.push(entry.flight);\n    }\n  }\n  flights.sort();\n\n  // Only receive entries that are in the currently-lifting group.\n  const entriesInFlight = entriesOnPlatform.filter((entry) => entry.flight === flight);\n\n  return {\n    meet: state.meet,\n    lifting: state.lifting,\n    flightsOnPlatform: flights,\n    entriesInFlight: entriesInFlight,\n    language: state.language,\n  };\n};\n\nexport default connect(mapStateToProps)(LiftingView);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Container for the Lifting page.\n\nimport React from \"react\";\nimport LiftingView from \"../components/lifting/LiftingView\";\n\nclass LiftingContainer extends React.Component<{}> {\n  render() {\n    return <LiftingView />;\n  }\n}\n\nexport default LiftingContainer;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Shows the first attempt ordering of lifters for a single flight.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Card from \"react-bootstrap/Card\";\nimport Table from \"react-bootstrap/Table\";\n\nimport { liftToAttemptFieldName } from \"../../logic/entry\";\nimport { orderEntriesByAttempt } from \"../../logic/liftingOrder\";\nimport { getString, localizeFlight } from \"../../logic/strings\";\nimport { kg2lbs, displayNumber, displayWeight } from \"../../logic/units\";\n\nimport { Entry, Flight, Language, Lift } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { checkExhausted } from \"../../types/utils\";\n\nimport styles from \"./OneFlightOrder.module.scss\";\n\ntype Column =\n  | \"SquatName\"\n  | \"SquatKg\"\n  | \"SquatLbs\"\n  | \"BenchSeparator\"\n  | \"BenchName\"\n  | \"BenchKg\"\n  | \"BenchLbs\"\n  | \"DeadliftSeparator\"\n  | \"DeadliftName\"\n  | \"DeadliftKg\"\n  | \"DeadliftLbs\";\n\ninterface OwnProps {\n  flight: Flight;\n  entriesInFlight: Array<Entry>;\n}\n\ninterface StateProps {\n  inKg: boolean;\n  showAlternateUnits: boolean;\n  language: Language;\n}\n\ntype Props = OwnProps & StateProps;\n\nclass OneFlightOrder extends React.Component<Props> {\n  getOrderBy = (lift: Lift): Array<Entry> => {\n    const fieldKg = liftToAttemptFieldName(lift);\n\n    // Only consider entries that registered a first attempt.\n    const entriesForLift = this.props.entriesInFlight.filter((e) => {\n      return e[fieldKg][0] !== 0;\n    });\n\n    // Sort them in-place on the basis of that first attempt.\n    return orderEntriesByAttempt(entriesForLift, fieldKg, 1);\n  };\n\n  getColumnHeader(column: Column, language: Language): string {\n    switch (column) {\n      case \"SquatName\":\n        return getString(\"flight-order.squat-column-header\", language);\n      case \"SquatKg\":\n        return getString(\"flight-order.kilograms-header\", language);\n      case \"SquatLbs\":\n        return getString(\"flight-order.pounds-header\", language);\n      case \"BenchSeparator\":\n        return \"\";\n      case \"BenchName\":\n        return getString(\"flight-order.bench-column-header\", language);\n      case \"BenchKg\":\n        return getString(\"flight-order.kilograms-header\", language);\n      case \"BenchLbs\":\n        return getString(\"flight-order.pounds-header\", language);\n      case \"DeadliftSeparator\":\n        return \"\";\n      case \"DeadliftName\":\n        return getString(\"flight-order.deadlift-column-header\", language);\n      case \"DeadliftKg\":\n        return getString(\"flight-order.kilograms-header\", language);\n      case \"DeadliftLbs\":\n        return getString(\"flight-order.pounds-header\", language);\n      default:\n        checkExhausted(column);\n        return \"\";\n    }\n  }\n\n  renderName(position: number, entry: Entry, language: Language): string {\n    return `${displayNumber(position + 1, language)}. ${entry.name} (${entry.divisions.join(\", \")})`;\n  }\n\n  render() {\n    const language = this.props.language;\n\n    const bySquat = this.getOrderBy(\"S\");\n    const byBench = this.getOrderBy(\"B\");\n    const byDeadlift = this.getOrderBy(\"D\");\n\n    const hasSquat = bySquat.length !== 0;\n    const hasBench = byBench.length !== 0;\n    const hasDeadlift = byDeadlift.length !== 0;\n\n    const maxRows = Math.max(bySquat.length, byBench.length, byDeadlift.length);\n\n    // Figure out what columns to render, and in which order.\n    const columns: Array<Column> = [];\n    if (hasSquat) {\n      columns.push(\"SquatName\");\n      columns.push(this.props.inKg ? \"SquatKg\" : \"SquatLbs\");\n      if (this.props.showAlternateUnits) {\n        columns.push(this.props.inKg ? \"SquatLbs\" : \"SquatKg\");\n      }\n    }\n    if (hasBench) {\n      if (hasSquat) {\n        columns.push(\"BenchSeparator\");\n      }\n      columns.push(\"BenchName\");\n      columns.push(this.props.inKg ? \"BenchKg\" : \"BenchLbs\");\n      if (this.props.showAlternateUnits) {\n        columns.push(this.props.inKg ? \"BenchLbs\" : \"BenchKg\");\n      }\n    }\n    if (hasDeadlift) {\n      if (hasSquat || hasBench) {\n        columns.push(\"DeadliftSeparator\");\n      }\n      columns.push(\"DeadliftName\");\n      columns.push(this.props.inKg ? \"DeadliftKg\" : \"DeadliftLbs\");\n      if (this.props.showAlternateUnits) {\n        columns.push(this.props.inKg ? \"DeadliftLbs\" : \"DeadliftKg\");\n      }\n    }\n\n    // Construct a table row-by-row.\n    const rows = [];\n    for (let i = 0; i < maxRows; ++i) {\n      const builder = [];\n\n      for (let j = 0; j < columns.length; ++j) {\n        const column = columns[j];\n        const key: string = column + String(i);\n\n        let content: string = \"\";\n        let className = undefined;\n\n        switch (column) {\n          case \"SquatName\": {\n            if (i < bySquat.length) {\n              const entry = bySquat[i];\n              content = this.renderName(i, entry, language);\n            }\n            break;\n          }\n          case \"SquatKg\": {\n            if (i < bySquat.length) {\n              const entry = bySquat[i];\n              content = displayWeight(entry.squatKg[0], language);\n            }\n            break;\n          }\n          case \"SquatLbs\": {\n            if (i < bySquat.length) {\n              const entry = bySquat[i];\n              content = displayWeight(kg2lbs(entry.squatKg[0]), language);\n            }\n            break;\n          }\n          case \"BenchSeparator\":\n            className = styles.leftDivider;\n            break;\n          case \"BenchName\": {\n            if (i < byBench.length) {\n              const entry = byBench[i];\n              content = this.renderName(i, entry, language);\n            }\n            break;\n          }\n          case \"BenchKg\": {\n            if (i < byBench.length) {\n              const entry = byBench[i];\n              content = displayWeight(entry.benchKg[0], language);\n            }\n            break;\n          }\n          case \"BenchLbs\": {\n            if (i < byBench.length) {\n              const entry = byBench[i];\n              content = displayWeight(kg2lbs(entry.benchKg[0]), language);\n            }\n            break;\n          }\n          case \"DeadliftSeparator\":\n            className = styles.leftDivider;\n            break;\n          case \"DeadliftName\": {\n            if (i < byDeadlift.length) {\n              const entry = byDeadlift[i];\n              content = this.renderName(i, entry, language);\n            }\n            break;\n          }\n          case \"DeadliftKg\": {\n            if (i < byDeadlift.length) {\n              const entry = byDeadlift[i];\n              content = displayWeight(entry.deadliftKg[0], language);\n            }\n            break;\n          }\n          case \"DeadliftLbs\": {\n            if (i < byDeadlift.length) {\n              const entry = byDeadlift[i];\n              content = displayWeight(kg2lbs(entry.deadliftKg[0]), language);\n            }\n            break;\n          }\n        }\n\n        builder.push(\n          <td key={key} className={className}>\n            {content}\n          </td>\n        );\n      }\n\n      rows.push(<tr key={i}>{builder}</tr>);\n    }\n\n    // Construct the table header.\n    const header = [];\n    for (let i = 0; i < columns.length; ++i) {\n      const column = columns[i];\n      const title = this.getColumnHeader(column, this.props.language);\n      header.push(<th key={column}>{title}</th>);\n    }\n\n    return (\n      <Card>\n        <Card.Header>\n          <FormattedMessage\n            id=\"flight-order.flight-card\"\n            defaultMessage=\"Flight {flight} Lifting Order\"\n            values={{ flight: localizeFlight(this.props.flight, this.props.language) }}\n          />\n        </Card.Header>\n        <Card.Body>\n          <Table striped hover size=\"sm\" style={{ margin: \"0px\" }}>\n            <thead>\n              <tr>{header}</tr>\n            </thead>\n            <tbody>{rows}</tbody>\n          </Table>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => {\n  return {\n    inKg: state.meet.inKg,\n    showAlternateUnits: state.meet.showAlternateUnits,\n    language: state.language,\n  };\n};\n\nexport default connect(mapStateToProps)(OneFlightOrder);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// The parent component of the FlightOrder page, contained by the FlightOrderContainer.\n\nimport React, { FormEvent } from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport FormControl from \"react-bootstrap/FormControl\";\n\nimport OneFlightOrder from \"./OneFlightOrder\";\n\nimport { getString } from \"../../logic/strings\";\nimport { displayNumber } from \"../../logic/units\";\n\nimport { Entry, Flight, Language } from \"../../types/dataTypes\";\nimport { GlobalState, MeetState } from \"../../types/stateTypes\";\nimport { FormControlTypeHack } from \"../../types/utils\";\n\ninterface StateProps {\n  meet: MeetState;\n  entries: ReadonlyArray<Entry>;\n  language: Language;\n}\n\ntype Props = StateProps;\n\ninterface InternalState {\n  day: number;\n  platform: number;\n}\n\nclass FlightOrderView extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    this.updateDay = this.updateDay.bind(this);\n    this.updatePlatform = this.updatePlatform.bind(this);\n    this.handlePrint = this.handlePrint.bind(this);\n\n    this.state = {\n      day: 1,\n      platform: 1,\n    };\n  }\n\n  updateDay = (event: FormEvent<FormControlTypeHack>) => {\n    const day = Number(event.currentTarget.value);\n    if (this.state.day !== day) {\n      // If the currently-selected platform number becomes invalid, reset it.\n      if (this.state.platform > this.props.meet.platformsOnDays[day - 1]) {\n        this.setState({ day: day, platform: 1 });\n      } else {\n        this.setState({ day: day });\n      }\n    }\n  };\n\n  updatePlatform = (event: React.FormEvent<FormControlTypeHack>) => {\n    const platform = Number(event.currentTarget.value);\n    if (this.state.platform !== platform) {\n      this.setState({ platform: platform });\n    }\n  };\n\n  handlePrint = () => {\n    window.print();\n  };\n\n  render() {\n    const language = this.props.language;\n    const selectorStyle = { width: \"120px\", marginRight: \"15px\" };\n\n    // Make options for all of the days.\n    const dayOptions = [];\n    const dayTemplate = getString(\"lifting.footer-day-template\", language);\n    for (let i = 1; i <= this.props.meet.lengthDays; i++) {\n      dayOptions.push(\n        <option value={i} key={i}>\n          {dayTemplate.replace(\"{N}\", displayNumber(i, language))}\n        </option>\n      );\n    }\n\n    // Make options for all of the available platforms on the current day.\n    const platformOptions = [];\n    const platformTemplate = getString(\"lifting.footer-platform-template\", language);\n    const numPlatforms = this.props.meet.platformsOnDays[this.state.day - 1];\n    for (let i = 1; i <= numPlatforms; i++) {\n      platformOptions.push(\n        <option value={i} key={i}>\n          {platformTemplate.replace(\"{N}\", displayNumber(i, language))}\n        </option>\n      );\n    }\n\n    // Get all the entries under the current (day, platform) selection.\n    const shownEntries = this.props.entries.filter((e) => {\n      return e.day === this.state.day && e.platform === this.state.platform;\n    });\n\n    // Look through the entries to discover what flights exist.\n    const knownFlights: Flight[] = [];\n    for (let i = 0; i < shownEntries.length; i++) {\n      const entry = shownEntries[i];\n      if (knownFlights.indexOf(entry.flight) === -1) {\n        knownFlights.push(entry.flight);\n      }\n    }\n    knownFlights.sort();\n\n    // For each flight, see if there are any lifters, and build a OneFlightOrder.\n    const flightOrders = [];\n    for (let i = 0; i < knownFlights.length; i++) {\n      const flight = knownFlights[i];\n      const entriesInFlight = shownEntries.filter((e) => e.flight === flight);\n      const id = \"\" + this.state.day + \"-\" + this.state.platform + \"-\" + flight;\n      flightOrders.push(<OneFlightOrder key={id} flight={flight} entriesInFlight={entriesInFlight} />);\n    }\n\n    // FIXME: Disable categories for the moment. They seem unhelpful.\n    // As far as I know, no one has paid them much attention.\n    /*\n    // Look through the entries to discover what divisions exist.\n    const categoryResults = getProjectedResults(\n      shownEntries,\n      this.props.meet.weightClassesKgMen,\n      this.props.meet.weightClassesKgWomen,\n      this.props.meet.weightClassesKgMx,\n      this.props.meet.combineSleevesAndWraps\n    );\n\n    let categories: Array<JSX.Element> = [];\n    for (let i = 0; i < categoryResults.length; i++) {\n      const id = \"\" + this.state.day + \"-\" + this.state.platform + \"-\" + i;\n      categories.push(<OneCategory key={id} platform={this.state.platform} categoryResults={categoryResults[i]} />);\n    }\n    */\n\n    return (\n      <div>\n        <Card style={{ marginBottom: \"17px\" }}>\n          <Card.Body style={{ display: \"flex\" }}>\n            <FormControl\n              value={this.state.day.toString()}\n              as=\"select\"\n              onChange={this.updateDay}\n              style={selectorStyle}\n              className=\"custom-select\"\n            >\n              {dayOptions}\n            </FormControl>\n\n            <FormControl\n              value={this.state.platform.toString()}\n              as=\"select\"\n              onChange={this.updatePlatform}\n              style={selectorStyle}\n              className=\"custom-select\"\n            >\n              {platformOptions}\n            </FormControl>\n\n            <Button variant=\"info\" onClick={this.handlePrint}>\n              <FormattedMessage id=\"flight-order.print-button\" defaultMessage=\"Print Page\" />\n            </Button>\n          </Card.Body>\n        </Card>\n\n        {flightOrders}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => {\n  return {\n    meet: state.meet,\n    entries: state.registration.entries,\n    language: state.language,\n  };\n};\n\nexport default connect(mapStateToProps)(FlightOrderView);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Container for the FlightOrder page.\n\nimport React from \"react\";\n\nimport FlightOrderView from \"../components/flight-order/FlightOrderView\";\nimport styles from \"../components/common/ContentArea.module.scss\";\n\nclass FlightOrderContainer extends React.Component<{}> {\n  render() {\n    return (\n      <div className={styles.contentArea}>\n        <FlightOrderView />\n      </div>\n    );\n  }\n}\n\nexport default FlightOrderContainer;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Displays the results by division.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Card from \"react-bootstrap/Card\";\nimport Table from \"react-bootstrap/Table\";\n\nimport { getFinalResults } from \"../../logic/divisionPlace\";\nimport { getWeightClassStr, getWeightClassLbsStr, wtclsStrKg2Lbs } from \"../../reducers/meetReducer\";\nimport {\n  getBest5SquatKg,\n  getBest5BenchKg,\n  getBest5DeadliftKg,\n  getFinalEventTotalKg,\n  entryHasLifted,\n} from \"../../logic/entry\";\nimport { kg2lbs, displayWeight, displayPoints, displayPlaceOrdinal } from \"../../logic/units\";\n\nimport { getString, localizeEquipment, localizeEvent, localizeWeightClassStr } from \"../../logic/strings\";\nimport { getPoints } from \"../../logic/coefficients/coefficients\";\n\nimport { Category, CategoryResults } from \"../../logic/divisionPlace\";\nimport { Entry, Formula, Language, Sex } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { checkExhausted } from \"../../types/utils\";\n\ninterface StateProps {\n  inKg: boolean;\n  showAlternateUnits: boolean;\n  meetName: string;\n  formula: Formula;\n  combineSleevesAndWraps: boolean;\n  combineSingleAndMulti: boolean;\n  lengthDays: number;\n  weightClassesKgMen: ReadonlyArray<number>;\n  weightClassesKgWomen: ReadonlyArray<number>;\n  weightClassesKgMx: ReadonlyArray<number>;\n  language: Language;\n  entries: ReadonlyArray<Entry>;\n}\n\ninterface OwnProps {\n  day: string | number; // Really a number, 0 meaning \"all\".\n}\n\ntype Props = StateProps & OwnProps;\n\nconst mapSexToClasses = (sex: Sex, props: Props): ReadonlyArray<number> => {\n  switch (sex) {\n    case \"M\":\n      return props.weightClassesKgMen;\n    case \"F\":\n      return props.weightClassesKgWomen;\n    case \"Mx\":\n      return props.weightClassesKgMx;\n    default:\n      checkExhausted(sex);\n      return props.weightClassesKgMen;\n  }\n};\n\nclass ByDivision extends React.Component<Props> {\n  renderEntryRow = (entry: Entry, category: Category, key: number): JSX.Element | null => {\n    // Skip no-show entries.\n    if (!entryHasLifted(entry)) return null;\n\n    // Skip DQ'd lifters. Meet directors have reported that it's embarrassing\n    // to the DQ'd lifter to have that projected.\n    const totalKg = getFinalEventTotalKg(entry, category.event);\n    if (totalKg === 0) return null;\n\n    const inKg = this.props.inKg;\n    const language = this.props.language;\n\n    // The place proceeds in order by key, except for guests\n    const place = entry.guest\n      ? getString(\"results.lifter-guest\", language)\n      : displayPlaceOrdinal(key + 1, entry, this.props.language);\n\n    const points: number = getPoints(this.props.formula, entry, category.event, totalKg, inKg);\n\n    let pointsStr = \"\";\n    if (totalKg !== 0 && points === 0) {\n      pointsStr = getString(\"results.value-not-applicable\", language);\n    } else if (totalKg !== 0 && points !== 0) {\n      pointsStr = displayPoints(points, language);\n    }\n\n    const classes = mapSexToClasses(entry.sex, this.props);\n    const wtcls = inKg\n      ? getWeightClassStr(classes, entry.bodyweightKg, language)\n      : getWeightClassLbsStr(classes, entry.bodyweightKg);\n    const bw = inKg ? entry.bodyweightKg : kg2lbs(entry.bodyweightKg);\n\n    const squatKg = getBest5SquatKg(entry);\n    const squat = inKg ? squatKg : kg2lbs(squatKg);\n\n    const benchKg = getBest5BenchKg(entry);\n    const bench = inKg ? benchKg : kg2lbs(benchKg);\n\n    const deadliftKg = getBest5DeadliftKg(entry);\n    const deadlift = inKg ? deadliftKg : kg2lbs(deadliftKg);\n\n    let weightTemplate = \"\";\n    if (inKg) {\n      if (this.props.showAlternateUnits === true) {\n        weightTemplate = getString(\"lifting.current-weight-kg-lbs\", language);\n      } else {\n        weightTemplate = getString(\"lifting.current-weight-kg\", language);\n      }\n    } else {\n      if (this.props.showAlternateUnits === true) {\n        weightTemplate = getString(\"lifting.current-weight-lbs-kg\", language);\n      } else {\n        weightTemplate = getString(\"lifting.current-weight-lbs\", language);\n      }\n    }\n\n    let weightString: null | string = null;\n    if (totalKg > 0) {\n      weightString = weightTemplate\n        .replace(\"{kg}\", displayWeight(totalKg, language))\n        .replace(\"{lbs}\", displayWeight(kg2lbs(totalKg), language));\n    }\n\n    return (\n      <tr key={key}>\n        <td>{place}</td>\n        <td>{entry.name}</td>\n        <td>{entry.bodyweightKg === 0 ? null : wtcls}</td>\n        <td>{entry.bodyweightKg === 0 ? null : displayWeight(bw, language)}</td>\n        <td>{entry.age === 0 ? null : entry.age}</td>\n        <td>{squatKg === 0 ? \"\" : displayWeight(squat, language)}</td>\n        <td>{benchKg === 0 ? \"\" : displayWeight(bench, language)}</td>\n        <td>{deadliftKg === 0 ? \"\" : displayWeight(deadlift, language)}</td>\n        <td>{weightString}</td>\n        <td>{pointsStr}</td>\n      </tr>\n    );\n  };\n\n  mapSexToLabel = (sex: Sex, language: Language): string => {\n    switch (sex) {\n      case \"M\":\n        return getString(\"results.mens\", language);\n      case \"F\":\n        return getString(\"results.womens\", language);\n      case \"Mx\":\n        return getString(\"results.mxs\", language);\n      default:\n        checkExhausted(sex);\n        return \"\";\n    }\n  };\n\n  renderCategoryResults = (results: CategoryResults, key: number): JSX.Element | null => {\n    const { category, orderedEntries } = results;\n    const language = this.props.language;\n    const sex: string = this.mapSexToLabel(category.sex, language);\n\n    // Gather rows.\n    const rows = [];\n    for (let i = 0; i < orderedEntries.length; i++) {\n      const row = this.renderEntryRow(orderedEntries[i], category, i);\n      if (row !== null) {\n        rows.push(row);\n      }\n    }\n\n    // If all entries were no-show, don't show this panel.\n    if (rows.length === 0) {\n      return null;\n    }\n\n    let eqpstr: string = localizeEquipment(category.equipment, language);\n    if (this.props.combineSleevesAndWraps && (category.equipment === \"Sleeves\" || category.equipment === \"Wraps\")) {\n      eqpstr = getString(\"results.combined-sleeves-wraps\", language);\n    } else if (\n      this.props.combineSingleAndMulti &&\n      (category.equipment === \"Single-ply\" || category.equipment === \"Multi-ply\")\n    ) {\n      eqpstr = getString(\"results.combined-single-multi\", language);\n    }\n\n    const units = this.props.inKg\n      ? getString(\"results.spoken-unit-kilo\", language)\n      : getString(\"results.spoken-unit-pound\", language);\n\n    // Convert the category.weightClassStr to pounds.\n    let wtcls = localizeWeightClassStr(category.weightClassStr, language);\n    if (category.weightClassStr !== \"\" && !this.props.inKg) {\n      wtcls = wtclsStrKg2Lbs(category.weightClassStr);\n    }\n\n    const template = getString(\"results.division-template\", language);\n    const division = template\n      .replace(\"{sex}\", sex)\n      .replace(\"{weightClass}\", wtcls)\n      .replace(\"{spokenUnits}\", category.weightClassStr !== \"\" ? units : \"\")\n      .replace(\"{equipment}\", eqpstr)\n      .replace(\"{division}\", category.division)\n      .replace(\"{event}\", localizeEvent(category.event, language));\n\n    return (\n      <Card key={key} style={{ marginTop: \"17px\" }}>\n        <Card.Header>{division}</Card.Header>\n        <Card.Body>\n          <Table hover size=\"sm\">\n            <thead>\n              <tr>\n                <th>{getString(\"lifting.column-place\", language)}</th>\n                <th>{getString(\"lifting.column-lifter\", language)}</th>\n                <th>{getString(\"lifting.column-weightclass\", language)}</th>\n                <th>{getString(\"lifting.column-bodyweight\", language)}</th>\n                <th>{getString(\"lifting.column-age\", language)}</th>\n                <th>{getString(\"flight-order.squat-column-header\", language)}</th>\n                <th>{getString(\"flight-order.bench-column-header\", language)}</th>\n                <th>{getString(\"flight-order.deadlift-column-header\", language)}</th>\n                <th>{getString(\"lifting.column-finaltotal\", language)}</th>\n                <th>{getString(\"lifting.column-finalpoints\", language)}</th>\n              </tr>\n            </thead>\n            <tbody>{rows}</tbody>\n          </Table>\n        </Card.Body>\n      </Card>\n    );\n  };\n\n  render() {\n    const results = getFinalResults(\n      this.props.entries,\n      this.props.weightClassesKgMen,\n      this.props.weightClassesKgWomen,\n      this.props.weightClassesKgMx,\n      this.props.combineSleevesAndWraps,\n      this.props.combineSingleAndMulti\n    );\n\n    const categoryCards = [];\n    for (let i = 0; i < results.length; i++) {\n      const panel = this.renderCategoryResults(results[i], i);\n      if (panel !== null) {\n        categoryCards.push(panel);\n      }\n    }\n\n    return <div>{categoryCards}</div>;\n  }\n}\n\nconst mapStateToProps = (state: GlobalState, ownProps: OwnProps): StateProps => {\n  const day = Number(ownProps.day);\n  let entries = state.registration.entries;\n  if (day > 0) {\n    entries = entries.filter((e) => e.day === day);\n  }\n\n  return {\n    inKg: state.meet.inKg,\n    showAlternateUnits: state.meet.showAlternateUnits,\n    meetName: state.meet.name,\n    formula: state.meet.formula,\n    combineSleevesAndWraps: state.meet.combineSleevesAndWraps,\n    combineSingleAndMulti: state.meet.combineSingleAndMulti,\n    lengthDays: state.meet.lengthDays,\n    weightClassesKgMen: state.meet.weightClassesKgMen,\n    weightClassesKgWomen: state.meet.weightClassesKgWomen,\n    weightClassesKgMx: state.meet.weightClassesKgMx,\n    language: state.language,\n    entries: entries,\n  };\n};\n\nexport default connect(mapStateToProps)(ByDivision);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the logic for calculating the division Place of a lifter, shared between\n// the Lifting page, the Rankings page, and data export code.\n//\n// The algorithm used is particularly bad -- the foremost goal was to make an interface\n// that allowed for maximum code reuse between the Rankings and Lifting pages,\n// which have slightly different needs.\n\nimport { getFinalEventTotalKg } from \"./entry\";\n\n// Import points formulas.\nimport { getAgeAdjustedPoints } from \"./coefficients/coefficients\";\n\n// Import age coefficients.\nimport { checkExhausted } from \"../types/utils\";\nimport { AgeCoefficients, Sex, Event, Equipment, Entry, Formula } from \"../types/dataTypes\";\n\n// Specifies a points category under which entries can be ranked together.\nexport type PointsCategory = {\n  sex: Sex;\n  event: Event;\n  equipment: Equipment;\n};\n\n// Wraps up all the entries in a category with the category's descriptors.\nexport type PointsCategoryResults = {\n  category: PointsCategory;\n  orderedEntries: Array<Entry>;\n};\n\n// Generates a unique String out of a Category, for purposes of using as a Map key.\nconst categoryToKey = (category: PointsCategory): string => {\n  return JSON.stringify(category);\n};\nconst keyToCategory = (key: string): PointsCategory => {\n  return JSON.parse(key);\n};\n\n// Returns a copy of the entries array sorted by Formula Place (Rank).\n// All entries are assumed to be part of the same category.\nconst sortByFormulaPlaceInCategory = (\n  entries: Array<Entry>,\n  category: PointsCategory,\n  formula: Formula,\n  ageCoefficients: AgeCoefficients,\n  inKg: boolean,\n  meetDate: string\n): Array<Entry> => {\n  // Make a map from Entry to initial index.\n  const indexMap = new Map();\n  for (let i = 0; i < entries.length; i++) {\n    indexMap.set(entries[i], i);\n  }\n\n  // Pre-calculate all the points into an array to avoid computing them multiple\n  // times in the sort.\n  const memoizedPoints = new Array(entries.length);\n  for (let i = 0; i < entries.length; i++) {\n    const entry = entries[i];\n    const totalKg = getFinalEventTotalKg(entry, category.event);\n\n    memoizedPoints[i] = getAgeAdjustedPoints(ageCoefficients, meetDate, formula, entry, category.event, totalKg, inKg);\n  }\n\n  // Clone the entries array to avoid modifying the original.\n  const clonedEntries = entries.slice();\n\n  // Sort in the given category, first place having the lowest index.\n  clonedEntries.sort((a, b) => {\n    const aIndex = indexMap.get(a);\n    const bIndex = indexMap.get(b);\n\n    // Appease the type checker even though this can't happen.\n    if (aIndex === undefined || bIndex === undefined) return 0;\n\n    // Guests always sort higher than non-guests.\n    // This is phrased a little strangely to also handle undefined.\n    if (a.guest !== b.guest) {\n      if (a.guest) return 1;\n      if (b.guest) return -1;\n    }\n\n    // First sort by points, higher sorting lower.\n    const aPoints = memoizedPoints[aIndex];\n    const bPoints = memoizedPoints[bIndex];\n    if (aPoints !== bPoints) return bPoints - aPoints;\n\n    // If points are equal, sort by Bodyweight, lower sorting lower.\n    if (a.bodyweightKg !== b.bodyweightKg) return a.bodyweightKg - b.bodyweightKg;\n\n    // Otherwise, they're equal.\n    return 0;\n  });\n\n  return clonedEntries;\n};\n\n// Determines the sort order by Event.\nconst getEventSortOrder = (ev: Event): number => {\n  return [\"SBD\", \"BD\", \"SB\", \"SD\", \"S\", \"B\", \"D\"].indexOf(ev);\n};\n\n// Determines the sort order by Equipment.\nconst getEquipmentSortOrder = (eq: Equipment): number => {\n  // Combine classic and equipped lifting.\n  return [\"Bare\", \"Sleeves\", \"Wraps\", \"Single-ply\", \"Multi-ply\", \"Unlimited\"].indexOf(eq);\n};\n\n// Determines the sort order by Sex.\nconst getSexSortOrder = (sex: Sex): number => {\n  switch (sex) {\n    case \"F\":\n      return 0;\n    case \"M\":\n      return 1;\n    case \"Mx\":\n      return 2;\n    default:\n      checkExhausted(sex);\n      return 3;\n  }\n};\n\n// Determines the sort (and therefore presentation) order for the Category Results.\n// The input array is sorted in-place; nothing is returned.\nexport const sortPointsCategoryResults = (results: Array<PointsCategoryResults>): void => {\n  results.sort((a, b) => {\n    const catA = a.category;\n    const catB = b.category;\n\n    // First, sort by Sex.\n    const aSex = getSexSortOrder(catA.sex);\n    const bSex = getSexSortOrder(catB.sex);\n    if (aSex !== bSex) return aSex - bSex;\n\n    // Next, sort by Event.\n    const aEvent = getEventSortOrder(catA.event);\n    const bEvent = getEventSortOrder(catB.event);\n    if (aEvent !== bEvent) return aEvent - bEvent;\n\n    // Finally, sort by Equipment.\n    const aEquipment = getEquipmentSortOrder(catA.equipment);\n    const bEquipment = getEquipmentSortOrder(catB.equipment);\n    if (aEquipment !== bEquipment) return aEquipment - bEquipment;\n\n    return 0;\n  });\n};\n\n// Generates objects representing the various ByPoints categories.\n// The returned objects are sorted in intended order of presentation.\nexport const getAllRankings = (\n  entries: ReadonlyArray<Entry>,\n  formula: Formula,\n  ageCoefficients: AgeCoefficients,\n  combineSleevesAndWraps: boolean,\n  combineSingleAndMulti: boolean,\n  inKg: boolean,\n  meetDate: string\n): Array<PointsCategoryResults> => {\n  // Generate a map from category to the entries within that category.\n  // The map is populated by iterating over each entry and having the entry\n  // append itself to per-category lists.\n  const categoryMap = new Map();\n  for (let i = 0; i < entries.length; i++) {\n    const e = entries[i];\n\n    // Remember consistent properties.\n    const sex = e.sex;\n    let equipment: Equipment = e.equipment;\n\n    // If the results combine Sleeves and Wraps, promote Sleeves to Wraps.\n    if (combineSleevesAndWraps && equipment === \"Sleeves\") {\n      equipment = \"Wraps\";\n    }\n\n    // If the results combine Sleeves and Wraps, promote Sleeves to Wraps.\n    if (combineSingleAndMulti && equipment === \"Single-ply\") {\n      equipment = \"Multi-ply\";\n    }\n\n    // Iterate over each event, adding to the map.\n    for (let evidx = 0; evidx < e.events.length; evidx++) {\n      const event = e.events[evidx];\n      const category = { sex, event, equipment };\n      const key = categoryToKey(category);\n\n      const catEntries = categoryMap.get(key);\n      catEntries === undefined ? categoryMap.set(key, [e]) : catEntries.push(e);\n    }\n  }\n\n  // Iterate over each category and assign a Place to the entries therein.\n  const results = [];\n  for (const [key, catEntries] of categoryMap) {\n    const category = keyToCategory(key);\n    const orderedEntries = sortByFormulaPlaceInCategory(catEntries, category, formula, ageCoefficients, inKg, meetDate);\n    results.push({ category, orderedEntries });\n  }\n\n  sortPointsCategoryResults(results);\n  return results;\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Displays the results by points.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Card from \"react-bootstrap/Card\";\nimport Table from \"react-bootstrap/Table\";\n\nimport { getAllRankings } from \"../../logic/pointsPlace\";\nimport { getWeightClassStr, getWeightClassLbsStr } from \"../../reducers/meetReducer\";\nimport {\n  getBest5SquatKg,\n  getBest5BenchKg,\n  getBest5DeadliftKg,\n  getFinalEventTotalKg,\n  entryHasLifted,\n} from \"../../logic/entry\";\nimport { getString, localizeEquipment, localizeEvent, localizeSex } from \"../../logic/strings\";\nimport { kg2lbs, displayNumber, displayPoints, displayWeight, displayPlaceOrdinal } from \"../../logic/units\";\n\nimport { getAgeAdjustedPoints } from \"../../logic/coefficients/coefficients\";\n\nimport { PointsCategory, PointsCategoryResults } from \"../../logic/pointsPlace\";\nimport { AgeCoefficients, Entry, Formula, Language, Sex } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { checkExhausted } from \"../../types/utils\";\nimport { fosterMcCulloch } from \"../../logic/coefficients/foster-mcculloch\";\n\ninterface StateProps {\n  inKg: boolean;\n  meetName: string;\n  meetDate: string;\n  formula: Formula;\n  combineSleevesAndWraps: boolean;\n  combineSingleAndMulti: boolean;\n  lengthDays: number;\n  weightClassesKgMen: ReadonlyArray<number>;\n  weightClassesKgWomen: ReadonlyArray<number>;\n  weightClassesKgMx: ReadonlyArray<number>;\n  language: Language;\n  entries: ReadonlyArray<Entry>;\n}\n\n// Overloads this component so it can render different types of \"Best Lifter\" categories.\nexport type AgePointsCategory = \"BestLifter\" | \"BestMastersLifter\" | \"BestJuniorsLifter\";\n\ninterface OwnProps {\n  day: string | number; // Really a number, 0 meaning \"all\".\n  ageCoefficients: AgeCoefficients; // In OwnProps so that caller can disable it.\n  agePointsCategory: AgePointsCategory;\n}\n\ntype Props = StateProps & OwnProps;\n\nconst mapSexToClasses = (sex: Sex, props: Props): ReadonlyArray<number> => {\n  switch (sex) {\n    case \"M\":\n      return props.weightClassesKgMen;\n    case \"F\":\n      return props.weightClassesKgWomen;\n    case \"Mx\":\n      return props.weightClassesKgMx;\n    default:\n      checkExhausted(sex);\n      return props.weightClassesKgMen;\n  }\n};\n\nclass ByPoints extends React.Component<Props> {\n  renderEntryRow = (entry: Entry, category: PointsCategory, key: number): JSX.Element | null => {\n    // Skip no-show lifters.\n    if (!entryHasLifted(entry)) return null;\n\n    // Skip DQ'd lifters. Meet directors have reported that it's embarrassing\n    // to the DQ'd lifter to have that projected.\n    const totalKg = getFinalEventTotalKg(entry, category.event);\n    if (totalKg === 0) return null;\n\n    const inKg = this.props.inKg;\n    const language = this.props.language;\n\n    // The place proceeds in order by key, except for guests\n    const rank = entry.guest\n      ? getString(\"results.lifter-guest\", language)\n      : displayPlaceOrdinal(key + 1, entry, language);\n\n    const points: number = getAgeAdjustedPoints(\n      this.props.ageCoefficients,\n      this.props.meetDate,\n      this.props.formula,\n      entry,\n      category.event,\n      totalKg,\n      inKg\n    );\n\n    let pointsStr = \"\";\n    if (totalKg !== 0 && points === 0) {\n      pointsStr = getString(\"results.value-not-applicable\", language);\n    } else if (totalKg !== 0 && points !== 0) {\n      pointsStr = displayPoints(points, language);\n    }\n\n    const firstDivision = entry.divisions.length > 0 ? entry.divisions[0] : \"\";\n    const numDivisions = entry.divisions.length;\n\n    const classes = mapSexToClasses(entry.sex, this.props);\n    const wtcls = inKg\n      ? getWeightClassStr(classes, entry.bodyweightKg, language)\n      : getWeightClassLbsStr(classes, entry.bodyweightKg);\n    const bw = inKg ? entry.bodyweightKg : kg2lbs(entry.bodyweightKg);\n\n    const squatKg = getBest5SquatKg(entry);\n    const squat = inKg ? squatKg : kg2lbs(squatKg);\n\n    const benchKg = getBest5BenchKg(entry);\n    const bench = inKg ? benchKg : kg2lbs(benchKg);\n\n    const deadliftKg = getBest5DeadliftKg(entry);\n    const deadlift = inKg ? deadliftKg : kg2lbs(deadliftKg);\n\n    const total = inKg ? totalKg : kg2lbs(totalKg);\n\n    return (\n      <tr key={key}>\n        <td>{rank}</td>\n        <td>{entry.name}</td>\n        <td>{localizeSex(entry.sex, language)}</td>\n        <td>\n          {firstDivision} {numDivisions > 1 ? \"(+\" + (numDivisions - 1) + \")\" : \"\"}\n        </td>\n        <td>{localizeEquipment(entry.equipment, language)}</td>\n        <td>{entry.bodyweightKg === 0 ? null : wtcls}</td>\n        <td>{entry.bodyweightKg === 0 ? null : displayWeight(bw, language)}</td>\n        <td>{entry.age === 0 ? null : displayNumber(entry.age, language)}</td>\n        <td>{squatKg === 0 ? \"\" : displayWeight(squat, language)}</td>\n        <td>{benchKg === 0 ? \"\" : displayWeight(bench, language)}</td>\n        <td>{deadliftKg === 0 ? \"\" : displayWeight(deadlift, language)}</td>\n        <td>{totalKg === 0 ? \"\" : displayWeight(total, language)}</td>\n        <td>{pointsStr}</td>\n      </tr>\n    );\n  };\n\n  mapSexToLabel = (sex: Sex, language: Language): string => {\n    switch (sex) {\n      case \"M\":\n        return getString(\"results.mens\", language);\n      case \"F\":\n        return getString(\"results.womens\", language);\n      case \"Mx\":\n        return getString(\"results.mxs\", language);\n      default:\n        checkExhausted(sex);\n        return \"\";\n    }\n  };\n\n  renderCategoryResults = (results: PointsCategoryResults, key: number): JSX.Element | null => {\n    const { category, orderedEntries } = results;\n    const language = this.props.language;\n    const sex: string = this.mapSexToLabel(category.sex, language);\n\n    // Gather rows.\n    const rows = [];\n    for (let i = 0; i < orderedEntries.length; i++) {\n      const row = this.renderEntryRow(orderedEntries[i], category, i);\n      if (row !== null) {\n        rows.push(row);\n      }\n    }\n\n    // If all lifters were No-Show, skip displaying this category.\n    if (rows.length === 0) {\n      return null;\n    }\n\n    let eqpstr: string = localizeEquipment(category.equipment, language);\n    if (this.props.combineSleevesAndWraps && (category.equipment === \"Sleeves\" || category.equipment === \"Wraps\")) {\n      eqpstr = getString(\"results.combined-sleeves-wraps\", language);\n    } else if (\n      this.props.combineSingleAndMulti &&\n      (category.equipment === \"Single-ply\" || category.equipment === \"Multi-ply\")\n    ) {\n      eqpstr = getString(\"results.combined-single-multi\", language);\n    }\n\n    const template = getString(\"results.category-template\", language);\n    const categoryString = template\n      .replace(\"{sex}\", sex)\n      .replace(\"{equipment}\", eqpstr)\n      .replace(\"{event}\", localizeEvent(category.event, language));\n\n    return (\n      <Card key={key} style={{ marginTop: \"17px\" }}>\n        <Card.Header>{categoryString}</Card.Header>\n        <Card.Body>\n          <Table striped hover size=\"sm\">\n            <thead>\n              <tr>\n                <th>{getString(\"results.column-rank\", language)}</th>\n                <th>{getString(\"lifting.column-lifter\", language)}</th>\n                <th>{getString(\"results.column-sex\", language)}</th>\n                <th>{getString(\"lifting.column-division\", language)}</th>\n                <th>{getString(\"results.column-equipment\", language)}</th>\n                <th>{getString(\"lifting.column-weightclass\", language)}</th>\n                <th>{getString(\"lifting.column-bodyweight\", language)}</th>\n                <th>{getString(\"lifting.column-age\", language)}</th>\n                <th>{getString(\"flight-order.squat-column-header\", language)}</th>\n                <th>{getString(\"flight-order.bench-column-header\", language)}</th>\n                <th>{getString(\"flight-order.deadlift-column-header\", language)}</th>\n                <th>{getString(\"lifting.column-finaltotal\", language)}</th>\n                <th>\n                  {this.props.ageCoefficients === \"None\"\n                    ? getString(\"lifting.column-finalpoints\", language)\n                    : getString(\"results.column-age-points\", language)}\n                </th>\n              </tr>\n            </thead>\n            <tbody>{rows}</tbody>\n          </Table>\n        </Card.Body>\n      </Card>\n    );\n  };\n\n  render() {\n    let entries = this.props.entries;\n\n    // If this is for Best Masters lifter, just include non-standard-aged lifters.\n    if (this.props.agePointsCategory !== \"BestLifter\") {\n      entries = entries.filter((e) => {\n        // Filter out based on age.\n        switch (this.props.agePointsCategory) {\n          case \"BestLifter\":\n            break;\n          case \"BestMastersLifter\":\n            // The coefficients logic below will handle older lifters\n            // according to the chosen age coefficient system.\n            if (e.age <= 27) {\n              return false;\n            }\n            break;\n          case \"BestJuniorsLifter\":\n            // The coefficients logic below will handle older lifters\n            // according to the chosen age coefficient system.\n            if (e.age >= 27) {\n              return false;\n            }\n            break;\n          default:\n            checkExhausted(this.props.agePointsCategory);\n            break;\n        }\n\n        // Only include lifters who get an age bump.\n        switch (this.props.ageCoefficients) {\n          case \"None\":\n            return true;\n          case \"FosterMcCulloch\":\n            return fosterMcCulloch(e.age) !== 1.0;\n          default:\n            checkExhausted(this.props.ageCoefficients);\n            return true;\n        }\n      });\n    }\n\n    const results = getAllRankings(\n      entries,\n      this.props.formula,\n      this.props.ageCoefficients,\n      this.props.combineSleevesAndWraps,\n      this.props.combineSingleAndMulti,\n      this.props.inKg,\n      this.props.meetDate\n    );\n\n    const categoryCards = [];\n    for (let i = 0; i < results.length; i++) {\n      const panel = this.renderCategoryResults(results[i], i);\n      if (panel !== null) {\n        categoryCards.push(panel);\n      }\n    }\n\n    return <div>{categoryCards}</div>;\n  }\n}\n\nconst mapStateToProps = (state: GlobalState, ownProps: OwnProps): StateProps => {\n  const day = Number(ownProps.day);\n  let entries = state.registration.entries;\n  if (day > 0) {\n    entries = entries.filter((e) => e.day === day);\n  }\n\n  return {\n    inKg: state.meet.inKg,\n    meetName: state.meet.name,\n    meetDate: state.meet.date,\n    formula: state.meet.formula,\n    combineSleevesAndWraps: state.meet.combineSleevesAndWraps,\n    combineSingleAndMulti: state.meet.combineSingleAndMulti,\n    lengthDays: state.meet.lengthDays,\n    weightClassesKgMen: state.meet.weightClassesKgMen,\n    weightClassesKgWomen: state.meet.weightClassesKgWomen,\n    weightClassesKgMx: state.meet.weightClassesKgMx,\n    language: state.language,\n    entries: entries,\n  };\n};\n\nexport default connect(mapStateToProps)(ByPoints);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Exports data to a CSV format easily importable by OpenPowerlifting.\n\nimport { csvDate, csvString, Csv } from \"./csv\";\nimport { getFinalResults } from \"../divisionPlace\";\nimport { getPoints } from \"../coefficients/coefficients\";\nimport { wtclsStrKg2Lbs } from \"../../reducers/meetReducer\";\nimport {\n  getAge,\n  getBest3SquatKg,\n  getBest3BenchKg,\n  getBest3DeadliftKg,\n  getFinalEventTotalKg,\n  entryHasLifted,\n  MAX_ATTEMPTS,\n} from \"../entry\";\nimport { displayPoints, displayWeight, kg2lbs } from \"../units\";\n\nimport { Category, CategoryResults } from \"../divisionPlace\";\nimport { Entry, Equipment, Formula } from \"../../types/dataTypes\";\nimport { GlobalState, MeetState } from \"../../types/stateTypes\";\nimport { checkExhausted } from \"../../types/utils\";\nimport { releaseVersion } from \"../../versions\";\n\nconst makeMeetCsv = (meet: MeetState): Csv => {\n  const csv = new Csv();\n  csv.fieldnames = [\"Federation\", \"Date\", \"MeetCountry\", \"MeetState\", \"MeetTown\", \"MeetName\", \"Formula\"];\n\n  const row: Array<string> = [\n    csvString(meet.federation),\n    csvDate(meet.date),\n    csvString(meet.country),\n    csvString(meet.state),\n    csvString(meet.city),\n    csvString(meet.name),\n    csvString(meet.formula),\n  ];\n  csv.rows = [row];\n\n  // An optionalRuleSet column may be provided.\n  let rules = \"\";\n  if (meet.combineSleevesAndWraps === true) {\n    rules += \"CombineSleevesAndWraps \";\n  }\n  if (meet.combineSleevesAndWraps === true) {\n    rules += \"CombineSingleAndMulti \";\n  }\n  if (rules !== \"\") {\n    csv.fieldnames.push(\"RuleSet\");\n    csv.rows[0].push(rules.trim());\n  }\n\n  return csv;\n};\n\nconst standardizeEquipment = (eq: Equipment): string => {\n  switch (eq) {\n    case \"Bare\":\n      return \"Bare\";\n    case \"Sleeves\":\n      return \"Sleeves\";\n    case \"Wraps\":\n      return \"Wraps\";\n    case \"Single-ply\":\n      return \"Single-ply\";\n    case \"Multi-ply\":\n      return \"Multi-ply\";\n    case \"Unlimited\":\n      return \"Unlimited\";\n    default:\n      checkExhausted(eq);\n      return \"Raw\";\n  }\n};\n\nconst addEntriesRow = (\n  csv: Csv,\n  category: Category,\n  inKg: boolean,\n  meetDate: string,\n  formula: Formula,\n  entry: Entry,\n  index: number\n) => {\n  const unit: string = inKg ? \"Kg\" : \"LBS\";\n  const finalEventTotalKg = getFinalEventTotalKg(entry, category.event);\n\n  // Helper functions to keep things one-liners below. Handles Kg/Lbs conversion.\n  const weight = (kg: number): string => {\n    return displayWeight(inKg ? kg : kg2lbs(kg));\n  };\n  const wtcls = (cls: string): string => {\n    return inKg ? cls : wtclsStrKg2Lbs(cls);\n  };\n\n  // Initialize an empty row with all columns available.\n  const row: Array<string> = Array(csv.fieldnames.length).fill(\"\");\n\n  if (!entryHasLifted(entry)) {\n    row[csv.index(\"Place\")] = \"NS\"; // No-Show.\n  } else if (entry.guest) {\n    row[csv.index(\"Place\")] = \"G\"; // Guest\n  } else {\n    row[csv.index(\"Place\")] = finalEventTotalKg === 0 ? \"DQ\" : csvString(index + 1);\n  }\n\n  row[csv.index(\"Name\")] = csvString(entry.name);\n  row[csv.index(\"Instagram\")] = csvString(entry.instagram);\n  row[csv.index(\"Sex\")] = csvString(entry.sex);\n  row[csv.index(\"BirthDate\")] = csvDate(entry.birthDate);\n  row[csv.index(\"Age\")] = csvString(getAge(entry, meetDate));\n  row[csv.index(\"Country\")] = csvString(entry.country);\n  row[csv.index(\"State\")] = csvString(entry.state);\n  row[csv.index(\"Equipment\")] = csvString(standardizeEquipment(entry.equipment));\n  row[csv.index(\"Division\")] = csvString(category.division);\n  row[csv.index(\"Bodyweight\" + unit)] = csvString(weight(entry.bodyweightKg));\n  row[csv.index(\"WeightClass\" + unit)] = csvString(wtcls(category.weightClassStr));\n  row[csv.index(\"Total\" + unit)] = csvString(weight(finalEventTotalKg));\n  row[csv.index(\"Event\")] = csvString(category.event);\n  row[csv.index(\"Team\")] = csvString(entry.team);\n\n  // Squat.\n  if (category.event.includes(\"S\")) {\n    row[csv.index(\"Best3Squat\" + unit)] = csvString(weight(getBest3SquatKg(entry)));\n    for (let i = 0; i < MAX_ATTEMPTS; i++) {\n      const field = \"Squat\" + (i + 1) + unit;\n      row[csv.index(field)] = csvString(weight(entry.squatKg[i] * entry.squatStatus[i]));\n    }\n  }\n\n  // Bench.\n  if (category.event.includes(\"B\")) {\n    row[csv.index(\"Best3Bench\" + unit)] = csvString(weight(getBest3BenchKg(entry)));\n    for (let i = 0; i < MAX_ATTEMPTS; i++) {\n      const field = \"Bench\" + (i + 1) + unit;\n      row[csv.index(field)] = csvString(weight(entry.benchKg[i] * entry.benchStatus[i]));\n    }\n  }\n\n  // Deadlift.\n  if (category.event.includes(\"D\")) {\n    row[csv.index(\"Best3Deadlift\" + unit)] = csvString(weight(getBest3DeadliftKg(entry)));\n    for (let i = 0; i < MAX_ATTEMPTS; i++) {\n      const field = \"Deadlift\" + (i + 1) + unit;\n      row[csv.index(field)] = csvString(weight(entry.deadliftKg[i] * entry.deadliftStatus[i]));\n    }\n  }\n\n  // Points. OpenPowerlifting does not use this column, but people have asked for it.\n  const points = getPoints(formula, entry, category.event, finalEventTotalKg, inKg);\n  row[csv.index(\"Points\")] = csvString(points === 0 ? \"\" : displayPoints(points, \"en\"));\n\n  csv.rows.push(row);\n};\n\nconst makeEntriesCsv = (state: GlobalState): Csv => {\n  const inKg: boolean = state.meet.inKg;\n  const unit: string = inKg ? \"Kg\" : \"LBS\";\n\n  const csv = new Csv();\n\n  const squatFieldnames = [];\n  for (let i = 0; i < MAX_ATTEMPTS; i++) {\n    squatFieldnames.push(\"Squat\" + (i + 1) + unit);\n  }\n  squatFieldnames.push(\"Best3Squat\" + unit);\n\n  const benchFieldnames = [];\n  for (let i = 0; i < MAX_ATTEMPTS; i++) {\n    benchFieldnames.push(\"Bench\" + (i + 1) + unit);\n  }\n  benchFieldnames.push(\"Best3Bench\" + unit);\n\n  const deadliftFieldnames = [];\n  for (let i = 0; i < MAX_ATTEMPTS; i++) {\n    deadliftFieldnames.push(\"Deadlift\" + (i + 1) + unit);\n  }\n  deadliftFieldnames.push(\"Best3Deadlift\" + unit);\n\n  csv.fieldnames = Array.prototype.concat(\n    [\"Place\", \"Name\", \"Instagram\", \"Sex\", \"BirthDate\", \"Age\", \"Country\", \"State\"],\n    [\"Equipment\", \"Division\", \"Bodyweight\" + unit, \"WeightClass\" + unit],\n    squatFieldnames,\n    benchFieldnames,\n    deadliftFieldnames,\n    [\"Total\" + unit, \"Points\", \"Event\", \"Team\"]\n  );\n\n  const results: Array<CategoryResults> = getFinalResults(\n    state.registration.entries,\n    state.meet.weightClassesKgMen,\n    state.meet.weightClassesKgWomen,\n    state.meet.weightClassesKgMx,\n    state.meet.combineSleevesAndWraps,\n    state.meet.combineSingleAndMulti\n  );\n\n  const meet_date = state.meet.date;\n  const formula: Formula = state.meet.formula;\n\n  for (let i = 0; i < results.length; i++) {\n    const { category, orderedEntries } = results[i];\n\n    for (let j = 0; j < orderedEntries.length; j++) {\n      addEntriesRow(csv, category, inKg, meet_date, formula, orderedEntries[j], j);\n    }\n  }\n\n  return csv;\n};\n\nexport const exportAsOplCsv = (state: GlobalState): string => {\n  const meetCsv: Csv = makeMeetCsv(state.meet);\n\n  const entriesCsv: Csv = makeEntriesCsv(state);\n  entriesCsv.removeEmptyColumns();\n\n  const versionStr = `OPL Format v1 (OpenLifter ${releaseVersion}),Submit by email:,issues@openpowerlifting.org`;\n\n  return versionStr + \"\\n\\n\" + meetCsv.toString() + \"\\n\" + entriesCsv.toString();\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Exports data to a spreadsheet format used by the USAPL.\n\nimport { csvString, Csv } from \"./csv\";\nimport { getFinalResults } from \"../divisionPlace\";\nimport { displayWeight } from \"../units\";\n\nimport { Category, CategoryResults } from \"../divisionPlace\";\nimport { Entry, Event } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { checkExhausted } from \"../../types/utils\";\n\n// Translates the event from our format to the NextLifter format.\nconst translateEvent = (ev: Event): string => {\n  switch (ev) {\n    // Variants present in the NextLifter software.\n    case \"SBD\":\n      return \"PL\";\n    case \"BD\":\n      return \"PP\";\n    case \"S\":\n      return \"SQ\";\n    case \"B\":\n      return \"BP\";\n    case \"D\":\n      return \"DL\";\n\n    // These variants aren't selectable in NextLifter, so the USAPL doesn't use them.\n    case \"SB\":\n      return \"SB\";\n    case \"SD\":\n      return \"SD\";\n    default:\n      checkExhausted(ev);\n      return ev;\n  }\n};\n\n// Converts the ISO8601 entry.birthDate to USAPL MM/DD/YYYY format.\nconst makeBirthDate = (entry: Entry): string => {\n  if (entry.birthDate === undefined || entry.birthDate === \"\") {\n    return \"\";\n  }\n  const [year, month, day]: Array<string> = entry.birthDate.split(\"-\");\n  return month + \"/\" + day + \"/\" + year;\n};\n\n// Given an Entry and its index in the CategoryResults.orderedEntries,\n// render all that information as a one-liner CSV string.\nconst addDataRow = (csv: Csv, category: Category, entry: Entry): void => {\n  const hasSquat: boolean = category.event.includes(\"S\");\n  const hasBench: boolean = category.event.includes(\"B\");\n  const hasDL: boolean = category.event.includes(\"D\");\n\n  // Initialize an empty row with all columns available.\n  const row: Array<string> = Array(csv.fieldnames.length).fill(\"\");\n\n  row[csv.index(\"Name\")] = csvString(entry.name);\n  row[csv.index(\"Team\")] = csvString(entry.team);\n  row[csv.index(\"Div\")] = csvString(category.division);\n  row[csv.index(\"Bwt - kg\")] = csvString(displayWeight(entry.bodyweightKg));\n  row[csv.index(\"IPF Wt Cls\")] = csvString(category.weightClassStr);\n  row[csv.index(\"DOB\")] = csvString(makeBirthDate(entry));\n  row[csv.index(\"Squat 1\")] = csvString(displayWeight(hasSquat ? entry.squatKg[0] * entry.squatStatus[0] : 0));\n  row[csv.index(\"Squat 2\")] = csvString(displayWeight(hasSquat ? entry.squatKg[1] * entry.squatStatus[1] : 0));\n  row[csv.index(\"Squat 3\")] = csvString(displayWeight(hasSquat ? entry.squatKg[2] * entry.squatStatus[2] : 0));\n  row[csv.index(\"Bench 1\")] = csvString(displayWeight(hasBench ? entry.benchKg[0] * entry.benchStatus[0] : 0));\n  row[csv.index(\"Bench 2\")] = csvString(displayWeight(hasBench ? entry.benchKg[1] * entry.benchStatus[1] : 0));\n  row[csv.index(\"Bench 3\")] = csvString(displayWeight(hasBench ? entry.benchKg[2] * entry.benchStatus[2] : 0));\n  row[csv.index(\"Deadlift 1\")] = csvString(displayWeight(hasDL ? entry.deadliftKg[0] * entry.deadliftStatus[0] : 0));\n  row[csv.index(\"Deadlift 2\")] = csvString(displayWeight(hasDL ? entry.deadliftKg[1] * entry.deadliftStatus[1] : 0));\n  row[csv.index(\"Deadlift 3\")] = csvString(displayWeight(hasDL ? entry.deadliftKg[2] * entry.deadliftStatus[2] : 0));\n  row[csv.index(\"Event\")] = csvString(translateEvent(category.event));\n  row[csv.index(\"State\")] = csvString(entry.state);\n  row[csv.index(\"MemberID\")] = csvString(entry.memberId);\n  // TODO: Drug Test.\n\n  csv.rows.push(row);\n};\n\nexport const exportAsUSAPLCsv = (state: GlobalState): string => {\n  const csv = new Csv();\n  csv.fieldnames = [\n    \"Name\",\n    \"Team\",\n    \"Div\", // Division.\n    \"Bwt - kg\", // Bodyweight, kg.\n    \"IPF Wt Cls\", // IPF Weight Class (SHW as \"120+\", same format).\n    \"DOB\", // Date of Birth, in MM/DD/YYYY format.\n    \"Squat 1\", // Units unspecified, but seem to be kg.\n    \"Squat 2\",\n    \"Squat 3\",\n    \"Bench 1\",\n    \"Bench 2\",\n    \"Bench 3\",\n    \"Deadlift 1\",\n    \"Deadlift 2\",\n    \"Deadlift 3\",\n    \"Event\", // In NextLifter format (PL, BO, etc.).\n    \"State\", // USA state of residence of the lifter, as abbreviation.\n    \"MemberID\",\n    \"Drug Test\", // \"Y\" if a test was performed, blank otherwise.\n  ];\n\n  const results: Array<CategoryResults> = getFinalResults(\n    state.registration.entries,\n    state.meet.weightClassesKgMen,\n    state.meet.weightClassesKgWomen,\n    state.meet.weightClassesKgMx,\n    state.meet.combineSleevesAndWraps,\n    state.meet.combineSingleAndMulti\n  );\n\n  for (let i = 0; i < results.length; i++) {\n    const { category, orderedEntries } = results[i];\n\n    for (let j = 0; j < orderedEntries.length; j++) {\n      addDataRow(csv, category, orderedEntries[j]);\n    }\n  }\n\n  return csv.toString();\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// The parent component of the Results page, contained by the ResultsContainer.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\nimport FormControl from \"react-bootstrap/FormControl\";\n\nimport { saveAs } from \"file-saver\";\n\nimport ByDivision from \"./ByDivision\";\nimport ByPoints from \"./ByPoints\";\nimport ErrorModal from \"../ErrorModal\";\n\nimport { mergePlatform } from \"../../actions/registrationActions\";\n\nimport { liftingPresentOnPlatform, getWhetherPlatformsHaveLifted } from \"../../logic/entry\";\nimport { getString } from \"../../logic/strings\";\nimport { exportAsOplCsv } from \"../../logic/export/oplcsv\";\nimport { exportAsUSAPLCsv } from \"../../logic/export/usapl\";\n\nimport { Entry, Language } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\n\nimport styles from \"./ResultsView.module.scss\";\nimport { FormControlTypeHack, checkExhausted, assertString } from \"../../types/utils\";\nimport { Dispatch } from \"redux\";\n\ntype ResultsBy = \"Division\" | \"Points\" | \"BestMastersLifter\" | \"BestJuniorsLifter\";\n\nconst assertValidResultsBy = (value: string): value is ResultsBy => {\n  const resultsBy = value as ResultsBy;\n  switch (resultsBy) {\n    case \"BestJuniorsLifter\":\n    case \"BestMastersLifter\":\n    case \"Division\":\n    case \"Points\":\n      return true;\n    default:\n      checkExhausted(resultsBy);\n      throw new Error(`Expected a valid value for ResultsBy. Got \"${value}\"`);\n  }\n};\n\ninterface StateProps {\n  global: GlobalState;\n  language: Language;\n}\n\ninterface DispatchProps {\n  mergePlatform: (day: number, platform: number, platformEntries: Array<Entry>) => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\ninterface InternalState {\n  day: number;\n  by: ResultsBy;\n  // Controls the ErrorModal popup. Shown when error !== \"\".\n  error: string;\n}\n\n// FIXME: Unfortunate use of globals :/ I don't have a better idea.\n// This is to pass information from the merge button click handler to the\n// file loader click handler.\nlet globalMergeDay: number = 0;\nlet globalMergePlatform: number = 0;\n\nclass ResultsView extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    this.handleDayChange = this.handleDayChange.bind(this);\n    this.handleByChange = this.handleByChange.bind(this);\n    this.handleExportAsOplCsvClick = this.handleExportAsOplCsvClick.bind(this);\n    this.handleExportAsUSAPLCsvClick = this.handleExportAsUSAPLCsvClick.bind(this);\n    this.handleExportPlatformClick = this.handleExportPlatformClick.bind(this);\n    this.handleMergePlatformClick = this.handleMergePlatformClick.bind(this);\n    this.handleLoadFileInput = this.handleLoadFileInput.bind(this);\n    this.closeErrorModal = this.closeErrorModal.bind(this);\n    this.makePlatformMergeButtons = this.makePlatformMergeButtons.bind(this);\n\n    this.state = {\n      day: 0, // Meaning \"all\". Flow complained about mixing numbers and strings.\n      by: \"Division\",\n      error: \"\",\n    };\n  }\n\n  makeDayOptions = () => {\n    const language = this.props.language;\n    const options = [\n      <option key={\"all\"} value={0}>\n        {getString(\"results.all-days-together\", language)}\n      </option>,\n    ];\n\n    const justDayTemplate = getString(\"results.just-day-n\", language);\n    for (let day = 1; day <= this.props.global.meet.lengthDays; day++) {\n      options.push(\n        <option key={day} value={day}>\n          {justDayTemplate.replace(\"{N}\", String(day))}\n        </option>\n      );\n    }\n    return options;\n  };\n\n  handleDayChange = (event: React.FormEvent<FormControlTypeHack>) => {\n    const day = Number(event.currentTarget.value);\n    if (this.state.day !== day) {\n      this.setState({ day: day });\n    }\n  };\n\n  handleByChange = (event: React.FormEvent<FormControlTypeHack>) => {\n    const by = event.currentTarget.value;\n    if (this.state.by !== by && assertString(by) && assertValidResultsBy(by)) {\n      this.setState({ by: by });\n    }\n  };\n\n  handleExportAsOplCsvClick = () => {\n    // TODO: Share this logic with HomeContainer.\n    let meetname = this.props.global.meet.name;\n    if (meetname === \"\") {\n      meetname = getString(\"common.unnamed-filename\", this.props.language);\n    }\n    meetname = meetname.replace(/ /g, \"-\");\n\n    const csv: string = exportAsOplCsv(this.props.global);\n    const blob = new Blob([csv], { type: \"text/csv;charset=utf-8\" });\n    saveAs(blob, meetname + \".opl.csv\");\n  };\n\n  handleExportAsUSAPLCsvClick = () => {\n    // TODO: Share this logic with handleExportAsOplCsvClick.\n    let meetname = this.props.global.meet.name;\n    if (meetname === \"\") {\n      meetname = getString(\"common.unnamed-filename\", this.props.language);\n    }\n    meetname = meetname.replace(/ /g, \"-\");\n\n    const csv: string = exportAsUSAPLCsv(this.props.global);\n    const blob = new Blob([csv], { type: \"text/csv;charset=utf-8\" });\n    saveAs(blob, meetname + \".USAPL.csv\");\n  };\n\n  handleExportPlatformClick = (day: number, platform: number) => {\n    // TODO: Share this logic with handleExportAsOplCsvClick.\n    const language = this.props.language;\n    let meetname = this.props.global.meet.name;\n    if (meetname === \"\") {\n      meetname = getString(\"common.unnamed-filename\", language);\n    }\n    meetname = meetname.replace(/ /g, \"-\");\n\n    const template = getString(\"results.platform-export-filename\", language);\n    const exportname = template\n      .replace(\"{day}\", String(day))\n      .replace(\"{platform}\", String(platform))\n      .replace(\"{meetName}\", meetname);\n\n    const state = JSON.stringify(this.props.global);\n    const blob = new Blob([state], { type: \"application/json;charset=utf-8\" });\n    saveAs(blob, exportname + \".export.openlifter\");\n  };\n\n  // The file input is hidden, and we want to use a button to activate it.\n  // This event handler makes a proxy call to the *real* event handler.\n  handleMergePlatformClick = (day: number, platform: number) => {\n    const loadHelper = document.getElementById(\"loadhelper\");\n    if (loadHelper !== null) {\n      globalMergeDay = day;\n      globalMergePlatform = platform;\n      loadHelper.click();\n    }\n  };\n\n  // Called when a file is selected for merging platform data.\n  handleLoadFileInput = () => {\n    const loadHelper = document.getElementById(\"loadhelper\");\n    if (loadHelper === null || !(loadHelper instanceof HTMLInputElement) || loadHelper.files === null) {\n      return;\n    }\n\n    // Get the (day, platform) from global state.\n    const day: number = globalMergeDay;\n    const platform: number = globalMergePlatform;\n\n    // Remember the props in the onload() closure.\n    const props = this.props;\n    const language = props.language;\n\n    const rememberThis = this;\n    const selectedFile = loadHelper.files[0];\n    const reader = new FileReader();\n    reader.onload = () => {\n      let error: string | null = null;\n\n      // If this occurs, we've introduced a bug when initiating the file reader, or the read failed.\n      // Add this check as a guard so the typing is narrowed\n      if (typeof reader.result !== \"string\") {\n        window.alert(getString(\"error.internal-error\", language));\n        return;\n      }\n\n      try {\n        const obj: GlobalState = JSON.parse(reader.result);\n\n        // stateVersion must match.\n        if (obj.versions.stateVersion !== props.global.versions.stateVersion) {\n          const e = getString(\"error.version-mismatch\", language);\n          error = e\n            .replace(\"{thisVersion}\", props.global.versions.stateVersion)\n            .replace(\"{otherVersion}\", obj.versions.stateVersion);\n        } else if (obj.meet.name !== props.global.meet.name) {\n          // The meet name must match, for sanity checking.\n          const e = getString(\"error.meetname-mismatch\", language);\n          error = e.replace(\"{thisName}\", props.global.meet.name).replace(\"{otherName}\", obj.meet.name);\n        } else if (!liftingPresentOnPlatform(obj.registration.entries, day, platform)) {\n          // The meet must actually contain data from the given (day, platform).\n          const e = getString(\"error.no-platform-data\", language);\n          error = e.replace(\"{day}\", String(day)).replace(\"{platform}\", String(platform));\n        } else {\n          // Sanity checks passed: fire off a mergePlatform action!\n          const platformEntries = obj.registration.entries.filter((e) => {\n            return e.day === day && e.platform === platform;\n          });\n          props.mergePlatform(day, platform, platformEntries);\n        }\n      } catch (err) {\n        error = getString(\"error.not-json\", language);\n      }\n\n      if (typeof error === \"string\") {\n        rememberThis.setState({ error: error });\n      }\n    };\n    reader.readAsText(selectedFile);\n  };\n\n  closeErrorModal = () => {\n    this.setState({ error: \"\" });\n  };\n\n  makePlatformMergeButtons = () => {\n    // Array accessed by platformsHaveLifted[day-1][platform-1].\n    const platformsHaveLifted: Array<Array<boolean>> = getWhetherPlatformsHaveLifted(\n      this.props.global.meet.platformsOnDays,\n      this.props.global.registration.entries\n    );\n\n    const language = this.props.language;\n    const combineTemplate = getString(\"results.combine-platforms-header\", language);\n    const mergeTemplate = getString(\"results.merge-platform\", language);\n    const exportTemplate = getString(\"results.export-platform\", language);\n\n    const forms = [];\n    const numDays = Math.min(this.props.global.meet.lengthDays, platformsHaveLifted.length);\n\n    for (let i = 0; i < numDays; i++) {\n      const liftedOnDay = platformsHaveLifted[i];\n\n      const buttons = [];\n      for (let j = 0; j < liftedOnDay.length; j++) {\n        const lifted = liftedOnDay[j];\n        const variant = lifted === true ? \"success\" : \"warning\";\n        const marginStyle = j > 0 ? { marginLeft: \"14px\" } : undefined;\n\n        const actionTemplate = lifted === true ? exportTemplate : mergeTemplate;\n        buttons.push(\n          <Button\n            key={i + \"-\" + j}\n            variant={variant}\n            style={marginStyle}\n            onClick={() => {\n              lifted === true\n                ? this.handleExportPlatformClick(i + 1, j + 1)\n                : this.handleMergePlatformClick(i + 1, j + 1);\n            }}\n          >\n            {actionTemplate.replace(\"{day}\", String(i + 1)).replace(\"{platform}\", String(j + 1))}\n          </Button>\n        );\n      }\n\n      forms.push(\n        <div key={i}>\n          <div>{combineTemplate.replace(\"{N}\", String(i + 1))}</div>\n          <div>{buttons}</div>\n          {i < platformsHaveLifted.length - 1 ? <br /> : null}\n        </div>\n      );\n    }\n\n    return forms;\n  };\n\n  render() {\n    const language = this.props.language;\n    let results = null;\n    switch (this.state.by) {\n      case \"Division\":\n        results = <ByDivision key={this.state.day} day={this.state.day} />;\n        break;\n      case \"Points\":\n        results = (\n          <ByPoints key={this.state.day} day={this.state.day} ageCoefficients=\"None\" agePointsCategory=\"BestLifter\" />\n        );\n        break;\n      case \"BestMastersLifter\":\n        results = (\n          <ByPoints\n            key={this.state.day}\n            day={this.state.day}\n            ageCoefficients={this.props.global.meet.ageCoefficients}\n            agePointsCategory=\"BestMastersLifter\"\n          />\n        );\n        break;\n      case \"BestJuniorsLifter\":\n        results = (\n          <ByPoints\n            key={this.state.day}\n            day={this.state.day}\n            ageCoefficients={this.props.global.meet.ageCoefficients}\n            agePointsCategory=\"BestJuniorsLifter\"\n          />\n        );\n        break;\n      default:\n        break;\n    }\n\n    let daySelector = null;\n    if (this.props.global.meet.lengthDays > 1) {\n      daySelector = (\n        <FormControl\n          value={this.state.day.toString()}\n          as=\"select\"\n          onChange={this.handleDayChange}\n          className={`custom-select ${styles.dropdown}`}\n          style={{ marginRight: \"15px\" }}\n        >\n          {this.makeDayOptions()}\n        </FormControl>\n      );\n    }\n\n    return (\n      <div>\n        <ErrorModal\n          error={this.state.error}\n          title={getString(\"results.merge-error-title\", language)}\n          show={this.state.error !== \"\"}\n          close={this.closeErrorModal}\n        />\n\n        <CardDeck>\n          <Card style={{ marginBottom: \"17px\" }}>\n            <Card.Header>\n              <FormattedMessage id=\"results.merge-platforms-card-header\" defaultMessage=\"Merge Platforms\" />\n            </Card.Header>\n            <Card.Body>\n              <div style={{ fontWeight: \"bold\" }}>\n                <FormattedMessage\n                  id=\"results.merge-platforms-warning\"\n                  defaultMessage=\"Merging platforms will overwrite data. Please save before merging.\"\n                />\n              </div>\n              <br />\n              {this.makePlatformMergeButtons()}\n            </Card.Body>\n          </Card>\n\n          <Card style={{ marginBottom: \"17px\" }}>\n            <Card.Header>\n              <FormattedMessage id=\"results.export-results-card-header\" defaultMessage=\"Export Official Results\" />\n            </Card.Header>\n            <Card.Body>\n              <Button onClick={this.handleExportAsOplCsvClick}>\n                <FormattedMessage\n                  id=\"results.export-openpowerlifting-button\"\n                  defaultMessage=\"Export for OpenPowerlifting\"\n                />\n              </Button>\n\n              <Button onClick={this.handleExportAsUSAPLCsvClick} style={{ marginLeft: \"14px\" }}>\n                <FormattedMessage id=\"results.export-usapl-button\" defaultMessage=\"Export for USAPL\" />\n              </Button>\n            </Card.Body>\n          </Card>\n        </CardDeck>\n\n        <Card>\n          <Card.Header>\n            <FormattedMessage id=\"results.results-card-header\" defaultMessage=\"Results For...\" />\n          </Card.Header>\n          <Card.Body className={styles.controlCard}>\n            {daySelector}\n\n            <FormControl\n              value={this.state.by}\n              as=\"select\"\n              onChange={this.handleByChange}\n              className={`custom-select ${styles.dropdown}`}\n            >\n              <option value=\"Division\">{getString(\"results.by-division\", language)}</option>\n              {this.props.global.meet.ageCoefficients !== \"None\" ? (\n                <option value=\"BestJuniorsLifter\">{getString(\"results.best-juniors-lifter\", language)}</option>\n              ) : null}\n              {this.props.global.meet.ageCoefficients !== \"None\" ? (\n                <option value=\"BestMastersLifter\">{getString(\"results.best-masters-lifter\", language)}</option>\n              ) : null}\n              <option value=\"Points\">{getString(\"results.best-lifter\", language)}</option>\n            </FormControl>\n          </Card.Body>\n        </Card>\n\n        {results}\n\n        <input\n          id=\"loadhelper\"\n          type=\"file\"\n          accept=\".openlifter,.openlifter.txt\"\n          style={{ display: \"none\" }}\n          onChange={this.handleLoadFileInput}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => {\n  return {\n    global: state,\n    language: state.language,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    mergePlatform: (day, platform, platformEntries) => dispatch(mergePlatform(day, platform, platformEntries)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultsView);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Container for the Results page.\n\nimport React from \"react\";\n\nimport ResultsView from \"../components/results/ResultsView\";\nimport styles from \"../components/common/ContentArea.module.scss\";\n\nclass ResultsContainer extends React.Component<{}> {\n  render() {\n    return (\n      <div className={styles.contentArea}>\n        <ResultsView />\n      </div>\n    );\n  }\n}\n\nexport default ResultsContainer;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Randomizes the Meet Setup state, for debugging.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Button from \"react-bootstrap/Button\";\n\nimport LocalizedString from \"../translations/LocalizedString\";\n\nimport { randomString, randomInt, randomFixedPoint } from \"./RandomizeHelpers\";\n\nimport {\n  setDivisions,\n  setFederation,\n  setLengthDays,\n  setMeetName,\n  setPlatformsOnDays,\n  setWeightClasses,\n} from \"../../actions/meetSetupActions\";\n\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { Dispatch } from \"redux\";\nimport { Sex } from \"../../types/dataTypes\";\n\ninterface DispatchProps {\n  setDivisions: (divisions: Array<string>) => void;\n  setFederation: (federation: string) => void;\n  setLengthDays: (length: number) => void;\n  setMeetName: (name: string) => void;\n  setPlatformsOnDays: (day: number, count: number) => void;\n  setWeightClasses: (sex: Sex, classesKg: number[]) => void;\n}\n\ntype Props = GlobalState & DispatchProps;\n\nconst NonsenseFederations = [\n  \"CTHULHU\",\n  \"USPLAWH\",\n  \"FIREFOX\",\n  \"PIZZAHUT\",\n  \"50% RAW\",\n  \"TODDLERS\",\n  \"COFFEE\",\n  \"THEBORG\",\n  \"LETITSNOW\",\n];\n\nconst NonsenseDivisions = [\"Masters\", \"Juniors\", \"Lawyers\", \"Infants\", \"Turtles\", \"Rabbits\"];\n\nclass RandomizeMeetSetupButton extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n    this.randomizeMeetSetup = this.randomizeMeetSetup.bind(this);\n  }\n\n  randomizeMeetSetup() {\n    // Set a gibberish MeetName.\n    // ==========================================\n    this.props.setMeetName(randomString() + randomString());\n\n    // Generate a nonsense federation.\n    // ==========================================\n    const fed = NonsenseFederations[randomInt(0, NonsenseFederations.length - 1)];\n    this.props.setFederation(fed);\n\n    // Generate nonsense weight classes.\n    // ==========================================\n    const numClassesMen = randomInt(5, 12);\n    const numClassesWomen = randomInt(4, 8);\n\n    let classesMen = [];\n    for (let i = 0; i < numClassesMen; i++) {\n      classesMen.push(randomFixedPoint(40, 145, 1));\n    }\n    classesMen = classesMen.sort((a, b) => Number(a) - Number(b));\n\n    let classesWomen = [];\n    for (let i = 0; i < numClassesWomen; i++) {\n      classesWomen.push(randomFixedPoint(35, 110, 1));\n    }\n    classesWomen = classesWomen.sort((a, b) => Number(a) - Number(b));\n\n    let classesMx = [];\n    for (let i = 0; i < numClassesWomen; i++) {\n      classesMx.push(randomFixedPoint(40, 120, 1));\n    }\n    classesMx = classesMx.sort((a, b) => Number(a) - Number(b));\n\n    this.props.setWeightClasses(\"M\", classesMen);\n    this.props.setWeightClasses(\"F\", classesWomen);\n    this.props.setWeightClasses(\"Mx\", classesMx);\n\n    // Generate nonsense days and platforms.\n    // ==========================================\n    const numDays = randomInt(1, 4);\n    this.props.setLengthDays(numDays);\n\n    for (let i = 0; i < numDays; i++) {\n      const day = i + 1;\n      const numPlatforms = randomInt(1, 2);\n      this.props.setPlatformsOnDays(day, numPlatforms);\n    }\n\n    // Generate nonsense divisions.\n    // ==========================================\n    const numDivisions = randomInt(1, 20);\n    const divisions = [];\n    for (let i = 0; i < numDivisions; i++) {\n      let div = NonsenseDivisions[randomInt(0, NonsenseDivisions.length - 1)];\n      if (Math.random() > 0.5) {\n        const age_lower = randomInt(1, 40);\n        const age_upper = randomInt(age_lower + 1, 99);\n        div = div + \" \" + String(age_lower) + \"-\" + String(age_upper);\n      }\n\n      // Disallow repeat divisions.\n      if (divisions.indexOf(div) === -1) {\n        divisions.push(div);\n      }\n    }\n    this.props.setDivisions(divisions);\n  }\n\n  render() {\n    return (\n      <Button onClick={this.randomizeMeetSetup}>\n        <LocalizedString id=\"nav.meet-setup\" />\n      </Button>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): GlobalState => ({\n  ...state,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    setDivisions: (divisions: Array<string>) => dispatch(setDivisions(divisions)),\n    setFederation: (federation: string) => dispatch(setFederation(federation)),\n    setLengthDays: (length: number) => dispatch(setLengthDays(length)),\n    setMeetName: (name: string) => dispatch(setMeetName(name)),\n    setPlatformsOnDays: (day: number, count: number) => dispatch(setPlatformsOnDays(day, count)),\n    setWeightClasses: (sex: Sex, classesKg: number[]) => dispatch(setWeightClasses(sex, classesKg)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RandomizeMeetSetupButton);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Randomizes the Registration page, for debugging.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\n\nimport Button from \"react-bootstrap/Button\";\n\nimport LocalizedString from \"../translations/LocalizedString\";\n\nimport { randomInt } from \"./RandomizeHelpers\";\nimport { newRegistration, deleteRegistration } from \"../../actions/registrationActions\";\n\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { Event, Entry, Sex, Equipment, Flight } from \"../../types/dataTypes\";\n\nconst NonsenseFirstNames = [\n  \"Aragorn\",\n  \"Arwen\",\n  \"Aule\",\n  \"Balin\",\n  \"Beorn\",\n  \"Beregond\",\n  \"Bert\",\n  \"Bifur\",\n  \"Bilbo\",\n  \"Bofur\",\n  \"Bolg\",\n  \"Bombur\",\n  \"Boromir\",\n  \"Bregalad\",\n  \"Bullroarer\",\n  \"Bungo\",\n  \"Carc\",\n  \"Celeborn\",\n  \"Dain\",\n  \"Denethor\",\n  \"Dori\",\n  \"Dwalin\",\n  \"Elrohir\",\n  \"Elrond\",\n  \"Eomer\",\n  \"Eowyn\",\n  \"Este\",\n  \"Faramir\",\n  \"Fili\",\n  \"Fredegar\",\n  \"Frodo\",\n  \"Galadriel\",\n  \"Galion\",\n  \"Gandalf\",\n  \"Gimli\",\n  \"Gloin\",\n  \"Glorfindel\",\n  \"Golfimbul\",\n  \"Gollum\",\n  \"Gothmog\",\n  \"Grima\",\n  \"Imrahil\",\n  \"Kili\",\n  \"Legolas\",\n  \"Lorien\",\n  \"Mandos\",\n  \"Manwe\",\n  \"Melkor\",\n  \"Meriadoc\",\n  \"Nessa\",\n  \"Nienna\",\n  \"Nori\",\n  \"Oin\",\n  \"Ori\",\n  \"Orome\",\n  \"Peregrin\",\n  \"Pippin\",\n  \"Radagast\",\n  \"Roac\",\n  \"Samwise\",\n  \"Saruman\",\n  \"Sauron\",\n  \"Shelob\",\n  \"Smaug\",\n  \"Theoden\",\n  \"Thorin\",\n  \"Thranduil\",\n  \"Tom\",\n  \"Treebeard\",\n  \"Tulkas\",\n  \"Ulmo\",\n  \"Vaire\",\n  \"Vana\",\n  \"Varda\",\n  \"William\",\n  \"Yavanna\",\n];\n\nconst NonsenseLastNames = [\n  \"Black\",\n  \"Burbage\",\n  \"Carrow\",\n  \"Cattermole\",\n  \"Chang\",\n  \"Clearwater\",\n  \"Crabbe\",\n  \"Creevey\",\n  \"Crouch\",\n  \"Delacour\",\n  \"Diggory\",\n  \"Dumbledore\",\n  \"Dursley\",\n  \"Edgecombe\",\n  \"Filch\",\n  \"Flitwick\",\n  \"Fudge\",\n  \"Goyle\",\n  \"Granger\",\n  \"Grindelwald\",\n  \"Hagrid\",\n  \"Hufflepuff\",\n  \"Kettleburn\",\n  \"Lockhart\",\n  \"Longbottom\",\n  \"Lovegood\",\n  \"Lupin\",\n  \"Malfoy\",\n  \"Marchbanks\",\n  \"McGonagall\",\n  \"McLaggen\",\n  \"Moody\",\n  \"Nott\",\n  \"Ogden\",\n  \"Ollivander\",\n  \"Parkinson\",\n  \"Pettigrew\",\n  \"Peverell\",\n  \"Pince\",\n  \"Podmore\",\n  \"Pomfrey\",\n  \"Potter\",\n  \"Quirrell\",\n  \"Riddle\",\n  \"Rookwood\",\n  \"Rowle\",\n  \"Runcorn\",\n  \"Scrimgeour\",\n  \"Shacklebolt\",\n  \"Shunpike\",\n  \"Sinistra\",\n  \"Slughorn\",\n  \"Slytherin\",\n  \"Snape\",\n  \"Spinnet\",\n  \"Sprout\",\n  \"Thicknesse\",\n  \"Tonks\",\n  \"Trelawney\",\n  \"Twycross\",\n  \"Umbridge\",\n  \"Vance\",\n  \"Voldemort\",\n  \"Weasley\",\n  \"Wood\",\n  \"Yaxley\",\n  \"Zabini\",\n];\n\ninterface DispatchProps {\n  newRegistration: (obj: Partial<Entry>) => void;\n  deleteRegistration: (entryId: number) => void;\n}\n\ntype Props = GlobalState & DispatchProps;\n\nclass RandomizeRegistrationButton extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n    this.deleteExistingRegistrations = this.deleteExistingRegistrations.bind(this);\n    this.generateEntries = this.generateEntries.bind(this);\n    this.randomizeRegistration = this.randomizeRegistration.bind(this);\n  }\n\n  deleteExistingRegistrations() {\n    const entryIds = this.props.registration.entries.map((e) => e.id);\n    for (let i = 0; i < entryIds.length; i++) {\n      this.props.deleteRegistration(entryIds[i]);\n    }\n  }\n\n  // Generate entries in a flight together, in case we want to give them\n  // similar properties.\n  generateEntries(day: number, platform: number, flight: Flight) {\n    const numLifters = randomInt(6, 18);\n\n    for (let i = 0; i < numLifters; i++) {\n      // Set a nonsense Name.\n      // ==========================================\n      const firstName = NonsenseFirstNames[randomInt(0, NonsenseFirstNames.length - 1)];\n      const lastName = NonsenseLastNames[randomInt(0, NonsenseLastNames.length - 1)];\n      const name = firstName + \" \" + lastName;\n\n      // Set a random Sex.\n      // ==========================================\n      const sexes: Sex[] = [\"M\", \"F\", \"Mx\"];\n      const sex: Sex = sexes[randomInt(0, sexes.length - 1)];\n\n      // 10% chance they're a guest.\n      // ==========================================\n      const isGuest: boolean = randomInt(1, 10) === 1;\n\n      // Assign a random Team.\n      // ==========================================\n      const teams: string[] = [\"Team Red\", \"Team Green\", \"Team Blue\"];\n      const team: string = teams[randomInt(0, teams.length - 1)];\n\n      // Generate random events, making most lifters SBD.\n      // ==========================================\n      const events: Event[] = [];\n      if (Math.random() < 0.5) {\n        events.push(\"SBD\");\n      }\n      if (Math.random() < 0.1) {\n        events.push(\"BD\");\n      }\n      if (Math.random() < 0.1) {\n        events.push(\"S\");\n      }\n      if (Math.random() < 0.1) {\n        events.push(\"B\");\n      }\n      if (Math.random() < 0.1) {\n        events.push(\"D\");\n      }\n      if (events.length === 0) {\n        events.push(\"SBD\");\n      }\n\n      // Generate random equipment, making most lifters SBD,\n      // being careful that it matches their events.\n      // ==========================================\n      let hasSquat = false;\n      for (let i = 0; i < events.length; i++) {\n        if (events[i].includes(\"S\")) {\n          hasSquat = true;\n          break;\n        }\n      }\n\n      const equipmentSelect = Math.random();\n      let equipment: Equipment = \"Sleeves\";\n      if (equipmentSelect < 0.7) {\n        // Nothing, sleeves default case.\n      } else if (equipmentSelect < 0.9) {\n        if (hasSquat) {\n          equipment = \"Wraps\";\n        }\n      } else if (equipmentSelect < 0.95) {\n        equipment = \"Single-ply\";\n      } else if (equipmentSelect < 0.98) {\n        equipment = \"Multi-ply\";\n      } else {\n        equipment = \"Unlimited\";\n      }\n\n      // File into random divisions.\n      // ==========================================\n      const divisions = [];\n      if (this.props.meet.divisions.length > 0) {\n        const divisionsUpperBound = Math.max(1, this.props.meet.divisions.length - 1);\n        const numDivisions = randomInt(1, divisionsUpperBound);\n\n        // List of remaining available divisions.\n        const divchooser = this.props.meet.divisions.slice();\n\n        for (let i = 0; i < numDivisions; i++) {\n          const choice = randomInt(0, divchooser.length - 1);\n          divisions.push(divchooser[choice]);\n\n          // Delete the choice from the list of available divisions.\n          divchooser.splice(choice, 1);\n        }\n      }\n\n      this.props.newRegistration({\n        day: day,\n        platform: platform,\n        flight: flight,\n        name: name,\n        sex: sex,\n        team: team,\n        events: events,\n        equipment: equipment,\n        divisions: divisions,\n        guest: isGuest,\n      });\n    }\n  }\n\n  randomizeRegistration() {\n    const FLIGHTCHARS: Flight[] = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\"];\n\n    this.deleteExistingRegistrations();\n    for (let day = 1; day <= this.props.meet.lengthDays; day++) {\n      const numPlatforms = this.props.meet.platformsOnDays[day - 1];\n      for (let platform = 1; platform <= numPlatforms; platform++) {\n        const numFlights = randomInt(1, 3);\n        for (let flight = 0; flight < numFlights; flight++) {\n          this.generateEntries(day, platform, FLIGHTCHARS[flight]);\n        }\n      }\n    }\n  }\n\n  render() {\n    return (\n      <Button onClick={this.randomizeRegistration}>\n        <LocalizedString id=\"nav.registration\" />\n      </Button>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): GlobalState => ({\n  ...state,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    newRegistration: (obj: Partial<Entry>) => dispatch(newRegistration(obj)),\n    deleteRegistration: (entryId: number) => dispatch(deleteRegistration(entryId)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RandomizeRegistrationButton);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Randomizes the Registration page, for debugging.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\n\nimport Button from \"react-bootstrap/Button\";\n\nimport LocalizedString from \"../translations/LocalizedString\";\n\nimport { randomAttempt, randomInt, randomFixedPoint } from \"./RandomizeHelpers\";\nimport { lbs2kg } from \"../../logic/units\";\n\nimport { updateRegistration } from \"../../actions/registrationActions\";\nimport { enterAttempt } from \"../../actions/liftingActions\";\n\nimport { GlobalState, MeetState, RegistrationState } from \"../../types/stateTypes\";\nimport { Entry, Lift } from \"../../types/dataTypes\";\n\ninterface StateProps {\n  meet: MeetState;\n  registration: RegistrationState;\n}\n\ninterface DispatchProps {\n  updateRegistration: (entryId: number, obj: Partial<Entry>) => void;\n  enterAttempt: (entryId: number, lift: Lift, attemptOneIndexed: number, weightKg: number) => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\nclass RandomizeWeighinsButton extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n    this.randomizeWeighins = this.randomizeWeighins.bind(this);\n  }\n\n  randomAttempt = () => {\n    return randomAttempt(this.props.meet.inKg);\n  };\n\n  randomizeWeighins = () => {\n    const entries = this.props.registration.entries;\n    const inKg: boolean = this.props.meet.inKg;\n\n    for (let i = 0; i < entries.length; i++) {\n      const entry = entries[i];\n\n      // Get a random bodyweight.\n      // ==========================================\n      const bodyweightKg = inKg ? randomFixedPoint(20, 150, 1) : lbs2kg(randomFixedPoint(40, 320, 1));\n      this.props.updateRegistration(entry.id, {\n        bodyweightKg: bodyweightKg,\n      });\n\n      // Get a random age.\n      const age = randomInt(5, 79);\n      this.props.updateRegistration(entry.id, {\n        age: age,\n      });\n\n      // Figure out which events we're generating information for.\n      // ==========================================\n      let hasSquat = false;\n      let hasBench = false;\n      let hasDeadlift = false;\n      for (let j = 0; j < entry.events.length; j++) {\n        const e = entry.events[j];\n        if (e.includes(\"S\")) {\n          hasSquat = true;\n        }\n        if (e.includes(\"B\")) {\n          hasBench = true;\n        }\n        if (e.includes(\"D\")) {\n          hasDeadlift = true;\n        }\n      }\n\n      // Set attempts.\n      // ==========================================\n      if (hasSquat) {\n        this.props.enterAttempt(entry.id, \"S\", 1, this.randomAttempt());\n      }\n      if (hasBench) {\n        this.props.enterAttempt(entry.id, \"B\", 1, this.randomAttempt());\n      }\n      if (hasDeadlift) {\n        this.props.enterAttempt(entry.id, \"D\", 1, this.randomAttempt());\n      }\n\n      // Set rack info.\n      // ==========================================\n      if (hasSquat) {\n        const height = String(randomInt(2, 18));\n        const pos = Math.random() < 0.9 ? \"out\" : \"in\";\n        this.props.updateRegistration(entry.id, {\n          squatRackInfo: height + pos,\n        });\n      }\n\n      if (hasBench) {\n        const height = String(randomInt(0, 12));\n        const safety = String(randomInt(0, 4));\n        this.props.updateRegistration(entry.id, {\n          benchRackInfo: height + \"/\" + safety,\n        });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <Button onClick={this.randomizeWeighins}>\n        <LocalizedString id=\"nav.weigh-ins\" />\n      </Button>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  meet: state.meet,\n  registration: state.registration,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  updateRegistration: (entryId, obj) => dispatch(updateRegistration(entryId, obj)),\n  enterAttempt: (entryId, lift, attemptOneIndexed, weightKg) =>\n    dispatch(enterAttempt(entryId, lift, attemptOneIndexed, weightKg)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RandomizeWeighinsButton);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Fills the Lifting page with random valid lift data for debugging purposes.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\n\nimport Button from \"react-bootstrap/Button\";\n\nimport LocalizedString from \"../translations/LocalizedString\";\n\nimport { randomAttempt, randomAttemptWithMin } from \"./RandomizeHelpers\";\n\nimport { markLift, enterAttempt } from \"../../actions/liftingActions\";\n\nimport { GlobalState, MeetState, RegistrationState } from \"../../types/stateTypes\";\nimport { Lift } from \"../../types/dataTypes\";\n\ninterface StateProps {\n  meet: MeetState;\n  registration: RegistrationState;\n}\n\ninterface DispatchProps {\n  enterAttempt: (entryId: number, lift: Lift, attemptOneIndexed: number, weightKg: number) => void;\n  markLift: (entryId: number, lift: Lift, attempt: number, success: boolean) => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\nclass RandomizeLiftingButton extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n    this.randomizeLifting = this.randomizeLifting.bind(this);\n  }\n  setLiftsForLift(entryId: number, lift: Lift, inKg: boolean) {\n    // enter opener\n    const firstAttempt = randomAttempt(inKg);\n    this.props.enterAttempt(entryId, lift, 1, firstAttempt);\n\n    // set random chance of failing attempt\n    let success = Math.random() > 0.15;\n\n    // mark opener as success or failure\n    this.props.markLift(entryId, lift, 1, success);\n\n    // enter 2nd attempt\n    // re-take first attempt if it failed\n    let secondAttempt = firstAttempt;\n\n    if (success) {\n      // increase attempt if opener was successful\n      secondAttempt = randomAttemptWithMin(inKg, firstAttempt + 1);\n    }\n    this.props.enterAttempt(entryId, lift, 2, secondAttempt);\n\n    // set slightly higher chance of failing 2nd\n    success = Math.random() > 0.25;\n\n    // mark 2nd lift success or failure\n    this.props.markLift(entryId, lift, 2, success);\n\n    // record 3rd attempt\n    let thirdAttempt = secondAttempt;\n    if (success) {\n      // increment weight for 3rd\n      thirdAttempt = randomAttemptWithMin(inKg, secondAttempt + 1);\n    }\n    this.props.enterAttempt(entryId, lift, 3, thirdAttempt);\n\n    // set slightly higher chance of failing 3rd\n    success = Math.random() > 0.3;\n    // record success or failure\n    this.props.markLift(entryId, lift, 3, success);\n  }\n\n  randomizeLifting = () => {\n    const entries = this.props.registration.entries;\n    const inKg: boolean = this.props.meet.inKg;\n\n    for (let i = 0; i < entries.length; i++) {\n      const entry = entries[i];\n\n      // Figure out which events we're generating lift data for.\n      let hasSquat = false;\n      let hasBench = false;\n      let hasDeadlift = false;\n\n      for (let j = 0; j < entry.events.length; j++) {\n        const e = entry.events[j];\n        if (e.includes(\"S\")) {\n          hasSquat = true;\n        }\n        if (e.includes(\"B\")) {\n          hasBench = true;\n        }\n        if (e.includes(\"D\")) {\n          hasDeadlift = true;\n        }\n      }\n\n      // Set 1st, 2nd, and 3rd for each lift.\n      if (hasSquat) {\n        this.setLiftsForLift(entry.id, \"S\", inKg);\n      }\n      if (hasBench) {\n        this.setLiftsForLift(entry.id, \"B\", inKg);\n      }\n      if (hasDeadlift) {\n        this.setLiftsForLift(entry.id, \"D\", inKg);\n      }\n    }\n  };\n  render() {\n    return (\n      <Button onClick={this.randomizeLifting}>\n        <LocalizedString id=\"nav.lifting\" />\n      </Button>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  meet: state.meet,\n  registration: state.registration,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  enterAttempt: (entryId: number, lift: Lift, attemptOneIndexed: number, weightKg: number) =>\n    dispatch(enterAttempt(entryId, lift, attemptOneIndexed, weightKg)),\n  markLift: (entryId: number, lift: Lift, attempt: number, success: boolean) =>\n    dispatch(markLift(entryId, lift, attempt, success)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RandomizeLiftingButton);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Tools for manipulating state information to aid debugging.\n\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { connect } from \"react-redux\";\n\nimport Button from \"react-bootstrap/Button\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Card from \"react-bootstrap/Card\";\n\nimport RandomizeMeetSetupButton from \"./RandomizeMeetSetup\";\nimport RandomizeRegistrationButton from \"./RandomizeRegistration\";\nimport RandomizeWeighinsButton from \"./RandomizeWeighins\";\nimport RandomizeLiftingButton from \"./RandomizeLifting\";\n\nimport { GlobalState } from \"../../types/stateTypes\";\n\nclass StateTools extends React.Component<GlobalState> {\n  // The simplest possible way to implement a Reset button.\n  reInitializeRedux = () => {\n    localStorage.clear();\n    window.location.reload();\n  };\n\n  render() {\n    return (\n      <div>\n        <Card style={{ marginBottom: \"17px\" }}>\n          <Card.Header>\n            <FormattedMessage id=\"debug.generator-card-header\" defaultMessage=\"Generate Random Valid Data\" />\n          </Card.Header>\n          <Card.Body>\n            <Button style={{ marginRight: \"15px\" }} variant=\"danger\" onClick={this.reInitializeRedux}>\n              <FormattedMessage id=\"debug.button-reset\" defaultMessage=\"Reset\" />\n            </Button>\n            <ButtonGroup>\n              <RandomizeMeetSetupButton />\n              <RandomizeRegistrationButton />\n              <RandomizeWeighinsButton />\n              <RandomizeLiftingButton />\n            </ButtonGroup>\n          </Card.Body>\n        </Card>\n\n        <Card>\n          <Card.Header>\n            <FormattedMessage id=\"debug.state-card-header\" defaultMessage=\"Redux State\" />\n          </Card.Header>\n          <Card.Body>\n            <pre>{JSON.stringify(this.props, null, 2)}</pre>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): GlobalState => ({\n  ...state,\n});\n\nexport default connect(mapStateToProps)(StateTools);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// A page dedicated to debugging tools.\n\nimport React from \"react\";\n\nimport StateTools from \"../components/debug/StateTools\";\nimport styles from \"../components/common/ContentArea.module.scss\";\n\nconst DebugContainer = () => {\n  return (\n    <div className={styles.contentArea}>\n      <StateTools />\n    </div>\n  );\n};\n\nexport default DebugContainer;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2020 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Card from \"react-bootstrap/Card\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\n\nimport styles from \"../components/common/ContentArea.module.scss\";\n\n// Extracted out so that <pre> renders linebreaks properly.\nconst licenseText =\n  \"This program is free software: you can redistribute it and/or modify\\n\" +\n  \"it under the terms of the GNU Affero General Public License as\\n\" +\n  \"published by the Free Software Foundation, either version 3 of the\\n\" +\n  \"License, or (at your option) any later version.\\n\" +\n  \"\\n\" +\n  \"This program is distributed in the hope that it will be useful,\\n\" +\n  \"but WITHOUT ANY WARRANTY; without even the implied warranty of\\n\" +\n  \"MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n\" +\n  \"GNU Affero General Public License for more details.\";\n\nclass AboutContainer extends React.Component<{}> {\n  render() {\n    return (\n      <Container className={styles.contentArea}>\n        <Row>\n          <Col md={6}>\n            <Card>\n              <Card.Header>\n                <FormattedMessage id=\"about.credits-header\" defaultMessage=\"Credits\" />\n              </Card.Header>\n              <Card.Body>\n                <p>\n                  <FormattedMessage\n                    id=\"about.made-by\"\n                    defaultMessage=\"OpenLifter is made by the OpenPowerlifting project.\"\n                  />\n                </p>\n                <p>\n                  <a href=\"https://www.openpowerlifting.org\" rel=\"noopener noreferrer\" target=\"_blank\">\n                    OpenPowerlifting.org\n                  </a>\n                </p>\n                <p>\n                  <FormattedMessage id=\"about.credits-intro\" defaultMessage=\"Thanks to:\" />\n                  <ul>\n                    <li>Irene Aguilar &mdash; Spanish localization</li>\n                    <li>Baptiste Appel &mdash; French localization</li>\n                    <li>Baptiste Marchais &mdash; French localization</li>\n                    <li>Romina Basting &mdash; German localization</li>\n                    <li>Mike Beelen &mdash; Dutch localization</li>\n                    <li>Sean Berlin &mdash; Patron</li>\n                    <li>Jerônimo Cavalcante &mdash; Portuguese localization</li>\n                    <li>Arman Danielyan &mdash; Russian localization</li>\n                    <li>Tommy DeFea &mdash; Graphic design</li>\n                    <li>Litos Dimitrios &mdash; Greek localization</li>\n                    <li>Alper Dokucu &mdash; Turkish localization</li>\n                    <li>Delaney Fish &mdash; Programming</li>\n                    <li>David Jasiulewicz &mdash; Patron</li>\n                    <li>Jared Klopper &mdash; Programming</li>\n                    <li>Andreas Kolettis &mdash; Greek localization</li>\n                    <li>Boris Lerner &mdash; Russian localization</li>\n                    <li>Kai Ma &mdash; Simplified Chinese localization</li>\n                    <li>Rodney Marsh &mdash; Programming</li>\n                    <li>Giulio Maschi &mdash; Italian localization</li>\n                    <li>Trystan Oakley &mdash; Testing</li>\n                    <li>Matt Pearce &mdash; Coefficient calculations</li>\n                    <li>Laura Rettig &mdash; German localization</li>\n                    <li>Jaak Ruusmaa &mdash; Estonian localization</li>\n                    <li>David Sacras &mdash; Portuguese localization</li>\n                    <li>Alan Sambol &mdash; Croatian localization</li>\n                    <li>Milena Schaefer &mdash; German localization</li>\n                    <li>Vitaliy Shvarz &mdash; Ukrainian localization</li>\n                    <li>Sean Stangl &mdash; Programming and maintenance</li>\n                    <li>Michael Vessia &mdash; Programming and maintenance</li>\n                    <li>Andrius Virbičianskas &mdash; Lithuanian localization</li>\n                    <li>Sarah Wellberg &mdash; UX design and testing</li>\n                    <li>Jo Whiteley &mdash; Testing</li>\n                  </ul>\n                </p>\n              </Card.Body>\n            </Card>\n          </Col>\n\n          <Col md={6}>\n            <Card>\n              <Card.Header>\n                <FormattedMessage id=\"about.license-header\" defaultMessage=\"License\" />\n              </Card.Header>\n              <Card.Body>\n                <p>\n                  <FormattedMessage\n                    id=\"about.copyright\"\n                    defaultMessage=\"OpenLifter is Copyright (C) 2018-2020 The OpenPowerlifting Project.\"\n                  />\n                </p>\n                <p>\n                  <FormattedMessage\n                    id=\"about.freedom-intro\"\n                    defaultMessage=\"OpenLifter is Free Software. Free Software grants you the following freedoms:\"\n                  />\n                </p>\n                <ol>\n                  <li>\n                    <FormattedMessage\n                      id=\"about.freedom-0\"\n                      defaultMessage=\"The freedom to run the program as you wish, for any purpose.\"\n                    />\n                  </li>\n                  <li>\n                    <FormattedMessage\n                      id=\"about.freedom-1\"\n                      defaultMessage=\"The freedom to study how the program works, and change it as you wish.\"\n                    />\n                  </li>\n                  <li>\n                    <FormattedMessage\n                      id=\"about.freedom-2\"\n                      defaultMessage=\"The freedom to redistribute copies so you can help others.\"\n                    />\n                  </li>\n                  <li>\n                    <FormattedMessage\n                      id=\"about.freedom-3\"\n                      defaultMessage=\"The freedom to distribute copies of your modified versions to others.\"\n                    />\n                  </li>\n                </ol>\n                <p>\n                  <FormattedMessage\n                    id=\"about.freedom-quick-summary\"\n                    defaultMessage=\"The AGPLv3+ license we use means that if you distribute this software or host it on a server, you must give your users the same rights we give you, including full source code. In addition, AGPLv3+ code must remain free/libre, and cannot be included in proprietary software or in free/libre software with a weaker or incompatible license.\"\n                  />\n                </p>\n                <p>\n                  <FormattedMessage\n                    id=\"about.agpl-short-english-intro\"\n                    defaultMessage=\"Here is the short English license blurb:\"\n                  />\n                </p>\n                <pre>{licenseText}</pre>\n                <a href=\"https://www.gnu.org/licenses/agpl-3.0.en.html\" rel=\"noopener noreferrer\" target=\"_blank\">\n                  <FormattedMessage\n                    id=\"about.link-full-agpl-license\"\n                    defaultMessage=\"Full Text of the GNU Affero General Public License, Version 3\"\n                  />\n                </a>\n                <br />\n                <a href=\"https://www.gnu.org/licenses/gpl-faq.html\" rel=\"noopener noreferrer\" target=\"_blank\">\n                  <FormattedMessage id=\"about.link-gnu-faq\" defaultMessage=\"FAQ about GNU Licenses\" />\n                </a>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default AboutContainer;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// The RootContainer manually implements route parsing from GET parameters.\n//\n// The issue is that because OpenLifter is statically hosted, only the base\n// \"/\" route actually contains the index.html of the application. The other\n// routes (such as \"/lifting\") have index.html files that redirect to \"/\".\n//\n// We've changed things so that \"/lifting/index.html\" redirects to \"/?lifting\".\n// But React Router isn't able to route based on GET parameters.\n//\n// Therefore it's set up so that \"/\" routes to this RootContainer,\n// and the RootContainer inspects the GET parameters and renders the\n// appropriate container.\n\nimport React from \"react\";\n\nimport HomeContainer from \"./HomeContainer\";\nimport MeetSetupContainer from \"./MeetSetupContainer\";\nimport RegistrationContainer from \"./RegistrationContainer\";\nimport WeighinsContainer from \"./WeighinsContainer\";\nimport LiftingContainer from \"./LiftingContainer\";\nimport FlightOrderContainer from \"./FlightOrderContainer\";\nimport ResultsContainer from \"./ResultsContainer\";\nimport DebugContainer from \"./DebugContainer\";\nimport AboutContainer from \"./AboutContainer\";\n\nclass RootContainer extends React.Component {\n  render() {\n    if (typeof window.location.search !== \"string\") {\n      return <HomeContainer />;\n    }\n\n    switch (window.location.search) {\n      case \"?meet-setup\":\n        return <MeetSetupContainer />;\n      case \"?registration\":\n        return <RegistrationContainer />;\n      case \"?weigh-ins\":\n        return <WeighinsContainer />;\n      case \"?flight-order\":\n        return <FlightOrderContainer />;\n      case \"?lifting\":\n        return <LiftingContainer />;\n      case \"?results\":\n        return <ResultsContainer />;\n      case \"?debug\":\n        return <DebugContainer />;\n      case \"?about\":\n        return <AboutContainer />;\n      default:\n        return <HomeContainer />;\n    }\n  }\n}\n\nexport default RootContainer;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the Navigation component for navigating between pages using react-router.\n\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\n\n// The LinkContainer is used to wrap Components that change the URL,\n// hooking them up with the Router.\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nconst Navigation = () => {\n  return (\n    <Navbar sticky=\"top\" bg=\"dark\" variant=\"dark\" expand=\"lg\">\n      <Navbar.Brand>\n        <img alt=\"OpenLifter\" src=\"openlifter-white.svg\" height=\"20\" />\n      </Navbar.Brand>\n\n      {/* Navbar uses Toggle and Collapse to automatically create a hamburger menu\n          in case of overflow on small screens.*/}\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse>\n        <Nav>\n          <LinkContainer exact to=\"/\">\n            <Nav.Link>\n              <FormattedMessage id=\"nav.home\" defaultMessage=\"Home\" />\n            </Nav.Link>\n          </LinkContainer>\n          <LinkContainer to=\"/meet-setup\">\n            <Nav.Link>\n              <FormattedMessage id=\"nav.meet-setup\" defaultMessage=\"Meet Setup\" />\n            </Nav.Link>\n          </LinkContainer>\n          <LinkContainer to=\"/registration\">\n            <Nav.Link>\n              <FormattedMessage id=\"nav.registration\" defaultMessage=\"Registration\" />\n            </Nav.Link>\n          </LinkContainer>\n          <LinkContainer to=\"/weigh-ins\">\n            <Nav.Link>\n              <FormattedMessage id=\"nav.weigh-ins\" defaultMessage=\"Weigh-ins\" />\n            </Nav.Link>\n          </LinkContainer>\n          <LinkContainer to=\"/flight-order\">\n            <Nav.Link>\n              <FormattedMessage id=\"nav.flight-order\" defaultMessage=\"Flight Order\" />\n            </Nav.Link>\n          </LinkContainer>\n          <LinkContainer to=\"/lifting\">\n            <Nav.Link>\n              <FormattedMessage id=\"nav.lifting\" defaultMessage=\"Lifting\" />\n            </Nav.Link>\n          </LinkContainer>\n          <LinkContainer to=\"/results\">\n            <Nav.Link>\n              <FormattedMessage id=\"nav.results\" defaultMessage=\"Results\" />\n            </Nav.Link>\n          </LinkContainer>\n          <LinkContainer to=\"/debug\">\n            <Nav.Link>\n              <FormattedMessage id=\"nav.debug\" defaultMessage=\"Debug\" />\n            </Nav.Link>\n          </LinkContainer>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default Navigation;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { createStore, applyMiddleware } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers/rootReducer\";\n\nimport { GlobalState } from \"./types/stateTypes\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport default function configureStore(initialState: Partial<GlobalState> = {}) {\n  const store = createStore(persistedReducer, initialState, composeWithDevTools(applyMiddleware(thunk)));\n  const persistor = persistStore(store as any);\n  return { store, persistor };\n}\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport OpenLifterIntlProvider from \"./components/translations/OpenLifterIntlProvider\";\n\nimport RootContainer from \"./containers/RootContainer\";\nimport MeetSetupContainer from \"./containers/MeetSetupContainer\";\nimport RegistrationContainer from \"./containers/RegistrationContainer\";\nimport WeighinsContainer from \"./containers/WeighinsContainer\";\nimport LiftingContainer from \"./containers/LiftingContainer\";\nimport FlightOrderContainer from \"./containers/FlightOrderContainer\";\nimport ResultsContainer from \"./containers/ResultsContainer\";\nimport DebugContainer from \"./containers/DebugContainer\";\nimport AboutContainer from \"./containers/AboutContainer\";\nimport Navigation from \"./components/Navigation\";\n\nimport configureStore from \"./store\";\n\nimport { getDefaultLanguage } from \"./logic/strings\";\n\nclass App extends React.Component {\n  render() {\n    const { store, persistor } = configureStore({ language: getDefaultLanguage() });\n\n    return (\n      // Provider is a React component from the react-redux library.\n      // Its purpose is to \"provide\" the given store to its child components.\n      // Because the Provider wraps the whole App here, the store is global state.\n      //\n      // Switch iterates over its children (Routes) and renders the first one that matches the current path name\n      //\n      // Route takes a path and a component, and renders the given component if the current path matches the specified path.\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <OpenLifterIntlProvider>\n            <Router basename={process.env.REACT_APP_ROUTER_BASENAME}>\n              <div>\n                <Navigation />\n                <Switch>\n                  <Route exact path=\"/\" component={RootContainer} />\n                  <Route path=\"/meet-setup\" component={MeetSetupContainer} />\n                  <Route path=\"/registration\" component={RegistrationContainer} />\n                  <Route path=\"/weigh-ins\" component={WeighinsContainer} />\n                  <Route path=\"/flight-order\" component={FlightOrderContainer} />\n                  <Route path=\"/lifting\" component={LiftingContainer} />\n                  <Route path=\"/results\" component={ResultsContainer} />\n                  <Route path=\"/debug\" component={DebugContainer} />\n                  <Route path=\"/about\" component={AboutContainer} />\n                </Switch>\n              </div>\n            </Router>\n          </OpenLifterIntlProvider>\n        </PersistGate>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport * as serviceWorker from \"./serviceWorker\";\nimport App from \"./App\";\n\nimport \"./bootstrap-custom/bootstrap.scss\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst rootElement = document.getElementById(\"root\");\nif (rootElement !== null) {\n  ReactDOM.render(<App />, rootElement);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"BarLoad_container__2ae8O\",\"rackInfo\":\"BarLoad_rackInfo__2RVUT\",\"bar\":\"BarLoad_bar__TP6yB\",\"kg50\":\"BarLoad_kg50__i7LXH\",\"kg25\":\"BarLoad_kg25__nlLuS\",\"kg20\":\"BarLoad_kg20__3xVPK\",\"kg15\":\"BarLoad_kg15__nFGDt\",\"kg10\":\"BarLoad_kg10__2mAso\",\"kg5\":\"BarLoad_kg5__2H1CX\",\"kg2p5\":\"BarLoad_kg2p5__hc46t\",\"kg1p25\":\"BarLoad_kg1p25__2YvAd\",\"kg1\":\"BarLoad_kg1__3JT5m\",\"kg0p75\":\"BarLoad_kg0p75__3ebq8\",\"kg0p5\":\"BarLoad_kg0p5__3ehD9\",\"kg0p25\":\"BarLoad_kg0p25__1nUX-\",\"lbs100\":\"BarLoad_lbs100__VaSr7\",\"lbs55\":\"BarLoad_lbs55__TustM\",\"lbs45\":\"BarLoad_lbs45__DubJx\",\"lbs35\":\"BarLoad_lbs35__37o3u\",\"lbs25\":\"BarLoad_lbs25__35m-j\",\"lbs10\":\"BarLoad_lbs10__162Qu\",\"lbs5\":\"BarLoad_lbs5__3B-J3\",\"lbs2p5\":\"BarLoad_lbs2p5__lnKdM\",\"lbs1p25\":\"BarLoad_lbs1p25__1yMbs\",\"lbs0p5\":\"BarLoad_lbs0p5__1LZiS\",\"collar\":\"BarLoad_collar__3IXT7\",\"error\":\"BarLoad_error__1t6Re\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"liftingtable\":\"LiftingTable_liftingtable__2-Rse\",\"textCell\":\"LiftingTable_textCell__gOmZ-\",\"smallCell\":\"LiftingTable_smallCell__vwNWg\",\"spacerCell\":\"LiftingTable_spacerCell__3EnYx\",\"activeColumn\":\"LiftingTable_activeColumn__WQ704\",\"attemptInputCell\":\"LiftingTable_attemptInputCell__1YoPG\",\"current\":\"LiftingTable_current__1v05Z\",\"goodlift\":\"LiftingTable_goodlift__1v8vY\",\"nolift\":\"LiftingTable_nolift__GDNkx\",\"attemptInput\":\"LiftingTable_attemptInput__tuKcd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentArea\":\"ContentArea_contentArea__3c6kc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"LiftingFooter_footer__2Mb6I\",\"leftControls\":\"LiftingFooter_leftControls__kesKc\",\"rightControls\":\"LiftingFooter_rightControls__mXLjl\",\"fullscreen\":\"LiftingFooter_fullscreen__1HPVI\",\"goodLift\":\"LiftingFooter_goodLift__T-O7p\",\"noLift\":\"LiftingFooter_noLift__3-y0k\",\"selector\":\"LiftingFooter_selector__1Ndtq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LeftCard_container__2XjgL\",\"activeCard\":\"LeftCard_activeCard__1M9K6\",\"loadingBar\":\"LeftCard_loadingBar__2trT4\",\"attemptText\":\"LeftCard_attemptText__1JsZg\",\"barArea\":\"LeftCard_barArea__3OqZl\",\"nextText\":\"LeftCard_nextText__2cIaN\"};"],"sourceRoot":""}