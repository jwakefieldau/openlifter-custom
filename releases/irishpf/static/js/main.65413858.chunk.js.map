{"version":3,"sources":["components/lifting/LiftingHeader.module.scss","components/results/ResultsView.module.scss","components/meet-setup/ColorPicker.module.scss","components/flight-order/OneFlightOrder.module.scss","components/lifting/BarLoad.module.scss","components/lifting/LiftingTable.module.scss","components/lifting/LiftingFooter.module.scss","serviceWorker.js","versions.ts","reducers/versionsReducer.ts","types/utils.ts","reducers/languageReducer.ts","logic/date.ts","logic/units.ts","constants/plateColors.ts","reducers/meetReducer.ts","logic/entry.ts","reducers/registrationReducer.ts","reducers/liftingReducer.ts","reducers/rootReducer.ts","store.ts","translations/index.ts","components/translations/OpenLifterIntlProvider.tsx","actions/globalActions.ts","logic/strings.ts","components/home/NewMeetModal.tsx","components/ErrorModal.tsx","containers/HomeContainer.tsx","components/ValidatedInput.tsx","actions/meetSetupActions.ts","components/meet-setup/MeetDate.tsx","logic/parsers.ts","components/common/NumberInput.tsx","components/meet-setup/MeetLength.tsx","components/meet-setup/PlatformCount.tsx","components/meet-setup/PlatformCounts.tsx","components/meet-setup/AutoFillRules.tsx","components/meet-setup/DivisionSelect.tsx","components/meet-setup/WeightClassesSelect.tsx","components/meet-setup/BarAndCollarsWeightKg.tsx","components/meet-setup/ColorPicker.tsx","components/meet-setup/PlateInput.tsx","components/meet-setup/Plates.tsx","components/common/YesNoButton.tsx","components/meet-setup/MeetSetup.tsx","containers/MeetSetupContainer.tsx","components/registration/LifterTable.tsx","components/translations/LocalizedString.tsx","validation/iso8601Date.ts","actions/registrationActions.ts","components/registration/LifterRow.tsx","components/registration/NewButton.tsx","logic/export/csv.ts","logic/import/registration-csv.ts","logic/export/registrations.ts","components/registration/RegistrationView.tsx","containers/RegistrationContainer.tsx","components/weighins/LifterTable.tsx","actions/liftingActions.ts","components/weighins/WeightInput.tsx","validation/positiveInteger.ts","components/weighins/LifterRow.tsx","components/weighins/WeighinsView.tsx","containers/WeighinsContainer.tsx","logic/barLoad.ts","components/lifting/BarLoad.tsx","components/lifting/LeftCard.tsx","components/lifting/AttemptInput.tsx","logic/coefficients/ah.ts","logic/coefficients/dots.ts","logic/coefficients/foster-mcculloch.ts","logic/coefficients/schwartzmalone.ts","logic/coefficients/wilks.ts","logic/coefficients/glossbrenner.ts","logic/coefficients/ipf.ts","logic/coefficients/reshel.ts","logic/coefficients/coefficients.ts","logic/coefficients/bodyweight-multiple.ts","logic/coefficients/nasa.ts","logic/liftingOrder.ts","logic/divisionPlace.ts","components/lifting/LiftingTable.tsx","components/lifting/LiftingFooter.tsx","components/lifting/LiftingHeader.tsx","components/lifting/ColumnWidth.tsx","components/lifting/LiftingView.tsx","containers/LiftingContainer.tsx","components/flight-order/OneFlightOrder.tsx","components/flight-order/FlightOrderView.tsx","containers/FlightOrderContainer.tsx","components/results/ByDivision.tsx","logic/pointsPlace.ts","components/results/ByPoints.tsx","logic/teamPlace.ts","components/results/ByTeam.tsx","logic/export/oplcsv.ts","logic/export/usapl.ts","components/results/ResultsView.tsx","containers/ResultsContainer.tsx","components/debug/RandomizeHelpers.ts","components/debug/RandomizeMeetSetup.tsx","components/debug/RandomizeRegistration.tsx","components/debug/RandomizeWeighins.tsx","components/debug/StateTools.tsx","containers/DebugContainer.tsx","containers/AboutContainer.tsx","containers/RootContainer.tsx","components/Navigation.tsx","App.tsx","index.tsx","components/lifting/LeftCard.module.scss","components/lifting/LiftingView.module.scss"],"names":["module","exports","header","lifterName","info","controlPanel","dropdown","swatch","color","leftDivider","container","rackInfo","bar","kg50","kg25","kg20","kg15","kg10","kg5","kg2p5","kg1p25","kg1","kg0p75","kg0p5","kg0p25","lbs100","lbs55","lbs45","lbs35","lbs25","lbs10","lbs5","lbs2p5","lbs1p25","lbs0p5","collar","error","liftingtable","textCell","smallCell","spacerCell","activeColumn","attemptInputCell","current","goodlift","nolift","attemptInput","footer","leftControls","rightControls","fullscreen","goodLift","noLift","selector","Boolean","window","location","hostname","match","releaseVersion","process","initialState","stateVersion","assertString","value","result","isString","Error","concat","assertFlight","flight","localDateToIso8601","d","year","getFullYear","month","getMonth","day","getDate","yearStr","String","monthStr","length","dayStr","kg2lbs","kg","lbs2kg","lbs","displayWeight","weight","lang","locale","undefined","rounded","Math","round","Intl","NumberFormat","useGrouping","maximumFractionDigits","format","displayWeightOnePlace","truncated","trunc","displayPoints","points","minimumFractionDigits","displayNumber","number","PlateColors","PLATE_DEFAULT_BLACK","PLATE_DEFAULT_WHITE","PLATE_DEFAULT_BLUE","PLATE_DEFAULT_GREEN","PLATE_DEFAULT_GRAY","PLATE_DEFAULT_RED","PLATE_DEFAULT_YELLOW","PLATE_DEFAULT_ORANGE","PLATE_DEFAULT_PINK","PLATE_DEFAULT_PURPLE","defaultPlatesKg","weightKg","pairCount","defaultPlatesLbs","name","country","state","city","federation","date","Date","lengthDays","platformsOnDays","divisions","weightClassesKgMen","weightClassesKgWomen","weightClassesKgMx","formula","ageCoefficients","combineSleevesAndWraps","allow4thAttempts","inKg","showAlternateUnits","squatBarAndCollarsWeightKg","benchBarAndCollarsWeightKg","deadliftBarAndCollarsWeightKg","plates","getWeightClassStr","classes","bodyweightKg","language","i","wtclsStrKg2Lbs","kgcls","shw","endsWith","asNumber","Number","replace","floor","getWeightClassLbsStr","newDefaultEntry","id","platform","sex","birthDate","age","intendedWeightClassKg","equipment","events","lot","memberId","paid","team","notes","squatRackInfo","benchRackInfo","squatKg","benchKg","deadliftKg","squatStatus","benchStatus","deadliftStatus","getAge","entry","meetDate","_meetDate$split$map","split","map","s","_meetDate$split$map2","Object","slicedToArray","my","mm","md","_entry$birthDate$spli","_entry$birthDate$spli2","by","bm","bd","years","getBest5SquatKg","best3SquatKg","max","getBest5BenchKg","best3BenchKg","getBest5DeadliftKg","best3DeadliftKg","getProjectedTotalKg","best3Squat","best3Bench","best3Dead","getProjectedEventTotalKg","event","includes","getBest3SquatKg","getBest3BenchKg","getBest3DeadliftKg","getFinalTotalKg","getFinalEventTotalKg","getLiftersOnDay","entries","filter","liftToAttemptFieldName","lift","liftToStatusFieldName","entryHasLifted","liftingPresentOnPlatform","getWhetherPlatformsHaveLifted","ret","platformsOnDay","acc","push","nextEntryId","lookup","overrideAttempt","overrideEntryId","columnDivisionWidthPx","columnTeamWidthPx","combineReducers","versions","arguments","action","type","store","meet","objectSpread","numDays","diff","newPlatformsOnDays","slice","count","defaultPlates","defaultBar","classesKg","index","findIndex","p","newPlates","changes","newState","assign","registration","obj","overwriteDefaults","newEntry","previousEntry","entryId","item","attemptOneIndexed","field","newEntries","oldEntry","newarray","newfields","status","success","fieldStatus","platformEntries","e","lifting","attempt","combined","persistConfig","key","storage","persistedReducer","persistReducer","rootReducer","translations","de","eo","en","es","hr","lt","nl","pt","ru","tr","zh-Hans","OpenLifterIntlProvider","this","props","messages","react","provider","defaultLocale","children","React","connect","overwriteStore","getString","localizeEquipment","delocalizeEquipment","text","localizeEvent","delocalizeEvent","localizeFlight","delocalizeFlight","localizeSex","delocalizeSex","localizeWeightClassStr","wtcls","isSHW","NewMeetModal","react_default","a","createElement","Modal_default","show","onHide","close","Header","closeButton","Title","message","defaultMessage","values","meetName","Body","Footer","Button_default","onClick","variant","lib","to","Component","dispatch","defaultStore","ErrorModal","title","centerConsole","maxWidth","margin","HomeContainer","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleLoadClick","loadhelper","document","getElementById","click","handleNewClick","setState","showNewMeetModal","closeConfirmModal","closeErrorModal","handleLoadFileInput","loadHelper","HTMLInputElement","files","selectedFile","redux","rememberThis","assertThisInitialized","reader","FileReader","onload","errored","JSON","parse","target","err","readAsText","handleSaveClick","meetname","stringify","blob","Blob","saveAs","renderContinueButton","block","bind","newMeetButton","betaWarning","wrongVersion","dataReleaseVersion","buttonMargin","marginBottom","warning","oldVersion","thisVersion","Container_default","style","home_NewMeetModal","components_ErrorModal","Row_default","Col_default","alt","src","href","otherVersion","rel","textAlign","marginTop","releaseDate","accept","display","onChange","BirthDateInput","validate","handleKeyDown","currentTarget","blur","handleChange","handleBlur","initialValue","onSuccess","validation","maybeLabel","label","Form_default","Label","Group","keepMargin","Control","placeholder","disabled","onKeyDown","onBlur","isValid","isInvalid","className","setDivisions","setLengthDays","setPlatformsOnDays","setWeightClasses","updateMeet","registerLocale","zh_CN","MeetDate","initialDate","_s$split","_s$split2","parseInt","setFullYear","iso8601ToLocalDate","FormGroup_default","react_datepicker_min_default","dateFormat","selected","setMeetDate","inline","parseInteger","charcode","charCodeAt","parseDate","pieces","NumberInput","baseValue","step","min","newValue","decrementByStep","width","inputWidth","validationStatus","incrementByStep","MeetLength","common_NumberInput","days","PlatformCount","PlatformCounts","createPlatformInputs","inputs","meet_setup_PlatformCount","traditionalDefaults","gpcDefaults","spfDefaults","upaDefaults","usaplDefaults","uspaDefaults","wabdlDefaults","wpcDefaults","wrpfDefaults","AutoFillRules","handleSelectChange","selectedOption","handleClick","stringTraditional","stringGPC","stringSPF","stringUPA","stringUSAPL","stringUSPA","stringWABDL","stringWPC","stringWRPF","FormControl_default","as","defaultValue","marginLeft","components","DropdownIndicator","createOption","DivisionSelect","maybeUpdateRedux","objarray","actionMeta","Array","handleInputChange","inputValue","_this$state","preventDefault","toConsumableArray","division","_this$state2","Creatable_default","isMulti","menuIsOpen","onInputChange","WeightClassesSelect","isNaN","isFinite","sort","b","c","selectClassesBySex","ownProps","BarAndCollarsWeightKg","getInitialBarAndCollarsWeightKg","stringValue","asNum","setBarAndCollarsWeightKg","getLiftLabel","ColorPicker","clearTimeout","timeoutId","displayColorPicker","handleMouseLeave","setTimeout","handleMouseEnter","clientX","hex","toUpperCase","_this2","colors","picker","esm","placement","_ref","ref","data-placement","react_color_lib","triangle","onMouseLeave","onMouseEnter","_ref2","styles","background","PlateInput","meet_setup_ColorPicker","Plates","validateAmountInput","widget","updateHandler","amount","isNumber","setPlateConfig","renderWeightRow","meet_setup_PlateInput","toString","plateRows","unitId","stringPlate","Table_default","striped","size","hover","YesNoButton","ButtonGroup_default","active","setValue","no","yes","MeetSetup","validateRequiredText","stringMeetName","stringFederation","stringCountry","stringStateProvince","stringCityTown","stringKilograms","stringPounds","stringMensClasses","stringWomensClasses","stringMxClasses","stringAH","stringBodyweightMultiple","stringDots","stringGlossbrenner","stringIPFPoints","stringNASAPoints","stringReshel","stringSchwartzMalone","stringTotal","stringWilks","stringNone","stringFosterMcCulloch","stringNo","stringYes","stringAlsoKilograms","stringAlsoPounds","Card_default","border","ValidatedInput","setMeetName","setFederation","setCountry","setCity","meet_setup_MeetDate","meet_setup_MeetLength","meet_setup_PlatformCounts","meet_setup_AutoFillRules","meet_setup_DivisionSelect","masterKey","meet_setup_WeightClassesSelect","setFormula","setAgeCoefficients","common_YesNoButton","setCombineSleevesAndWraps","setAllow4thAttempts","setInKg","setShowAlternateUnits","meet_setup_BarAndCollarsWeightKg","meet_setup_Plates","join","fed","bool","assertFormula","coefficient","assertAgeCoefficients","MeetSetupContainer","meet_setup_MeetSetup","LifterTable","renderRows","LifterRow","rowRenderer","LocalizedString","injectIntl","Consumer","intl","validateIso8601Date","_pieces","onlyNumbers","newRegistration","deleteRegistration","updateRegistration","updateRegistrationLot","updateRegistrationMemberId","updateRegistrationBirthDate","updateRegistrationCountry","updateRegistrationState","updateRegistrationTeam","updateRegistrationInstagram","instagram","updateRegistrationNotes","selectedDay","deleteRegistrationClick","updateRegistrationDay","updateRegistrationPlatform","updateRegistrationFlight","updateRegistrationName","updateRegistrationSex","updateRegistrationDivisions","updateRegistrationEvents","updateRegistrationEquipment","assertSex","dayOptions","platformOptions","divisionOptions","selectedDivisions","selectedEvents","gridStyle","padding","stringName","stringState","stringBirthDatePlaceholder","stringMemberIdPlaceholder","stringSelectPlaceholder","eventOptions","translations_LocalizedString","react_select_esm","menuPlacement","options","isClearable","InputGroup_default","Prepend","Text","NewButton","csvString","x","trim","getSpreadsheetColumnName","alphabet","n","mod","remainder","Csv","fieldnames","rows","createClass","indexOf","namelist","j","splice","removeColumnByIndex","empty","removeEmptyColumns","lines","row","headers","strRows","makeExampleRegistrationsCsv","csv","division1","division2","division3","event1","event2","event3","birthdate","memberid","appendColumns","loadRegistrations","division_template","event_template","col_day","col_platform","col_flight","col_name","col_sex","col_equipment","col_division1","col_division2","col_division3","col_division4","col_division5","col_event1","col_event2","col_event3","col_event4","col_event5","col_birthdate","col_memberid","col_country","col_state","col_lot","col_team","col_instagram","col_notes","MANDATORY_FIELDNAMES","OPTIONAL_FIELDNAMES","colname","allfields","iname","jname","errprefix_template","fieldname","val","rowstr","errprefix","integer","platforms","m","f","mx","bare","sleeves","wraps","single","multi","evt","sbd","sb","sd","makeRegistrationsCsv","fill","column","prevIndex","insertColumn","marginStyle","globalImportKind","RegistrationView","handleDownloadCsvTemplateClick","global","filename","handleExportCsvClick","handleOverwriteClick","handleAppendClick","maybeError","fromString","maybeEntries","entryIds","alert","numEntries","registration_LifterTable","registration_NewButton","RegistrationContainer","registration_RegistrationView","inLiftingPage","renderHeader","shortStyle","bodyweightId","squatId","benchId","deadliftId","enterAttempt","WeightInput","weightNum","weightStr","multipleOf","validatePositiveInteger","inclusiveMax","startsWith","isInteger","updateRegistrationSquatRackInfo","updateRegistrationBenchRackInfo","updateRegistrationAge","validateAge","pos","validateRack","hasSquat","hasBench","hasDeadlift","disableSquatWeight","disableBenchWeight","disableDeadliftWeight","ageStr","weighins_WeightInput","WeighinsView","getNumDaysFromEntries","max_day","dayCards","lifters","dayNumber","weighins_LifterTable","WeighinsContainer","weighins_WeighinsView","safeKg2Lbs","selectPlates","loadingKg","barAndCollarsWeightKg","loadingAny","barAndCollarsWeightAny","platesAny","sortedPlates","sideWeightKg","loading","_sortedPlates$i","weightAny","isAlreadyLoaded","findWeightFrom","startFrom","BarLoad","weightKgToStyle","weightLbsToStyle","weightLbs","weightAnyToText","renderPlates","divs","plateCount","showCounter","plate","counter","is_light","backgroundColor","opacity","LeftCard","getBarLoadProps","fieldKg","idx","getBarAndCollarsWeightKg","currentEntryId","next","nextAttemptOneIndexed","weightKgText","weightLbsText","currentLoading","nextLoading","relativeTo","finger","loadedPlate","makeLoadingRelative","nextEntryName","nextBarLoad","loadingBar","nextText","lifter","barArea","lifting_BarLoad","attemptTemplate","activeCard","attemptText","AttemptInput","asKg","prevAttemptOneIndexed","prevKg","prevStatus","fixups","lastGoodValue","ah","totalKg","adjusted","pow","log10","ahMen","ahWomen","dotsPoly","x2","x3","dots","dotsMen","dotsWomen","AGE_COEFFICIENTS","fosterMcCulloch","schwartz_coefficient","malone_coefficient","wilksPoly","x4","wilksMen","wilksWomen","glossbrenner","glossbrenner_coefficient_men","glossbrenner_coefficient_women","PARAMETERS","M","Sleeves","SBD","S","B","D","Single-ply","F","reshel","normalized","reshelMen","reshelWomen","getPoints","bodyweight_multiple","normalizedEquipment","normalizedSex","params","bw_log","log","ipfpoints","nasapoints","schwartzmalone","wilks","getAgeAdjustedPoints","getNextAttemptNumberForEntry","weightsKg","statuses","MAX_ATTEMPTS","compareEntriesByAttempt","aKg","bKg","orderEntriesByAttempt","getLiftingOrder","entriesInFlight","earliestAttemptOneIndexed","getActiveAttemptNumber","orderedEntries","attemptZeroIndexed","existsNextAttempt","existsPrevAttempt","byNextAttempt","byThisAttempt","byPrevAttempt","notLifting","prototype","orderEntriesForAttempt","getCurrentEntryId","nextEntryInfo","currentEntryIndex","hasAttempt","notTaken","getNextEntryInfo","categoryToKey","category","keyToCategory","getLastSuccessfulLift","getLastSuccessfulAttempt","sortByPlaceInCategory","clonedEntries","aTotal","bTotal","aLastSuccessfulLift","bLastSuccessfulLift","aLastSuccessfulLiftIndex","bLastSuccessfulLiftIndex","aLastSuccessfulAttempt","bLastSuccessfulAttempt","getEventSortOrder","ev","getEquipmentSortOrder","eq","getSexSortOrder","mapSexToClasses","men","women","getAllResults","categoryMap","Map","classesForSex","weightClassStr","dividx","evidx","catEntries","get","set","results","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","_ref3","return","catA","catB","aSex","bSex","aEvent","bEvent","aEquipment","bEquipment","aIsSHW","bIsSHW","sortCategoryResults","getProjectedResults","getFinalResults","globalFocusAttemptInputId","globalHighestAttemptInputAttempt","LiftingTable","renderBest3AttemptField","columnType","best3","lightestFailed","renderAttemptField","wStr","displayStr","lifting_AttemptInput","maybeNegative","anyPreviousAttemptTaken","currentAndHasPrevious","nextAndTookLast","meetState","renderCell","categoryResults","cell","bw","bwStr","weightClass","firstDiv","columns","cells","col","rowClassName","getColumnHeaderLabel","useProjected","highlightColumn","nameCell","LiftingFooter","handleDayChange","setLiftingGroup","handlePlatformChange","handleFlightChange","handleLiftChange","assertLift","handleAttemptChange","handleLifterChange","setFocusAttemptInputTimeout","elem","focus","handleOnMouseEnter","activeElement","HTMLElement","handleGoodLift","markLift","handleNoLift","hasFullscreenElement","doc","fullscreenElement","webkitFullscreenElement","mozFullscreenElement","msFullscreenElement","exitFullscreen","webkitExitFullscreen","mozExitFullscreen","msExitFullscreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullscreen","msRequestFullscreen","handleFullscreen","liftingView","makeLifterOptions","lifterOptions","numPlatforms","dayTemplate","platformTemplate","liftOptions","flightOptions","flightTemplate","flightsOnPlatform","attemptOptions","toggleReplaceTableWithWeighins","onMouseDown","LiftingHeader","infoBuilder","MULTIPLE","ColumnWidth","fieldName","setTableInfo","ceil","paddingRight","pattern","LiftingView","replaceTableWithWeighins","now","rightElement","lifting_LiftingTable","marginRight","flexFlow","lifting_ColumnWidth","lifting_LiftingHeader","middleParentContainer","leftCardContainer","lifting_LeftCard","rightCardContainer","lifting_LiftingFooter","entriesOnPlatform","flights","LiftingContainer","lifting_LiftingView","OneFlightOrder","getOrderBy","entriesForLift","bySquat","byBench","byDeadlift","maxRows","builder","content","getColumnHeader","FlightOrderView","updateDay","updatePlatform","handlePrint","print","selectorStyle","shownEntries","knownFlights","flightOrders","_loop","flight_order_OneFlightOrder","FlightOrderContainer","flight_order_FlightOrderView","ByDivision","renderEntryRow","place","pointsStr","squat","bench","deadlift","weightTemplate","weightString","mapSexToLabel","renderCategoryResults","eqpstr","units","categoryCards","panel","sortByFormulaPlaceInCategory","indexMap","memoizedPoints","aIndex","bIndex","aPoints","bPoints","getAllRankings","sortPointsCategoryResults","ByPoints","rank","total","categoryString","agePointsCategory","accumulate","teamMap","cumulativePoints","ByTeam","has","catResults","teamResults","getFinalTeamResults","addEntriesRow","cls","unit","finalEventTotalKg","standardizeEquipment","exportAsOplCsv","meetCsv","makeMeetCsv","entriesCsv","squatFieldnames","benchFieldnames","deadliftFieldnames","_results$_i","makeEntriesCsv","versionStr","addDataRow","hasDL","makeBirthDate","translateEvent","exportAsUSAPLCsv","_results$i","globalMergeDay","globalMergePlatform","ResultsView","makeDayOptions","justDayTemplate","handleByChange","assertValidResultsBy","handleExportAsOplCsvClick","handleExportAsUSAPLCsvClick","handleExportPlatformClick","exportname","handleMergePlatformClick","mergePlatform","makePlatformMergeButtons","platformsHaveLifted","combineTemplate","mergeTemplate","exportTemplate","forms","liftedOnDay","buttons","_loop2","lifted","actionTemplate","results_ByDivision","results_ByPoints","results_ByTeam","daySelector","fontWeight","controlCard","resultsBy","ResultsContainer","results_ResultsView","randomString","random","substr","randomInt","randomFixedPoint","fixedPoints","power","NonsenseFederations","NonsenseDivisions","RandomizeMeetSetupButton","randomizeMeetSetup","numClassesMen","numClassesWomen","classesMen","classesWomen","classesMx","numDivisions","div","age_lower","age_upper","NonsenseFirstNames","NonsenseLastNames","RandomizeRegistrationButton","deleteExistingRegistrations","generateEntries","randomizeRegistration","numLifters","sexes","teams","equipmentSelect","divisionsUpperBound","divchooser","choice","FLIGHTCHARS","numFlights","RandomizeWeighinsButton","randomAttempt","randomizeWeighins","height","safety","StateTools","reInitializeRedux","localStorage","clear","reload","RandomizeMeetSetup","RandomizeRegistration","RandomizeWeighins","DebugContainer","debug_StateTools","AboutContainer","RootContainer","search","containers_HomeContainer","containers_MeetSetupContainer","containers_RegistrationContainer","containers_WeighinsContainer","containers_FlightOrderContainer","containers_LiftingContainer","containers_ResultsContainer","containers_DebugContainer","containers_AboutContainer","Navigation","Navbar_default","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav_default","exact","Link","App","_configureStore","createStore","applyMiddleware","thunk","persistor","persistStore","configureStore","integration_react","translations_OpenLifterIntlProvider","BrowserRouter","basename","components_Navigation","Switch","Route","path","component","rootElement","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","unregister"],"mappings":"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,QAAS,kBACTC,gBAAiB,kBACjBC,wBAAwB,EACxBC,kBAAkB,GAGdkW,GAAkC,CACtCzmBAAoB,CAAC,GAAI,GAAI,GAAI,KAAM,GAAI,KAAM,GAAI,IAAK,IAAK,IAAK,KACpEC,qBAAsB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,KAAM,GAAI,KAAM,IAC3DC,kBAAmB,CAAC,GAAI,GAAI,GAAI,KAAM,GAAI,KAAM,GAAI,IAAK,IAAK,IAAK,KACnEC,QAAS,kBACTC,gBAAiB,kBACjBC,wBAAwB,EACxBC,kBAAkB,GAGdmW,GAAoC,CACxC1W,UAAW,CACT,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,OACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,MACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,OACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OAEFC,mBAAoB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,KAClDC,qBAAsB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC/CC,kBAAmB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,KACjDC,QAAS,aACTC,gBAAiB,kBACjBC,wBAAwB,EACxBC,kBAAkB,GAGdoW,GAAmC,CACvC3W,UAAW,CACT,OACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QAEFC,mBAAoB,CAAC,GAAI,GAAI,GAAI,KAAM,GAAI,KAAM,GAAI,IAAK,IAAK,IAAK,KACpEC,qBAAsB,CAAC,GAAI,GAAI,GAAI,GAA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,KAc9CqxB,CAAUrxB,GAAgB0wB,EACnC,QAEE,OAAO,ICxDPY,GAAmB,CAEvB,EACA,EACA,EACA,EACA,EAIA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAIA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAMA,KACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,MACA,MACA,MACA,KACA,KACA,MACA,MACA,MACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KAIA,MACA,MACA,KACA,MACA,MACA,MACA,MACA,KACA,MACA,MAEA,MACA,MACA,KACA,MACA,MACA,IACA,MACA,MACA,MACA,OAIWC,GAAkB,SAACtwB,GAC9B,OAAKT,OAAO2qB,UAAUlqB,IAAQA,GAAO,EAC5B,EAILA,EAAMqwB,GAAiBz1B,OAClB,EAGFy1B,GAAiBrwB,ICnIbuwB,GAAuB,SAACxxB,GAEnC,IAKI2wB,EAAWl0B,KAAK8G,IAAIvD,EAAc,IAEtC,OAPU,kBAOCvD,KAAKm0B,IAAID,GANT,mBACD,kBASCc,GAAqB,SAACzxB,GAEjC,IAKI2wB,EAAWl0B,KAAK8G,IAAIvD,EAAc,OAEtC,OAPU,iBAOCvD,KAAKm0B,IAAID,GANT,mBACD,kBCjBZ,SAASe,GAAUvmB,EAAWoN,EAAWC,EAAWrd,EAAWgN,EAAW8f,EAAW1E,GACnF,IAAI0N,EAAK1N,EAAIA,EACX2N,EAAKD,EAAK1N,EACVoO,EAAKT,EAAK3N,EAEZ,OAAO,KAASpY,EAAIoN,EAAIgL,EAAI/K,EAAIyY,EAAK91B,EAAI+1B,EAAK/oB,EAAIwpB,EAAK1J,GADhD0J,EAAKpO,IAIP,SAASqO,GAAS5xB,GAEvB,OAAO0xB,IAAW,YAAa,YAAa,YAAc,UAAY,YAAa,SADhEj1B,KAAK8X,IAAI9X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A,WACA,OACA,SACA,UACA,SACA,QACA,QACA,OACA,UACA,OACA,WACA,QACA,YACA,SACA,UACA,QACA,QACA,aACA,YACA,SACA,UACA,QACA,UACA,OACA,UACA,SACA,SACA,QACA,SACA,WACA,QACA,SACA,OACA,MACA,MACA,QACA,WACA,SACA,WACA,OACA,UACA,UACA,SACA,SACA,QACA,UACA,SACA,YACA,MACA,YACA,SACA,OACA,QACA,OACA,QACA,UACA,WAGIC,GAAoB,CACxB,QACA,UACA,SACA,aACA,QACA,aACA,SACA,UACA,SACA,WACA,UACA,aACA,UACA,YACA,QACA,WACA,QACA,QACA,UACA,cACA,SACA,aACA,aACA,WACA,aACA,WACA,QACA,SACA,aACA,aACA,WACA,QACA,OACA,QACA,aACA,YACA,YACA,WACA,QACA,UACA,UACA,SACA,WACA,SACA,WACA,QACA,UACA,aACA,cACA,WACA,WACA,WACA,YACA,QACA,UACA,SACA,aACA,QACA,YACA,WACA,WACA,QACA,YACA,UACA,OACA,SACA,UAKIC,eACJ,SAAAA,EAAYp+B,GAAc,IAAAqD,EAAA,OAAAtK,OAAAuK,EAAA,EAAAvK,CAAAgH,KAAAq+B,IACxB/6B,EAAAtK,OAAAwK,EAAA,EAAAxK,CAAAgH,KAAAhH,OAAAyK,EAAA,EAAAzK,CAAAqlC,GAAA36B,KAAA1D,KAAMC,KACDq+B,4BAA8Bh7B,EAAKg7B,4BAA4Bx4B,KAAjC9M,OAAA4L,GAAA,EAAA5L,CAAAsK,IACnCA,EAAKi7B,gBAAkBj7B,EAAKi7B,gBAAgBz4B,KAArB9M,OAAA4L,GAAA,EAAA5L,CAAAsK,IACvBA,EAAKk7B,sBAAwBl7B,EAAKk7B,sBAAsB14B,KAA3B9M,OAAA4L,GAAA,EAAA5L,CAAAsK,IAJLA,6FASxB,IADA,IAAM6c,EAAWngB,KAAKC,MAAMzC,aAAazC,QAAQlC,IAAI,SAAA4F,GAAC,OAAIA,EAAEtH,KACnDX,EAAI,EAAGA,EAAI2pB,EAAShuB,OAAQqE,IACnCwJ,KAAKC,MAAM+W,mBAAmBmJ,EAAS3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","file":"static/js/main.65413858.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"LiftingHeader_header__3YEwh\",\"lifterName\":\"LiftingHeader_lifterName__2Vzfo\",\"info\":\"LiftingHeader_info__3mt5G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controlPanel\":\"ResultsView_controlPanel__J3R0v\",\"dropdown\":\"ResultsView_dropdown__2UB4b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"swatch\":\"ColorPicker_swatch__2ipyO\",\"color\":\"ColorPicker_color__cXLvH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftDivider\":\"OneFlightOrder_leftDivider__8pDMh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"BarLoad_container__2ae8O\",\"rackInfo\":\"BarLoad_rackInfo__2RVUT\",\"bar\":\"BarLoad_bar__TP6yB\",\"kg50\":\"BarLoad_kg50__i7LXH\",\"kg25\":\"BarLoad_kg25__nlLuS\",\"kg20\":\"BarLoad_kg20__3xVPK\",\"kg15\":\"BarLoad_kg15__nFGDt\",\"kg10\":\"BarLoad_kg10__2mAso\",\"kg5\":\"BarLoad_kg5__2H1CX\",\"kg2p5\":\"BarLoad_kg2p5__hc46t\",\"kg1p25\":\"BarLoad_kg1p25__2YvAd\",\"kg1\":\"BarLoad_kg1__3JT5m\",\"kg0p75\":\"BarLoad_kg0p75__3ebq8\",\"kg0p5\":\"BarLoad_kg0p5__3ehD9\",\"kg0p25\":\"BarLoad_kg0p25__1nUX-\",\"lbs100\":\"BarLoad_lbs100__VaSr7\",\"lbs55\":\"BarLoad_lbs55__TustM\",\"lbs45\":\"BarLoad_lbs45__DubJx\",\"lbs35\":\"BarLoad_lbs35__37o3u\",\"lbs25\":\"BarLoad_lbs25__35m-j\",\"lbs10\":\"BarLoad_lbs10__162Qu\",\"lbs5\":\"BarLoad_lbs5__3B-J3\",\"lbs2p5\":\"BarLoad_lbs2p5__lnKdM\",\"lbs1p25\":\"BarLoad_lbs1p25__1yMbs\",\"lbs0p5\":\"BarLoad_lbs0p5__1LZiS\",\"collar\":\"BarLoad_collar__3IXT7\",\"error\":\"BarLoad_error__1t6Re\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"liftingtable\":\"LiftingTable_liftingtable__2-Rse\",\"textCell\":\"LiftingTable_textCell__gOmZ-\",\"smallCell\":\"LiftingTable_smallCell__vwNWg\",\"spacerCell\":\"LiftingTable_spacerCell__3EnYx\",\"activeColumn\":\"LiftingTable_activeColumn__WQ704\",\"attemptInputCell\":\"LiftingTable_attemptInputCell__1YoPG\",\"current\":\"LiftingTable_current__1v05Z\",\"goodlift\":\"LiftingTable_goodlift__1v8vY\",\"nolift\":\"LiftingTable_nolift__GDNkx\",\"attemptInput\":\"LiftingTable_attemptInput__tuKcd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"LiftingFooter_footer__2Mb6I\",\"leftControls\":\"LiftingFooter_leftControls__kesKc\",\"rightControls\":\"LiftingFooter_rightControls__mXLjl\",\"fullscreen\":\"LiftingFooter_fullscreen__1HPVI\",\"goodLift\":\"LiftingFooter_goodLift__T-O7p\",\"noLift\":\"LiftingFooter_noLift__3-y0k\",\"selector\":\"LiftingFooter_selector__1Ndtq\"};","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Versioning for the global State object.\n//\n// Incrementing the version string breaks compatibility between implementations,\n// with the expectation that a converter will be automatically applied if possible,\n// such that a version of OpenLifter that internally uses version \"B\" can still\n// load files written in version \"A\", by means of auto-upgrading.\n//\n// This string is stored on the GlobalState as the property \"versions.stateVersion\".\n// Each save file thereby reports its own version.\nexport const stateVersion: string = \"0\";\n\n// Versioning for the OpenLifter project as a whole.\n//\n// This is safely incrementable on *releases*. Its function is exclusively to alert\n// users to \"automatic\" upgrades of the software, and it is reported explicitly\n// on the Home page.\n//\n// Changing this version does *not* represent data incompatibilities; for that,\n// please use the \"stateVersion\".\n//\n// This string is stored on the GlobalState as the property \"versions.releaseVersion\".\n//\n// It's defined by the '.env' file in the project root, which references\n// the package.json variable 'version'.\nexport const releaseVersion: string =\n  typeof process.env.REACT_APP_VERSION === \"string\" ? process.env.REACT_APP_VERSION : \"[undefined REACT_APP_VERSION]\";\n\n// Strictly-presentational representation of when the releaseVersion was changed.\n// Update this concurrently with modifying the releaseVersion.\n// This value is not stored in the state: it's purely informational.\nexport const releaseDate: string = \"2019-11-10\";\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// See comments in src/versions.js.\n\nimport { stateVersion, releaseVersion } from \"../versions\";\nimport { OverwriteStoreAction } from \"../types/actionTypes\";\nimport { VersionsState } from \"../types/stateTypes\";\n\nconst initialState: VersionsState = {\n  stateVersion,\n  releaseVersion\n};\n\ntype Action = OverwriteStoreAction;\n\nexport default (state: VersionsState = initialState, action: Action): VersionsState => {\n  switch (action.type) {\n    case \"OVERWRITE_STORE\":\n      return action.store.versions;\n\n    default:\n      return state;\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines all the project-wide shared Redux state types in a single place.\n//\n// Because the Redux store is immutable, all types are internally prefixed\n// with the \"readonly \" covariant type, which makes them immutable.\n\nimport { FormControl, FormControlProps } from \"react-bootstrap\";\nimport { AgeCoefficients, Flight, Formula, Lift, Sex } from \"./dataTypes\";\n\n// This is purely used by the type system to raise a compile error when\n// we are trying to perform an exhaustive check (eg in a switch).\n// This allows us to have a compile time error, but also have graceful runtime fallback.\nexport function checkExhausted(value: never) {}\n\n// A workaround for bad typing of react-bootstrap. Open to better suggestions.\n// see: https://github.com/DefinitelyTyped/DefinitelyTyped/issues/16208 for more context\nexport type FormControlTypeHack = FormControlProps & FormControl & HTMLOrSVGElement;\n\n// Throws an error if value isn't a string, narrows the type if it is.\nexport function assertString(value: any): value is string {\n  const result = isString(value);\n  if (!result) {\n    throw new Error(`Expected a string, but got ${value}`);\n  }\n  return result;\n}\n\n// Convenience function to narrow a variables type down to a string\nexport function isString(value: any): value is string {\n  return typeof value === \"string\";\n}\n\n// Throws an error if value isn't a number, narrows the type if it is.\nexport function assertNumber(value: any): value is number {\n  const result = typeof value === \"number\";\n  if (!result) {\n    throw new Error(`Expected a number, but got ${value}`);\n  }\n  return result;\n}\n\n// Throws an error if value isn't a a valid flight, narrows the type if it is.\nexport function assertFlight(value: string): value is Flight {\n  const flight: Flight = value as Flight;\n  switch (flight) {\n    case \"A\":\n    case \"B\":\n    case \"C\":\n    case \"D\":\n    case \"E\":\n    case \"F\":\n    case \"G\":\n    case \"H\":\n    case \"I\":\n    case \"J\":\n    case \"K\":\n    case \"L\":\n    case \"M\":\n    case \"N\":\n    case \"O\":\n    case \"P\":\n      return true;\n    default:\n      checkExhausted(flight);\n      throw new Error(`Expected a string which corresponds to a Flight, got \"${value}\"`);\n  }\n}\n\n// Throws an error if value isn't a a valid flight, narrows the type if it is.\nexport function assertSex(value: string): value is Sex {\n  const sex = value as Sex;\n  switch (sex) {\n    case \"M\":\n    case \"F\":\n    case \"Mx\":\n      return true;\n    default:\n      checkExhausted(sex);\n      throw new Error(`Expected a string which corresponds to a Sex, got \"${value}\"`);\n  }\n}\n\nexport function assertLift(value: string): value is Lift {\n  const lift = value as Lift;\n  switch (lift) {\n    case \"S\":\n    case \"B\":\n    case \"D\":\n      return true;\n    default:\n      checkExhausted(lift);\n      throw new Error(`Expected a string which corresponds to a Lift, got \"${value}\"`);\n  }\n}\n\nexport function assertAgeCoefficients(value: string): value is AgeCoefficients {\n  const coefficient = value as AgeCoefficients;\n  switch (coefficient) {\n    case \"FosterMcCulloch\":\n    case \"None\":\n      return true;\n    default:\n      checkExhausted(coefficient);\n      throw new Error(`Expected a string which corresponds to a valid AgeCoefficients, got \"${value}\"`);\n  }\n}\n\nexport function assertFormula(value: string): value is Formula {\n  const formula = value as Formula;\n  switch (formula) {\n    case \"AH\":\n    case \"Bodyweight Multiple\":\n    case \"Dots\":\n    case \"Glossbrenner\":\n    case \"IPF Points\":\n    case \"NASA Points\":\n    case \"Reshel\":\n    case \"Schwartz/Malone\":\n    case \"Total\":\n    case \"Wilks\":\n      return true;\n    default:\n      checkExhausted(formula);\n      throw new Error(`Expected a string which corresponds to a Formula, got \"${value}\"`);\n  }\n}\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { ChangeLanguageAction, OverwriteStoreAction } from \"../types/actionTypes\";\nimport { Language } from \"../types/dataTypes\";\nimport { checkExhausted } from \"../types/utils\";\n\ntype Action = ChangeLanguageAction | OverwriteStoreAction;\n\nexport default (state: Language = \"en\", action: Action): Language => {\n  switch (action.type) {\n    case \"CHANGE_LANGUAGE\":\n      return action.language;\n\n    case \"OVERWRITE_STORE\":\n      return action.store.language;\n\n    default:\n      checkExhausted(action);\n      return state;\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines logic for working with Dates, which is trickier than you might expect:\n// the global state wants strings in YYYY-MM-DD, date objects get created from\n// strings in UTC time, and React widgets create Dates in local time.\n\nexport const iso8601ToLocalDate = (s: string): Date => {\n  const [yearStr, monthStr, dayStr] = s.split(\"-\");\n\n  const year = parseInt(yearStr, 10);\n  const month = parseInt(monthStr, 10);\n  const day = parseInt(dayStr, 10);\n\n  let d = new Date();\n  d.setFullYear(year, month - 1, day);\n  return d;\n};\n\nexport const localDateToIso8601 = (d: Date): string => {\n  const year: number = d.getFullYear();\n  const month: number = d.getMonth() + 1;\n  const day: number = d.getDate();\n\n  const yearStr = String(year);\n  let monthStr = String(month);\n  if (monthStr.length === 1) {\n    monthStr = \"0\" + monthStr;\n  }\n  let dayStr = String(day);\n  if (dayStr.length === 1) {\n    dayStr = \"0\" + dayStr;\n  }\n\n  return yearStr + \"-\" + monthStr + \"-\" + dayStr;\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { Language } from \"../types/dataTypes\";\n\n// Defines operations for converting between different units, usually\n// pounds and kg.\n\nexport const kg2lbs = (kg: number): number => {\n  return kg * 2.20462262;\n};\n\nexport const lbs2kg = (lbs: number): number => {\n  return lbs / 2.20462262;\n};\n\n// Renders a weight (kg or lbs) for display, rounding to two decimal places,\n// hiding unnecessary zeros on the right.\n//\n// This rounding behavior eliminates all the visual inconsistencies of lbs->kg\n// conversion -- for example, how 112.5lbs isn't representable exactly in kg.\nexport const displayWeight = (weight: number, lang?: Language): string => {\n  const locale = lang === undefined ? \"en\" : lang;\n\n  // This matches the OpenPowerlifting WeightKg::as_lbs() conversion logic.\n  // First, round to the hundredth place, stored as an integer.\n  let rounded = Math.round(weight * 100);\n\n  // If the fractional part is close to another tenth, add a correction.\n  // This happens due to floating-point imprecision.\n  if (rounded % 10 === 9) {\n    // Add 0.01 (still stored as an integer).\n    rounded += 1;\n  }\n\n  // Convert back to normal floating-point without truncation.\n  rounded = rounded / 100;\n\n  return new Intl.NumberFormat(locale, { useGrouping: false, maximumFractionDigits: 2 }).format(rounded);\n};\n\n// Renders a weight (kg or lbs) for display, truncating to one decimal place.\n// hiding unnecessary zeros on the right.\nexport const displayWeightOnePlace = (weight: number, lang?: Language): string => {\n  const locale = lang === undefined ? \"en\" : lang;\n\n  // This matches the OpenPowerlifting WeightKg::as_lbs() conversion logic.\n  // First, round to the hundredth place, stored as an integer.\n  let rounded = Math.round(weight * 100);\n\n  // If the fractional part is close to another tenth, add a correction.\n  // This happens due to floating-point imprecision.\n  if (rounded % 10 === 9) {\n    // Add 0.01 (still stored as an integer).\n    rounded += 1;\n  }\n\n  // Truncate to the tenth place, then convert back to normal floating-point.\n  const truncated = Math.trunc(rounded / 10) / 10;\n\n  return new Intl.NumberFormat(locale, { useGrouping: false, maximumFractionDigits: 1 }).format(truncated);\n};\n\n// Points display with two fixed decimal places (including zeros).\nexport const displayPoints = (points: number, lang: Language): string => {\n  return new Intl.NumberFormat(lang, {\n    useGrouping: false,\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2\n  }).format(points);\n};\n\n// Display a generic number that is neither a weight nor points.\n// This is intended for things like ages, day numbers, etc.\nexport const displayNumber = (number: number, lang: Language): string => {\n  return new Intl.NumberFormat(lang).format(number);\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Color codes must be in upper-case to match the ColorPicker output.\nexport const PlateColors = {\n  PLATE_DEFAULT_BLACK: \"#000000\",\n  PLATE_DEFAULT_WHITE: \"#FFFFFF\",\n  PLATE_DEFAULT_BLUE: \"#4990E2\",\n  PLATE_DEFAULT_GREEN: \"#2AB003\",\n  PLATE_DEFAULT_GRAY: \"#575757\",\n  PLATE_DEFAULT_RED: \"#FF0000\",\n  PLATE_DEFAULT_YELLOW: \"#FFEF2A\",\n  PLATE_DEFAULT_ORANGE: \"#F25A1D\",\n  PLATE_DEFAULT_PINK: \"#E81FA5\",\n  PLATE_DEFAULT_PURPLE: \"#9B16F2\"\n};\n\nexport type PlateColorsType = keyof typeof PlateColors;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { localDateToIso8601 } from \"../logic/date\";\nimport { kg2lbs, lbs2kg, displayWeight } from \"../logic/units\";\nimport { PlateColors } from \"../constants/plateColors\";\n\nimport { MeetSetupAction, OverwriteStoreAction } from \"../types/actionTypes\";\nimport { Language, Plate } from \"../types/dataTypes\";\nimport { MeetState } from \"../types/stateTypes\";\nimport { checkExhausted } from \"../types/utils\";\n\nconst defaultPlatformsOnDay = 1;\n\nconst defaultBarAndCollarsWeightKg = 25; // Assuming metal 2.5kg collars.\nconst defaultBarAndCollarsWeightLbs = 45; // Assuming plastic collars.\n\n// Default kg plates, allowing for increments of 0.5kg.\nconst defaultPlatesKg: Array<Plate> = [\n  { weightKg: 50, pairCount: 0, color: PlateColors.PLATE_DEFAULT_GREEN },\n  { weightKg: 25, pairCount: 8, color: PlateColors.PLATE_DEFAULT_RED },\n  { weightKg: 20, pairCount: 1, color: PlateColors.PLATE_DEFAULT_BLUE },\n  { weightKg: 15, pairCount: 1, color: PlateColors.PLATE_DEFAULT_YELLOW },\n  { weightKg: 10, pairCount: 1, color: PlateColors.PLATE_DEFAULT_GREEN },\n  { weightKg: 5, pairCount: 1, color: PlateColors.PLATE_DEFAULT_BLACK },\n  { weightKg: 2.5, pairCount: 1, color: PlateColors.PLATE_DEFAULT_BLACK },\n  { weightKg: 1.25, pairCount: 1, color: PlateColors.PLATE_DEFAULT_BLACK },\n  { weightKg: 1, pairCount: 1, color: PlateColors.PLATE_DEFAULT_BLUE },\n  { weightKg: 0.75, pairCount: 1, color: PlateColors.PLATE_DEFAULT_RED },\n  { weightKg: 0.5, pairCount: 1, color: PlateColors.PLATE_DEFAULT_GREEN },\n  { weightKg: 0.25, pairCount: 1, color: PlateColors.PLATE_DEFAULT_BLUE }\n];\n\n// Default lbs plates, allowing for increments of 1lb.\nconst defaultPlatesLbs: Array<Plate> = [\n  { weightKg: lbs2kg(100), pairCount: 0, color: PlateColors.PLATE_DEFAULT_GREEN },\n  { weightKg: lbs2kg(55), pairCount: 0, color: PlateColors.PLATE_DEFAULT_RED },\n  { weightKg: lbs2kg(45), pairCount: 8, color: PlateColors.PLATE_DEFAULT_GRAY },\n  { weightKg: lbs2kg(35), pairCount: 0, color: PlateColors.PLATE_DEFAULT_GRAY },\n  { weightKg: lbs2kg(25), pairCount: 1, color: PlateColors.PLATE_DEFAULT_GRAY },\n  { weightKg: lbs2kg(10), pairCount: 2, color: PlateColors.PLATE_DEFAULT_GRAY },\n  { weightKg: lbs2kg(5), pairCount: 1, color: PlateColors.PLATE_DEFAULT_GRAY },\n  { weightKg: lbs2kg(2.5), pairCount: 1, color: PlateColors.PLATE_DEFAULT_GRAY },\n  { weightKg: lbs2kg(1.25), pairCount: 1, color: PlateColors.PLATE_DEFAULT_GRAY },\n  { weightKg: lbs2kg(0.5), pairCount: 2, color: PlateColors.PLATE_DEFAULT_GRAY }\n];\n\nconst initialState: MeetState = {\n  // Sanction information.\n  name: \"\",\n  country: \"\",\n  state: \"\",\n  city: \"\",\n  federation: \"\",\n  date: localDateToIso8601(new Date()),\n  lengthDays: 1,\n  platformsOnDays: [defaultPlatformsOnDay],\n\n  // Competition Rules.\n  divisions: [],\n  weightClassesKgMen: [],\n  weightClassesKgWomen: [],\n  weightClassesKgMx: [],\n  formula: \"Wilks\",\n  ageCoefficients: \"FosterMcCulloch\",\n  combineSleevesAndWraps: false,\n  allow4thAttempts: true,\n\n  // Weights and Loading Setup.\n  inKg: true,\n  showAlternateUnits: true,\n  squatBarAndCollarsWeightKg: defaultBarAndCollarsWeightKg,\n  benchBarAndCollarsWeightKg: defaultBarAndCollarsWeightKg,\n  deadliftBarAndCollarsWeightKg: defaultBarAndCollarsWeightKg,\n  plates: defaultPlatesKg\n};\n\n// Given a sorted list of weight classes (in kg) and a bodyweight (in kg),\n// return a string describing the weight class.\nexport const getWeightClassStr = (classes: Array<number>, bodyweightKg: number, language?: Language): string => {\n  if (bodyweightKg === 0) return \"\";\n  if (classes.length === 0) return \"\";\n\n  for (let i = 0; i < classes.length; i++) {\n    if (bodyweightKg <= classes[i]) {\n      return displayWeight(classes[i], language);\n    }\n  }\n  return displayWeight(classes[classes.length - 1], language) + \"+\";\n};\n\n// Converts a kg weightclass to pounds.\n//\n// For example, the 90kg class is technically 198.41lbs,\n// but this will return \"198\".\nexport const wtclsStrKg2Lbs = (kgcls: string): string => {\n  const shw: boolean = kgcls.endsWith(\"+\");\n  const asNumber = Number(kgcls.replace(\"+\", \"\"));\n\n  // Convert to pounds and round down.\n  let truncated = Math.floor(kg2lbs(asNumber));\n\n  // This works for everything but the 183 class, which\n  // rounds down to 182.\n  if (truncated === 182) {\n    truncated = 183;\n  }\n\n  return shw ? String(truncated) + \"+\" : String(truncated);\n};\n\n// Given a sorted list of weight classes (in kg) and a bodyweight (in kg),\n// return a string describing the weight class.\n//\n// This is a separate method because it turns out that many exact translations\n// of kilo values are not what the audience expects for traditionally-reported\n// pounds classes. So a bunch of rounding must occur.\nexport const getWeightClassLbsStr = (classes: Array<number>, bodyweightKg: number): string => {\n  if (bodyweightKg === 0) return \"\";\n  if (classes.length === 0) return \"\";\n\n  for (let i = 0; i < classes.length; i++) {\n    if (bodyweightKg <= classes[i]) {\n      return wtclsStrKg2Lbs(String(classes[i]));\n    }\n  }\n  return wtclsStrKg2Lbs(String(classes[classes.length - 1])) + \"+\";\n};\n\ntype Action = MeetSetupAction | OverwriteStoreAction;\n\nexport default (state: MeetState = initialState, action: Action): MeetState => {\n  switch (action.type) {\n    case \"SET_MEET_NAME\":\n      return { ...state, name: action.name };\n\n    case \"SET_FORMULA\":\n      return { ...state, formula: action.formula };\n\n    case \"SET_FEDERATION\":\n      return { ...state, federation: action.federation };\n\n    case \"SET_DIVISIONS\":\n      return { ...state, divisions: action.divisions };\n\n    case \"SET_MEET_DATE\":\n      return { ...state, date: action.date };\n\n    case \"SET_LENGTH_DAYS\": {\n      const numDays = Number(action.length);\n\n      if (numDays >= state.platformsOnDays.length) {\n        const diff = numDays - state.platformsOnDays.length;\n\n        let newPlatformsOnDays: Array<number> = state.platformsOnDays.slice();\n        for (let i = 0; i < diff; i++) {\n          newPlatformsOnDays.push(defaultPlatformsOnDay);\n        }\n\n        return { ...state, lengthDays: numDays, platformsOnDays: newPlatformsOnDays };\n      }\n      return { ...state, lengthDays: numDays };\n    }\n\n    case \"SET_PLATFORM_COUNT\": {\n      const day = Number(action.day);\n      const count = Number(action.count);\n\n      let newPlatformsOnDays: Array<number> = state.platformsOnDays.slice();\n      newPlatformsOnDays[day - 1] = count;\n      return { ...state, platformsOnDays: newPlatformsOnDays };\n    }\n\n    case \"SET_IN_KG\": {\n      // Changing the units also changes the loading, so re-initialize from defaults.\n      const defaultPlates = action.inKg ? defaultPlatesKg : defaultPlatesLbs;\n      const defaultBar = action.inKg ? defaultBarAndCollarsWeightKg : lbs2kg(defaultBarAndCollarsWeightLbs);\n      return {\n        ...state,\n        inKg: action.inKg,\n        plates: defaultPlates,\n        squatBarAndCollarsWeightKg: defaultBar,\n        benchBarAndCollarsWeightKg: defaultBar,\n        deadliftBarAndCollarsWeightKg: defaultBar\n      };\n    }\n\n    case \"SET_WEIGHTCLASSES\": {\n      const sex = action.sex;\n      const classesKg = action.classesKg;\n      switch (sex) {\n        case \"M\":\n          return { ...state, weightClassesKgMen: classesKg };\n        case \"F\":\n          return { ...state, weightClassesKgWomen: classesKg };\n        case \"Mx\":\n          return { ...state, weightClassesKgMx: classesKg };\n        default:\n          checkExhausted(sex);\n          return state;\n      }\n    }\n\n    case \"SET_BAR_AND_COLLARS_WEIGHT_KG\": {\n      switch (action.lift) {\n        case \"S\":\n          return { ...state, squatBarAndCollarsWeightKg: action.weightKg };\n        case \"B\":\n          return { ...state, benchBarAndCollarsWeightKg: action.weightKg };\n        case \"D\":\n          return { ...state, deadliftBarAndCollarsWeightKg: action.weightKg };\n        default:\n          checkExhausted(action.lift);\n          return state;\n      }\n    }\n\n    case \"SET_PLATE_CONFIG\": {\n      const { weightKg, pairCount, color } = action;\n\n      // Find the index of the object in the platesOnSide array by comparing weights.\n      const index = state.plates.findIndex(p => p.weightKg === weightKg);\n\n      // Clone the array.\n      let newPlates: Array<Plate> = state.plates.slice();\n\n      // Replace with a new object in the new array.\n      newPlates[index] = { weightKg, pairCount, color };\n\n      return { ...state, plates: newPlates };\n    }\n\n    case \"UPDATE_MEET\": {\n      const changes = action.changes;\n\n      // Make a new MeetState with just the changes overwritten.\n      let newState = Object.assign({}, state);\n      return Object.assign(newState, changes);\n    }\n\n    case \"OVERWRITE_STORE\":\n      return action.store.meet;\n\n    default:\n      checkExhausted(action);\n      return state;\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines logic for creating and working with Entry objects.\n\nimport { Entry, Lift, Event, FieldKg, FieldStatus } from \"../types/dataTypes\";\nimport { checkExhausted } from \"../types/utils\";\n\n// Length of {squat,bench,deadlift}{Kg,Status} in each Entry.\nexport const MAX_ATTEMPTS = 5;\n\nexport const newDefaultEntry = (id: number): Entry => {\n  return {\n    // Bookkeeping internal information for OpenLifter.\n    id: id, // The global unique ID of this registration.\n\n    // Information about when the lifter is scheduled to lift.\n    day: 1, // The day on which the lifter is lifting.\n    platform: 1, // The platform on which the lifter is lifting.\n    flight: \"A\", // The flight in which the lifter is lifting.\n\n    // Information about the lifter themselves.\n    name: \"\", // The lifter's name.\n    sex: \"M\", // The lifter's sex.\n    birthDate: \"\", // The lifter's birthdate (YYYY-MM-DD).\n    age: 0, // The lifter's age in years\n    country: \"\", // Lifter's home country, or blank.\n    state: \"\", // Lifter's home state, or blank.\n    intendedWeightClassKg: \"\", // The weightclass for which the lifter registered.\n    equipment: \"Sleeves\", // The equipment category for which the lifter registered.\n    divisions: [], // A list of divisions the lifter entered.\n    events: [], // A list of events the lifter entered.\n\n    // Metadata about the lifter, assigned by the meet director.\n    lot: 0, // The lifter's lot number, for breaking ties in lifting order.\n    memberId: \"\", // Optional federation MemberID, for reporting in results.\n    paid: false, // Used by the meet director for tracking whether the lifter paid.\n    team: \"\", // Optional. Only used in the final results export.\n    notes: \"\", // Free-form text for the meet director to use as a scratchpad.\n\n    // Information added on the \"Weigh-ins\" page.\n    // But we might as well track it in this object.\n    bodyweightKg: 0.0,\n    squatRackInfo: \"\", // A freeform string for the benefit of the loaders.\n    benchRackInfo: \"\", // A freeform string for the benefit of the loaders.\n\n    // Lifting information. Weights always stored internally in kg.\n    squatKg: [0.0, 0.0, 0.0, 0.0, 0.0],\n    benchKg: [0.0, 0.0, 0.0, 0.0, 0.0],\n    deadliftKg: [0.0, 0.0, 0.0, 0.0, 0.0],\n\n    // Lifting information, success state:\n    //  -1 => No Lift.\n    //   0 => Not Yet Done.\n    //   1 => Good Lift.\n    //\n    // Note that this system has the property where corresponding (kg*status)\n    // produces the SquatXKg as expected by the main OpenPowerlifting CSV format.\n    squatStatus: [0, 0, 0, 0, 0],\n    benchStatus: [0, 0, 0, 0, 0],\n    deadliftStatus: [0, 0, 0, 0, 0]\n  };\n};\n\n// Gets the lifter's age, possibly by inferring it from birthDate.\n// If the age couldn't be determined, returns 0.\nexport const getAge = (entry: Entry, meetDate: string): number => {\n  // If the user overrode the Age manually, just take that.\n  if (entry.age > 0) return entry.age;\n\n  // If no birthDate is provided, nothing more can be done.\n  if (entry.birthDate === \"\") return 0;\n\n  // Infer the age given {meetDate, birthDate, day}.\n  let [my, mm, md] = meetDate.split(\"-\").map(s => Number(s));\n  let [by, bm, bd] = entry.birthDate.split(\"-\").map(s => Number(s));\n\n  // Advance the day counter if necessary.\n  // FIXME: This logic assumes that each month has exactly 31 days.\n  if (entry.day > 1) {\n    md += entry.day - 1;\n    if (md > 31) {\n      md -= 31;\n      mm += 1;\n    }\n    if (mm > 12) {\n      md -= 12;\n      my += 1;\n    }\n  }\n\n  const years = my - by;\n  if (years <= 0) return 0;\n\n  // If their birthday occurred in the most recent year, just diff years.\n  if (bm < mm || (bm == mm && bd <= md)) {\n    return years;\n  }\n\n  // Otherwise, their birthday did not occur yet, so this year doesn't count.\n  return years - 1;\n};\n\n// Gets the best squat, including extra attempts that don't count for the total.\nexport const getBest5SquatKg = (entry: Entry): number => {\n  let best3SquatKg = 0.0;\n  for (let i = 0; i < MAX_ATTEMPTS; i++) {\n    if (entry.squatStatus[i] === 1) {\n      best3SquatKg = Math.max(best3SquatKg, entry.squatKg[i]);\n    }\n  }\n  return best3SquatKg;\n};\n\n// Gets the best bench, including extra attempts that don't count for the total.\nexport const getBest5BenchKg = (entry: Entry): number => {\n  let best3BenchKg = 0.0;\n  for (let i = 0; i < MAX_ATTEMPTS; i++) {\n    if (entry.benchStatus[i] === 1) {\n      best3BenchKg = Math.max(best3BenchKg, entry.benchKg[i]);\n    }\n  }\n  return best3BenchKg;\n};\n\n// Gets the best deadlift, including extra attempts that don't count for the total.\nexport const getBest5DeadliftKg = (entry: Entry): number => {\n  let best3DeadliftKg = 0.0;\n  for (let i = 0; i < MAX_ATTEMPTS; i++) {\n    if (entry.deadliftStatus[i] === 1) {\n      best3DeadliftKg = Math.max(best3DeadliftKg, entry.deadliftKg[i]);\n    }\n  }\n  return best3DeadliftKg;\n};\n\n// The ProjectedTotal optimistically assumes that lifters will get *first* attempts\n// that have not yet been taken. It is used for calculating a total while lifters\n// are still squatting and benching.\n//\n// 2nd and 3rd attempts are treated normally, where they only count toward the\n// total if they have been successful.\nexport const getProjectedTotalKg = (entry: Entry): number => {\n  let best3Squat = 0.0;\n  if (entry.squatStatus[0] >= 0) best3Squat = Math.max(best3Squat, entry.squatKg[0]);\n  if (entry.squatStatus[1] > 0) best3Squat = Math.max(best3Squat, entry.squatKg[1]);\n  if (entry.squatStatus[2] > 0) best3Squat = Math.max(best3Squat, entry.squatKg[2]);\n\n  let best3Bench = 0.0;\n  if (entry.benchStatus[0] >= 0) best3Bench = Math.max(best3Bench, entry.benchKg[0]);\n  if (entry.benchStatus[1] > 0) best3Bench = Math.max(best3Bench, entry.benchKg[1]);\n  if (entry.benchStatus[2] > 0) best3Bench = Math.max(best3Bench, entry.benchKg[2]);\n\n  let best3Dead = 0.0;\n  if (entry.deadliftStatus[0] >= 0) best3Dead = Math.max(best3Dead, entry.deadliftKg[0]);\n  if (entry.deadliftStatus[1] > 0) best3Dead = Math.max(best3Dead, entry.deadliftKg[1]);\n  if (entry.deadliftStatus[2] > 0) best3Dead = Math.max(best3Dead, entry.deadliftKg[2]);\n\n  // If there was no attempted success for a single lift, return zero.\n  if (best3Squat === 0 && entry.squatStatus[0] === -1) return 0.0;\n  if (best3Bench === 0 && entry.benchStatus[0] === -1) return 0.0;\n  if (best3Dead === 0 && entry.deadliftStatus[0] === -1) return 0.0;\n\n  return best3Squat + best3Bench + best3Dead;\n};\n\nexport const getProjectedEventTotalKg = (entry: Entry, event: Event): number => {\n  let best3Squat = 0.0;\n  if (event.includes(\"S\")) {\n    if (entry.squatStatus[0] >= 0) best3Squat = Math.max(best3Squat, entry.squatKg[0]);\n    if (entry.squatStatus[1] > 0) best3Squat = Math.max(best3Squat, entry.squatKg[1]);\n    if (entry.squatStatus[2] > 0) best3Squat = Math.max(best3Squat, entry.squatKg[2]);\n  }\n\n  let best3Bench = 0.0;\n  if (event.includes(\"B\")) {\n    if (entry.benchStatus[0] >= 0) best3Bench = Math.max(best3Bench, entry.benchKg[0]);\n    if (entry.benchStatus[1] > 0) best3Bench = Math.max(best3Bench, entry.benchKg[1]);\n    if (entry.benchStatus[2] > 0) best3Bench = Math.max(best3Bench, entry.benchKg[2]);\n  }\n\n  let best3Dead = 0.0;\n  if (event.includes(\"D\")) {\n    if (entry.deadliftStatus[0] >= 0) best3Dead = Math.max(best3Dead, entry.deadliftKg[0]);\n    if (entry.deadliftStatus[1] > 0) best3Dead = Math.max(best3Dead, entry.deadliftKg[1]);\n    if (entry.deadliftStatus[2] > 0) best3Dead = Math.max(best3Dead, entry.deadliftKg[2]);\n  }\n\n  // If there was no attempted success for a single lift, return zero.\n  if (best3Squat === 0 && entry.squatStatus[0] === -1) return 0.0;\n  if (best3Bench === 0 && entry.benchStatus[0] === -1) return 0.0;\n  if (best3Dead === 0 && entry.deadliftStatus[0] === -1) return 0.0;\n\n  return best3Squat + best3Bench + best3Dead;\n};\n\nexport const getBest3SquatKg = (entry: Entry): number => {\n  let best3Squat = 0.0;\n  if (entry.squatStatus[0] > 0) best3Squat = Math.max(best3Squat, entry.squatKg[0]);\n  if (entry.squatStatus[1] > 0) best3Squat = Math.max(best3Squat, entry.squatKg[1]);\n  if (entry.squatStatus[2] > 0) best3Squat = Math.max(best3Squat, entry.squatKg[2]);\n  return best3Squat;\n};\n\nexport const getBest3BenchKg = (entry: Entry): number => {\n  let best3Bench = 0.0;\n  if (entry.benchStatus[0] > 0) best3Bench = Math.max(best3Bench, entry.benchKg[0]);\n  if (entry.benchStatus[1] > 0) best3Bench = Math.max(best3Bench, entry.benchKg[1]);\n  if (entry.benchStatus[2] > 0) best3Bench = Math.max(best3Bench, entry.benchKg[2]);\n  return best3Bench;\n};\n\nexport const getBest3DeadliftKg = (entry: Entry): number => {\n  let best3Dead = 0.0;\n  if (entry.deadliftStatus[0] > 0) best3Dead = Math.max(best3Dead, entry.deadliftKg[0]);\n  if (entry.deadliftStatus[1] > 0) best3Dead = Math.max(best3Dead, entry.deadliftKg[1]);\n  if (entry.deadliftStatus[2] > 0) best3Dead = Math.max(best3Dead, entry.deadliftKg[2]);\n  return best3Dead;\n};\n\n// The Total is the sum of best of the first 3 attempts of each lift.\nexport const getFinalTotalKg = (entry: Entry): number => {\n  const best3Squat = getBest3SquatKg(entry);\n  const best3Bench = getBest3BenchKg(entry);\n  const best3Dead = getBest3DeadliftKg(entry);\n\n  // If there was no attempted success for a single lift, return zero.\n  if (best3Squat === 0 && entry.squatStatus[0] === -1) return 0.0;\n  if (best3Bench === 0 && entry.benchStatus[0] === -1) return 0.0;\n  if (best3Dead === 0 && entry.deadliftStatus[0] === -1) return 0.0;\n\n  return best3Squat + best3Bench + best3Dead;\n};\n\n// Restricts the total calculation to just for the specified Event.\nexport const getFinalEventTotalKg = (entry: Entry, event: Event): number => {\n  let best3Squat = 0.0;\n  if (event.includes(\"S\")) {\n    best3Squat = getBest3SquatKg(entry);\n    if (best3Squat === 0) return 0.0;\n  }\n\n  let best3Bench = 0.0;\n  if (event.includes(\"B\")) {\n    best3Bench = getBest3BenchKg(entry);\n    if (best3Bench === 0) return 0.0;\n  }\n\n  let best3Dead = 0.0;\n  if (event.includes(\"D\")) {\n    best3Dead = getBest3DeadliftKg(entry);\n    if (best3Dead === 0) return 0.0;\n  }\n\n  return best3Squat + best3Bench + best3Dead;\n};\n\n// Filter entries to only get lifters that are lifting on a given day\nexport const getLiftersOnDay = (entries: Array<Entry>, day: number): Array<Entry> => {\n  if (!entries) {\n    return [];\n  }\n  return entries.filter(entry => {\n    return entry.day === day;\n  });\n};\n\n// Convert a lift like \"S\" to the kg array field name, like \"squatKg\".\nexport const liftToAttemptFieldName = (lift: Lift): FieldKg => {\n  switch (lift) {\n    case \"S\":\n      return \"squatKg\";\n    case \"B\":\n      return \"benchKg\";\n    case \"D\":\n      return \"deadliftKg\";\n    default:\n      checkExhausted(lift);\n      return \"squatKg\";\n  }\n};\n\n// Convert a lift like \"S\" to the status array field name, like \"squatStatus\".\nexport const liftToStatusFieldName = (lift: Lift): FieldStatus => {\n  switch (lift) {\n    case \"S\":\n      return \"squatStatus\";\n    case \"B\":\n      return \"benchStatus\";\n    case \"D\":\n      return \"deadliftStatus\";\n    default:\n      checkExhausted(lift);\n      return \"squatStatus\";\n  }\n};\n\n// Whether the Entry has taken any attempts.\nexport const entryHasLifted = (entry: Entry): boolean => {\n  if (entry.squatStatus[0] !== 0) return true;\n  if (entry.benchStatus[0] !== 0) return true;\n  if (entry.deadliftStatus[0] !== 0) return true;\n  return false;\n};\n\n// Whether any Entry has taken any attempts on the given (day, platform). O(n).\nexport const liftingPresentOnPlatform = (entries: Array<Entry>, day: number, platform: number): boolean => {\n  for (let i = 0; i < entries.length; i++) {\n    const entry = entries[i];\n    if (entry.day !== day || entry.platform !== platform) continue;\n    if (entryHasLifted(entry)) return true;\n  }\n  return false;\n};\n\n// Given an array of how many platforms are on each day and the Entries,\n// returns an array of arrays of booleans, such that array[day-1][platform-1] is\n// true iff at least one Entry corresponding to that (day, platform) has\n// taken an attempt.\nexport const getWhetherPlatformsHaveLifted = (\n  platformsOnDays: Array<number>,\n  entries: Array<Entry>\n): Array<Array<boolean>> => {\n  let ret = [];\n  for (let day = 1; day <= platformsOnDays.length; day++) {\n    const platformsOnDay = platformsOnDays[day - 1];\n    let acc = [];\n    for (let platform = 1; platform <= platformsOnDay; platform++) {\n      acc.push(liftingPresentOnPlatform(entries, day, platform));\n    }\n    ret.push(acc);\n  }\n  return ret;\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { newDefaultEntry, liftToAttemptFieldName, liftToStatusFieldName } from \"../logic/entry\";\nimport { RegistrationAction, OverwriteStoreAction, EnterAttemptAction, MarkLiftAction } from \"../types/actionTypes\";\nimport { Entry, Lift, FieldKg } from \"../types/dataTypes\";\nimport { RegistrationState } from \"../types/stateTypes\";\nimport { checkExhausted } from \"../types/utils\";\n\nconst initialState: RegistrationState = {\n  // The next unique ID to assign.\n  //\n  // This is stored in global state to handle the case of deleting registration\n  // rows during the course of lifting.\n  //\n  // A large number is used as the initial value to make it clear that this is\n  // specifically not an index into the `entries` array.\n  nextEntryId: 5000,\n\n  // Entry objects in the order they appear on the Registration page.\n  // This array owns all registration information.\n  entries: [],\n\n  // Hash from unique ID to `entries` array index.\n  //\n  // This is for the benefit of pages other than the Registration page.\n  // Because the sort order of the `entries` array can change arbitrarily,\n  // the other pages remember globally-unique identifiers for each registration,\n  // instead of a simple array index.\n  //\n  // This lookup table allows mapping those identifiers to whatever\n  // the current location of that data is in the canonical `entries` store.\n  lookup: {}\n};\n\ntype Action = RegistrationAction | EnterAttemptAction | MarkLiftAction | OverwriteStoreAction;\n\ntype NumberLookup = {\n  [id: number]: number;\n};\n\nexport default (state: RegistrationState = initialState, action: Action): RegistrationState => {\n  switch (action.type) {\n    case \"NEW_REGISTRATION\": {\n      // The object provides optional properties that can overwrite the default.\n      // Although the UI doesn't pass properties this way, debugging code does.\n      const obj = action.overwriteDefaults;\n\n      // Generate an entries array with one more item (without modifying the orginal).\n      // Object.assign() allows `obj` to overwrite defaults if present.\n      let entries: Array<Entry> = state.entries.slice();\n      let newEntry = newDefaultEntry(state.nextEntryId);\n\n      // If a previous entry exists, pre-populate some information from it.\n      if (entries.length > 0) {\n        const previousEntry = entries[entries.length - 1];\n        newEntry.day = previousEntry.day;\n        newEntry.platform = previousEntry.platform;\n        newEntry.flight = previousEntry.flight;\n      }\n\n      // Overwrite any newEntry properties with those given in obj.\n      entries.push(Object.assign(newEntry, obj));\n\n      // Since a new entry was added, generate a new 'lookup' object,\n      // mapping from the globally-unique EntryId to the array index.\n      // Specify type explicitly here so that we can mutate it\n      let lookup: NumberLookup = Object.assign({}, state.lookup);\n      lookup[state.nextEntryId] = entries.length - 1;\n\n      return {\n        ...state,\n        nextEntryId: state.nextEntryId + 1,\n        entries: entries,\n        lookup: lookup\n      };\n    }\n\n    case \"DELETE_REGISTRATION\": {\n      const entryId = action.entryId;\n\n      // Generate an entries array without the given item.\n      let entries: Array<Entry> = state.entries.filter((item, index) => item.id !== entryId);\n\n      // Since the entry was deleted from anywhere in the array,\n      // construct a new lookup table from scratch.\n      let lookup: NumberLookup = {};\n\n      for (let i = 0; i < entries.length; i++) {\n        let entry = entries[i];\n        lookup[entry.id] = i;\n      }\n\n      return {\n        ...state,\n        entries: entries,\n        lookup: lookup\n      };\n    }\n\n    case \"UPDATE_REGISTRATION\": {\n      const entryId = action.entryId;\n      const changes = action.changes;\n\n      // Clone the entries array, since one entry will reference a new object.\n      let entries: Array<Entry> = state.entries.slice();\n\n      // Make a new object with just the changes overwritten,\n      // and reference that object from the new array.\n      const index = entries.findIndex(obj => obj.id === entryId);\n      let newEntry = Object.assign({}, entries[index]);\n      entries[index] = Object.assign(newEntry, changes);\n\n      return {\n        ...state,\n        entries: entries\n      };\n    }\n\n    case \"ENTER_ATTEMPT\": {\n      // Action parameters, with expected types.\n      const entryId = Number(action.entryId);\n      const lift: Lift = action.lift;\n      const attemptOneIndexed = Number(action.attemptOneIndexed);\n      const weightKg = Number(action.weightKg);\n\n      const field: FieldKg = liftToAttemptFieldName(lift);\n\n      // Clone the entries array, since one slot will reference a new object.\n      let newEntries: Array<Entry> = state.entries.slice();\n      const index = newEntries.findIndex(obj => obj.id === entryId);\n      const oldEntry = newEntries[index];\n\n      // Make a copy of the attempts array containing the new attempt.\n      let newarray = oldEntry[field].slice();\n      newarray[attemptOneIndexed - 1] = weightKg;\n\n      // Put that new attempts array into an object so we can use Object.assign().\n      let newfields: Partial<Entry> = {};\n      newfields[field] = newarray;\n\n      // Make a new entry from the old entry, with the attempts field overwritten.\n      newEntries[index] = Object.assign(oldEntry, newfields);\n\n      return {\n        ...state,\n        entries: newEntries\n      };\n    }\n\n    case \"MARK_LIFT\": {\n      const entryId = Number(action.entryId);\n      const lift: Lift = action.lift;\n      const attemptOneIndexed = Number(action.attemptOneIndexed);\n      const success = Boolean(action.success);\n\n      // Map true to '1' and false to '-1'.\n      const status = success === true ? 1 : -1;\n\n      const fieldStatus = liftToStatusFieldName(lift);\n\n      // Clone the entries array, since one slot will reference a new object.\n      let newEntries: Array<Entry> = state.entries.slice();\n      const index = newEntries.findIndex(obj => obj.id === entryId);\n      const oldEntry = newEntries[index];\n\n      // Make a copy of the status array containing the new status.\n      let newarray = oldEntry[fieldStatus].slice();\n      newarray[attemptOneIndexed - 1] = status;\n\n      // Put that new array into an object so we can use Object.assign().\n      let newfields: Partial<Entry> = {};\n      newfields[fieldStatus] = newarray;\n\n      // Make a new entry from the old entry, with the status field overwritten.\n      let newEntry = Object.assign({}, oldEntry);\n      newEntries[index] = Object.assign(newEntry, newfields);\n\n      return {\n        ...state,\n        entries: newEntries\n      };\n    }\n\n    // Caused by clicking a \"Merge\" button on the Results page.\n    case \"MERGE_PLATFORM\": {\n      const day: number = action.day;\n      const platform: number = action.platform;\n      const platformEntries: Array<Entry> = action.platformEntries;\n\n      // Filter out state entries assigned to the merged (day, platform).\n      let newEntries = state.entries.filter(e => {\n        return !(e.day === day && e.platform === platform);\n      });\n\n      // Get the nextEntryId: the merged entries will be reassigned IDs.\n      let nextEntryId: number = state.nextEntryId;\n\n      // For each incoming Entry, copy the object, assign a new ID,\n      // and place it in the newEntries array.\n      for (let i = 0; i < platformEntries.length; i++) {\n        let entry: Entry = Object.assign({}, platformEntries[i]);\n        entry.id = nextEntryId++;\n        newEntries.push(entry);\n      }\n\n      // Generate an entirely new lookup table.\n      let lookup: NumberLookup = {};\n      for (let i = 0; i < newEntries.length; i++) {\n        lookup[newEntries[i].id] = i;\n      }\n\n      // Return a new object with the new components replaced.\n      return {\n        ...state,\n        nextEntryId: nextEntryId,\n        entries: newEntries,\n        lookup: lookup\n      };\n    }\n\n    case \"OVERWRITE_STORE\":\n      return action.store.registration;\n\n    default:\n      checkExhausted(action);\n      return state;\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Lifting state only tracks manual overrides.\n//\n// Outside of overrides, the state of the meet is fully-calculated by the LiftingView.\n//\n// For safety, correctness, and ease of understanding, the state of the meet is\n// intentionally *not* stored in the global state. It is continuously recalculated.\n//\n// Please do not attempt to store meet state in the Redux store!\n\nimport {\n  MarkLiftAction,\n  SetLiftingGroupAction,\n  OverrideAttemptAction,\n  OverrideEntryIdAction,\n  OverwriteStoreAction,\n  SetTableInfoAction\n} from \"../types/actionTypes\";\nimport { LiftingState } from \"../types/stateTypes\";\nimport { checkExhausted } from \"../types/utils\";\n\nconst initialState: LiftingState = {\n  // Specifies the initial settings for the control widgets on the lifting page.\n  // The intention is that the score table sets these manually.\n  day: 1,\n  platform: 1,\n  flight: \"A\",\n  lift: \"S\",\n\n  // These properties are normally calculated, but exist here as a mechanism\n  // for a one-shot override of the normal logic. After being handled,\n  // they are unset.\n  overrideAttempt: null, // Allows selecting an attempt, even if it's completed.\n  overrideEntryId: null, // Allows selecting a lifter, even if they've already gone.\n\n  // Presentational configuration.\n  columnDivisionWidthPx: 90,\n  columnTeamWidthPx: 90\n};\n\ntype Action =\n  | MarkLiftAction\n  | SetLiftingGroupAction\n  | OverrideAttemptAction\n  | OverrideEntryIdAction\n  | OverwriteStoreAction\n  | SetTableInfoAction;\n\nexport default (state: LiftingState = initialState, action: Action): LiftingState => {\n  switch (action.type) {\n    case \"MARK_LIFT\": {\n      // Unset any overrides, returning to normal lifting flow.\n      return { ...state, overrideAttempt: null, overrideEntryId: null };\n    }\n\n    case \"SET_LIFTING_GROUP\":\n      return {\n        // Keep all the UI customization stuff.\n        ...state,\n\n        // Change all the real state stuff.\n        day: action.day,\n        platform: action.platform,\n        flight: action.flight,\n        lift: action.lift,\n\n        // If the group changes, unset any overrides.\n        overrideAttempt: null,\n        overrideEntryId: null\n      };\n\n    case \"OVERRIDE_ATTEMPT\":\n      return { ...state, overrideAttempt: action.attempt };\n\n    case \"OVERRIDE_ENTRY_ID\":\n      return { ...state, overrideEntryId: action.entryId };\n\n    case \"OVERWRITE_STORE\":\n      return action.store.lifting;\n\n    case \"SET_TABLE_INFO\": {\n      const changes = action.changes;\n\n      // As a safeguard, ensure that fields unrelated to customization\n      // are not overwritten by this action.\n\n      // Make a new object that's state + changes, with changes taking priority.\n      let combined = Object.assign({}, state);\n      Object.assign(combined, changes);\n\n      // Source from this new combined object, with fields unrelated to customization\n      // deferring to the original state.\n      //\n      // So that means:\n      //  - Fields unrelated to customization will be the same as in 'state'.\n      //  - Customization fields will be from 'combined', which includes all fields\n      //    and allowed the 'changes' object to overwrite any of them.\n      return {\n        ...combined,\n\n        day: state.day,\n        platform: state.platform,\n        flight: state.flight,\n        lift: state.lift,\n\n        overrideAttempt: state.overrideAttempt,\n        overrideEntryId: state.overrideEntryId\n      };\n    }\n\n    default:\n      checkExhausted(action);\n      return state;\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { combineReducers } from \"redux\";\n\nimport versionsReducer from \"./versionsReducer\";\nimport languageReducer from \"./languageReducer\";\nimport meetReducer from \"./meetReducer\";\nimport registrationReducer from \"./registrationReducer\";\nimport liftingReducer from \"./liftingReducer\";\n\n// Using combineReducers() guarantees that each part of the state object\n// fully bears the responsibility of managing itself by only sending a\n// subset of the state to the reducer.\n//\n// For example, the meetReducer() receives a new 'state' object\n// equal to 'state.meet' from the root. Because there is no way to access\n// the root state object from a child state object, the meetReducer() is\n// fully-encapsulated, allowing for sane reasoning about effects on global state.\nexport default combineReducers({\n  versions: versionsReducer,\n  language: languageReducer,\n  meet: meetReducer,\n  registration: registrationReducer,\n  lifting: liftingReducer\n});\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { createStore, applyMiddleware } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers/rootReducer\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport default function configureStore(initialState = {}) {\n  let store = createStore(persistedReducer, applyMiddleware(thunk));\n  let persistor = persistStore(store);\n  return { store, persistor };\n}\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport de from \"./de.json\";\nimport eo from \"./eo.json\";\nimport en from \"./en.json\";\nimport es from \"./es.json\";\nimport hr from \"./hr.json\";\nimport lt from \"./lt.json\";\nimport nl from \"./nl.json\";\nimport pt from \"./pt.json\";\nimport ru from \"./ru.json\";\nimport tr from \"./tr.json\";\nimport zh_Hans from \"./zh-Hans.json\";\n\nexport default { de, eo, en, es, hr, lt, nl, pt, ru, tr, \"zh-Hans\": zh_Hans };\n","// vim: set ts=2 sts=2 sw=2 et:\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { IntlProvider } from \"react-intl\";\nimport translations from \"../../translations\";\n\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { Language } from \"../../types/dataTypes\";\n\ninterface StateProps {\n  language: Language;\n}\n\ntype Props = StateProps;\n\nclass OpenLifterIntlProvider extends React.Component<Props> {\n  render() {\n    const language = this.props.language;\n    if (typeof language !== \"string\") {\n      throw new Error(\"language is not a string\");\n    }\n\n    // Load our translations from the json files\n    // TODO: This typing could be nicer, we should be able to state that es/eo = {}, en = undefined\n    const messages = (translations as any)[language];\n\n    return (\n      // This is going to wrap any children passed to this component with an IntlProvider\n      // This will put translations of all of our child components in our app\n      <IntlProvider locale={language} defaultLocale=\"en\" key={language} messages={messages}>\n        {this.props.children}\n      </IntlProvider>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  language: state.language\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(OpenLifterIntlProvider);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { OverwriteStoreAction } from \"../types/actionTypes\";\nimport { GlobalState } from \"../types/stateTypes\";\n\n// Overwrites the entire Redux store, handled separately by each reducer.\n// This is used to implement \"Load from File\" functionality.\nexport const overwriteStore = (store: GlobalState): OverwriteStoreAction => {\n  return {\n    type: \"OVERWRITE_STORE\",\n    store: store\n  };\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Gets translation strings directly given the current language, without\n// having to thread the IntlContext everywhere.\n//\n// This works because we store the language in the Redux store in addition\n// to in the React context.\n\nimport translations from \"../translations\";\nimport { Equipment, Event, Flight, Language, Sex, TranslationId } from \"../types/dataTypes\";\nimport { checkExhausted } from \"../types/utils\";\nimport { displayWeight } from \"./units\";\n\n// Fetches a simple string from the translations store. No formatting is performed.\nexport const getString = (id: TranslationId, lang: Language): string => {\n  return translations[lang][id];\n};\n\n// Localizes an Equipment value.\nexport const localizeEquipment = (equipment: Equipment, language: Language): string => {\n  switch (equipment) {\n    case \"Bare\":\n      return getString(\"equipment.bare\", language);\n    case \"Sleeves\":\n      return getString(\"equipment.sleeves\", language);\n    case \"Wraps\":\n      return getString(\"equipment.wraps\", language);\n    case \"Single-ply\":\n      return getString(\"equipment.single-ply\", language);\n    case \"Multi-ply\":\n      return getString(\"equipment.multi-ply\", language);\n    default:\n      checkExhausted(equipment);\n      return \"\";\n  }\n};\n\n// Delocalizes an Equipment value.\nexport const delocalizeEquipment = (text: string, language: Language): Equipment => {\n  if (text === getString(\"equipment.bare\", language)) return \"Bare\";\n  if (text === getString(\"equipment.sleeves\", language)) return \"Sleeves\";\n  if (text === getString(\"equipment.wraps\", language)) return \"Wraps\";\n  if (text === getString(\"equipment.single-ply\", language)) return \"Single-ply\";\n  if (text === getString(\"equipment.multi-ply\", language)) return \"Multi-ply\";\n  throw new Error(\"Failed to delocalize Equipment: \" + text);\n};\n\n// Localizes an Event value.\nexport const localizeEvent = (event: Event, language: Language): string => {\n  switch (event) {\n    case \"S\":\n      return getString(\"event.s\", language);\n    case \"B\":\n      return getString(\"event.b\", language);\n    case \"D\":\n      return getString(\"event.d\", language);\n    case \"SB\":\n      return getString(\"event.sb\", language);\n    case \"SD\":\n      return getString(\"event.sd\", language);\n    case \"BD\":\n      return getString(\"event.bd\", language);\n    case \"SBD\":\n      return getString(\"event.sbd\", language);\n    default:\n      checkExhausted(event);\n      return \"\";\n  }\n};\n\n// Delocalizes an Event value.\nexport const delocalizeEvent = (text: string, language: Language): Event => {\n  if (text === getString(\"event.s\", language)) return \"S\";\n  if (text === getString(\"event.b\", language)) return \"B\";\n  if (text === getString(\"event.d\", language)) return \"D\";\n  if (text === getString(\"event.sb\", language)) return \"SB\";\n  if (text === getString(\"event.sd\", language)) return \"SD\";\n  if (text === getString(\"event.bd\", language)) return \"BD\";\n  if (text === getString(\"event.sbd\", language)) return \"SBD\";\n  throw new Error(\"Failed to delocalize Event: \" + text);\n};\n\n// Localizes a Flight value.\nexport const localizeFlight = (flight: Flight, language: Language): string => {\n  switch (flight) {\n    case \"A\":\n      return getString(\"flight.a\", language);\n    case \"B\":\n      return getString(\"flight.b\", language);\n    case \"C\":\n      return getString(\"flight.c\", language);\n    case \"D\":\n      return getString(\"flight.d\", language);\n    case \"E\":\n      return getString(\"flight.e\", language);\n    case \"F\":\n      return getString(\"flight.f\", language);\n    case \"G\":\n      return getString(\"flight.g\", language);\n    case \"H\":\n      return getString(\"flight.h\", language);\n    case \"I\":\n      return getString(\"flight.i\", language);\n    case \"J\":\n      return getString(\"flight.j\", language);\n    case \"K\":\n      return getString(\"flight.k\", language);\n    case \"L\":\n      return getString(\"flight.l\", language);\n    case \"M\":\n      return getString(\"flight.m\", language);\n    case \"N\":\n      return getString(\"flight.n\", language);\n    case \"O\":\n      return getString(\"flight.o\", language);\n    case \"P\":\n      return getString(\"flight.p\", language);\n    default:\n      checkExhausted(flight);\n      return \"\";\n  }\n};\n\n// Delocalizes a Flight value.\nexport const delocalizeFlight = (text: string, language: Language): Flight => {\n  if (text === getString(\"flight.a\", language)) return \"A\";\n  if (text === getString(\"flight.b\", language)) return \"B\";\n  if (text === getString(\"flight.c\", language)) return \"C\";\n  if (text === getString(\"flight.d\", language)) return \"D\";\n  if (text === getString(\"flight.e\", language)) return \"E\";\n  if (text === getString(\"flight.f\", language)) return \"F\";\n  if (text === getString(\"flight.g\", language)) return \"G\";\n  if (text === getString(\"flight.h\", language)) return \"H\";\n  if (text === getString(\"flight.i\", language)) return \"I\";\n  if (text === getString(\"flight.j\", language)) return \"J\";\n  if (text === getString(\"flight.k\", language)) return \"K\";\n  if (text === getString(\"flight.l\", language)) return \"L\";\n  if (text === getString(\"flight.m\", language)) return \"M\";\n  if (text === getString(\"flight.n\", language)) return \"N\";\n  if (text === getString(\"flight.o\", language)) return \"O\";\n  if (text === getString(\"flight.p\", language)) return \"P\";\n  throw new Error(\"Failed to delocalize Flight: \" + text);\n};\n\n// Localizes a Sex value.\nexport const localizeSex = (sex: Sex, language: Language): string => {\n  switch (sex) {\n    case \"M\":\n      return getString(\"sex.m\", language);\n    case \"F\":\n      return getString(\"sex.f\", language);\n    case \"Mx\":\n      return getString(\"sex.mx\", language);\n    default:\n      checkExhausted(sex);\n      return \"\";\n  }\n};\n\n// Delocalizes a Sex value.\nexport const delocalizeSex = (text: string, language: Language): Sex => {\n  if (text === getString(\"sex.m\", language)) return \"M\";\n  if (text === getString(\"sex.f\", language)) return \"F\";\n  if (text === getString(\"sex.mx\", language)) return \"Mx\";\n  throw new Error(\"Failed to delocalize Sex: \" + text);\n};\n\n// Localizes a Category weightclass string.\n// This is used by the Flight Order and Results pages.\nexport const localizeWeightClassStr = (wtcls: string, language: Language): string => {\n  const isSHW = wtcls.endsWith(\"+\");\n  const asNumber = Number(wtcls.replace(\"+\", \"\"));\n  if (asNumber === 0) return \"\";\n  return displayWeight(asNumber, language) + (isSHW ? \"+\" : \"\");\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// The confirmation modal that pops up when the \"New Meet\" button is clicked.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\n\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nimport { getString } from \"../../logic/strings\";\n\nimport { overwriteStore } from \"../../actions/globalActions\";\nimport rootReducer from \"../../reducers/rootReducer\";\n\nimport { Language } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { Dispatch } from \"redux\";\n\ninterface OwnProps {\n  show: boolean;\n  close: () => void;\n}\n\ninterface StateProps {\n  name: string;\n  language: Language;\n}\n\ninterface DispatchProps {\n  overwriteStore: () => void;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nclass NewMeetModal extends React.Component<Props> {\n  render() {\n    return (\n      <Modal show={this.props.show} onHide={this.props.close}>\n        <Modal.Header closeButton>\n          <Modal.Title>\n            <FormattedMessage\n              id=\"home.new-meet-popup-title\"\n              defaultMessage=\"OK to clear {meetName}?\"\n              values={{ meetName: this.props.name }}\n            />\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>\n            <FormattedMessage\n              id=\"home.new-meet-popup-message-clear\"\n              defaultMessage=\"Starting a new meet will clear all unsaved data from {meetName}.\"\n              values={{ meetName: this.props.name }}\n            />\n          </p>\n          <p>\n            <FormattedMessage\n              id=\"home.new-meet-popup-message-sure\"\n              defaultMessage=\"Are you sure you want to continue?\"\n            />\n          </p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={this.props.close} variant=\"light\">\n            {getString(\"common.button-close\", this.props.language)}\n          </Button>\n          <LinkContainer to=\"/meet-setup\">\n            <Button onClick={this.props.overwriteStore} variant=\"primary\">\n              {getString(\"common.button-continue\", this.props.language)}\n            </Button>\n          </LinkContainer>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => {\n  return {\n    name: state.meet.name,\n    language: state.language\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    overwriteStore: () => {\n      // Calling the combined root reducer with an empty object results in the child reducers\n      // being invoked with no argument, so they return their default states.\n      // We cast here since this is not how the reducer is really intended to work\n      const defaultStore = rootReducer({} as GlobalState, \"OVERWRITE_STORE\" as any);\n      dispatch(overwriteStore(defaultStore));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NewMeetModal);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Shows a popup with an error message.\n// This exists because Chrome only allows window.alert() to execute once,\n// because Chrome is bad and Google should feel bad.\n//\n// This is intended only for use with buttons that load external resources,\n// like save files and CSV registration importation files.\n//\n// Regular old errors in widgets should be reported by setting their\n// validationState.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\n\ninterface OwnProps {\n  error: string;\n  title: string;\n  show: boolean;\n  close: () => void;\n}\n\ntype Props = OwnProps;\n\nclass ErrorModal extends React.Component<Props> {\n  render() {\n    return (\n      <Modal show={this.props.show} onHide={this.props.close}>\n        <Modal.Header closeButton>\n          <Modal.Title>{this.props.title}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>{this.props.error}</p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"info\" onClick={this.props.close}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  null\n)(ErrorModal);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nimport { saveAs } from \"file-saver\";\n\nimport { FormattedMessage } from \"react-intl\";\nimport { overwriteStore } from \"../actions/globalActions\";\n\nimport NewMeetModal from \"../components/home/NewMeetModal\";\nimport ErrorModal from \"../components/ErrorModal\";\n\nimport { getString } from \"../logic/strings\";\n\nimport { stateVersion, releaseVersion, releaseDate } from \"../versions\";\n\nimport { GlobalState } from \"../types/stateTypes\";\nimport { Dispatch } from \"redux\";\n\n// Temporary CSS, just for prototyping.\nconst centerConsole = { maxWidth: 700, margin: \"0 auto 10px\" };\n\ninterface StateProps {\n  redux: GlobalState;\n}\n\ninterface DispatchProps {\n  overwriteStore: (store: GlobalState) => void;\n}\n\ninterface InternalState {\n  showNewMeetModal: boolean;\n  // Controls the ErrorModal popup. Shown when error !== \"\".\n  error: string;\n}\n\ntype Props = StateProps & DispatchProps;\n\nclass HomeContainer extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n    this.handleLoadClick = this.handleLoadClick.bind(this);\n    this.handleNewClick = this.handleNewClick.bind(this);\n    this.closeConfirmModal = this.closeConfirmModal.bind(this);\n    this.closeErrorModal = this.closeErrorModal.bind(this);\n    this.handleLoadFileInput = this.handleLoadFileInput.bind(this);\n    this.handleSaveClick = this.handleSaveClick.bind(this);\n    this.renderContinueButton = this.renderContinueButton.bind(this);\n\n    this.state = { showNewMeetModal: false, error: \"\" };\n  }\n\n  // The file input is hidden, and we want to use a button to activate it.\n  // This event handler is just a proxy to call the *real* event handler.\n  handleLoadClick = () => {\n    const loadhelper = document.getElementById(\"loadhelper\");\n    if (loadhelper !== null) {\n      loadhelper.click();\n    }\n  };\n\n  // When we click the new meet button\n  // Open the popover modal to confirm the user is willing to delete any current progress\n  handleNewClick = () => {\n    this.setState({ showNewMeetModal: true });\n  };\n\n  // Close the new meet confirmation modal\n  closeConfirmModal = () => {\n    this.setState({ showNewMeetModal: false });\n  };\n\n  closeErrorModal = () => {\n    this.setState({ error: \"\" });\n  };\n\n  // Called when a file is selected.\n  handleLoadFileInput = () => {\n    // Load the element and make sure it's an HTMLInputElement.\n    const loadHelper = document.getElementById(\"loadhelper\");\n    if (loadHelper === null || !(loadHelper instanceof HTMLInputElement) || loadHelper.files === null) {\n      return;\n    }\n\n    const selectedFile = loadHelper.files[0];\n    const language = this.props.redux.language;\n    let rememberThis = this;\n\n    let reader = new FileReader();\n    reader.onload = function(event: any) {\n      let errored = false;\n      try {\n        let obj = JSON.parse(event.target.result);\n\n        // Basic error checking, make sure it's the right format.\n        if (\n          obj.language === undefined ||\n          obj.meet === undefined ||\n          obj.registration === undefined ||\n          obj.lifting === undefined\n        ) {\n          errored = true;\n        } else {\n          rememberThis.props.overwriteStore(obj);\n        }\n      } catch (err) {\n        errored = true;\n      }\n\n      if (errored) {\n        const error = getString(\"error.invalid-openlifter\", language);\n        rememberThis.setState({ error: error });\n      }\n    };\n    reader.readAsText(selectedFile);\n  };\n\n  handleSaveClick = () => {\n    let meetname = this.props.redux.meet.name;\n    if (meetname === \"\") {\n      meetname = getString(\"common.unnamed-filename\", this.props.redux.language);\n    }\n    meetname = meetname.replace(/ /g, \"-\");\n\n    const state = JSON.stringify(this.props.redux);\n    const blob = new Blob([state], { type: \"application/json;charset=utf-8\" });\n    saveAs(blob, meetname + \".openlifter\");\n  };\n\n  renderContinueButton = () => {\n    let meetname = this.props.redux.meet.name;\n    if (meetname === \"\") {\n      // Unnamed or unstarted meet, so don't render a continue button\n      return;\n    }\n    return (\n      <LinkContainer to=\"/meet-setup\">\n        <Button variant=\"primary\" block>\n          <FormattedMessage\n            id=\"home.button-continue\"\n            defaultMessage=\"Continue {meetName}\"\n            values={{ meetName: meetname }}\n          />\n        </Button>\n      </LinkContainer>\n    );\n  };\n\n  render() {\n    let newMeetButton = (\n      <Button variant=\"primary\" block onClick={this.handleNewClick}>\n        <FormattedMessage id=\"home.button-new-meet\" defaultMessage=\"New Meet\" />\n      </Button>\n    );\n\n    // If no meet is active, make the button just a LinkContainer.\n    if (!this.props.redux.meet.name) {\n      newMeetButton = <LinkContainer to=\"/meet-setup\">{newMeetButton}</LinkContainer>;\n    }\n\n    const isBeta: boolean = releaseVersion.includes(\"eta\");\n    let betaWarning = null;\n    if (isBeta === true) {\n      betaWarning = (\n        <h2>\n          <p>\n            <FormattedMessage\n              id=\"home.beta-warning\"\n              defaultMessage=\"This is the in-development, next version of OpenLifter. The internal data format is unstable. Do not use this to run competitions!\"\n            />\n          </p>\n        </h2>\n      );\n    }\n\n    const wrongVersion: boolean = this.props.redux.versions.stateVersion !== stateVersion;\n    const dataReleaseVersion = this.props.redux.versions.releaseVersion;\n\n    const buttonMargin = { marginBottom: \"5px\" };\n    const language = this.props.redux.language;\n\n    let warning = null;\n    if (wrongVersion === true) {\n      warning = (\n        <h2>\n          <p>\n            <b>{getString(\"common.danger-allcaps\", language)}</b>\n          </p>\n          <p>\n            <FormattedMessage\n              id=\"home.wrong-version-warning\"\n              defaultMessage=\"The loaded meet was made in OpenLifter {oldVersion}. That format is incompatible with OpenLifter {thisVersion}.\"\n              values={{ oldVersion: dataReleaseVersion, thisVersion: releaseVersion }}\n            />\n          </p>\n        </h2>\n      );\n    }\n\n    return (\n      <Container style={centerConsole}>\n        <NewMeetModal show={this.state.showNewMeetModal} close={this.closeConfirmModal} />\n        <ErrorModal\n          error={this.state.error}\n          title={getString(\"home.error-load-popup-title\", language)}\n          show={this.state.error !== \"\"}\n          close={this.closeErrorModal}\n        />\n\n        <Row>\n          <Col md={12}>\n            <img alt=\"OpenLifter\" src=\"openlifter.svg\" />\n          </Col>\n        </Row>\n\n        <Row>\n          <Col md={12}>{betaWarning}</Col>\n        </Row>\n\n        <Row>\n          <Col md={12}>{warning}</Col>\n        </Row>\n\n        <Row>\n          <Col md={8}>\n            <br />\n            <div>\n              {wrongVersion === false ? (\n                this.renderContinueButton()\n              ) : (\n                <a href={\"https://www.openlifter.com/releases/\" + dataReleaseVersion}>\n                  <Button variant=\"success\" block style={{ marginBottom: \"5px\" }}>\n                    <FormattedMessage\n                      id=\"home.button-switch-version\"\n                      defaultMessage=\"Switch to OpenLifter {otherVersion}\"\n                      values={{ otherVersion: dataReleaseVersion }}\n                    />\n                  </Button>\n                </a>\n              )}\n\n              {newMeetButton}\n\n              <Button variant=\"warning\" block onClick={this.handleLoadClick}>\n                <FormattedMessage id=\"home.button-load-from-file\" defaultMessage=\"Load from File\" />\n              </Button>\n              <Button variant=\"success\" block onClick={this.handleSaveClick}>\n                <FormattedMessage id=\"home.button-save-tofile\" defaultMessage=\"Save to File\" />\n              </Button>\n            </div>\n          </Col>\n\n          <Col md={4}>\n            <br />\n            <a\n              href=\"https://gitlab.com/openpowerlifting/openlifter/issues/new\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              <Button variant=\"outline-secondary\" block style={buttonMargin}>\n                <FormattedMessage id=\"home.button-report-issue\" defaultMessage=\"Report an Issue\" />\n              </Button>\n            </a>\n            <a href=\"https://www.openlifter.com/support\" rel=\"noopener noreferrer\" target=\"_blank\">\n              <Button variant=\"outline-secondary\" block style={buttonMargin}>\n                <FormattedMessage id=\"home.button-support\" defaultMessage=\"Official Support\" />\n              </Button>\n            </a>\n            <a href=\"https://gitlab.com/openpowerlifting/openlifter\" rel=\"noopener noreferrer\" target=\"_blank\">\n              <Button variant=\"outline-secondary\" block style={buttonMargin}>\n                <FormattedMessage id=\"home.button-source\" defaultMessage=\"Full Source Code\" />\n              </Button>\n            </a>\n            <LinkContainer to=\"/about\">\n              <Button variant=\"outline-secondary\" block style={buttonMargin}>\n                <FormattedMessage id=\"home.button-credits\" defaultMessage=\"Credits and License\" />\n              </Button>\n            </LinkContainer>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col md={12} style={{ textAlign: \"center\", marginTop: \"2em\" }}>\n            <h3>\n              <FormattedMessage\n                id=\"home.version-date\"\n                defaultMessage=\"Version {releaseVersion}, {releaseDate}.\"\n                values={{\n                  releaseVersion: releaseVersion,\n                  releaseDate: releaseDate\n                }}\n              />\n            </h3>\n          </Col>\n        </Row>\n\n        <input\n          id=\"loadhelper\"\n          type=\"file\"\n          accept=\".openlifter,.openlifter.txt\"\n          style={{ display: \"none\" }}\n          onChange={this.handleLoadFileInput}\n        />\n      </Container>\n    );\n  }\n}\n\n// Because we want to save the state, separate it out specifically\n// into a \"redux\" prop. Otherwise it gets contaminated by other props.\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  redux: {\n    ...state\n  }\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    overwriteStore: store => dispatch(overwriteStore(store))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(HomeContainer);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// This defines a generic text input that colors itself based upon a validation\n// function passed in OwnProps. On blur, an onSuccess() callback is called\n// if validation passes; otherwise, the text input reverts to the initial state.\n\nimport React from \"react\";\n\nimport Form from \"react-bootstrap/Form\";\n\nimport { Validation } from \"../types/dataTypes\";\nimport { FormControlTypeHack, assertString } from \"../types/utils\";\n\ninterface OwnProps {\n  type?: string; // The type of input, such as \"text\" or \"number\". Defaults to \"text\".\n  label?: string; // Form label text, shown above the input.\n  initialValue: string;\n  placeholder?: string;\n  disabled?: boolean;\n  validate: (value?: string) => Validation;\n  onSuccess: (value: string) => void;\n\n  // By default, the bottom margin is removed so that this can be used in tables.\n  // Setting this to true adds the margin back. Defaults to false.\n  keepMargin?: boolean;\n}\n\ntype Props = Readonly<OwnProps>;\n\ninterface InternalState {\n  value: string;\n}\n\nclass BirthDateInput extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    this.validate = this.validate.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n\n    this.state = {\n      value: props.initialValue\n    };\n  }\n\n  validate = (): Validation => {\n    return this.props.validate(this.state.value);\n  };\n\n  handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === \"Enter\") {\n      event.currentTarget.blur();\n    }\n  };\n\n  handleChange = (event: React.FormEvent<FormControlTypeHack>) => {\n    if (assertString(event.currentTarget.value)) {\n      this.setState({ value: event.currentTarget.value });\n    }\n  };\n\n  handleBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n    if (this.validate() === \"error\") {\n      this.setState({ value: this.props.initialValue });\n      return;\n    }\n\n    if (this.props.initialValue !== this.state.value) {\n      this.props.onSuccess(this.state.value);\n    }\n  };\n\n  render() {\n    const validation: Validation = this.validate();\n    const maybeLabel = this.props.label ? <Form.Label>{this.props.label}</Form.Label> : undefined;\n\n    return (\n      <Form.Group style={this.props.keepMargin === true ? undefined : { marginBottom: 0 }}>\n        {maybeLabel}\n        <Form.Control\n          type={this.props.type ? this.props.type : \"text\"}\n          placeholder={this.props.placeholder}\n          disabled={this.props.disabled === true ? true : undefined}\n          value={this.state.value}\n          onKeyDown={this.handleKeyDown}\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n          isValid={validation === \"success\"}\n          isInvalid={validation === \"error\"}\n          className={validation === \"warning\" ? \"is-warning\" : undefined}\n        />\n      </Form.Group>\n    );\n  }\n}\n\nexport default BirthDateInput;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport {\n  SetMeetNameAction,\n  SetFormulaAction,\n  SetFederationAction,\n  SetDivisionsAction,\n  SetMeetDateAction,\n  SetLengthDaysAction,\n  SetPlatformsOnDaysAction,\n  SetInKgAction,\n  SetWeightClassesAction,\n  SetBarAndCollarsWeightKgAction,\n  SetPlateConfigAction,\n  UpdateMeetAction\n} from \"../types/actionTypes\";\nimport { Formula, Lift, Sex } from \"../types/dataTypes\";\nimport { MeetState } from \"../types/stateTypes\";\n\nexport const setMeetName = (name: string): SetMeetNameAction => {\n  return {\n    type: \"SET_MEET_NAME\",\n    name\n  };\n};\n\nexport const setFormula = (formula: Formula): SetFormulaAction => {\n  return {\n    type: \"SET_FORMULA\",\n    formula\n  };\n};\n\nexport const setFederation = (federation: string): SetFederationAction => {\n  return {\n    type: \"SET_FEDERATION\",\n    federation\n  };\n};\n\nexport const setDivisions = (divisions: Array<string>): SetDivisionsAction => {\n  return {\n    type: \"SET_DIVISIONS\",\n    divisions\n  };\n};\n\nexport const setMeetDate = (date: string): SetMeetDateAction => {\n  return {\n    type: \"SET_MEET_DATE\",\n    date\n  };\n};\n\nexport const setLengthDays = (length: number): SetLengthDaysAction => {\n  return {\n    type: \"SET_LENGTH_DAYS\",\n    length\n  };\n};\n\nexport const setPlatformsOnDays = (day: number, count: number): SetPlatformsOnDaysAction => {\n  return {\n    type: \"SET_PLATFORM_COUNT\",\n    day: day,\n    count: count\n  };\n};\n\nexport const setInKg = (inKg: boolean): SetInKgAction => {\n  return {\n    type: \"SET_IN_KG\",\n    inKg\n  };\n};\n\nexport const setWeightClasses = (sex: Sex, classesKg: Array<number>): SetWeightClassesAction => {\n  return {\n    type: \"SET_WEIGHTCLASSES\",\n    sex: sex,\n    classesKg: classesKg\n  };\n};\n\nexport const setBarAndCollarsWeightKg = (lift: Lift, weightKg: number): SetBarAndCollarsWeightKgAction => {\n  return {\n    type: \"SET_BAR_AND_COLLARS_WEIGHT_KG\",\n    lift: lift,\n    weightKg: weightKg\n  };\n};\n\nexport const setPlateConfig = (weightKg: number, pairCount: number, color: string): SetPlateConfigAction => {\n  return {\n    type: \"SET_PLATE_CONFIG\",\n    weightKg,\n    pairCount,\n    color\n  };\n};\n\nexport const updateMeet = (obj: Partial<MeetState>): UpdateMeetAction => {\n  return {\n    type: \"UPDATE_MEET\",\n    changes: obj\n  };\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the MeetDate date picker.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport DatePicker from \"react-datepicker\";\nimport { registerLocale } from \"react-datepicker\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Form from \"react-bootstrap/Form\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\n\nimport { setMeetDate } from \"../../actions/meetSetupActions\";\nimport { iso8601ToLocalDate, localDateToIso8601 } from \"../../logic/date\";\n\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { Language } from \"../../types/dataTypes\";\nimport { Dispatch } from \"redux\";\n\n// The react-datepicker gets locale information from the \"date-fns\" package.\n// In order for it to understand what our Languages are, we have to register\n// those locales. The react-datepicker provides a helper function to do this.\nimport de from \"date-fns/locale/de\";\nregisterLocale(\"de\", de);\nimport eo from \"date-fns/locale/eo\";\nregisterLocale(\"eo\", eo);\nimport es from \"date-fns/locale/es\";\nregisterLocale(\"es\", es);\nimport hr from \"date-fns/locale/hr\";\nregisterLocale(\"hr\", hr);\nimport lt from \"date-fns/locale/lt\";\nregisterLocale(\"lt\", lt);\nimport nl from \"date-fns/locale/nl\";\nregisterLocale(\"nl\", nl);\nimport pt from \"date-fns/locale/pt\";\nregisterLocale(\"pt\", pt);\nimport ru from \"date-fns/locale/ru\";\nregisterLocale(\"ru\", ru);\nimport tr from \"date-fns/locale/tr\";\nregisterLocale(\"tr\", tr);\nimport zh_CN from \"date-fns/locale/zh-CN\";\nregisterLocale(\"zh-Hans\", zh_CN);\n\ninterface StateProps {\n  date: string;\n  language: Language;\n}\n\ninterface DispatchProps {\n  setMeetDate: (date: Date) => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\nclass MeetDate extends React.Component<Props> {\n  render() {\n    // The DatePicker manipulates a Date object in local time.\n    const initialDate: Date = iso8601ToLocalDate(this.props.date);\n\n    return (\n      <FormGroup>\n        <Form.Label>\n          <FormattedMessage id=\"meet-setup.start-date\" defaultMessage=\"Start Date\" />\n        </Form.Label>\n        <div style={{ textAlign: \"center\" }}>\n          <DatePicker\n            dateFormat=\"yyyy-MM-dd\"\n            selected={initialDate}\n            onChange={this.props.setMeetDate}\n            inline\n            locale={this.props.language}\n          />\n        </div>\n      </FormGroup>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  date: state.meet.date,\n  language: state.language\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    setMeetDate: date => {\n      dispatch(setMeetDate(localDateToIso8601(date)));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MeetDate);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines logic for parsing strings into OpenLifter datatypes.\n// The strings can come from the user and are therefore untrusted.\n\nimport { Equipment, Event, Sex } from \"../types/dataTypes\";\n\n// Strictly parse a string to an integer. Negatives are allowed.\nexport const parseInteger = (s: string): number | undefined => {\n  // Characters will be compared to ASCII charcodes.\n  const ascii_0 = 0x30;\n  const ascii_9 = 0x39;\n  const ascii_minus = 0x2d;\n\n  // Disallow the empty string.\n  if (s.length === 0) {\n    return;\n  }\n\n  // Check the string character-by-character.\n  for (let i = 0; i < s.length; ++i) {\n    let charcode = s.charCodeAt(i);\n\n    // A single negative is allowed at the front.\n    if (i === 0 && charcode === ascii_minus) {\n      continue;\n    } else if (charcode < ascii_0 || charcode > ascii_9) {\n      return;\n    }\n  }\n\n  return parseInt(s, 10);\n};\n\n// Loosely parse a string to a Sex.\nexport const parseSex = (s: string): Sex | undefined => {\n  const lower = s.toLowerCase();\n  if (lower === \"m\") return \"M\";\n  if (lower === \"f\") return \"F\";\n  if (lower === \"mx\") return \"Mx\";\n  return;\n};\n\n// Loosely parse a string to an Equipment.\nexport const parseEquipment = (s: string): Equipment | undefined => {\n  const lower = s.toLowerCase();\n  if (lower === \"bare\") return \"Bare\";\n  if (lower === \"sleeves\") return \"Sleeves\";\n  if (lower === \"wraps\") return \"Wraps\";\n\n  // Be more forgiving on these ones: nobody remembers the dash.\n  if (lower.startsWith(\"single\")) return \"Single-ply\";\n  if (lower.startsWith(\"multi\")) return \"Multi-ply\";\n  return;\n};\n\n// Parse a string to an Event.\n// Valid characters are \"SBD\", which must occur in that order.\nexport const parseEvent = (s: string): Event | undefined => {\n  if (s === \"\") {\n    return;\n  }\n\n  // Allow lowercase variants like \"sbd\".\n  const lower = s.toLowerCase();\n  const has_squat = lower.includes(\"s\");\n  const has_bench = lower.includes(\"b\");\n  const has_deadlift = lower.includes(\"d\");\n\n  let acc = \"\";\n  if (has_squat) acc += \"S\";\n  if (has_bench) acc += \"B\";\n  if (has_deadlift) acc += \"D\";\n\n  // Having reconstructed the string in the right order, check whether it matches.\n  if (acc !== s) {\n    return;\n  }\n\n  return s as Event;\n};\n\n// Strictly parse a YYYY-MM-DD date.\nexport const parseDate = (s: string): string | undefined => {\n  if (s.length !== 10) {\n    return;\n  }\n\n  let pieces = s.split(\"-\");\n  if (pieces.length !== 3) {\n    return;\n  }\n\n  if (pieces[0].length !== 4 || pieces[1].length !== 2 || pieces[2].length !== 2) {\n    return;\n  }\n\n  let year = parseInteger(pieces[0]);\n  let month = parseInteger(pieces[1]);\n  let day = parseInteger(pieces[2]);\n\n  if (typeof year !== \"number\" || year < 1920) return;\n  if (typeof month !== \"number\" || month < 1 || month > 12) return;\n  if (typeof day !== \"number\" || day < 1 || day > 31) return;\n\n  return s;\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n//\n// This is a generic number input with a minus and a plus surrounding it\n\nimport React, { FunctionComponent } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { FormControlTypeHack } from \"../../types/utils\";\nimport { Validation } from \"../../types/dataTypes\";\n\ninterface Props {\n  label?: JSX.Element | string;\n  min?: number;\n  max?: number;\n  step: number;\n  value: string;\n  onChange: (value: string | undefined) => void;\n  validationStatus?: Validation;\n  inputWidth?: string;\n}\n\nconst incrementByStep = (\n  baseValue: number,\n  step: number,\n  max: number | undefined,\n  onChange: (value: string | undefined) => void\n) => {\n  const newValue = baseValue + step;\n  if (max !== undefined && newValue > max) {\n    onChange(String(max));\n  } else {\n    onChange(String(newValue));\n  }\n};\n\nconst decrementByStep = (\n  baseValue: number,\n  step: number,\n  min: number | undefined,\n  onChange: (value: string | undefined) => void\n) => {\n  const newValue = baseValue - step;\n  if (min !== undefined && newValue < min) {\n    onChange(String(min));\n  } else {\n    onChange(String(newValue));\n  }\n};\n\nconst NumberInput: FunctionComponent<Props> = props => {\n  return (\n    <Form.Group>\n      {props.label && <Form.Label>{props.label}</Form.Label>}\n      <div style={{ display: \"flex\" }}>\n        <Button\n          variant=\"outline-secondary\"\n          onClick={() => decrementByStep(Number(props.value), props.step, props.min, props.onChange)}\n        >\n          -\n        </Button>\n        <Form.Control\n          style={{ width: `${props.inputWidth || \"100%\"}` }}\n          min={props.min}\n          max={props.max}\n          value={props.value}\n          onChange={(event: React.FormEvent<FormControlTypeHack>) => props.onChange(event.currentTarget.value)}\n          isValid={props.validationStatus === \"success\"}\n          isInvalid={props.validationStatus === \"error\"}\n          className={props.validationStatus === \"warning\" ? \"is-warning\" : undefined}\n        />\n        <Button\n          variant=\"outline-secondary\"\n          onClick={() => incrementByStep(Number(props.value), props.step, props.max, props.onChange)}\n        >\n          +\n        </Button>\n      </div>\n    </Form.Group>\n  );\n};\n\nexport default NumberInput;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Form from \"react-bootstrap/Form\";\n\nimport { setLengthDays } from \"../../actions/meetSetupActions\";\n\nimport { parseInteger } from \"../../logic/parsers\";\n\nimport { Validation } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { FormControlTypeHack, isString } from \"../../types/utils\";\nimport { Dispatch } from \"redux\";\nimport NumberInput from \"../common/NumberInput\";\n\ninterface StateProps {\n  lengthDays: number;\n}\n\ninterface DispatchProps {\n  setLengthDays: (days: number) => any;\n}\n\ntype Props = StateProps & DispatchProps;\n\ninterface InternalState {\n  value: string;\n}\n\nclass MeetLength extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    this.validate = this.validate.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      value: String(this.props.lengthDays)\n    };\n  }\n\n  validate = (): Validation => {\n    const { value } = this.state;\n    const asNumber = parseInteger(value);\n\n    if (asNumber === undefined || asNumber <= 0 || asNumber > 14) {\n      return \"error\";\n    }\n    return \"success\";\n  };\n\n  handleChange = (value: string | undefined) => {\n    this.setState({ value: value || \"\" }, () => {\n      // As callback, save successful value into Redux store.\n      if (this.validate() !== \"error\") {\n        this.props.setLengthDays(Number(value));\n      }\n    });\n  };\n\n  render() {\n    const validation: Validation = this.validate();\n\n    return (\n      <NumberInput\n        label={<FormattedMessage id=\"meet-setup.length-days\" defaultMessage=\"Days of Lifting\" />}\n        min={1}\n        max={14}\n        step={1}\n        value={this.state.value}\n        onChange={this.handleChange}\n        validationStatus={validation}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  lengthDays: state.meet.lengthDays\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    setLengthDays: days => dispatch(setLengthDays(days))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MeetLength);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React, { FormEvent } from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Form from \"react-bootstrap/Form\";\n\nimport { setPlatformsOnDays } from \"../../actions/meetSetupActions\";\n\nimport { parseInteger } from \"../../logic/parsers\";\n\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { Validation } from \"../../types/dataTypes\";\nimport { FormControlTypeHack } from \"../../types/utils\";\nimport { Dispatch } from \"redux\";\nimport NumberInput from \"../common/NumberInput\";\n\ninterface OwnProps {\n  day: number;\n}\n\ninterface StateProps {\n  platformsOnDays: Array<number>;\n}\n\ninterface DispatchProps {\n  setPlatformsOnDays: (day: number, count: number) => void;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\ninterface InternalState {\n  value: string;\n}\n\nclass PlatformCount extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    this.validate = this.validate.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      value: String(this.props.platformsOnDays[this.props.day - 1])\n    };\n  }\n\n  validate = (): Validation => {\n    const { value } = this.state;\n    const asNumber = parseInteger(value);\n    if (asNumber === undefined || asNumber <= 0 || asNumber > 20) {\n      return \"error\";\n    }\n    return \"success\";\n  };\n\n  handleChange = (value: string | undefined) => {\n    this.setState({ value: value || \"\" }, () => {\n      if (this.validate() === \"success\") {\n        this.props.setPlatformsOnDays(this.props.day, Number(value));\n      }\n    });\n  };\n\n  render() {\n    const { day } = this.props;\n    const validation = this.validate();\n\n    return (\n      <NumberInput\n        label={\n          <FormattedMessage\n            id=\"meet-setup.platforms-on-day\"\n            defaultMessage=\"Platforms on Day {number}\"\n            values={{\n              number: day\n            }}\n          />\n        }\n        min={1}\n        max={20}\n        step={1}\n        value={this.state.value}\n        onChange={this.handleChange}\n        validationStatus={validation}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  platformsOnDays: state.meet.platformsOnDays\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    setPlatformsOnDays: (day, count) => dispatch(setPlatformsOnDays(day, count))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PlatformCount);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport PlatformCount from \"./PlatformCount\";\n\nimport { GlobalState } from \"../../types/stateTypes\";\n\ninterface StateProps {\n  lengthDays: number;\n}\n\ntype Props = StateProps;\n\nclass PlatformCounts extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n    this.createPlatformInputs = this.createPlatformInputs.bind(this);\n  }\n\n  createPlatformInputs = () => {\n    let inputs = [];\n    const lengthDays = this.props.lengthDays;\n    for (let i = 1; i <= lengthDays; ++i) {\n      inputs.push(<PlatformCount key={i} day={i} />);\n    }\n    return inputs;\n  };\n\n  render() {\n    return <div>{this.createPlatformInputs()}</div>;\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  lengthDays: state.meet.lengthDays\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(PlatformCounts);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Provides widgets that overwrite rules with federation defaults.\n\nimport React, { FormEvent } from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\n\nimport { getString } from \"../../logic/strings\";\n\nimport { updateMeet } from \"../../actions/meetSetupActions\";\n\nimport { GlobalState, MeetState } from \"../../types/stateTypes\";\nimport { Language } from \"../../types/dataTypes\";\nimport { checkExhausted, FormControlTypeHack } from \"../../types/utils\";\nimport { Dispatch } from \"redux\";\n\ninterface StateProps {\n  federation: string;\n  language: Language;\n}\n\ninterface DispatchProps {\n  updateMeet: (changes: Partial<MeetState>) => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\ntype AutoFillOption = \"Traditional\" | \"GPC\" | \"SPF\" | \"UPA\" | \"USAPL\" | \"USPA\" | \"WABDL\" | \"WPC\" | \"WRPF\";\n\ninterface InternalState {\n  selectedOption: AutoFillOption;\n}\n\nconst traditionalDefaults: Partial<MeetState> = {\n  divisions: [\n    \"Open\",\n    \"Youth\",\n    \"T13-15\",\n    \"T16-17\",\n    \"T18-19\",\n    \"J20-23\",\n    \"S35-39\",\n    \"M40-44\",\n    \"M45-49\",\n    \"M50-54\",\n    \"M55-59\",\n    \"M60-64\",\n    \"M65-69\",\n    \"M70-74\",\n    \"M75-79\",\n    \"M80+\"\n  ],\n  weightClassesKgMen: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  weightClassesKgWomen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90],\n  weightClassesKgMx: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  formula: \"Wilks\",\n  ageCoefficients: \"FosterMcCulloch\",\n  combineSleevesAndWraps: false,\n  allow4thAttempts: true\n};\n\nconst gpcDefaults: Partial<MeetState> = {\n  divisions: [\n    \"F-JE\",\n    \"F-JR\",\n    \"F-M1E\",\n    \"F-M1R\",\n    \"F-M2E\",\n    \"F-M2R\",\n    \"F-M3E\",\n    \"F-M3R\",\n    \"F-M4E\",\n    \"F-M4R\",\n    \"F-M5E\",\n    \"F-M5R\",\n    \"F-M6E\",\n    \"F-M6R\",\n    \"F-M7E\",\n    \"F-M7R\",\n    \"F-M8E\",\n    \"F-M8R\",\n    \"F-M9E\",\n    \"F-M9R\",\n    \"F-OE\",\n    \"F-OR\",\n    \"F-SME\",\n    \"F-SMR\",\n    \"F-T1E\",\n    \"F-T1R\",\n    \"F-T2E\",\n    \"F-T2R\",\n    \"F-T3E\",\n    \"F-T3R\",\n    \"M-JE\",\n    \"M-JR\",\n    \"M-M1E\",\n    \"M-M1R\",\n    \"M-M2E\",\n    \"M-M2R\",\n    \"M-M3E\",\n    \"M-M3R\",\n    \"M-M4E\",\n    \"M-M4R\",\n    \"M-M5E\",\n    \"M-M5R\",\n    \"M-M6E\",\n    \"M-M6R\",\n    \"M-M7E\",\n    \"M-M7R\",\n    \"M-M8E\",\n    \"M-M8R\",\n    \"M-M9E\",\n    \"M-M9R\",\n    \"M-OE\",\n    \"M-OR\",\n    \"M-SME\",\n    \"M-SMR\",\n    \"M-T1E\",\n    \"M-T1R\",\n    \"M-T2E\",\n    \"M-T2R\",\n    \"M-T3E\",\n    \"M-T3R\"\n  ],\n  weightClassesKgMen: [56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  weightClassesKgWomen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90, 110],\n  weightClassesKgMx: [56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  formula: \"Glossbrenner\",\n  ageCoefficients: \"FosterMcCulloch\",\n  combineSleevesAndWraps: true,\n  allow4thAttempts: true\n};\n\nconst spfDefaults: Partial<MeetState> = {\n  divisions: [\n    \"Open\",\n    \"Pre-Teen\",\n    \"T13-15\",\n    \"T16-17\",\n    \"T18-19\",\n    \"J20-23\",\n    \"S33-39\",\n    \"M40-44\",\n    \"M45-49\",\n    \"M50-54\",\n    \"M55-59\",\n    \"M60-64\",\n    \"M65-69\",\n    \"M70-74\",\n    \"M75-79\",\n    \"G80+\"\n  ],\n  weightClassesKgMen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 118, 125, 140],\n  weightClassesKgWomen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90, 100, 110],\n  weightClassesKgMx: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 118, 125, 140],\n  formula: \"Schwartz/Malone\",\n  ageCoefficients: \"FosterMcCulloch\",\n  combineSleevesAndWraps: false,\n  allow4thAttempts: true\n};\n\nconst upaDefaults: Partial<MeetState> = {\n  divisions: [\n    \"FG\",\n    \"FG-AD\",\n    \"FGR\",\n    \"FGR-AD\",\n    \"FJ\",\n    \"FJ-AD\",\n    \"FJR\",\n    \"FJR-AD\",\n    \"FJRE\",\n    \"FJRE-AD\",\n    \"FM1\",\n    \"FM1-AD\",\n    \"FM1R\",\n    \"FM1R-AD\",\n    \"FM1RE\",\n    \"FM1RE-AD\",\n    \"FM2\",\n    \"FM2-AD\",\n    \"FM2R\",\n    \"FM2R-AD\",\n    \"FM2RE\",\n    \"FM2RE-AD\",\n    \"FM3\",\n    \"FM3-AD\",\n    \"FM3R\",\n    \"FM3R-AD\",\n    \"FM3RE\",\n    \"FM3RE-AD\",\n    \"FM4\",\n    \"FM4-AD\",\n    \"FM4R\",\n    \"FM4R-AD\",\n    \"FM4RE\",\n    \"FM4RE-AD\",\n    \"FM5\",\n    \"FM5-AD\",\n    \"FM5R\",\n    \"FM5R-AD\",\n    \"FM5RE\",\n    \"FM5RE-AD\",\n    \"FM6\",\n    \"FM6-AD\",\n    \"FM6R\",\n    \"FM6R-AD\",\n    \"FM6RE\",\n    \"FM6RE-AD\",\n    \"FM7\",\n    \"FM7-AD\",\n    \"FM7R\",\n    \"FM7R-AD\",\n    \"FM7RE\",\n    \"FM7RE-AD\",\n    \"FM8\",\n    \"FM8-AD\",\n    \"FM8R\",\n    \"FM8R-AD\",\n    \"FM8RE\",\n    \"FM8RE-AD\",\n    \"FM9\",\n    \"FM9-AD\",\n    \"FM9R\",\n    \"FM9R-AD\",\n    \"FM9RE\",\n    \"FM9RE-AD\",\n    \"FMX\",\n    \"FMX-AD\",\n    \"FMXR\",\n    \"FMXR-AD\",\n    \"FMXRE\",\n    \"FMXRE-AD\",\n    \"FO\",\n    \"FO-AD\",\n    \"FOR\",\n    \"FOR-AD\",\n    \"FORE\",\n    \"FORE-AD\",\n    \"FPFR\",\n    \"FPFR-AD\",\n    \"FS\",\n    \"FS-AD\",\n    \"FSR\",\n    \"FSR-AD\",\n    \"FSRE\",\n    \"FSRE-AD\",\n    \"FT1\",\n    \"FT1-AD\",\n    \"FT1R\",\n    \"FT1R-AD\",\n    \"FT1RE\",\n    \"FT1RE-AD\",\n    \"FT2\",\n    \"FT2-AD\",\n    \"FT2R\",\n    \"FT2R-AD\",\n    \"FT2RE\",\n    \"FT2RE-AD\",\n    \"FT3\",\n    \"FT3-AD\",\n    \"FT3R\",\n    \"FT3R-AD\",\n    \"FT3RE\",\n    \"FT3RE-AD\",\n    \"FTX\",\n    \"FTX-AD\",\n    \"FTXR\",\n    \"FTXR-AD\",\n    \"FTXRE\",\n    \"FTXRE-AD\",\n    \"MG\",\n    \"MG-AD\",\n    \"MGR\",\n    \"MGR-AD\",\n    \"MJ\",\n    \"MJ-AD\",\n    \"MJR\",\n    \"MJR-AD\",\n    \"MJRE\",\n    \"MJRE-AD\",\n    \"MM1\",\n    \"MM1-AD\",\n    \"MM1R\",\n    \"MM1R-AD\",\n    \"MM1RE\",\n    \"MM1RE-AD\",\n    \"MM2\",\n    \"MM2-AD\",\n    \"MM2R\",\n    \"MM2R-AD\",\n    \"MM2RE\",\n    \"MM2RE-AD\",\n    \"MM3\",\n    \"MM3-AD\",\n    \"MM3R\",\n    \"MM3R-AD\",\n    \"MM3RE\",\n    \"MM3RE-AD\",\n    \"MM4\",\n    \"MM4-AD\",\n    \"MM4R\",\n    \"MM4R-AD\",\n    \"MM4RE\",\n    \"MM4RE-AD\",\n    \"MM5\",\n    \"MM5-AD\",\n    \"MM5R\",\n    \"MM5R-AD\",\n    \"MM5RE\",\n    \"MM5RE-AD\",\n    \"MM6\",\n    \"MM6-AD\",\n    \"MM6R\",\n    \"MM6R-AD\",\n    \"MM6RE\",\n    \"MM6RE-AD\",\n    \"MM7\",\n    \"MM7-AD\",\n    \"MM7R\",\n    \"MM7R-AD\",\n    \"MM7RE\",\n    \"MM7RE-AD\",\n    \"MM8\",\n    \"MM8-AD\",\n    \"MM8R\",\n    \"MM8R-AD\",\n    \"MM8RE\",\n    \"MM8RE-AD\",\n    \"MM9\",\n    \"MM9-AD\",\n    \"MM9R\",\n    \"MM9R-AD\",\n    \"MM9RE\",\n    \"MM9RE-AD\",\n    \"MMX\",\n    \"MMX-AD\",\n    \"MMXR\",\n    \"MMXR-AD\",\n    \"MMXRE\",\n    \"MMXRE-AD\",\n    \"MO\",\n    \"MO-AD\",\n    \"MOR\",\n    \"MOR-AD\",\n    \"MORE\",\n    \"MORE-AD\",\n    \"MPFR\",\n    \"MPFR-AD\",\n    \"MS\",\n    \"MS-AD\",\n    \"MSR\",\n    \"MSR-AD\",\n    \"MSRE\",\n    \"MSRE-AD\",\n    \"MT1\",\n    \"MT1-AD\",\n    \"MT1R\",\n    \"MT1R-AD\",\n    \"MT1RE\",\n    \"MT1RE-AD\",\n    \"MT2\",\n    \"MT2-AD\",\n    \"MT2R\",\n    \"MT2R-AD\",\n    \"MT2RE\",\n    \"MT2RE-AD\",\n    \"MT3\",\n    \"MT3-AD\",\n    \"MT3R\",\n    \"MT3R-AD\",\n    \"MT3RE\",\n    \"MT3RE-AD\",\n    \"MTX\",\n    \"MTX-AD\",\n    \"MTXR\",\n    \"MTXR-AD\",\n    \"MTXRE\",\n    \"MTXRE-AD\"\n  ],\n  weightClassesKgMen: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  weightClassesKgWomen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90],\n  weightClassesKgMx: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  formula: \"Schwartz/Malone\",\n  ageCoefficients: \"FosterMcCulloch\",\n  combineSleevesAndWraps: true,\n  allow4thAttempts: true\n};\n\nconst usaplDefaults: Partial<MeetState> = {\n  divisions: [\n    \"MR-O\",\n    \"MR-Y\",\n    \"MR-Y1\",\n    \"MR-Y2\",\n    \"MR-Y3\",\n    \"MR-T1\",\n    \"MR-T2\",\n    \"MR-T3\",\n    \"MR-Jr\",\n    \"MR-M1a\",\n    \"MR-M1b\",\n    \"MR-M2a\",\n    \"MR-M2b\",\n    \"MR-M3a\",\n    \"MR-M3b\",\n    \"MR-M4a\",\n    \"MR-M4b\",\n    \"MR-M5a\",\n    \"MR-M5b\",\n    \"MR-M6a\",\n    \"MR-M6b\",\n    \"MR-G\",\n    \"M-O\",\n    \"M-Y\",\n    \"M-Y1\",\n    \"M-Y2\",\n    \"M-Y3\",\n    \"M-T1\",\n    \"M-T2\",\n    \"M-T3\",\n    \"M-Jr\",\n    \"M-M1a\",\n    \"M-M1b\",\n    \"M-M2a\",\n    \"M-M2b\",\n    \"M-M3a\",\n    \"M-M3b\",\n    \"M-M4a\",\n    \"M-M4b\",\n    \"M-M5a\",\n    \"M-M5b\",\n    \"M-M6a\",\n    \"M-M6b\",\n    \"M-G\",\n    \"FR-O\",\n    \"FR-Y\",\n    \"FR-Y1\",\n    \"FR-Y2\",\n    \"FR-Y3\",\n    \"FR-T1\",\n    \"FR-T2\",\n    \"FR-T3\",\n    \"FR-Jr\",\n    \"FR-M1a\",\n    \"FR-M1b\",\n    \"FR-M2a\",\n    \"FR-M2b\",\n    \"FR-M3a\",\n    \"FR-M3b\",\n    \"FR-M4a\",\n    \"FR-M4b\",\n    \"FR-M5a\",\n    \"FR-M5b\",\n    \"FR-M6a\",\n    \"FR-M6b\",\n    \"FR-G\",\n    \"F-O\",\n    \"F-Y\",\n    \"F-Y1\",\n    \"F-Y2\",\n    \"F-Y3\",\n    \"F-T1\",\n    \"F-T2\",\n    \"F-T3\",\n    \"F-Jr\",\n    \"F-M1a\",\n    \"F-M1b\",\n    \"F-M2a\",\n    \"F-M2b\",\n    \"F-M3a\",\n    \"F-M3b\",\n    \"F-M4a\",\n    \"F-M4b\",\n    \"F-M5a\",\n    \"F-M5b\",\n    \"F-M6a\",\n    \"F-M6b\",\n    \"F-G\"\n  ],\n  weightClassesKgMen: [53, 59, 66, 74, 83, 93, 105, 120],\n  weightClassesKgWomen: [43, 47, 52, 57, 63, 72, 84],\n  weightClassesKgMx: [53, 59, 66, 74, 83, 93, 105, 120],\n  formula: \"IPF Points\",\n  ageCoefficients: \"FosterMcCulloch\",\n  combineSleevesAndWraps: false,\n  allow4thAttempts: false\n};\n\nconst uspaDefaults: Partial<MeetState> = {\n  divisions: [\n    \"Open\",\n    \"Y4-12\",\n    \"J13-15\",\n    \"J16-17\",\n    \"J18-19\",\n    \"J20-23\",\n    \"S35-39\",\n    \"M40-44\",\n    \"M45-49\",\n    \"M50-54\",\n    \"M55-59\",\n    \"M60-64\",\n    \"M65-69\",\n    \"M70-74\",\n    \"M75-79\",\n    \"M80+\"\n  ],\n  weightClassesKgMen: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  weightClassesKgWomen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90],\n  weightClassesKgMx: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  formula: \"Wilks\",\n  ageCoefficients: \"FosterMcCulloch\",\n  combineSleevesAndWraps: false,\n  allow4thAttempts: true\n};\n\nconst wabdlDefaults: Partial<MeetState> = {\n  divisions: [\n    \"Open\",\n    \"T12-13\",\n    \"T14-15\",\n    \"T16-17\",\n    \"T18-19\",\n    \"J20-25\",\n    \"S33-39\",\n    \"M40-46\",\n    \"M47-53\",\n    \"M54-60\",\n    \"M61-67\",\n    \"M68-74\",\n    \"M75-79\",\n    \"M80-84\",\n    \"M85-89\",\n    \"M90+\"\n  ],\n  weightClassesKgMen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 117.5, 125, 140],\n  weightClassesKgWomen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90, 100],\n  weightClassesKgMx: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 117.5, 125, 140],\n  formula: \"Schwartz/Malone\",\n  ageCoefficients: \"FosterMcCulloch\",\n  combineSleevesAndWraps: false,\n  allow4thAttempts: true\n};\n\nconst wpcDefaults: Partial<MeetState> = {\n  divisions: [\n    \"F_GCR\",\n    \"F_GCR_A\",\n    \"F_GEM\",\n    \"F_GEM_A\",\n    \"F_GES\",\n    \"F_GES_A\",\n    \"F_GR\",\n    \"F_GR_A\",\n    \"F_JCR\",\n    \"F_JCR_A\",\n    \"F_JEM\",\n    \"F_JEM_A\",\n    \"F_JES\",\n    \"F_JES_A\",\n    \"F_JR\",\n    \"F_JR_A\",\n    \"F_MCR_1\",\n    \"F_MCR_1_A\",\n    \"F_MCR_2\",\n    \"F_MCR_2_A\",\n    \"F_MCR_3\",\n    \"F_MCR_3_A\",\n    \"F_MCR_4\",\n    \"F_MCR_4_A\",\n    \"F_MCR_5\",\n    \"F_MCR_5_A\",\n    \"F_MCR_6\",\n    \"F_MCR_6_A\",\n    \"F_MCR_7\",\n    \"F_MCR_7_A\",\n    \"F_MCR_8\",\n    \"F_MCR_8_A\",\n    \"F_MCR_9\",\n    \"F_MCR_9_A\",\n    \"F_MCR_X\",\n    \"F_MCR_X_A\",\n    \"F_MEM_1\",\n    \"F_MEM_1_A\",\n    \"F_MEM_2\",\n    \"F_MEM_2_A\",\n    \"F_MEM_3\",\n    \"F_MEM_3_A\",\n    \"F_MEM_4\",\n    \"F_MEM_4_A\",\n    \"F_MEM_5\",\n    \"F_MEM_5_A\",\n    \"F_MEM_6\",\n    \"F_MEM_6_A\",\n    \"F_MEM_7\",\n    \"F_MEM_7_A\",\n    \"F_MEM_8\",\n    \"F_MEM_8_A\",\n    \"F_MEM_9\",\n    \"F_MEM_9_A\",\n    \"F_MEM_X\",\n    \"F_MEM_X_A\",\n    \"F_MES_1\",\n    \"F_MES_1_A\",\n    \"F_MES_2\",\n    \"F_MES_2_A\",\n    \"F_MES_3\",\n    \"F_MES_3_A\",\n    \"F_MES_4\",\n    \"F_MES_4_A\",\n    \"F_MES_5\",\n    \"F_MES_5_A\",\n    \"F_MES_6\",\n    \"F_MES_6_A\",\n    \"F_MES_7\",\n    \"F_MES_7_A\",\n    \"F_MES_8\",\n    \"F_MES_8_A\",\n    \"F_MES_9\",\n    \"F_MES_9_A\",\n    \"F_MES_X\",\n    \"F_MES_X_A\",\n    \"F_MR_1\",\n    \"F_MR_1_A\",\n    \"F_MR_2\",\n    \"F_MR_2_A\",\n    \"F_MR_3\",\n    \"F_MR_3_A\",\n    \"F_MR_4\",\n    \"F_MR_4_A\",\n    \"F_MR_5\",\n    \"F_MR_5_A\",\n    \"F_MR_6\",\n    \"F_MR_6_A\",\n    \"F_MR_7\",\n    \"F_MR_7_A\",\n    \"F_MR_8\",\n    \"F_MR_8_A\",\n    \"F_MR_9\",\n    \"F_MR_9_A\",\n    \"F_MR_X\",\n    \"F_MR_X_A\",\n    \"F_NEM\",\n    \"F_NR\",\n    \"F_OCR\",\n    \"F_OCR_A\",\n    \"F_OEM\",\n    \"F_OEM_A\",\n    \"F_OES\",\n    \"F_OES_A\",\n    \"F_OR\",\n    \"F_OR_A\",\n    \"F_SCR\",\n    \"F_SCR_A\",\n    \"F_SEM\",\n    \"F_SEM_A\",\n    \"F_SES\",\n    \"F_SES_A\",\n    \"F_SOR\",\n    \"F_SOR_A\",\n    \"F_SR\",\n    \"F_SR_A\",\n    \"F_TCR_1\",\n    \"F_TCR_1_A\",\n    \"F_TCR_2\",\n    \"F_TCR_2_A\",\n    \"F_TCR_3\",\n    \"F_TCR_3_A\",\n    \"F_TCR_X\",\n    \"F_TCR_X_A\",\n    \"F_TEM_1\",\n    \"F_TEM_1_A\",\n    \"F_TEM_2\",\n    \"F_TEM_2_A\",\n    \"F_TEM_3\",\n    \"F_TEM_3_A\",\n    \"F_TEM_X\",\n    \"F_TEM_X_A\",\n    \"F_TES_1\",\n    \"F_TES_1_A\",\n    \"F_TES_2\",\n    \"F_TES_2_A\",\n    \"F_TES_3\",\n    \"F_TES_3_A\",\n    \"F_TES_X\",\n    \"F_TES_X_A\",\n    \"F_TR_1\",\n    \"F_TR_1_A\",\n    \"F_TR_2\",\n    \"F_TR_2_A\",\n    \"F_TR_3\",\n    \"F_TR_3_A\",\n    \"F_TR_X\",\n    \"F_TR_X_A\",\n    \"F_YCR\",\n    \"F_YCR_A\",\n    \"F_YEM\",\n    \"F_YEM_A\",\n    \"F_YES\",\n    \"F_YES_A\",\n    \"F_YR\",\n    \"F_YR_A\",\n    \"M_GCR\",\n    \"M_GCR_A\",\n    \"M_GEM\",\n    \"M_GEM_A\",\n    \"M_GES\",\n    \"M_GES_A\",\n    \"M_GR\",\n    \"M_GR_A\",\n    \"M_JCR\",\n    \"M_JCR_A\",\n    \"M_JEM\",\n    \"M_JEM_A\",\n    \"M_JES\",\n    \"M_JES_A\",\n    \"M_JR\",\n    \"M_JR_A\",\n    \"M_MCR_1\",\n    \"M_MCR_1_A\",\n    \"M_MCR_2\",\n    \"M_MCR_2_A\",\n    \"M_MCR_3\",\n    \"M_MCR_3_A\",\n    \"M_MCR_4\",\n    \"M_MCR_4_A\",\n    \"M_MCR_5\",\n    \"M_MCR_5_A\",\n    \"M_MCR_6\",\n    \"M_MCR_6_A\",\n    \"M_MCR_7\",\n    \"M_MCR_7_A\",\n    \"M_MCR_8\",\n    \"M_MCR_8_A\",\n    \"M_MCR_9\",\n    \"M_MCR_9_A\",\n    \"M_MCR_X\",\n    \"M_MCR_X_A\",\n    \"M_MEM_1\",\n    \"M_MEM_1_A\",\n    \"M_MEM_2\",\n    \"M_MEM_2_A\",\n    \"M_MEM_3\",\n    \"M_MEM_3_A\",\n    \"M_MEM_4\",\n    \"M_MEM_4_A\",\n    \"M_MEM_5\",\n    \"M_MEM_5_A\",\n    \"M_MEM_6\",\n    \"M_MEM_6_A\",\n    \"M_MEM_7\",\n    \"M_MEM_7_A\",\n    \"M_MEM_8\",\n    \"M_MEM_8_A\",\n    \"M_MEM_9\",\n    \"M_MEM_9_A\",\n    \"M_MEM_X\",\n    \"M_MEM_X_A\",\n    \"M_MES_1\",\n    \"M_MES_1_A\",\n    \"M_MES_2\",\n    \"M_MES_2_A\",\n    \"M_MES_3\",\n    \"M_MES_3_A\",\n    \"M_MES_4\",\n    \"M_MES_4_A\",\n    \"M_MES_5\",\n    \"M_MES_5_A\",\n    \"M_MES_6\",\n    \"M_MES_6_A\",\n    \"M_MES_7\",\n    \"M_MES_7_A\",\n    \"M_MES_8\",\n    \"M_MES_8_A\",\n    \"M_MES_9\",\n    \"M_MES_9_A\",\n    \"M_MES_X\",\n    \"M_MES_X_A\",\n    \"M_MR_1\",\n    \"M_MR_1_A\",\n    \"M_MR_2\",\n    \"M_MR_2_A\",\n    \"M_MR_3\",\n    \"M_MR_3_A\",\n    \"M_MR_4\",\n    \"M_MR_4_A\",\n    \"M_MR_5\",\n    \"M_MR_5_A\",\n    \"M_MR_6\",\n    \"M_MR_6_A\",\n    \"M_MR_7\",\n    \"M_MR_7_A\",\n    \"M_MR_8\",\n    \"M_MR_8_A\",\n    \"M_MR_9\",\n    \"M_MR_9_A\",\n    \"M_MR_X\",\n    \"M_MR_X_A\",\n    \"M_NEM\",\n    \"M_NEM_A\",\n    \"M_NR\",\n    \"M_NR_A\",\n    \"M_OCR\",\n    \"M_OCR_A\",\n    \"M_OEM\",\n    \"M_OEM_A\",\n    \"M_OES\",\n    \"M_OES_A\",\n    \"M_OR\",\n    \"M_OR_A\",\n    \"M_PFEM\",\n    \"M_PFEM_A\",\n    \"M_PFR_A\",\n    \"M_SCR\",\n    \"M_SCR_A\",\n    \"M_SEM\",\n    \"M_SEM_A\",\n    \"M_SES\",\n    \"M_SES_A\",\n    \"M_SOEM\",\n    \"M_SOEM_A\",\n    \"M_SOR\",\n    \"M_SOR_A\",\n    \"M_SR\",\n    \"M_SR_A\",\n    \"M_TCR_1\",\n    \"M_TCR_1_A\",\n    \"M_TCR_2\",\n    \"M_TCR_2_A\",\n    \"M_TCR_3\",\n    \"M_TCR_3_A\",\n    \"M_TCR_X\",\n    \"M_TCR_X_A\",\n    \"M_TEM_1\",\n    \"M_TEM_1_A\",\n    \"M_TEM_2\",\n    \"M_TEM_2_A\",\n    \"M_TEM_3\",\n    \"M_TEM_3_A\",\n    \"M_TEM_X\",\n    \"M_TEM_X_A\",\n    \"M_TES_1\",\n    \"M_TES_1_A\",\n    \"M_TES_2\",\n    \"M_TES_2_A\",\n    \"M_TES_3\",\n    \"M_TES_3_A\",\n    \"M_TES_X\",\n    \"M_TES_X_A\",\n    \"M_TR_1\",\n    \"M_TR_1_A\",\n    \"M_TR_2\",\n    \"M_TR_2_A\",\n    \"M_TR_3\",\n    \"M_TR_3_A\",\n    \"M_TR_X\",\n    \"M_TR_X_A\",\n    \"M_YCR\",\n    \"M_YCR_A\",\n    \"M_YEM\",\n    \"M_YEM_A\",\n    \"M_YR\",\n    \"M_YR_A\"\n  ],\n  weightClassesKgMen: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  weightClassesKgWomen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90],\n  weightClassesKgMx: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  formula: \"Glossbrenner\",\n  ageCoefficients: \"FosterMcCulloch\",\n  combineSleevesAndWraps: true,\n  allow4thAttempts: true\n};\n\nconst wrpfDefaults: Partial<MeetState> = {\n  divisions: [\n    \"Open\",\n    \"Y5-13\",\n    \"T14-16\",\n    \"S17-19\",\n    \"J20-23\",\n    \"M40-44\",\n    \"M45-49\",\n    \"M50-54\",\n    \"M55-59\",\n    \"M60-64\",\n    \"M65-69\",\n    \"M70-74\",\n    \"M75-79\",\n    \"M80+\"\n  ],\n  weightClassesKgMen: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  weightClassesKgWomen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90],\n  weightClassesKgMx: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\n  formula: \"Wilks\",\n  ageCoefficients: \"FosterMcCulloch\",\n  combineSleevesAndWraps: false,\n  allow4thAttempts: true\n};\n\nclass AutoFillRules extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n    this.state = {\n      selectedOption: \"Traditional\"\n    };\n  }\n\n  handleSelectChange = (event: FormEvent<FormControlTypeHack>) => {\n    let value = event.currentTarget.value as AutoFillOption;\n    // Only handle any valid values & assist the compiler in giving us a compile error if AutoFillOption has more values added\n    switch (value) {\n      case \"Traditional\":\n      case \"GPC\":\n      case \"SPF\":\n      case \"UPA\":\n      case \"USPA\":\n      case \"USAPL\":\n      case \"WABDL\":\n      case \"WPC\":\n      case \"WRPF\":\n        this.setState({ selectedOption: value });\n        break;\n\n      default:\n        checkExhausted(value);\n        throw new Error(`Expected a value that corresponds to an AutoFillOption, instead got \"${value}\"`);\n    }\n  };\n\n  handleClick = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    switch (this.state.selectedOption) {\n      case \"Traditional\":\n        this.props.updateMeet(traditionalDefaults);\n        return;\n      case \"GPC\":\n        this.props.updateMeet(gpcDefaults);\n        return;\n      case \"SPF\":\n        this.props.updateMeet(spfDefaults);\n        return;\n      case \"UPA\":\n        this.props.updateMeet(upaDefaults);\n        return;\n      case \"USAPL\":\n        this.props.updateMeet(usaplDefaults);\n        return;\n      case \"USPA\":\n        this.props.updateMeet(uspaDefaults);\n        return;\n      case \"WABDL\":\n        this.props.updateMeet(wabdlDefaults);\n        return;\n      case \"WPC\":\n        this.props.updateMeet(wpcDefaults);\n        return;\n      case \"WRPF\":\n        this.props.updateMeet(wrpfDefaults);\n        return;\n      default:\n        checkExhausted(this.state.selectedOption);\n        return;\n    }\n  };\n\n  render() {\n    const lang = this.props.language;\n\n    const stringTraditional = getString(\"meet-setup.rules-traditional\", lang);\n    const stringGPC = getString(\"meet-setup.rules-gpc\", lang);\n    const stringSPF = getString(\"meet-setup.rules-spf\", lang);\n    const stringUPA = getString(\"meet-setup.rules-upa\", lang);\n    const stringUSAPL = getString(\"meet-setup.rules-usapl\", lang);\n    const stringUSPA = getString(\"meet-setup.rules-uspa\", lang);\n    const stringWABDL = getString(\"meet-setup.rules-wabdl\", lang);\n    const stringWPC = getString(\"meet-setup.rules-wpc\", lang);\n    const stringWRPF = getString(\"meet-setup.rules-wrpf\", lang);\n\n    return (\n      <div>\n        <FormGroup>\n          <Form.Label>\n            <FormattedMessage id=\"meet-setup.label-auto-fill-rules\" defaultMessage=\"Auto-Fill Rules\" />\n          </Form.Label>\n          <div>\n            <FormControl\n              as=\"select\"\n              onChange={this.handleSelectChange}\n              defaultValue={this.state.selectedOption}\n              style={{ width: \"70%\", display: \"inline-block\" }}\n              className=\"custom-select\"\n            >\n              <option key=\"Traditional\" value=\"Traditional\">\n                {stringTraditional}\n              </option>\n              <option key=\"GPC\" value=\"GPC\">\n                {stringGPC}\n              </option>\n              <option key=\"SPF\" value=\"SPF\">\n                {stringSPF}\n              </option>\n              <option key=\"UPA\" value=\"UPA\">\n                {stringUPA}\n              </option>\n              <option key=\"USAPL\" value=\"USAPL\">\n                {stringUSAPL}\n              </option>\n              <option key=\"USPA\" value=\"USPA\">\n                {stringUSPA}\n              </option>\n              <option key=\"WABDL\" value=\"WABDL\">\n                {stringWABDL}\n              </option>\n              <option key=\"WPC\" value=\"WPC\">\n                {stringWPC}\n              </option>\n              <option key=\"WRPF\" value=\"WRPF\">\n                {stringWRPF}\n              </option>\n            </FormControl>\n\n            <Button onClick={this.handleClick} variant=\"primary\" style={{ width: \"25%\", marginLeft: \"5%\" }}>\n              <FormattedMessage id=\"meet-setup.button-autofill\" defaultMessage=\"Auto-Fill\" />\n            </Button>\n          </div>\n        </FormGroup>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  federation: state.meet.federation,\n  language: state.language\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    updateMeet: changes => dispatch(updateMeet(changes))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AutoFillRules);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Form from \"react-bootstrap/Form\";\n\nimport CreatableSelect from \"react-select/lib/Creatable\";\n\nimport { getString } from \"../../logic/strings\";\n\nimport { setDivisions } from \"../../actions/meetSetupActions\";\n\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { Language } from \"../../types/dataTypes\";\nimport { Dispatch } from \"redux\";\nimport { ActionMeta, ValueType } from \"react-select/lib/types\";\n\nconst components = {\n  DropdownIndicator: null\n};\n\ninterface OptionType {\n  label: string;\n  value: string;\n}\n\nconst createOption = (label: string): OptionType => ({\n  label,\n  value: label\n});\n\ninterface StateProps {\n  divisions: Array<string>;\n  language: Language;\n}\n\ninterface DispatchProps {\n  setDivisions: (divisions: Array<string>) => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\ninterface InternalState {\n  inputValue: string;\n  value: Array<OptionType>;\n}\n\nclass DivisionSelect extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    let objarray = [];\n    for (let i = 0; i < props.divisions.length; i++) {\n      const division = props.divisions[i];\n      objarray.push({ value: division, label: division });\n    }\n\n    this.state = {\n      inputValue: \"\",\n      value: objarray\n    };\n\n    this.maybeUpdateRedux = this.maybeUpdateRedux.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  // Updates the Redux store if a division was added or removed.\n  // Since updates are synchronous, we can simply check length.\n  maybeUpdateRedux = (objarray: Array<OptionType>): void => {\n    // objarray is a list of {value: \"foo\", label: \"foo\"} objects.\n    if (objarray.length === this.props.divisions.length) {\n      return;\n    }\n\n    // The divisions changed: save to Redux.\n    let divisions = [];\n    for (let i = 0; i < objarray.length; i++) {\n      divisions.push(objarray[i].label);\n    }\n    this.props.setDivisions(divisions);\n  };\n\n  // Handles the case of deleting an existing division.\n  handleChange = (value: ValueType<OptionType>, actionMeta: ActionMeta): void => {\n    if (value instanceof Array) {\n      this.setState({ value: value });\n      this.maybeUpdateRedux(value);\n    }\n  };\n\n  // Reflects the current typing status in the state.\n  handleInputChange = (inputValue: string): void => {\n    this.setState({ inputValue: inputValue });\n  };\n\n  // Handles the case of creating a new division.\n  handleKeyDown = (event: React.KeyboardEvent<HTMLElement>): void => {\n    const { inputValue, value } = this.state;\n    if (!inputValue) return;\n    if (event.key === \"Enter\" || event.key === \"Tab\") {\n      // Disallow creating redundant divisions.\n      for (let i = 0; i < value.length; i++) {\n        if (value[i].label === inputValue) {\n          // Silently drop the redundant division.\n          this.setState({ inputValue: \"\" });\n          event.preventDefault();\n          return;\n        }\n      }\n\n      const newValue = [...value, createOption(inputValue)];\n      this.setState({\n        inputValue: \"\",\n        value: newValue\n      });\n      this.maybeUpdateRedux(newValue);\n      event.preventDefault();\n    }\n  };\n\n  render() {\n    const { inputValue, value } = this.state;\n    const placeholder = getString(\"meet-setup.divisions-placeholder\", this.props.language);\n    return (\n      <Form.Group>\n        <Form.Label>\n          <FormattedMessage id=\"meet-setup.divisions-label\" defaultMessage=\"Divisions (prefer short codes!)\" />\n        </Form.Label>\n        <CreatableSelect\n          components={components}\n          inputValue={inputValue}\n          isMulti\n          menuIsOpen={false}\n          onChange={this.handleChange}\n          onInputChange={this.handleInputChange}\n          onKeyDown={this.handleKeyDown}\n          placeholder={placeholder}\n          value={value}\n        />\n      </Form.Group>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  divisions: state.meet.divisions,\n  language: state.language\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    setDivisions: divisions => dispatch(setDivisions(divisions))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DivisionSelect);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Form from \"react-bootstrap/Form\";\n\nimport CreatableSelect from \"react-select/lib/Creatable\";\n\nimport { getString } from \"../../logic/strings\";\nimport { displayWeight } from \"../../logic/units\";\n\nimport { setWeightClasses } from \"../../actions/meetSetupActions\";\n\nimport { Language, Sex } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { checkExhausted } from \"../../types/utils\";\nimport { Dispatch } from \"redux\";\nimport { ActionMeta, ValueType } from \"react-select/lib/types\";\n\nconst components = {\n  DropdownIndicator: null\n};\n\ntype OptionType = {\n  label: string;\n  value: string;\n};\n\nconst createOption = (label: string): OptionType => ({\n  label,\n  value: label.replace(\",\", \".\")\n});\n\ninterface OwnProps {\n  label: string;\n  sex: Sex;\n}\n\ninterface StateProps {\n  classes: Array<number>;\n  language: Language;\n}\n\ninterface DispatchProps {\n  setWeightClasses: (sex: Sex, classesKg: Array<number>) => void;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\ninterface InternalState {\n  inputValue: string;\n  value: Array<OptionType>;\n}\n\nclass WeightClassesSelect extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    let objarray: Array<OptionType> = [];\n    for (let i = 0; i < props.classes.length; i++) {\n      const c = displayWeight(props.classes[i], props.language);\n      objarray.push(createOption(c));\n    }\n\n    this.state = {\n      inputValue: \"\",\n      value: objarray\n    };\n\n    this.maybeUpdateRedux = this.maybeUpdateRedux.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  // Updates the Redux store if a weightclass was added or removed.\n  // Since updates are synchronous, we can simply check length.\n  maybeUpdateRedux = (objarray: Array<OptionType>): void => {\n    if (objarray.length === this.props.classes.length) {\n      return;\n    }\n\n    // The classes changed: save to Redux.\n    let classes = [];\n    for (let i = 0; i < objarray.length; i++) {\n      classes.push(Number(objarray[i].value));\n    }\n    this.props.setWeightClasses(this.props.sex, classes);\n  };\n\n  handleChange = (value: ValueType<OptionType>, actionMeta: ActionMeta): void => {\n    if (value instanceof Array) {\n      this.setState({ value: value });\n      this.maybeUpdateRedux(value);\n    }\n  };\n\n  // Reflects the current typing status in the state.\n  handleInputChange = (inputValue: string): void => {\n    this.setState({ inputValue: inputValue });\n  };\n\n  // Handles the case of creating a new weightclass.\n  handleKeyDown = (event: React.KeyboardEvent<HTMLElement>): void => {\n    const { inputValue, value } = this.state;\n    if (!inputValue) return;\n    if (event.key === \"Enter\" || event.key === \"Tab\") {\n      const asNumber = Number(inputValue.replace(\",\", \".\"));\n\n      // Disallow creating non-numeric inputs.\n      if (isNaN(asNumber) || !isFinite(asNumber)) {\n        this.setState({ inputValue: \"\" });\n        event.preventDefault();\n        return;\n      }\n\n      // Disallow negative inputs.\n      // The string check is for negative zero.\n      if (asNumber < 0 || inputValue.includes(\"-\")) {\n        this.setState({ inputValue: \"\" });\n        event.preventDefault();\n        return;\n      }\n\n      // Disallow creating redundant classes.\n      for (let i = 0; i < value.length; i++) {\n        if (Number(value[i].label) === asNumber) {\n          // Silently drop the redundant weightclass.\n          this.setState({ inputValue: \"\" });\n          event.preventDefault();\n          return;\n        }\n      }\n\n      // Sort the new value into the array.\n      let newValue = [...value, createOption(inputValue)];\n      newValue = newValue.sort((a, b) => Number(a.value) - Number(b.value));\n\n      this.setState({\n        inputValue: \"\",\n        value: newValue\n      });\n      this.maybeUpdateRedux(newValue);\n      event.preventDefault();\n    }\n  };\n\n  render() {\n    const { inputValue, value } = this.state;\n    const placeholder = getString(\"meet-setup.placeholder-classes\", this.props.language);\n\n    return (\n      <Form.Group>\n        <Form.Label>{this.props.label}</Form.Label>\n        <CreatableSelect\n          components={components}\n          inputValue={inputValue}\n          isMulti\n          menuIsOpen={false}\n          onChange={this.handleChange}\n          onInputChange={this.handleInputChange}\n          onKeyDown={this.handleKeyDown}\n          placeholder={placeholder}\n          value={value}\n        />\n      </Form.Group>\n    );\n  }\n}\n\nconst selectClassesBySex = (sex: Sex, state: GlobalState): Array<number> => {\n  switch (sex) {\n    case \"M\":\n      return state.meet.weightClassesKgMen;\n    case \"F\":\n      return state.meet.weightClassesKgWomen;\n    case \"Mx\":\n      return state.meet.weightClassesKgMx;\n    default:\n      checkExhausted(sex);\n      return state.meet.weightClassesKgMen;\n  }\n};\n\nconst mapStateToProps = (state: GlobalState, ownProps: OwnProps): StateProps => {\n  return {\n    classes: selectClassesBySex(ownProps.sex, state),\n    language: state.language\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    setWeightClasses: (sex, classesKg) => dispatch(setWeightClasses(sex, classesKg))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WeightClassesSelect);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React, { FormEvent } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Form from \"react-bootstrap/Form\";\n\nimport { setBarAndCollarsWeightKg } from \"../../actions/meetSetupActions\";\nimport { getString } from \"../../logic/strings\";\nimport { displayWeight, kg2lbs, lbs2kg } from \"../../logic/units\";\n\nimport { Language, Lift, Validation } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { assertString, checkExhausted, FormControlTypeHack } from \"../../types/utils\";\nimport { Dispatch } from \"redux\";\nimport { SetBarAndCollarsWeightKgAction } from \"../../types/actionTypes\";\nimport NumberInput from \"../common/NumberInput\";\n\ninterface OwnProps {\n  lift: Lift;\n}\n\ninterface StateProps {\n  inKg: boolean;\n  squatBarAndCollarsWeightKg: number;\n  benchBarAndCollarsWeightKg: number;\n  deadliftBarAndCollarsWeightKg: number;\n  language: Language;\n}\n\ninterface DispatchProps {\n  setBarAndCollarsWeightKg: (lift: Lift, weight: number) => SetBarAndCollarsWeightKgAction;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\ninterface InternalState {\n  value: string;\n}\n\nclass BarAndCollarsWeightKg extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    this.validate = this.validate.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n    const weight = this.getInitialBarAndCollarsWeightKg(this.props.lift);\n    const value = this.props.inKg ? weight : kg2lbs(weight);\n\n    this.state = {\n      value: displayWeight(value, props.language)\n    };\n  }\n\n  getInitialBarAndCollarsWeightKg = (lift: Lift): number => {\n    switch (lift) {\n      case \"S\":\n        return this.props.squatBarAndCollarsWeightKg;\n      case \"B\":\n        return this.props.benchBarAndCollarsWeightKg;\n      case \"D\":\n        return this.props.deadliftBarAndCollarsWeightKg;\n      default:\n        checkExhausted(lift);\n        return 0;\n    }\n  };\n\n  validate = (): Validation => {\n    const { value } = this.state;\n    const asNumber = Number(value.replace(\",\", \".\"));\n\n    if (isNaN(asNumber) || asNumber <= 0 || asNumber < 5) {\n      return \"error\";\n    }\n    return \"success\";\n  };\n\n  handleChange = (value: string | undefined) => {\n    const stringValue = value || \"\";\n    this.setState({ value: stringValue }, () => {\n      if (this.validate() === \"success\") {\n        const asNum = Number(stringValue.replace(\",\", \".\"));\n        const weight = this.props.inKg ? asNum : lbs2kg(asNum);\n        this.props.setBarAndCollarsWeightKg(this.props.lift, weight);\n      }\n    });\n  };\n\n  getLiftLabel = (lift: Lift, inKg: boolean, language: Language): string => {\n    switch (lift) {\n      case \"S\":\n        if (inKg) {\n          return getString(\"meet-setup.bar-weight-squat-kg\", language);\n        } else {\n          return getString(\"meet-setup.bar-weight-squat-lbs\", language);\n        }\n      case \"B\":\n        if (inKg) {\n          return getString(\"meet-setup.bar-weight-bench-kg\", language);\n        } else {\n          return getString(\"meet-setup.bar-weight-bench-lbs\", language);\n        }\n      case \"D\":\n        if (inKg) {\n          return getString(\"meet-setup.bar-weight-deadlift-kg\", language);\n        } else {\n          return getString(\"meet-setup.bar-weight-deadlift-lbs\", language);\n        }\n      default:\n        checkExhausted(lift);\n        return \"\";\n    }\n  };\n\n  render() {\n    const validation: Validation = this.validate();\n    const label = this.getLiftLabel(this.props.lift, this.props.inKg, this.props.language);\n\n    return (\n      <NumberInput\n        label={label}\n        min={0}\n        step={2.5}\n        value={this.state.value}\n        onChange={this.handleChange}\n        validationStatus={validation}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  inKg: state.meet.inKg,\n  squatBarAndCollarsWeightKg: state.meet.squatBarAndCollarsWeightKg,\n  benchBarAndCollarsWeightKg: state.meet.benchBarAndCollarsWeightKg,\n  deadliftBarAndCollarsWeightKg: state.meet.deadliftBarAndCollarsWeightKg,\n  language: state.language\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    setBarAndCollarsWeightKg: (lift: Lift, weightKg: number) => dispatch(setBarAndCollarsWeightKg(lift, weightKg))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BarAndCollarsWeightKg);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines a widget for selecting a plate color.\n\nimport React from \"react\";\nimport { ColorResult, TwitterPicker } from \"react-color\";\n\nimport { PlateColors } from \"../../constants/plateColors\";\n\nimport styles from \"./ColorPicker.module.scss\";\nimport * as Popper from \"react-popper\";\n\ninterface OwnProps {\n  color: string;\n  onChange: (color: string) => void;\n}\n\ntype Props = OwnProps;\n\ninterface InternalState {\n  displayColorPicker: boolean;\n  color: string;\n\n  // Handle returned by setTimeout() for the timeout that closes the color\n  // selector popup after the mouse leaves and time has elapsed.\n  timeoutId: any;\n}\n\nclass ColorPicker extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      displayColorPicker: false,\n      color: props.color,\n      timeoutId: null\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleMouseLeave = this.handleMouseLeave.bind(this);\n    this.handleMouseEnter = this.handleMouseEnter.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleClick = () => {\n    clearTimeout(this.state.timeoutId);\n    this.setState({ displayColorPicker: !this.state.displayColorPicker, timeoutId: null });\n  };\n\n  handleMouseLeave = () => {\n    // Close the popup after a second has elapsed.\n    // This gives the user a chance to bring the mouse back into the popup.\n    let timeoutId = setTimeout(() => {\n      this.setState({ displayColorPicker: false, timeoutId: null });\n    }, 1000);\n    this.setState({ timeoutId: timeoutId });\n  };\n\n  handleMouseEnter = () => {\n    // Prevent any close-popup timeout from executing.\n    if (this.state.timeoutId !== null) {\n      clearTimeout(this.state.timeoutId);\n      this.setState({ timeoutId: null });\n    }\n  };\n\n  handleChange = (color: ColorResult, event: any) => {\n    // @types/react-color doesn't define an event for onChange but it is published in\n    // their documentation: https://casesandberg.github.io/react-color/#api-onChange\n    // If the event was a MouseEvent|TouchEvent (i.e they clicked a swatch) we assume\n    // that the user wants the panel to close immediately.\n    const displayColorPicker = event.clientX === undefined;\n    const hex = color.hex.toUpperCase();\n    this.setState({ displayColorPicker, color: hex });\n    this.props.onChange(hex);\n  };\n\n  render() {\n    const colors = Object.values(PlateColors);\n    let picker = null;\n    if (this.state.displayColorPicker) {\n      picker = (\n        <Popper.Popper placement=\"bottom-end\">\n          {({ ref, style, placement }) => (\n            <div ref={ref} style={style} data-placement={placement}>\n              <TwitterPicker\n                color={this.state.color}\n                colors={colors}\n                triangle=\"hide\"\n                onChange={this.handleChange as any}\n              />\n            </div>\n          )}\n        </Popper.Popper>\n      );\n    }\n\n    return (\n      <Popper.Manager>\n        <div onMouseLeave={this.handleMouseLeave} onMouseEnter={this.handleMouseEnter}>\n          <Popper.Reference>\n            {({ ref }) => (\n              <div ref={ref} className={styles.swatch} onClick={this.handleClick}>\n                <div className={styles.color} style={{ background: this.state.color }} />\n              </div>\n            )}\n          </Popper.Reference>\n          {picker}\n        </div>\n      </Popper.Manager>\n    );\n  }\n}\n\nexport default ColorPicker;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Displays the selector for determining how many plates are available\n// to loaders on one side, and what color it is, for a single plate weight.\n\nimport React, { FunctionComponent } from \"react\";\nimport { Plate } from \"../../types/dataTypes\";\nimport NumberInput from \"../common/NumberInput\";\nimport ColorPicker from \"./ColorPicker\";\nimport { GlobalState } from \"../../types/stateTypes\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\n\ninterface Props {\n  id: string;\n  weightKg: number;\n  displayWeight: string;\n  defaultValue: string;\n  pairCount: number;\n  color: string;\n  onChange: (weightKg: number, id: string, amount: number, color: string) => void;\n}\n\nconst PlateInput: FunctionComponent<Props> = props => {\n  return (\n    <tr key={props.id}>\n      <td>{props.displayWeight}</td>\n      <td>\n        <FormGroup>\n          <NumberInput\n            min={0}\n            step={1}\n            value={String(props.pairCount)}\n            onChange={count => props.onChange(props.weightKg, props.id, Number(count), props.color)}\n            inputWidth=\"50%\"\n          />\n        </FormGroup>\n      </td>\n      <td>\n        <ColorPicker\n          color={props.color}\n          onChange={color => props.onChange(props.weightKg, props.id, props.pairCount, color)}\n        />\n      </td>\n    </tr>\n  );\n};\n\nexport default PlateInput;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Displays the selector for determining how many plates are available\n// to loaders on one side.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport FormControl from \"react-bootstrap/FormControl\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\nimport Table from \"react-bootstrap/Table\";\n\nimport ColorPicker from \"./ColorPicker\";\n\nimport { setPlateConfig } from \"../../actions/meetSetupActions\";\n\nimport { getString } from \"../../logic/strings\";\nimport { displayWeight, kg2lbs } from \"../../logic/units\";\n\nimport { Language, Plate } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { Dispatch } from \"redux\";\nimport { FormControlTypeHack, isString } from \"../../types/utils\";\nimport { isNumber } from \"util\";\nimport PlateInput from \"./PlateInput\";\n\ninterface StateProps {\n  inKg: boolean;\n  plates: Array<Plate>;\n  language: Language;\n}\n\ninterface DispatchProps {\n  setPlateConfig: (weight: number, amount: number, color: string) => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\nclass Plates extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    this.validateAmountInput = this.validateAmountInput.bind(this);\n    this.updateHandler = this.updateHandler.bind(this);\n  }\n\n  validateAmountInput: (id: string) => \"error\" | null | undefined = id => {\n    const widget: any = document.getElementById(id);\n\n    // This can happen because the FormGroup is created before the widget exists.\n    if (widget === null) return;\n    const value = widget.value;\n\n    if (value === undefined) return \"error\";\n\n    // Ensure that the value is an integer in a reasonable range.\n    let asNum = Number(value);\n    if (Math.floor(asNum) !== asNum) return \"error\";\n    if (asNum < 0 || asNum > 20) return \"error\";\n    if (String(asNum) !== value) return \"error\";\n\n    return null;\n  };\n\n  updateHandler = (weightKg: number, id: string, amount: string | number | string[] | undefined, color: string) => {\n    if (!isString(amount) && !isNumber(amount)) {\n      throw new Error(`Expected either a string or a number, but got ${amount}`);\n    }\n\n    if (this.validateAmountInput(id) === \"error\") {\n      // Although no state is set, this is used to trigger the FormGroup\n      // to re-query the validationState on change.\n      return this.setState({});\n    }\n\n    this.props.setPlateConfig(weightKg, Number(amount), color);\n  };\n\n  renderWeightRow = (weightKg: number, amount: number, color: string) => {\n    // The input event value isn't passed by the event, so we assign a unique ID\n    // and then just search the whole document for it.\n    const id = \"weight\" + String(weightKg);\n    const weight = this.props.inKg ? weightKg : kg2lbs(weightKg);\n\n    return (\n      <PlateInput\n        id={id}\n        weightKg={weightKg}\n        displayWeight={displayWeight(weight, this.props.language)}\n        defaultValue={amount.toString()}\n        pairCount={amount}\n        color={color}\n        onChange={this.updateHandler}\n      />\n    );\n  };\n\n  render() {\n    const plateRows = this.props.plates.map((obj: Plate) =>\n      this.renderWeightRow(obj.weightKg, obj.pairCount, obj.color)\n    );\n    const unitId = this.props.inKg ? \"meet-setup.plates-kg\" : \"meet-setup.plates-lbs\";\n    const stringPlate = getString(unitId, this.props.language);\n\n    return (\n      <div>\n        <Table striped size=\"sm\" hover style={{ margin: \"0px\" }}>\n          <thead>\n            <tr>\n              <th>{stringPlate}</th>\n              <th>\n                <FormattedMessage id=\"meet-setup.plates-num-pairs\" defaultMessage=\"Pairs of Plates\" />\n              </th>\n              <th>\n                <FormattedMessage id=\"meet-setup.plates-color\" defaultMessage=\"Color\" />\n              </th>\n            </tr>\n          </thead>\n          <tbody>{plateRows}</tbody>\n        </Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  inKg: state.meet.inKg,\n  plates: state.meet.plates,\n  language: state.language\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    setPlateConfig: (weightKg, amount, color) => dispatch(setPlateConfig(weightKg, amount, color))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Plates);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n//\n// This is a split Yes/No button\n\nimport React, { FunctionComponent } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Button from \"react-bootstrap/Button\";\n\ninterface Props {\n  value: boolean;\n  setValue: (bool: boolean) => void;\n  label: JSX.Element | string;\n  yes: string;\n  no: string;\n}\n\nconst YesNoButton: FunctionComponent<Props> = props => {\n  return (\n    <Form.Group>\n      <Form.Label>{props.label}</Form.Label>\n      <ButtonGroup style={{ width: \"100%\" }}>\n        <Button active={!props.value} variant=\"outline-secondary\" onClick={() => props.setValue(false)}>\n          {props.no}\n        </Button>\n        <Button active={props.value} variant=\"outline-secondary\" onClick={() => props.setValue(true)}>\n          {props.yes}\n        </Button>\n      </ButtonGroup>\n    </Form.Group>\n  );\n};\n\nexport default YesNoButton;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React, { FormEvent } from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Card from \"react-bootstrap/Card\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\nimport Row from \"react-bootstrap/Row\";\n\nimport ValidatedInput from \"../ValidatedInput\";\n\nimport MeetDate from \"./MeetDate\";\nimport MeetLength from \"./MeetLength\";\nimport PlatformCounts from \"./PlatformCounts\";\nimport AutoFillRules from \"./AutoFillRules\";\nimport DivisionSelect from \"./DivisionSelect\";\nimport WeightClassesSelect from \"./WeightClassesSelect\";\nimport BarAndCollarsWeightKg from \"./BarAndCollarsWeightKg\";\nimport Plates from \"./Plates\";\nimport YesNoButton from \"../common/YesNoButton\";\n\nimport { getString } from \"../../logic/strings\";\nimport { updateMeet, setInKg } from \"../../actions/meetSetupActions\";\n\nimport { GlobalState, MeetState } from \"../../types/stateTypes\";\nimport { Dispatch } from \"redux\";\nimport { FormControlTypeHack, assertString, assertFormula, assertAgeCoefficients } from \"../../types/utils\";\nimport { AgeCoefficients, Formula, Language, Validation } from \"../../types/dataTypes\";\n\ninterface StateProps {\n  meet: MeetState;\n  masterKey: string; // Used to force-update rules components on Auto-Fill.\n  language: Language;\n}\n\ninterface DispatchProps {\n  setMeetName: (name: string) => void;\n  setCountry: (country: string) => void;\n  setState: (state: string) => void;\n  setCity: (city: string) => void;\n  setFederation: (fed: string) => void;\n  setCombineSleevesAndWraps: (bool: boolean) => void;\n  setAllow4thAttempts: (bool: boolean) => void;\n  setInKg: (bool: boolean) => void;\n  setShowAlternateUnits: (bool: boolean) => void;\n  setFormula: (event: FormEvent<FormControlTypeHack>) => void;\n  setAgeCoefficients: (event: FormEvent<FormControlTypeHack>) => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\n// The widgets speak strings, but the state speaks boolean.\nconst yesNoToBoolean = (yesno: string): boolean => {\n  if (yesno === \"Yes\") return true;\n  return false;\n};\nconst yesNoFromBoolean = (bool: boolean): string => {\n  if (bool === true) return \"Yes\";\n  return \"No\";\n};\n\nclass MeetSetup extends React.Component<Props> {\n  validateRequiredText = (value?: string): Validation => {\n    if (!value) return \"warning\";\n    if (value.includes('\"')) return \"error\";\n    return \"success\";\n  };\n\n  render() {\n    // This is used as a key to force unit-dependent components to re-initialize state.\n    const inKg = String(this.props.meet.inKg);\n    const language = this.props.language;\n\n    const stringMeetName = getString(\"meet-setup.meet-name\", language);\n    const stringFederation = getString(\"common.federation\", language);\n    const stringCountry = getString(\"common.country\", language);\n    const stringStateProvince = getString(\"meet-setup.state-province\", language);\n    const stringCityTown = getString(\"meet-setup.city-town\", language);\n\n    const stringKilograms = getString(\"common.kilograms\", language);\n    const stringPounds = getString(\"common.pounds\", language);\n\n    const stringMensClasses = getString(\"meet-setup.label-classes-men\", language);\n    const stringWomensClasses = getString(\"meet-setup.label-classes-women\", language);\n    const stringMxClasses = getString(\"meet-setup.label-classes-mx\", language);\n\n    const stringAH = getString(\"formula.ah\", language);\n    const stringBodyweightMultiple = getString(\"formula.bodyweight-multiple\", language);\n    const stringDots = getString(\"formula.dots\", language);\n    const stringGlossbrenner = getString(\"formula.glossbrenner\", language);\n    const stringIPFPoints = getString(\"formula.ipf-points\", language);\n    const stringNASAPoints = getString(\"formula.nasa-points\", language);\n    const stringReshel = getString(\"formula.reshel\", language);\n    const stringSchwartzMalone = getString(\"formula.schwartz-malone\", language);\n    const stringTotal = getString(\"formula.total\", language);\n    const stringWilks = getString(\"formula.wilks\", language);\n    const stringNone = getString(\"age-coefficients.none\", language);\n    const stringFosterMcCulloch = getString(\"age-coefficients.foster-mcculloch\", language);\n    const stringNo = getString(\"common.response-no\", language);\n    const stringYes = getString(\"common.response-yes\", language);\n\n    const stringAlsoKilograms = getString(\"meet-setup.label-also-show-kilograms\", language);\n    const stringAlsoPounds = getString(\"meet-setup.label-also-show-pounds\", language);\n\n    return (\n      <Container>\n        <Row>\n          <Col md={4}>\n            <Card border=\"info\">\n              <Card.Header>\n                <FormattedMessage id=\"meet-setup.header-sanction-info\" defaultMessage=\"Sanction Information\" />\n              </Card.Header>\n              <Card.Body>\n                <ValidatedInput\n                  label={stringMeetName}\n                  placeholder={stringMeetName}\n                  initialValue={this.props.meet.name}\n                  validate={this.validateRequiredText}\n                  onSuccess={this.props.setMeetName}\n                  keepMargin={true}\n                />\n                <ValidatedInput\n                  label={stringFederation}\n                  placeholder={stringFederation}\n                  initialValue={this.props.meet.federation}\n                  validate={this.validateRequiredText}\n                  onSuccess={this.props.setFederation}\n                  keepMargin={true}\n                />\n                <ValidatedInput\n                  label={stringCountry}\n                  placeholder={stringCountry}\n                  initialValue={this.props.meet.country}\n                  validate={this.validateRequiredText}\n                  onSuccess={this.props.setCountry}\n                  keepMargin={true}\n                />\n                <ValidatedInput\n                  label={stringStateProvince}\n                  placeholder={stringStateProvince}\n                  initialValue={this.props.meet.state}\n                  validate={this.validateRequiredText}\n                  onSuccess={this.props.setState}\n                  keepMargin={true}\n                />\n                <ValidatedInput\n                  label={stringCityTown}\n                  placeholder={stringCityTown}\n                  initialValue={this.props.meet.city}\n                  validate={this.validateRequiredText}\n                  onSuccess={this.props.setCity}\n                  keepMargin={true}\n                />\n                <MeetDate />\n                <MeetLength />\n                <PlatformCounts />\n              </Card.Body>\n            </Card>\n          </Col>\n\n          <Col md={4}>\n            <Card>\n              <Card.Header>\n                <FormattedMessage id=\"meet-setup.header-rules\" defaultMessage=\"Competition Rules\" />\n              </Card.Header>\n              <Card.Body>\n                <AutoFillRules />\n                <DivisionSelect key={this.props.masterKey} />\n                <WeightClassesSelect sex=\"M\" label={stringMensClasses} key={this.props.masterKey + \"-M\"} />\n                <WeightClassesSelect sex=\"F\" label={stringWomensClasses} key={this.props.masterKey + \"-F\"} />\n                <WeightClassesSelect sex=\"Mx\" label={stringMxClasses} key={this.props.masterKey + \"-Mx\"} />\n\n                <FormGroup key={this.props.masterKey + \"-formula\"}>\n                  <Form.Label>\n                    <FormattedMessage id=\"meet-setup.formula\" defaultMessage=\"Best Lifter Formula\" />\n                  </Form.Label>\n                  <FormControl\n                    as=\"select\"\n                    defaultValue={this.props.meet.formula}\n                    onChange={this.props.setFormula}\n                    className=\"custom-select\"\n                  >\n                    <option value=\"AH\">{stringAH}</option>\n                    <option value=\"Bodyweight Multiple\">{stringBodyweightMultiple}</option>\n                    <option value=\"Dots\">{stringDots}</option>\n                    <option value=\"Glossbrenner\">{stringGlossbrenner}</option>\n                    <option value=\"IPF Points\">{stringIPFPoints}</option>\n                    <option value=\"NASA Points\">{stringNASAPoints}</option>\n                    <option value=\"Reshel\">{stringReshel}</option>\n                    <option value=\"Schwartz/Malone\">{stringSchwartzMalone}</option>\n                    <option value=\"Total\">{stringTotal}</option>\n                    <option value=\"Wilks\">{stringWilks}</option>\n                  </FormControl>\n                </FormGroup>\n\n                <FormGroup key={this.props.masterKey + \"-ageCoefficients\"}>\n                  <Form.Label>\n                    <FormattedMessage\n                      id=\"meet-setup.age-coefficients\"\n                      defaultMessage=\"Age Coefficients for Best Juniors/Masters Lifter\"\n                    />\n                  </Form.Label>\n                  <FormControl\n                    as=\"select\"\n                    defaultValue={this.props.meet.ageCoefficients}\n                    onChange={this.props.setAgeCoefficients}\n                    className=\"custom-select\"\n                  >\n                    <option key=\"None\" value=\"None\">\n                      {stringNone}\n                    </option>\n                    <option key=\"FosterMcCulloch\" value=\"FosterMcCulloch\">\n                      {stringFosterMcCulloch}\n                    </option>\n                  </FormControl>\n                </FormGroup>\n\n                <FormGroup key={this.props.masterKey + \"-sleeves-wraps\"}>\n                  <YesNoButton\n                    label={\n                      <FormattedMessage\n                        id=\"meet-setup.combine-sleeves-wraps\"\n                        defaultMessage=\"Should Sleeves and Wraps be combined for placing?\"\n                      />\n                    }\n                    value={this.props.meet.combineSleevesAndWraps}\n                    setValue={this.props.setCombineSleevesAndWraps}\n                    yes={stringYes}\n                    no={stringNo}\n                  />\n                </FormGroup>\n\n                <FormGroup key={this.props.masterKey + \"-4th-attempts\"}>\n                  <YesNoButton\n                    label={\n                      <FormattedMessage\n                        id=\"meet-setup.allow-4th-attempts\"\n                        defaultMessage=\"Can lifters take 4th attempts for records?\"\n                      />\n                    }\n                    value={this.props.meet.allow4thAttempts}\n                    setValue={this.props.setAllow4thAttempts}\n                    yes={stringYes}\n                    no={stringNo}\n                  />\n                </FormGroup>\n              </Card.Body>\n            </Card>\n          </Col>\n\n          <Col md={4}>\n            <Card border=\"info\">\n              <Card.Header>\n                <FormattedMessage id=\"meet-setup.header-loading\" defaultMessage=\"Weights and Loading\" />\n              </Card.Header>\n              <Card.Body>\n                <FormGroup>\n                  <YesNoButton\n                    label={\n                      <FormattedMessage\n                        id=\"meet-setup.units\"\n                        defaultMessage=\"In what units are attempts and bodyweights?\"\n                      />\n                    }\n                    value={this.props.meet.inKg}\n                    setValue={this.props.setInKg}\n                    yes={stringKilograms}\n                    no={stringPounds}\n                  />\n                </FormGroup>\n\n                <FormGroup>\n                  <YesNoButton\n                    label={this.props.meet.inKg ? stringAlsoPounds : stringAlsoKilograms}\n                    value={this.props.meet.showAlternateUnits}\n                    setValue={this.props.setShowAlternateUnits}\n                    yes={stringYes}\n                    no={stringNo}\n                  />\n                </FormGroup>\n\n                <BarAndCollarsWeightKg key={\"S\" + inKg} lift=\"S\" />\n                <BarAndCollarsWeightKg key={\"B\" + inKg} lift=\"B\" />\n                <BarAndCollarsWeightKg key={\"D\" + inKg} lift=\"D\" />\n                <Plates />\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  meet: state.meet,\n  masterKey: state.meet.divisions.join(),\n  language: state.language\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  setMeetName: (name: string) => dispatch(updateMeet({ name: name })),\n  setCountry: (country: string) => dispatch(updateMeet({ country: country })),\n  setState: (state: string) => dispatch(updateMeet({ state: state })),\n  setCity: (city: string) => dispatch(updateMeet({ city: city })),\n  setFederation: (fed: string) => dispatch(updateMeet({ federation: fed })),\n  setCombineSleevesAndWraps: bool => dispatch(updateMeet({ combineSleevesAndWraps: bool })),\n  setAllow4thAttempts: bool => dispatch(updateMeet({ allow4thAttempts: bool })),\n  setInKg: bool => dispatch(setInKg(bool)),\n  setShowAlternateUnits: bool => dispatch(updateMeet({ showAlternateUnits: bool })),\n  setFormula: event =>\n    assertString(event.currentTarget.value) &&\n    assertFormula(event.currentTarget.value) &&\n    dispatch(updateMeet({ formula: event.currentTarget.value })),\n  setAgeCoefficients: event =>\n    assertString(event.currentTarget.value) &&\n    assertAgeCoefficients(event.currentTarget.value) &&\n    dispatch(updateMeet({ ageCoefficients: event.currentTarget.value }))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MeetSetup);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport MeetSetup from \"../components/meet-setup/MeetSetup\";\n\nclass MeetSetupContainer extends React.Component<{}> {\n  render() {\n    return <MeetSetup />;\n  }\n}\n\nexport default MeetSetupContainer;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the table of LifterRows\n// Generalized to accept a rowRenderer component, so that different pages\n// can render different row level items, while re-using the logic in this component\n// to handle rendering one row per lifter\n// This is the parent component that determines how many rows to render,\n// what data each row should see, etc.\n\nimport React from \"react\";\n\nimport { Entry } from \"../../types/dataTypes\";\n\ninterface OwnProps {\n  entries: Array<Entry>;\n  rowRenderer: any;\n}\n\ntype Props = OwnProps;\n\nclass LifterTable extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n    this.renderRows = this.renderRows.bind(this);\n  }\n\n  renderRows = () => {\n    const LifterRow = this.props.rowRenderer;\n    const { entries } = this.props;\n    return entries.map(entry => <LifterRow key={entry.id} id={entry.id} />);\n  };\n\n  render() {\n    return <div>{this.renderRows()}</div>;\n  }\n}\n\nexport default LifterTable;\n","// vim: set ts=2 sts=2 sw=2 et:\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// This provides an alternative interface to react-intl's <FormattedMessage/>.\n//\n// FormattedMessage defines a *new* internationalizable message.\n// In contrast, LocalizedString fetches an *existing* message from the same store\n// and reports it as a simple string (with no formatting or parsing).\n//\n// This enables reuse of translations, so long as the IDs are stable.\n\nimport React from \"react\";\nimport { IntlContext } from \"react-intl\";\n\nimport { TranslationId } from \"../../types/dataTypes\";\n\ninterface OwnProps {\n  id: TranslationId; // As listed in 'src/translations/en.json'.\n}\n\ntype Props = OwnProps;\n\nclass LocalizedString extends React.Component<Props> {\n  render() {\n    return (\n      <IntlContext.Consumer>\n        {intl => {\n          return intl.messages[this.props.id];\n        }}\n      </IntlContext.Consumer>\n    );\n  }\n}\n\nexport default LocalizedString;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { Validation } from \"../types/dataTypes\";\n\n// Validates a string date in the ISO8601 \"YYYY-MM-DD\" format.\nexport const validateIso8601Date = (s?: string): Validation => {\n  if (typeof s !== \"string\") return \"error\";\n\n  if (s === \"\") return null;\n  if (s.length !== \"YYYY-MM-DD\".length) return \"error\";\n\n  const pieces: Array<string> = s.split(\"-\");\n  if (pieces.length !== 3) return \"error\";\n\n  const [yearStr, monthStr, dayStr] = pieces;\n\n  // Ensure that the strings only contain numbers, because the Number() constructor\n  // will ignore whitespace.\n  const onlyNumbers = /^[0-9]+$/;\n\n  if (!yearStr.match(onlyNumbers)) return \"error\";\n  if (!monthStr.match(onlyNumbers)) return \"error\";\n  if (!dayStr.match(onlyNumbers)) return \"error\";\n\n  const year = Number(yearStr);\n  const month = Number(monthStr);\n  const day = Number(dayStr);\n\n  if (isNaN(year) || isNaN(month) || isNaN(day)) return \"error\";\n  if (year <= 0 || month <= 0 || month > 12 || day <= 0 || day > 31) return \"error\";\n\n  // Disallow dates that are out of the plausible range for powerlifting.\n  if (year < 1880 || year >= new Date().getFullYear() + 2) return \"error\";\n\n  return \"success\";\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport {\n  NewRegistrationAction,\n  DeleteRegistrationAction,\n  UpdateRegistrationAction,\n  MergePlatformAction\n} from \"../types/actionTypes\";\nimport { Entry } from \"../types/dataTypes\";\n\n// Adds a blank (or default-initalized) row to the registrations table.\nexport const newRegistration = (obj: Partial<Entry>): NewRegistrationAction => {\n  return {\n    type: \"NEW_REGISTRATION\",\n    overwriteDefaults: obj\n  };\n};\n\n// Deletes an existing entry from the registrations table.\n//\n// Corresponding data from the registration is *not* deleted, for example\n// from the lifting page, but because the state.registrations.lookups map\n// will no longer find an associated entry given a global unique EntryId,\n// the data will simply stop being displayed.\n//\n// The global ID from the deleted entry is not recycled.\nexport const deleteRegistration = (entryId: number): DeleteRegistrationAction => {\n  return {\n    type: \"DELETE_REGISTRATION\",\n    entryId: entryId\n  };\n};\n\n// Updates an existing entry in the registrations table.\n//\n// Because there are a lot of fields in a single entry, for the sake of\n// simplicity, this is a general method that knows how to update the\n// existing entry object with whatever has changed, as passed\n// through object properties.\nexport const updateRegistration = (entryId: number, obj: Partial<Entry>): UpdateRegistrationAction => {\n  return {\n    type: \"UPDATE_REGISTRATION\",\n    entryId: entryId,\n    changes: obj\n  };\n};\n\n// Deletes all entries assigned to a given (day, platform), and then adds entries\n// assigned to that (day, platform) from a foreign save state.\nexport const mergePlatform = (day: number, platform: number, platformEntries: Array<Entry>): MergePlatformAction => {\n  return {\n    type: \"MERGE_PLATFORM\",\n    day: day,\n    platform: platform,\n    platformEntries: platformEntries\n  };\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines a row in the LifterTable on the Registration page.\n// This provides a bunch of widgets, each of which correspond to\n// the state of a single entry.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Row from \"react-bootstrap/Row\";\n\nimport Select from \"react-select\";\n\nimport { getString, localizeEvent } from \"../../logic/strings\";\nimport LocalizedString from \"../translations/LocalizedString\";\nimport ValidatedInput from \"../ValidatedInput\";\n\nimport { validateIso8601Date } from \"../../validation/iso8601Date\";\n\nimport { deleteRegistration, updateRegistration } from \"../../actions/registrationActions\";\nimport { FormControlTypeHack, checkExhausted, assertString, assertFlight, assertSex } from \"../../types/utils\";\nimport { ActionMeta } from \"react-select/lib/types\";\nimport { Entry, Equipment, Language } from \"../../types/dataTypes\";\nimport { Dispatch } from \"redux\";\nimport { GlobalState, MeetState } from \"../../types/stateTypes\";\n\ninterface OwnProps {\n  id: number;\n}\n\ninterface StateProps {\n  meet: MeetState;\n  entry: Entry;\n  language: Language;\n}\n\ninterface InternalState {\n  selectedDay: number;\n}\n\ntype Props = OwnProps & StateProps & ReturnType<typeof mapDispatchToProps>;\n\nclass LifterRow extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    // Store the Day in state to update the Platform options when the Day changes.\n    // Store the Birth Date in state to re-render when a new date is selected\n    this.state = {\n      selectedDay: props.entry.day\n    };\n\n    this.deleteRegistrationClick = this.deleteRegistrationClick.bind(this);\n    this.updateRegistrationDay = this.updateRegistrationDay.bind(this);\n    this.updateRegistrationPlatform = this.updateRegistrationPlatform.bind(this);\n    this.updateRegistrationFlight = this.updateRegistrationFlight.bind(this);\n    this.updateRegistrationName = this.updateRegistrationName.bind(this);\n    this.updateRegistrationSex = this.updateRegistrationSex.bind(this);\n    this.updateRegistrationLot = this.updateRegistrationLot.bind(this);\n    this.updateRegistrationMemberId = this.updateRegistrationMemberId.bind(this);\n    this.updateRegistrationBirthDate = this.updateRegistrationBirthDate.bind(this);\n    this.updateRegistrationCountry = this.updateRegistrationCountry.bind(this);\n    this.updateRegistrationState = this.updateRegistrationState.bind(this);\n    this.updateRegistrationDivisions = this.updateRegistrationDivisions.bind(this);\n    this.updateRegistrationEvents = this.updateRegistrationEvents.bind(this);\n    this.updateRegistrationEquipment = this.updateRegistrationEquipment.bind(this);\n    this.updateRegistrationTeam = this.updateRegistrationTeam.bind(this);\n    this.updateRegistrationInstagram = this.updateRegistrationInstagram.bind(this);\n    this.updateRegistrationNotes = this.updateRegistrationNotes.bind(this);\n  }\n\n  deleteRegistrationClick(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\n    this.props.deleteRegistration(this.props.id);\n  }\n\n  updateRegistrationDay(event: React.FormEvent<FormControlTypeHack>) {\n    const day = Number(event.currentTarget.value);\n    const entry = this.props.entry;\n\n    // Also check whether the platform is now impossible.\n    let platform = entry.platform;\n    if (platform > this.props.meet.platformsOnDays[day - 1]) {\n      platform = 1; // This matches the default behavior of the select element.\n    }\n\n    if (entry.day !== day) {\n      this.setState({ selectedDay: day });\n      this.props.updateRegistration(this.props.id, { day: day, platform: platform });\n    }\n  }\n\n  updateRegistrationPlatform(event: React.FormEvent<FormControlTypeHack>) {\n    const platform = Number(event.currentTarget.value);\n    if (this.props.entry.platform !== platform) {\n      this.props.updateRegistration(this.props.id, { platform: platform });\n    }\n  }\n\n  updateRegistrationFlight(event: React.FormEvent<FormControlTypeHack>) {\n    const value = event.currentTarget.value;\n    if (this.props.entry.flight !== value && assertString(value) && assertFlight(value)) {\n      this.props.updateRegistration(this.props.id, { flight: value });\n    }\n  }\n\n  updateRegistrationName(event: React.FocusEvent<HTMLInputElement>) {\n    const name = event.currentTarget.value;\n    if (this.props.entry.name !== name && assertString(name)) {\n      this.props.updateRegistration(this.props.id, { name: name });\n    }\n  }\n\n  updateRegistrationSex(event: React.FormEvent<FormControlTypeHack>) {\n    const sex = event.currentTarget.value;\n    if (this.props.entry.sex !== sex && assertString(sex) && assertSex(sex)) {\n      this.props.updateRegistration(this.props.id, { sex: sex });\n    }\n  }\n\n  updateRegistrationLot = (lot: string) => {\n    const asNumber = Number(lot);\n    if (asNumber >= 0 && asNumber !== this.props.entry.lot) {\n      this.props.updateRegistration(this.props.id, { lot: asNumber });\n    }\n  };\n\n  updateRegistrationMemberId = (event: React.FocusEvent<HTMLInputElement>) => {\n    const memberId = event.target.value;\n    if (this.props.entry.memberId !== memberId && typeof memberId === \"string\") {\n      this.props.updateRegistration(this.props.id, { memberId: memberId });\n    }\n  };\n\n  updateRegistrationBirthDate = (birthDate: string) => {\n    if (this.props.entry.birthDate !== birthDate) {\n      this.props.updateRegistration(this.props.id, { birthDate: birthDate });\n    }\n  };\n\n  updateRegistrationCountry = (country: string) => {\n    if (this.props.entry.country !== country) {\n      this.props.updateRegistration(this.props.id, { country: country });\n    }\n  };\n\n  updateRegistrationState = (state: string) => {\n    if (this.props.entry.state !== state) {\n      this.props.updateRegistration(this.props.id, { state: state });\n    }\n  };\n\n  updateRegistrationDivisions(value: any, actionMeta: ActionMeta) {\n    // Value is an array of { value, label } objects.\n    // Since updates are synchronous, we can just compare lengths.\n    if (value.length !== this.props.entry.divisions.length) {\n      let divisions = [];\n      for (let i = 0; i < value.length; i++) {\n        divisions.push(value[i].value);\n      }\n      this.props.updateRegistration(this.props.id, { divisions: divisions });\n    }\n  }\n\n  updateRegistrationEvents(value: any, actionMeta: ActionMeta) {\n    // Value is an array of { value, label } objects.\n    // Since updates are synchronous, we can just compare lengths.\n    if (value.length !== this.props.entry.events.length) {\n      let events = [];\n      for (let i = 0; i < value.length; i++) {\n        events.push(value[i].value);\n      }\n      this.props.updateRegistration(this.props.id, { events: events });\n    }\n  }\n\n  updateRegistrationEquipment(event: React.FormEvent<FormControlTypeHack>) {\n    const equipment = event.currentTarget.value as Equipment;\n    if (this.props.entry.equipment !== equipment) {\n      // Ensure value is something we expect & assist the compiler in helping us\n      switch (equipment) {\n        case \"Bare\":\n        case \"Sleeves\":\n        case \"Wraps\":\n        case \"Single-ply\":\n        case \"Multi-ply\":\n          this.props.updateRegistration(this.props.id, { equipment: equipment });\n          break;\n        default:\n          checkExhausted(equipment);\n          break;\n      }\n    }\n  }\n\n  updateRegistrationTeam = (event: React.FocusEvent<HTMLInputElement>) => {\n    if (assertString(event.target.value)) {\n      this.props.updateRegistration(this.props.id, { team: event.target.value });\n    }\n  };\n\n  updateRegistrationInstagram = (event: React.FocusEvent<HTMLInputElement>) => {\n    if (assertString(event.target.value)) {\n      this.props.updateRegistration(this.props.id, { instagram: event.target.value });\n    }\n  };\n\n  updateRegistrationNotes = (event: React.FocusEvent<HTMLInputElement>) => {\n    if (assertString(event.target.value)) {\n      this.props.updateRegistration(this.props.id, { notes: event.target.value });\n    }\n  };\n\n  render() {\n    const entry = this.props.entry;\n    const language = this.props.language;\n\n    let dayOptions = [];\n    for (let i = 1; i <= this.props.meet.lengthDays; i++) {\n      dayOptions.push(\n        <option value={i} key={i}>\n          {i}\n        </option>\n      );\n    }\n\n    let platformOptions = [];\n    for (let i = 1; i <= this.props.meet.platformsOnDays[entry.day - 1]; i++) {\n      platformOptions.push(\n        <option value={i} key={i}>\n          {i}\n        </option>\n      );\n    }\n\n    let divisionOptions = [];\n    for (let i = 0; i < this.props.meet.divisions.length; i++) {\n      let division = this.props.meet.divisions[i];\n      divisionOptions.push({ value: division, label: division });\n    }\n\n    let selectedDivisions = [];\n    for (let i = 0; i < entry.divisions.length; i++) {\n      const division = entry.divisions[i];\n      selectedDivisions.push({ value: division, label: division });\n    }\n\n    let selectedEvents = [];\n    for (let i = 0; i < entry.events.length; i++) {\n      const event = entry.events[i];\n      selectedEvents.push({ value: event, label: localizeEvent(event, language) });\n    }\n\n    const gridStyle = { padding: \"0px\", margin: \"0px\" };\n\n    const stringName = getString(\"common.name\", language);\n    const stringCountry = getString(\"common.country\", language);\n    const stringState = getString(\"registration.state-province\", language);\n    const stringBirthDatePlaceholder = getString(\"registration.birthdate-placeholder\", language);\n    const stringMemberIdPlaceholder = getString(\"registration.member-id-placeholder\", language);\n    const stringSelectPlaceholder = getString(\"common.select-placeholder\", language);\n\n    const eventOptions = [\n      { value: \"S\", label: getString(\"event.s\", language) },\n      { value: \"B\", label: getString(\"event.b\", language) },\n      { value: \"D\", label: getString(\"event.d\", language) },\n      { value: \"BD\", label: getString(\"event.bd\", language) },\n      { value: \"SBD\", label: getString(\"event.sbd\", language) },\n      { value: \"SB\", label: getString(\"event.sb\", language) },\n      { value: \"SD\", label: getString(\"event.sd\", language) }\n    ];\n\n    return (\n      <Card>\n        <Card.Header style={{ display: \"flex\" }}>\n          <Form.Control\n            type=\"text\"\n            placeholder={stringName}\n            defaultValue={entry.name}\n            onBlur={this.updateRegistrationName}\n          />\n          <Button onClick={this.deleteRegistrationClick} variant=\"danger\" style={{ marginLeft: \"15px\" }}>\n            <LocalizedString id=\"registration.button-delete\" />\n          </Button>\n        </Card.Header>\n        <Card.Body>\n          <Container style={gridStyle}>\n            <Row>\n              {/* Day */}\n              <Col md={1}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.day-label\" defaultMessage=\"Day\" />\n                  </Form.Label>\n                  <Form.Control\n                    defaultValue={this.state.selectedDay}\n                    as=\"select\"\n                    onChange={this.updateRegistrationDay}\n                    className=\"custom-select\"\n                  >\n                    {dayOptions}\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n\n              {/* Platform */}\n              <Col md={1}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.platform-label\" defaultMessage=\"Platform\" />\n                  </Form.Label>\n                  <Form.Control\n                    defaultValue={entry.platform}\n                    as=\"select\"\n                    onChange={this.updateRegistrationPlatform}\n                    className=\"custom-select\"\n                  >\n                    {platformOptions}\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n\n              {/* Flight */}\n              <Col md={1}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.flight-label\" defaultMessage=\"Flight\" />\n                  </Form.Label>\n                  <Form.Control\n                    defaultValue={entry.flight}\n                    as=\"select\"\n                    onChange={this.updateRegistrationFlight}\n                    className=\"custom-select\"\n                  >\n                    <option value=\"A\">{getString(\"flight.a\", language)}</option>\n                    <option value=\"B\">{getString(\"flight.b\", language)}</option>\n                    <option value=\"C\">{getString(\"flight.c\", language)}</option>\n                    <option value=\"D\">{getString(\"flight.d\", language)}</option>\n                    <option value=\"E\">{getString(\"flight.e\", language)}</option>\n                    <option value=\"F\">{getString(\"flight.f\", language)}</option>\n                    <option value=\"G\">{getString(\"flight.g\", language)}</option>\n                    <option value=\"H\">{getString(\"flight.h\", language)}</option>\n                    <option value=\"I\">{getString(\"flight.i\", language)}</option>\n                    <option value=\"J\">{getString(\"flight.j\", language)}</option>\n                    <option value=\"K\">{getString(\"flight.k\", language)}</option>\n                    <option value=\"L\">{getString(\"flight.l\", language)}</option>\n                    <option value=\"M\">{getString(\"flight.m\", language)}</option>\n                    <option value=\"N\">{getString(\"flight.n\", language)}</option>\n                    <option value=\"O\">{getString(\"flight.o\", language)}</option>\n                    <option value=\"P\">{getString(\"flight.p\", language)}</option>\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n\n              {/* Sex */}\n              <Col md={1}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.sex-label\" defaultMessage=\"Sex\" />\n                  </Form.Label>\n                  <Form.Control\n                    defaultValue={entry.sex}\n                    as=\"select\"\n                    onChange={this.updateRegistrationSex}\n                    className=\"custom-select\"\n                  >\n                    <option value=\"M\">{getString(\"sex.m\", language)}</option>\n                    <option value=\"F\">{getString(\"sex.f\", language)}</option>\n                    <option value=\"Mx\">{getString(\"sex.mx\", language)}</option>\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n\n              {/* Equipment */}\n              <Col md={2}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.equipment-label\" defaultMessage=\"Equipment\" />\n                  </Form.Label>\n                  <Form.Control\n                    defaultValue={entry.equipment}\n                    as=\"select\"\n                    onChange={this.updateRegistrationEquipment}\n                    className=\"custom-select\"\n                  >\n                    <option value=\"Bare\">{getString(\"equipment.bare\", language)}</option>\n                    <option value=\"Sleeves\">{getString(\"equipment.sleeves\", language)}</option>\n                    <option value=\"Wraps\">{getString(\"equipment.wraps\", language)}</option>\n                    <option value=\"Single-ply\">{getString(\"equipment.single-ply\", language)}</option>\n                    <option value=\"Multi-ply\">{getString(\"equipment.multi-ply\", language)}</option>\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n\n              {/* Divisions */}\n              <Col md={4}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.divisions-label\" defaultMessage=\"Divisions\" />\n                  </Form.Label>\n                  <Select\n                    menuPlacement=\"auto\"\n                    placeholder={stringSelectPlaceholder}\n                    options={divisionOptions}\n                    isClearable={false}\n                    isMulti={true}\n                    onChange={this.updateRegistrationDivisions}\n                    defaultValue={selectedDivisions}\n                  />\n                </Form.Group>\n              </Col>\n\n              {/* Events */}\n              <Col md={2}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.events-label\" defaultMessage=\"Events\" />\n                  </Form.Label>\n                  <Select\n                    menuPlacement=\"auto\"\n                    placeholder={stringSelectPlaceholder}\n                    options={eventOptions}\n                    isClearable={false}\n                    isMulti={true}\n                    onChange={this.updateRegistrationEvents}\n                    defaultValue={selectedEvents}\n                  />\n                </Form.Group>\n              </Col>\n            </Row>\n          </Container>\n\n          <Container style={gridStyle}>\n            <Row>\n              {/* Date of Birth */}\n              <Col md={2}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.birthdate-label\" defaultMessage=\"Date of Birth\" />\n                  </Form.Label>\n                  <ValidatedInput\n                    initialValue={entry.birthDate}\n                    placeholder={stringBirthDatePlaceholder}\n                    validate={validateIso8601Date}\n                    onSuccess={this.updateRegistrationBirthDate}\n                  />\n                </Form.Group>\n              </Col>\n\n              {/* Member ID */}\n              <Col md={2}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.member-id-label\" defaultMessage=\"Member ID\" />\n                  </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder={stringMemberIdPlaceholder}\n                    defaultValue={entry.memberId}\n                    onBlur={this.updateRegistrationMemberId}\n                  />\n                </Form.Group>\n              </Col>\n\n              {/* Country */}\n              <Col md={2}>\n                <Form.Group>\n                  <Form.Label>{stringCountry}</Form.Label>\n                  <ValidatedInput\n                    initialValue={entry.country}\n                    placeholder={stringCountry}\n                    validate={s => (s === \"\" ? null : \"success\")}\n                    onSuccess={this.updateRegistrationCountry}\n                  />\n                </Form.Group>\n              </Col>\n\n              {/* State */}\n              <Col md={1}>\n                <Form.Group>\n                  <Form.Label>{stringState}</Form.Label>\n                  <ValidatedInput\n                    initialValue={entry.state}\n                    placeholder={stringState}\n                    validate={s => (s === \"\" ? null : \"success\")}\n                    onSuccess={this.updateRegistrationState}\n                  />\n                </Form.Group>\n              </Col>\n\n              {/* Lot Number */}\n              <Col md={1}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.lot-label\" defaultMessage=\"Lot #\" />\n                  </Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    min=\"0\"\n                    defaultValue={entry.lot === 0 ? \"\" : entry.lot.toString()}\n                    onBlur={(event: { currentTarget: { value: string } }) =>\n                      this.updateRegistrationLot(event.currentTarget.value)\n                    }\n                    onChange={(event: React.FormEvent<FormControlTypeHack> & { currentTarget: { value: string } }) =>\n                      this.updateRegistrationLot(event.currentTarget.value)\n                    }\n                  />\n                </Form.Group>\n              </Col>\n\n              {/* Notes */}\n              <Col md={4}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.team-label\" defaultMessage=\"Team\" />\n                  </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"\"\n                    defaultValue={entry.team}\n                    onBlur={this.updateRegistrationTeam}\n                  />\n                </Form.Group>\n              </Col>\n            </Row>\n          </Container>\n\n          <Container style={gridStyle}>\n            <Row>\n              {/* Notes */}\n              <Col md={2}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.instagram-label\" defaultMessage=\"Instagram\" />\n                  </Form.Label>\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                      <InputGroup.Text>@</InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control\n                      type=\"text\"\n                      placeholder=\"\"\n                      defaultValue={entry.instagram}\n                      onBlur={this.updateRegistrationInstagram}\n                    />\n                  </InputGroup>\n                </Form.Group>\n              </Col>\n\n              {/* Notes */}\n              <Col md={10}>\n                <Form.Group>\n                  <Form.Label>\n                    <FormattedMessage id=\"registration.notes-label\" defaultMessage=\"Notes (for your personal use)\" />\n                  </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"\"\n                    defaultValue={entry.notes}\n                    onBlur={this.updateRegistrationNotes}\n                  />\n                </Form.Group>\n              </Col>\n            </Row>\n          </Container>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState, ownProps: OwnProps): StateProps => {\n  // Only have props for the entry corresponding to this one row.\n  const lookup = state.registration.lookup;\n  const entry = state.registration.entries[lookup[ownProps.id]];\n\n  return {\n    meet: state.meet,\n    entry: entry,\n    language: state.language\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    deleteRegistration: (entryId: number) => dispatch(deleteRegistration(entryId)),\n    updateRegistration: (entryId: number, obj: Partial<Entry>) => dispatch(updateRegistration(entryId, obj))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LifterRow);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the button that adds a new entry to the registrations table.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Button from \"react-bootstrap/Button\";\n\nimport { newRegistration } from \"../../actions/registrationActions\";\n\nimport { Entry } from \"../../types/dataTypes\";\nimport { Dispatch } from \"redux\";\n\ninterface DispatchProps {\n  newRegistration: (obj: Partial<Entry>) => void;\n}\n\ntype Props = DispatchProps;\n\nclass NewButton extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    this.props.newRegistration({});\n  };\n\n  render() {\n    return (\n      <Button onClick={this.handleClick} variant=\"primary\" size=\"lg\" block>\n        <FormattedMessage id=\"registration.button-new-lifter\" defaultMessage=\"New Lifter\" />\n      </Button>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    newRegistration: (obj: Partial<Entry>) => dispatch(newRegistration(obj))\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(NewButton);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines a general CSV manipulation class.\n// This is a JS port of the Python \"oplcsv.py\" library used by the OpenPowerlifting\n// main data project.\n\n// Makes a string suitable for inclusion in a simple CSV file,\n// by deleting all commas and double quotes.\nexport const csvString = (x?: number | string): string => {\n  if (x === undefined) return \"\";\n  let s = String(x);\n\n  // The OpenPowerlifting format uses commas and disallow double-quotes.\n  s = s.replace(/,/g, \" \");\n  s = s.replace(/\"/g, \" \");\n\n  // The number \"0\" is also never written out explicitly; the empty string is preferred.\n  if (s === \"0\") return \"\";\n\n  // Clean up some formatting.\n  s = s.replace(/ {2}/g, \" \").trim();\n  return s;\n};\n\n// Returns the in-spreadsheet name of a column. In standard spreadsheet software,\n// rows are numeric (1, 2, 3, ...) and columns are alphabetic (A, B, C, ...).\n// For errors, we'd like to report the column that's wrong.\n//\n// The 'index' input is zero-indexed.\nexport const getSpreadsheetColumnName = (index: number): string => {\n  const alphabet: string = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n\n  // Column name accumulator.\n  // It's built by taking repeated mods in base 26: therefore new characters\n  // are appended to the left of the accumulator.\n  let acc: string = \"\";\n  let n: number = index;\n\n  while (n >= alphabet.length) {\n    const mod = n % alphabet.length;\n    const remainder = Math.floor(n / alphabet.length);\n\n    acc = alphabet[mod] + acc;\n\n    // The subtraction is because this isn't a pure modulus operator:\n    // by analogy to base-10, \"AA\" is equivalent to \"00\", and we want to render\n    // that.\n    n = remainder - 1;\n  }\n\n  return alphabet[n] + acc;\n};\n\n// A class for managing simple CSV files. Double-quotes and commas are disallowed.\nexport class Csv {\n  fieldnames: Array<string>; // Column names.\n  rows: Array<Array<string>>; // Individual rows.\n\n  constructor() {\n    this.fieldnames = [];\n    this.rows = [];\n  }\n\n  length(): number {\n    return this.rows.length;\n  }\n\n  index(name: string): number {\n    return this.fieldnames.indexOf(name);\n  }\n\n  appendColumn(name: string): void {\n    this.fieldnames.push(name);\n    for (let i = 0; i < this.rows.length; i++) {\n      this.rows[i].push(\"\");\n    }\n  }\n\n  appendColumns(namelist: Array<string>): void {\n    this.fieldnames = this.fieldnames.concat(namelist);\n    for (let i = 0; i < this.rows.length; i++) {\n      for (let j = 0; j < namelist.length; j++) {\n        this.rows[i].push(\"\");\n      }\n    }\n  }\n\n  insertColumn(index: number, name: string): void {\n    this.fieldnames.splice(index, 0, name);\n    for (let i = 0; i < this.rows.length; i++) {\n      this.rows[i].splice(index, 0, \"\");\n    }\n  }\n\n  removeColumnByIndex(index: number): void {\n    this.fieldnames.splice(index, 1);\n    for (let i = 0; i < this.rows.length; i++) {\n      this.rows[i].splice(index, 1);\n    }\n  }\n\n  removeColumnByName(name: string): void {\n    for (let i = 0; i < this.fieldnames.length; i++) {\n      if (this.fieldnames[i] === name) {\n        this.removeColumnByIndex(i);\n        return;\n      }\n    }\n  }\n\n  removeEmptyColumns(): void {\n    for (let i = 0; i < this.fieldnames.length; i++) {\n      let empty = true;\n      for (let j = 0; j < this.rows.length; j++) {\n        if (this.rows[j][i] !== \"\") {\n          empty = false;\n          break;\n        }\n      }\n      if (empty === true) {\n        this.removeColumnByIndex(i);\n        this.removeEmptyColumns();\n        return;\n      }\n    }\n  }\n\n  // Attempts to fill in this CSV object from a string.\n  // On success, returns the `this` Csv object.\n  // On failure, returns an error string with a user-presentable message.\n  fromString(s: string): Csv | string {\n    // The string cannot contain double-quotes: programs use those to allow\n    // in-field commas, which we disallow.\n    if (s.includes('\"')) {\n      let e = 'Double-quotes (\") are disallowed.';\n      e += \" Double-quotes can be automatically inserted by spreadsheet software\";\n      e += \" when a field contains a comma. Make sure to delete all in-field commas.\";\n      return e;\n    }\n\n    // Split by newline. It's OK for \\r to remain: we'll strip each field later.\n    // This always produces an array of length at least 1.\n    //\n    // Trim the string first: it's OK if files end with \"\\n\".\n    const lines = s.trim().split(\"\\n\");\n\n    // The first row contains fieldnames.\n    const fieldnames = lines[0].split(\",\").map(x => x.trim());\n\n    // Any rows after the first contain data.\n    let rows = [];\n    for (let i = 1; i < lines.length; ++i) {\n      const row = lines[i].split(\",\").map(x => x.trim());\n      rows.push(row);\n    }\n\n    // Sanity checking time!\n    // Every column must be named.\n    for (let i = 0; i < fieldnames.length; ++i) {\n      if (fieldnames[i] === \"\") {\n        const colname = getSpreadsheetColumnName(i);\n        return \"Column \" + colname + \" is missing a column name.\";\n      }\n    }\n\n    // Every row must have the same length as the fieldnames row.\n    for (let i = 0; i < rows.length; ++i) {\n      if (rows[i].length !== fieldnames.length) {\n        const rownum = i + 2; // 1-indexed, and the first row is fieldnames.\n        let e = \"Row \" + rownum + \" has \" + rows[i].length + \" columns,\";\n        e += \" but the first row has \" + fieldnames.length + \" columns.\";\n        return e;\n      }\n    }\n\n    this.fieldnames = fieldnames;\n    this.rows = rows;\n    return this;\n  }\n\n  toString(): string {\n    const headers = this.fieldnames.join(\",\");\n    let strRows: Array<string> = [];\n    for (let i = 0; i < this.rows.length; i++) {\n      strRows.push(this.rows[i].join(\",\"));\n    }\n    return headers + \"\\n\" + strRows.join(\"\\n\") + \"\\n\";\n  }\n}\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines logic for importing Registration data from a CSV file.\n// The CSV format is very strict: no double-quotes allowed, commas are always\n// separators, and the format of each field must exactly match our internal format.\n\nimport { Csv, getSpreadsheetColumnName } from \"../export/csv\";\nimport { newDefaultEntry } from \"../entry\";\n\nimport { parseInteger, parseEquipment, parseEvent, parseSex, parseDate } from \"../parsers\";\nimport { getString, delocalizeEquipment, delocalizeEvent, delocalizeFlight, delocalizeSex } from \"../strings\";\nimport { displayNumber } from \"../units\";\n\nimport { Entry, Flight, Language } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { assertFlight } from \"../../types/utils\";\n\n// Generates a string representing a downloadable CSV file, for use as an example\n// of the registration format.\n//\n// This is in code so that it can live right next to loadRegistrations()\n// for easier long-term maintenance.\nexport const makeExampleRegistrationsCsv = (language: Language): string => {\n  let csv = new Csv();\n  csv.rows = [[]]; // appendColumns() will resize the dummy row correctly.\n\n  const day = getString(\"import.column-day\", language);\n  const platform = getString(\"import.column-platform\", language);\n  const flight = getString(\"import.column-flight\", language);\n  const name = getString(\"import.column-name\", language);\n  const sex = getString(\"import.column-sex\", language);\n  const equipment = getString(\"import.column-equipment\", language);\n  const division1 = getString(\"import.column-division-n\", language).replace(\"{N}\", \"1\");\n  const division2 = getString(\"import.column-division-n\", language).replace(\"{N}\", \"2\");\n  const division3 = getString(\"import.column-division-n\", language).replace(\"{N}\", \"3\");\n  const event1 = getString(\"import.column-event-n\", language).replace(\"{N}\", \"1\");\n  const event2 = getString(\"import.column-event-n\", language).replace(\"{N}\", \"2\");\n  const event3 = getString(\"import.column-event-n\", language).replace(\"{N}\", \"3\");\n  const birthdate = getString(\"import.column-birthdate\", language);\n  const memberid = getString(\"import.column-memberid\", language);\n  const country = getString(\"import.column-country\", language);\n  const state = getString(\"import.column-state\", language);\n  const lot = getString(\"import.column-lot\", language);\n  const team = getString(\"import.column-team\", language);\n  const instagram = getString(\"import.column-instagram\", language);\n  const notes = getString(\"import.column-notes\", language);\n\n  csv.appendColumns([day, platform, flight, name, sex, equipment]);\n  csv.appendColumns([division1, division2, division3, event1, event2, event3]);\n  csv.appendColumns([birthdate, memberid, country, state, lot, team, instagram, notes]);\n\n  csv.rows[0][csv.index(day)] = \"1\";\n  csv.rows[0][csv.index(platform)] = \"1\";\n  csv.rows[0][csv.index(flight)] = getString(\"flight.a\", language);\n  csv.rows[0][csv.index(name)] = getString(\"import.example-name\", language);\n  csv.rows[0][csv.index(sex)] = getString(\"import.example-sex\", language);\n  csv.rows[0][csv.index(equipment)] = getString(\"equipment.sleeves\", language);\n  csv.rows[0][csv.index(division1)] = getString(\"import.example-division1\", language);\n  csv.rows[0][csv.index(division2)] = getString(\"import.example-division2\", language);\n  // Intentionally blank: csv.rows[0][csv.index(division3)]\n  csv.rows[0][csv.index(event1)] = getString(\"event.sbd\", language);\n  csv.rows[0][csv.index(event2)] = getString(\"event.bd\", language);\n  // Intentionally blank: csv.rows[0][csv.index(event3)]\n  csv.rows[0][csv.index(birthdate)] = getString(\"import.example-birthdate\", language);\n  // Intentionally blank: csv.rows[0][csv.index(memberid)]\n  csv.rows[0][csv.index(country)] = getString(\"import.example-country\", language);\n  csv.rows[0][csv.index(state)] = getString(\"import.example-state\", language);\n  // Intentionally blank: csv.rows[0][csv.index(lot)]\n  // Intentionally blank: csv.rows[0][csv.index(team)]\n  csv.rows[0][csv.index(instagram)] = getString(\"import.example-instagram\", language);\n  csv.rows[0][csv.index(notes)] = getString(\"import.example-notes\", language);\n\n  return csv.toString();\n};\n\n// Attempts to load registration information from a CSV object.\n//\n// On success, returns an array of Entry objects.\n//   NOTE CAREFULLY that the global state is not updated by this function.\n//   The caller must integrate the Entry objects, updating EntryID Tracking.\n// On failure, returns an error string with a user-presentable message.\nexport const loadRegistrations = (state: GlobalState, csv: Csv, language: Language): Array<Entry> | string => {\n  const division_template = getString(\"import.column-division-n\", language);\n  const event_template = getString(\"import.column-event-n\", language);\n\n  const col_day = getString(\"import.column-day\", language);\n  const col_platform = getString(\"import.column-platform\", language);\n  const col_flight = getString(\"import.column-flight\", language);\n  const col_name = getString(\"import.column-name\", language);\n  const col_sex = getString(\"import.column-sex\", language);\n  const col_equipment = getString(\"import.column-equipment\", language);\n  const col_division1 = division_template.replace(\"{N}\", \"1\");\n  const col_division2 = division_template.replace(\"{N}\", \"2\");\n  const col_division3 = division_template.replace(\"{N}\", \"3\");\n  const col_division4 = division_template.replace(\"{N}\", \"4\");\n  const col_division5 = division_template.replace(\"{N}\", \"5\");\n  const col_event1 = event_template.replace(\"{N}\", \"1\");\n  const col_event2 = event_template.replace(\"{N}\", \"2\");\n  const col_event3 = event_template.replace(\"{N}\", \"3\");\n  const col_event4 = event_template.replace(\"{N}\", \"4\");\n  const col_event5 = event_template.replace(\"{N}\", \"5\");\n  const col_birthdate = getString(\"import.column-birthdate\", language);\n  const col_memberid = getString(\"import.column-memberid\", language);\n  const col_country = getString(\"import.column-country\", language);\n  const col_state = getString(\"import.column-state\", language);\n  const col_lot = getString(\"import.column-lot\", language);\n  const col_team = getString(\"import.column-team\", language);\n  const col_instagram = getString(\"import.column-instagram\", language);\n  const col_notes = getString(\"import.column-notes\", language);\n\n  // Every fieldname must be either mandatory or optional.\n  const MANDATORY_FIELDNAMES = [\n    col_day,\n    col_platform,\n    col_flight,\n    col_name,\n    col_sex,\n    col_equipment,\n    col_division1,\n    col_event1\n  ];\n  const OPTIONAL_FIELDNAMES = [\n    col_division2,\n    col_division3,\n    col_division4,\n    col_division5,\n    col_event2,\n    col_event3,\n    col_event4,\n    col_event5,\n    col_birthdate,\n    col_memberid,\n    col_country,\n    col_state,\n    col_lot,\n    col_team,\n    col_instagram,\n    col_notes\n  ];\n\n  // Check the existent fieldnames for sanity.\n  for (let i = 0; i < csv.fieldnames.length; ++i) {\n    const name: string = csv.fieldnames[i];\n\n    // Every fieldname that appears must be known.\n    if (!MANDATORY_FIELDNAMES.includes(name) && !OPTIONAL_FIELDNAMES.includes(name)) {\n      const colname = getSpreadsheetColumnName(i);\n      const allfields: string = MANDATORY_FIELDNAMES.join(\", \") + \", \" + OPTIONAL_FIELDNAMES.join(\", \");\n\n      const e = getString(\"error.csv-unknown-header\", language);\n      return e\n        .replace(\"{name}\", name)\n        .replace(\"{ABC}\", colname)\n        .replace(\"{validList}\", allfields);\n    }\n\n    // Fieldnames cannot be repeated.\n    for (let j = i + 1; j < csv.fieldnames.length; ++j) {\n      if (csv.fieldnames[j] === csv.fieldnames[i]) {\n        const iname = getSpreadsheetColumnName(i);\n        const jname = getSpreadsheetColumnName(j);\n\n        const e = getString(\"error.csv-duplicate-header\", language);\n        return e\n          .replace(\"{name}\", csv.fieldnames[i])\n          .replace(\"{firstABC}\", iname)\n          .replace(\"{secondABC}\", jname);\n      }\n    }\n  }\n\n  // Check that all of the MANDATORY_FIELDNAMES are included.\n  for (let i = 0; i < MANDATORY_FIELDNAMES.length; ++i) {\n    if (!csv.fieldnames.includes(MANDATORY_FIELDNAMES[i])) {\n      const e = getString(\"error.csv-missing-header\", language);\n      return e.replace(\"{name}\", MANDATORY_FIELDNAMES[i]);\n    }\n  }\n\n  // The \"Platform\" column\" must occur after the \"Day\" column: the parsing\n  // below is stateful, and needs to know how many platforms are on that day\n  // when it reads in the platform value.\n  if (csv.fieldnames.indexOf(col_platform) <= csv.fieldnames.indexOf(col_day)) {\n    const e = getString(\"error.csv-day-platform-order\", language);\n    return e.replace(\"{day}\", col_day).replace(\"{platform}\", col_platform);\n  }\n\n  // The caller needs to update this field on the state later, if successful.\n  let nextEntryId = state.registration.nextEntryId;\n  let entries: Array<Entry> = [];\n\n  const errprefix_template = getString(\"error.csv-field-prefix\", language);\n\n  // The fieldnames are valid! Now we can start building Entries.\n  for (let i = 0; i < csv.rows.length; ++i) {\n    let entry: Entry = newDefaultEntry(nextEntryId++);\n    entries.push(entry);\n\n    // Iterate over each field and integrate it into the Entry object.\n    let row: Array<string> = csv.rows[i];\n    for (let j = 0; j < row.length; ++j) {\n      let fieldname = csv.fieldnames[j];\n      let val = row[j];\n\n      // User-visible row number, for error messages.\n      // The first row is for the fieldnames, and spreadsheet programs are 1-indexed.\n      let rowstr = displayNumber(i + 2, language);\n\n      // Start building the error string early, since it's repeated a lot.\n      const errprefix = errprefix_template\n        .replace(\"{cellType}\", fieldname)\n        .replace(\"{cellValue}\", val)\n        .replace(\"{rowNumber}\", rowstr);\n\n      if (fieldname === col_day) {\n        // Default to 1.\n        if (val === \"\") {\n          entry.day = 1;\n        } else {\n          const integer = parseInteger(val);\n\n          // Must be an integer.\n          if (typeof integer !== \"number\") {\n            return errprefix + getString(\"error.csv-field-suffix-integer\", language);\n          }\n\n          // Can't be less than one: there's always at least one day.\n          if (integer < 1) {\n            return errprefix + getString(\"error.csv-field-suffix-positive\", language);\n          }\n\n          // Can't be greater than the number of days specified in the GlobalState.\n          const numDays = state.meet.lengthDays;\n          if (integer > numDays) {\n            const e = getString(\"error.csv-field-suffix-day-overflow\", language);\n            return errprefix + e.replace(\"{numDays}\", String(numDays));\n          }\n\n          // All checks passed!\n          entry.day = integer;\n        }\n      } else if (fieldname === col_platform) {\n        // Default to 1.\n        if (val === \"\") {\n          entry.platform = 1;\n        } else {\n          const integer = parseInteger(val);\n\n          // Must be an integer.\n          if (typeof integer !== \"number\") {\n            return errprefix + getString(\"error.csv-field-suffix-integer\", language);\n          }\n\n          // Can't be less than one: there's always at least one platform.\n          if (integer < 1) {\n            return errprefix + getString(\"error.csv-field-suffix-positive\", language);\n          }\n\n          // Can't be greater than the number of platforms specified in the GlobalState.\n          // The \"Day\" column is guaranteed to already have been parsed: code above\n          // makes sure the \"Day\" column is before the \"Platform\" column.\n          const day = entry.day;\n          const platforms = state.meet.platformsOnDays[day];\n          if (integer > platforms) {\n            const e = getString(\"error.csv-field-suffix-platform-overflow\", language);\n            return errprefix + e.replace(\"{dayNumber}\", String(day)).replace(\"{numPlatforms}\", String(platforms));\n          }\n\n          // All checks passed!\n          entry.platform = integer;\n        }\n      } else if (fieldname === col_flight) {\n        // Default to A.\n        if (val === \"\") {\n          entry.flight = \"A\";\n        } else {\n          try {\n            entry.flight = delocalizeFlight(val, language);\n          } catch (err) {\n            return errprefix + getString(\"error.csv-field-suffix-flight-invalid\", language);\n          }\n        }\n      } else if (fieldname === col_name) {\n        if (val === \"\") {\n          return errprefix + getString(\"error.csv-field-suffix-name-blank\", language);\n        }\n        entry.name = val;\n      } else if (fieldname === col_sex) {\n        try {\n          entry.sex = delocalizeSex(val, language);\n        } catch (err) {\n          const e = getString(\"error.csv-field-suffix-sex-invalid\", language);\n          const m = getString(\"sex.m\", language);\n          const f = getString(\"sex.f\", language);\n          const mx = getString(\"sex.mx\", language);\n          return (\n            errprefix +\n            e\n              .replace(\"{M}\", m)\n              .replace(\"{F}\", f)\n              .replace(\"{Mx}\", mx)\n          );\n        }\n      } else if (fieldname === col_equipment) {\n        try {\n          entry.equipment = delocalizeEquipment(val, language);\n        } catch (err) {\n          const e = getString(\"error.csv-field-suffix-equipment-invalid\", language);\n          const bare = getString(\"equipment.bare\", language);\n          const sleeves = getString(\"equipment.sleeves\", language);\n          const wraps = getString(\"equipment.wraps\", language);\n          const single = getString(\"equipment.single-ply\", language);\n          const multi = getString(\"equipment.multi-ply\", language);\n          return (\n            errprefix +\n            e\n              .replace(\"{bare}\", bare)\n              .replace(\"{sleeves}\", sleeves)\n              .replace(\"{wraps}\", wraps)\n              .replace(\"{single}\", single)\n              .replace(\"{multi}\", multi)\n          );\n        }\n      } else if (\n        fieldname === col_division1 ||\n        fieldname === col_division2 ||\n        fieldname === col_division3 ||\n        fieldname === col_division4 ||\n        fieldname === col_division5\n      ) {\n        if (val === \"\") {\n          // Only the first Division is mandatory.\n          if (fieldname === col_division1) {\n            return errprefix + getString(\"error.csv-field-suffix-division-blank\", language);\n          }\n        } else {\n          // Check that it appears as a valid division.\n          if (!state.meet.divisions.includes(val)) {\n            return errprefix + getString(\"error.csv-field-suffix-division-invalid\", language);\n          }\n\n          // Check that it wasn't already added.\n          if (entry.divisions.includes(val)) {\n            return errprefix + getString(\"error.csv-field-suffix-division-duplicate\", language);\n          }\n\n          entry.divisions.push(val);\n        }\n      } else if (\n        fieldname === col_event1 ||\n        fieldname === col_event2 ||\n        fieldname === col_event3 ||\n        fieldname === col_event4 ||\n        fieldname === col_event5\n      ) {\n        if (val === \"\") {\n          // Only the first Event is mandatory.\n          if (fieldname === col_event1) {\n            return errprefix + getString(\"error.csv-field-suffix-event-blank\", language);\n          }\n        } else {\n          try {\n            const evt = delocalizeEvent(val, language);\n\n            // Check for duplicates.\n            if (entry.events.includes(evt)) {\n              return errprefix + getString(\"error.csv-field-suffix-event-duplicate\", language);\n            }\n            entry.events.push(evt);\n          } catch (err) {\n            const e = getString(\"error.csv-field-suffix-event-invalid\", language);\n            const sbd = getString(\"event.sbd\", language);\n            const bd = getString(\"event.bd\", language);\n            const sb = getString(\"event.sb\", language);\n            const sd = getString(\"event.sd\", language);\n            const s = getString(\"event.s\", language);\n            const b = getString(\"event.b\", language);\n            const d = getString(\"event.d\", language);\n            return (\n              errprefix +\n              e\n                .replace(\"{SBD}\", sbd)\n                .replace(\"{BD}\", bd)\n                .replace(\"{SB}\", sb)\n                .replace(\"{SD}\", sd)\n                .replace(\"{S}\", s)\n                .replace(\"{B}\", b)\n                .replace(\"{D}\", d)\n            );\n          }\n        }\n      } else if (fieldname === col_birthdate) {\n        // BirthDate is optional.\n        if (val !== \"\") {\n          const bd = parseDate(val);\n          if (typeof bd !== \"string\") {\n            return errprefix + getString(\"error.csv-field-suffix-date-format\", language);\n          }\n\n          entry.birthDate = bd;\n        }\n      } else if (fieldname === col_memberid) {\n        entry.memberId = val;\n      } else if (fieldname === col_country) {\n        entry.country = val;\n      } else if (fieldname === col_state) {\n        entry.state = val;\n      } else if (fieldname === col_lot) {\n        // Empty strings are allowed: just doesn't use lots.\n        if (val !== \"\") {\n          const integer = parseInteger(val);\n          if (typeof integer !== \"number\" || integer < 1) {\n            return errprefix + getString(\"error.csv-field-empty-or-positive\", language);\n          }\n\n          // All checks passed!\n          entry.lot = integer;\n        }\n      } else if (fieldname === col_team) {\n        entry.team = val;\n      } else if (fieldname === col_instagram) {\n        entry.instagram = val;\n      } else if (fieldname === col_notes) {\n        entry.notes = val;\n      } else {\n        return 'Missing handler for the \"' + fieldname + '\" column';\n      }\n    }\n  }\n\n  return entries;\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Exports registration data to a CSV file.\n\nimport { csvString, Csv } from \"./csv\";\nimport { getString, localizeEquipment, localizeEvent, localizeFlight, localizeSex } from \"../strings\";\n\nimport { Entry, Event, Language } from \"../../types/dataTypes\";\nimport { RegistrationState } from \"../../types/stateTypes\";\n\nexport const makeRegistrationsCsv = (registration: RegistrationState, language: Language): string => {\n  let csv = new Csv();\n\n  const division_template = getString(\"import.column-division-n\", language);\n  const event_template = getString(\"import.column-event-n\", language);\n\n  const col_day = getString(\"import.column-day\", language);\n  const col_platform = getString(\"import.column-platform\", language);\n  const col_flight = getString(\"import.column-flight\", language);\n  const col_name = getString(\"import.column-name\", language);\n  const col_sex = getString(\"import.column-sex\", language);\n  const col_equipment = getString(\"import.column-equipment\", language);\n  const col_division1 = division_template.replace(\"{N}\", \"1\");\n  const col_event1 = event_template.replace(\"{N}\", \"1\");\n  const col_birthdate = getString(\"import.column-birthdate\", language);\n  const col_memberid = getString(\"import.column-memberid\", language);\n  const col_country = getString(\"import.column-country\", language);\n  const col_state = getString(\"import.column-state\", language);\n  const col_lot = getString(\"import.column-lot\", language);\n  const col_team = getString(\"import.column-team\", language);\n  const col_instagram = getString(\"import.column-instagram\", language);\n  const col_notes = getString(\"import.column-notes\", language);\n\n  csv.appendColumns([col_day, col_platform, col_flight, col_name, col_sex, col_equipment]);\n  csv.appendColumns([col_division1, col_event1]); // Base cases. Others inserted by need.\n  csv.appendColumns([col_birthdate, col_memberid, col_country, col_state, col_lot]);\n  csv.appendColumns([col_team, col_instagram, col_notes]);\n\n  for (let i = 0; i < registration.entries.length; ++i) {\n    const entry = registration.entries[i];\n\n    let row: Array<string> = new Array(csv.fieldnames.length).fill(\"\");\n    row[csv.index(col_day)] = csvString(entry.day);\n    row[csv.index(col_platform)] = csvString(entry.platform);\n    row[csv.index(col_flight)] = csvString(localizeFlight(entry.flight, language));\n    row[csv.index(col_name)] = csvString(entry.name);\n    row[csv.index(col_sex)] = csvString(localizeSex(entry.sex, language));\n    row[csv.index(col_equipment)] = csvString(localizeEquipment(entry.equipment, language));\n    row[csv.index(col_birthdate)] = csvString(entry.birthDate);\n    row[csv.index(col_memberid)] = csvString(entry.memberId);\n    row[csv.index(col_country)] = csvString(entry.country);\n    row[csv.index(col_state)] = csvString(entry.state);\n    row[csv.index(col_lot)] = csvString(entry.lot);\n    row[csv.index(col_team)] = csvString(entry.team);\n    row[csv.index(col_instagram)] = csvString(entry.instagram);\n    row[csv.index(col_notes)] = csvString(entry.notes);\n\n    // Divisions.\n    for (let j = 0; j < entry.divisions.length; ++j) {\n      const division: string = entry.divisions[j];\n      const column: string = division_template.replace(\"{N}\", String(j + 1));\n\n      // Create the column if necessary. The previously numbered column exists.\n      if (csv.index(column) === -1) {\n        const prevIndex = csv.index(division_template.replace(\"{N}\", String(j)));\n        csv.insertColumn(prevIndex + 1, column); // Make space in other rows.\n        row.splice(prevIndex + 1, 0, \"\"); // Make space in this row.\n      }\n      row[csv.index(column)] = csvString(division);\n    }\n\n    // Events.\n    for (let j = 0; j < entry.events.length; ++j) {\n      const event = entry.events[j];\n      const column: string = event_template.replace(\"{N}\", String(j + 1));\n\n      // Create the column if necessary. The previously numbered column exists.\n      if (csv.index(column) === -1) {\n        const prevIndex = csv.index(event_template.replace(\"{N}\", String(j)));\n        csv.insertColumn(prevIndex + 1, column); // Make space in other rows.\n        row.splice(prevIndex + 1, 0, \"\"); // Make space in this row.\n      }\n      row[csv.index(column)] = csvString(localizeEvent(event, language));\n    }\n\n    csv.rows.push(row);\n  }\n\n  return csv.toString();\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// The parent component of the Registration page, contained by the RegistrationContainer.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Button from \"react-bootstrap/Button\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Card from \"react-bootstrap/Card\";\n\nimport LifterTable from \"./LifterTable\";\nimport LifterRow from \"./LifterRow\";\nimport NewButton from \"./NewButton\";\nimport ErrorModal from \"../ErrorModal\";\n\nimport { Csv } from \"../../logic/export/csv\";\nimport { makeExampleRegistrationsCsv, loadRegistrations } from \"../../logic/import/registration-csv\";\nimport { makeRegistrationsCsv } from \"../../logic/export/registrations\";\nimport { getString } from \"../../logic/strings\";\n\nimport { newRegistration, deleteRegistration } from \"../../actions/registrationActions\";\n\nimport { saveAs } from \"file-saver\";\n\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { Entry } from \"../../types/dataTypes\";\nimport { Dispatch } from \"redux\";\n\ninterface StateProps {\n  global: GlobalState;\n}\n\ninterface DispatchProps {\n  newRegistration: (obj: Partial<Entry>) => void;\n  deleteRegistration: (id: number) => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\ninterface InternalState {\n  // Controls the ErrorModal popup. Shown when error !== \"\".\n  error: string;\n}\n\nconst marginStyle = { margin: \"0 20px 20px 20px\" };\n\n// Used to distinguish between the Overwrite and Append modes.\nvar globalImportKind: string = \"Overwrite\";\n\nclass RegistrationView extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n    this.handleDownloadCsvTemplateClick = this.handleDownloadCsvTemplateClick.bind(this);\n    this.handleExportCsvClick = this.handleExportCsvClick.bind(this);\n    this.handleOverwriteClick = this.handleOverwriteClick.bind(this);\n    this.handleAppendClick = this.handleAppendClick.bind(this);\n    this.handleLoadFileInput = this.handleLoadFileInput.bind(this);\n    this.closeErrorModal = this.closeErrorModal.bind(this);\n\n    this.state = { error: \"\" };\n  }\n\n  handleDownloadCsvTemplateClick = () => {\n    const text = makeExampleRegistrationsCsv(this.props.global.language);\n    const blob = new Blob([text], { type: \"application/text;charset=utf-8\" });\n    const filename = getString(\"import.template-filename\", this.props.global.language) + \".csv\";\n    saveAs(blob, filename);\n  };\n\n  handleExportCsvClick = () => {\n    let meetname = this.props.global.meet.name;\n    if (meetname === \"\") {\n      meetname = getString(\"common.unnamed-filename\", this.props.global.language);\n    }\n    meetname = meetname.replace(/ /g, \"-\");\n\n    const language = this.props.global.language;\n    const text = makeRegistrationsCsv(this.props.global.registration, language);\n    const blob = new Blob([text], { type: \"application/text;charset=utf-8\" });\n\n    const basename = getString(\"import.export-filename\", this.props.global.language);\n    const filename = basename.replace(\"{MeetName}\", meetname) + \".csv\";\n    saveAs(blob, filename);\n  };\n\n  handleOverwriteClick = () => {\n    globalImportKind = \"Overwrite\";\n    const loadhelper = document.getElementById(\"loadhelper\");\n    if (loadhelper !== null) {\n      loadhelper.click();\n    }\n  };\n\n  handleAppendClick = () => {\n    globalImportKind = \"Append\";\n    const loadhelper = document.getElementById(\"loadhelper\");\n    if (loadhelper !== null) {\n      loadhelper.click();\n    }\n  };\n\n  handleLoadFileInput = () => {\n    const loadHelper = document.getElementById(\"loadhelper\");\n    if (loadHelper === null || !(loadHelper instanceof HTMLInputElement) || loadHelper.files === null) {\n      return;\n    }\n\n    const selectedFile = loadHelper.files[0];\n    let rememberThis = this;\n\n    let reader = new FileReader();\n    reader.onload = function(event) {\n      // If this occurs, we've introduced a bug when initiating the file reader, or the read failed.\n      // Add this check as a guard so the typing is narrowed\n      if (typeof reader.result !== \"string\") {\n        window.alert(\"Unable to load file: an unexpected internal error occured\");\n        return;\n      }\n\n      let csv = new Csv();\n      const maybeError = csv.fromString(reader.result);\n\n      // Check if an error message occurred.\n      if (typeof maybeError === \"string\") {\n        rememberThis.setState({ error: maybeError });\n        return;\n      }\n\n      // Convert the Csv to an Array<Entry>.\n      const language = rememberThis.props.global.language;\n      const maybeEntries = loadRegistrations(rememberThis.props.global, csv, language);\n      if (typeof maybeEntries === \"string\") {\n        rememberThis.setState({ error: maybeEntries });\n        return;\n      }\n\n      // Successfully parsed and loaded!\n      const entries: Array<Entry> = maybeEntries;\n\n      // If the mode is \"Overwrite\", delete all existing Entries.\n      if (globalImportKind === \"Overwrite\") {\n        const entryIds = rememberThis.props.global.registration.entries.map(e => e.id);\n        for (let i = 0; i < entryIds.length; ++i) {\n          rememberThis.props.deleteRegistration(entryIds[i]);\n        }\n      }\n\n      // Add all the new Entries.\n      for (let i = 0; i < entries.length; ++i) {\n        // Deleting the 'id' field causes newRegistration() to assign a valid one.\n        delete entries[i].id;\n        rememberThis.props.newRegistration(entries[i]);\n      }\n    };\n    reader.readAsText(selectedFile);\n  };\n\n  closeErrorModal = () => {\n    this.setState({ error: \"\" });\n  };\n\n  render() {\n    const numEntries = this.props.global.registration.entries.length;\n\n    return (\n      <div style={marginStyle}>\n        <ErrorModal\n          error={this.state.error}\n          title={getString(\"registration.importation-error\", this.props.global.language)}\n          show={this.state.error !== \"\"}\n          close={this.closeErrorModal}\n        />\n\n        <Card border=\"info\">\n          <Card.Header>\n            <FormattedMessage id=\"registration.auto-import-card-header\" defaultMessage=\"Auto-Import Registrations\" />\n          </Card.Header>\n          <Card.Body>\n            <Button variant=\"info\" onClick={this.handleDownloadCsvTemplateClick}>\n              <FormattedMessage id=\"registration.button-download-template\" defaultMessage=\"Download Template\" />\n            </Button>\n\n            <Button\n              variant=\"success\"\n              disabled={numEntries === 0}\n              onClick={this.handleExportCsvClick}\n              style={{ marginLeft: \"14px\" }}\n            >\n              <FormattedMessage id=\"registration.button-export-to-csv\" defaultMessage=\"Export to CSV\" />\n            </Button>\n\n            <ButtonGroup style={{ marginLeft: \"14px\" }}>\n              <Button variant=\"danger\" onClick={this.handleOverwriteClick}>\n                <FormattedMessage\n                  id=\"registration.button-overwrite-from-csv\"\n                  defaultMessage=\"Overwrite Registrations from CSV\"\n                />\n              </Button>\n              <Button variant=\"warning\" onClick={this.handleAppendClick}>\n                <FormattedMessage\n                  id=\"registration.button-append-from-csv\"\n                  defaultMessage=\"Append Registrations from CSV\"\n                />\n              </Button>\n            </ButtonGroup>\n          </Card.Body>\n        </Card>\n\n        <LifterTable entries={this.props.global.registration.entries} rowRenderer={LifterRow} />\n        <NewButton />\n\n        <input\n          id=\"loadhelper\"\n          type=\"file\"\n          accept=\".csv\"\n          style={{ display: \"none\" }}\n          onChange={this.handleLoadFileInput}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  global: state\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    newRegistration: (obj: Partial<Entry>) => dispatch(newRegistration(obj)),\n    deleteRegistration: (id: number) => dispatch(deleteRegistration(id))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RegistrationView);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Container for the Registration page.\n\nimport React from \"react\";\nimport RegistrationView from \"../components/registration/RegistrationView\";\n\nclass RegistrationContainer extends React.Component<{}> {\n  render() {\n    return <RegistrationView />;\n  }\n}\n\nexport default RegistrationContainer;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Table from \"react-bootstrap/Table\";\n\nimport { getString } from \"../../logic/strings\";\n\nimport { Entry, Language } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\n\ninterface OwnProps {\n  entries: Array<Entry>;\n  rowRenderer: any;\n  inLiftingPage?: boolean;\n}\n\ninterface StateProps {\n  inKg: boolean;\n  language: Language;\n}\n\ntype Props = OwnProps & StateProps;\n\nclass LifterTable extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n    this.renderRows = this.renderRows.bind(this);\n    this.renderHeader = this.renderHeader.bind(this);\n  }\n\n  renderRows = () => {\n    const LifterRow = this.props.rowRenderer;\n    const { entries } = this.props;\n    const inLiftingPage = this.props.inLiftingPage === true;\n\n    return entries.map(entry => <LifterRow key={entry.id} id={entry.id} inLiftingPage={inLiftingPage} />);\n  };\n\n  renderHeader = () => {\n    // Styling for small, single-character selector columns.\n    const shortStyle = { width: \"85px\" };\n\n    const inKg = this.props.inKg;\n\n    const units = inKg ? \"Kg\" : \"Lbs\";\n    const bodyweightId = inKg ? \"weigh-ins.bodyweight-header-kg\" : \"weigh-ins.bodyweight-header-lbs\";\n    const squatId = inKg ? \"weigh-ins.squat-header-kg\" : \"weigh-ins.squat-header-lbs\";\n    const benchId = inKg ? \"weigh-ins.bench-header-kg\" : \"weigh-ins.bench-header-lbs\";\n    const deadliftId = inKg ? \"weigh-ins.deadlift-header-kg\" : \"weigh-ins.deadlift-header-lbs\";\n\n    return (\n      <tr>\n        <th style={shortStyle}>\n          <FormattedMessage id=\"weigh-ins.platform-header\" defaultMessage=\"Platform\" />\n        </th>\n        <th style={shortStyle}>\n          <FormattedMessage id=\"weigh-ins.platform-flight\" defaultMessage=\"Flight\" />\n        </th>\n        <th>{getString(\"lifting.column-lifter\", this.props.language)}</th>\n\n        <th style={shortStyle}>{getString(\"common.age\", this.props.language)}</th>\n        <th style={shortStyle}>{getString(bodyweightId, this.props.language)}</th>\n        <th style={shortStyle}>\n          <FormattedMessage id=\"weigh-ins.squat-rack-header\" defaultMessage=\"Squat Rack\" />\n        </th>\n        <th style={shortStyle}>{getString(squatId, this.props.language)}</th>\n        <th style={shortStyle}>\n          <FormattedMessage id=\"weigh-ins.bench-rack-header\" defaultMessage=\"Bench Rack\" />\n        </th>\n        <th style={shortStyle}>{getString(benchId, this.props.language)}</th>\n        <th style={shortStyle}>{getString(deadliftId, this.props.language)}</th>\n      </tr>\n    );\n  };\n\n  render() {\n    return (\n      <Table hover size=\"sm\" style={{ margin: \"0px\" }}>\n        <thead>{this.renderHeader()}</thead>\n        <tbody>{this.renderRows()}</tbody>\n      </Table>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  inKg: state.meet.inKg,\n  language: state.language\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(LifterTable);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport {\n  EnterAttemptAction,\n  MarkLiftAction,\n  SetLiftingGroupAction,\n  OverrideAttemptAction,\n  OverrideEntryIdAction,\n  SetTableInfoAction\n} from \"../types/actionTypes\";\nimport { Flight, Lift } from \"../types/dataTypes\";\nimport { LiftingState } from \"../types/stateTypes\";\n\n// Sets a weightKg that doesn't have a good/failed value, for entering in attempts.\nexport const enterAttempt = (\n  entryId: number,\n  lift: Lift,\n  attemptOneIndexed: number,\n  weightKg: number\n): EnterAttemptAction => {\n  return {\n    type: \"ENTER_ATTEMPT\",\n    entryId: entryId,\n    lift: lift,\n    attemptOneIndexed: attemptOneIndexed,\n    weightKg: weightKg\n  };\n};\n\n// Marks a lift \"good\" or \"failed\".\n//\n// entryId is the ID of the affected entry, a Number.\n// lift is \"S\", \"B\", or \"D\".\n// attempt is 1,2,3, etc., up to MAX_ATTEMPTS.\n// success is a bool for whether to mark the lift as a success or as a failure.\nexport const markLift = (entryId: number, lift: Lift, attemptOneIndexed: number, success: boolean): MarkLiftAction => {\n  return {\n    type: \"MARK_LIFT\",\n    entryId: entryId,\n    lift: lift,\n    attemptOneIndexed: attemptOneIndexed,\n    success: success\n  };\n};\n\n// Sets the current group of lifters.\n// This is always manually set by the score table.\nexport const setLiftingGroup = (day: number, platform: number, flight: Flight, lift: Lift): SetLiftingGroupAction => {\n  return {\n    type: \"SET_LIFTING_GROUP\",\n    day: day,\n    platform: platform,\n    flight: flight,\n    lift: lift\n  };\n};\n\n// Overrides the calculated meet progress logic by forcing display of an attempt,\n// even if it has already been marked \"good lift\" or \"no lift\".\nexport const overrideAttempt = (attempt: number): OverrideAttemptAction => {\n  return {\n    type: \"OVERRIDE_ATTEMPT\",\n    attempt: attempt\n  };\n};\n\n// Overrides the calculated meet progress logic by forcing display of a specific lifter,\n// even if they have already had their attempt entered.\nexport const overrideEntryId = (entryId: number): OverrideEntryIdAction => {\n  return {\n    type: \"OVERRIDE_ENTRY_ID\",\n    entryId: entryId\n  };\n};\n\n// Updates arbitrary fields in the LiftingState.\n//\n// The intention is to use action just for table customization: things like\n// column widths, column visibility, and other such options.\n//\n// Having this interface lets us keep the number of actions low: separate\n// actions for each kind of modification is not really useful.\nexport const setTableInfo = (obj: Partial<LiftingState>): SetTableInfoAction => {\n  return {\n    type: \"SET_TABLE_INFO\",\n    changes: obj\n  };\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines an input of a single weight, during configuration.\n// Since it's for configuration, it doesn't have an associated success/failure value.\n//\n// For consistency purposes, weights are always stored in kg.\n\nimport React, { FormEvent } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport FormControl from \"react-bootstrap/FormControl\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\n\nimport { updateRegistration } from \"../../actions/registrationActions\";\nimport { enterAttempt } from \"../../actions/liftingActions\";\n\nimport { liftToAttemptFieldName } from \"../../logic/entry\";\nimport { kg2lbs, lbs2kg, displayWeight } from \"../../logic/units\";\n\nimport { Entry, Language, Lift, Validation } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { FormControlTypeHack, assertString } from \"../../types/utils\";\nimport { Dispatch } from \"redux\";\n\ninterface OwnProps {\n  id: number; // The EntryID.\n\n  // The valid type here should be all keys of Entry where the value is a number\n  // Something like keyof<Partial> where (key,value) => typeof value === Number - if that is possible in typescript?\n  // Otherwise manually specifying all the valid keys of Entry is a fair approach too!\n  field?: \"bodyweightKg\";\n  disabled: boolean;\n\n  // Optional attributes used only for lifts (as opposed to for bodyweights).\n  placeholder?: string;\n  lift?: Lift;\n  attemptOneIndexed?: number;\n  multipleOf?: number;\n}\n\ninterface StateProps {\n  inKg: boolean;\n  weightKg: number;\n  language: Language;\n}\n\ninterface DispatchProps {\n  updateRegistration: (entryId: number, obj: Partial<Entry>) => void;\n  enterAttempt: (entryId: number, lift: Lift, attemptOneIndexed: number, weightKg: number) => void;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\ninterface InternalState {\n  weightStr: string;\n}\n\nclass WeightInput extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n    this.validate = this.validate.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n\n    let weight = this.props.weightKg;\n    if (!this.props.inKg) {\n      weight = kg2lbs(weight);\n    }\n\n    // Internal state, for purposes of validation.\n    // To avoid confusion (auto-rounding) when typing, just store a String.\n    this.state = {\n      // Prefer displaying an empty string to 0.0.\n      weightStr: weight === 0.0 ? \"\" : displayWeight(weight, props.language)\n    };\n  }\n\n  validate = (): Validation => {\n    const weightNum = Number(this.state.weightStr.replace(\",\", \".\"));\n    if (isNaN(weightNum) || weightNum < 0) return \"error\";\n    if (this.props.multipleOf !== undefined && weightNum % this.props.multipleOf !== 0.0) {\n      return \"warning\";\n    }\n    if (this.state.weightStr.length > 0) return \"success\";\n    return null;\n  };\n\n  // Update the internal state, used for validation.\n  handleChange = (event: FormEvent<FormControlTypeHack>) => {\n    const weightStr = event.currentTarget.value;\n    if (assertString(weightStr)) {\n      this.setState({ weightStr: weightStr });\n    }\n  };\n\n  // Update the Redux store.\n  handleBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n    const weightStr = event.currentTarget.value.replace(\",\", \".\");\n    const weightNum = Number(weightStr);\n\n    if (this.validate() === \"error\") {\n      return;\n    }\n\n    const weightKg = this.props.inKg ? weightNum : lbs2kg(weightNum);\n    if (this.props.weightKg === weightKg) {\n      return;\n    }\n\n    // If \"attempt\" is set, a specific attempt is selected.\n    if (this.props.attemptOneIndexed !== undefined && this.props.lift !== undefined) {\n      const attemptOneIndexed = this.props.attemptOneIndexed;\n      const lift = this.props.lift;\n      this.props.enterAttempt(this.props.id, lift, attemptOneIndexed, weightKg);\n    } else if (this.props.field !== undefined) {\n      // Otherwise, the field is a Number.\n      let newfields: Partial<Entry> = {};\n      newfields[this.props.field] = weightKg;\n      this.props.updateRegistration(this.props.id, newfields);\n    }\n  };\n\n  render() {\n    // FormGroup provides a default padding of 15, but FormGroup is only being\n    // used here to accept a validationState. It's not really a group.\n    const undoDefaultPadding = { marginBottom: \"0\" };\n    const validation: Validation = this.validate();\n\n    return (\n      <FormGroup style={undoDefaultPadding}>\n        <FormControl\n          disabled={this.props.disabled}\n          placeholder={this.props.placeholder}\n          type=\"text\"\n          value={this.state.weightStr}\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n          isValid={validation === \"success\"}\n          isInvalid={validation === \"error\"}\n          className={validation === \"warning\" ? \"is-warning\" : undefined}\n        />\n      </FormGroup>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState, ownProps: OwnProps): StateProps => {\n  // Only have props for the entry corresponding to this one row.\n  const lookup = state.registration.lookup;\n  const entry = state.registration.entries[lookup[ownProps.id]];\n\n  // If `field` is set, then read the Number from the given field name.\n  let weightKg = 0.0;\n  if (ownProps.field !== undefined) {\n    weightKg = entry[ownProps.field];\n  } else if (ownProps.lift !== undefined && ownProps.attemptOneIndexed !== undefined) {\n    // Otherwise, refer to a specific lift and attempt.\n    const lift = ownProps.lift;\n    const attemptOneIndexed = ownProps.attemptOneIndexed;\n    const field = liftToAttemptFieldName(lift);\n    weightKg = entry[field][attemptOneIndexed - 1];\n  }\n\n  return {\n    inKg: state.meet.inKg,\n    weightKg: weightKg,\n    language: state.language\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    updateRegistration: (entryId, obj) => dispatch(updateRegistration(entryId, obj)),\n    enterAttempt: (entryId, lift, attemptOneIndexed, weightKg) =>\n      dispatch(enterAttempt(entryId, lift, attemptOneIndexed, weightKg))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WeightInput);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { Validation } from \"../types/dataTypes\";\n\n// Validates a simple positive integer.\nexport const validatePositiveInteger = (s?: string, inclusiveMax?: number): Validation => {\n  if (typeof s !== \"string\") return \"error\";\n\n  if (s === \"\") return null;\n\n  // Ensure that the string only contains numbers, because the Number() constructor\n  // will ignore whitespace.\n  const onlyNumbers = /^[0-9]+$/;\n  if (!s.match(onlyNumbers)) return \"error\";\n\n  // The number shouldn't start with an unnecessary zero.\n  if (s.startsWith(\"0\")) return \"error\";\n\n  const n = Number(s);\n\n  // Ensure the number is a positive integer.\n  if (isNaN(n)) return \"error\";\n  if (!Number.isInteger(n)) return \"error\";\n  if (n <= 0) return \"error\";\n\n  // Allow an optional inclusive upper bound check.\n  if (typeof inclusiveMax === \"number\") {\n    if (n > inclusiveMax) return \"error\";\n  }\n\n  return \"success\";\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines a row in the LifterTable on the Weigh-ins page.\n// This provides a bunch of widgets, each of which correspond to\n// the state of a single entry.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport FormControl from \"react-bootstrap/FormControl\";\n\nimport ValidatedInput from \"../ValidatedInput\";\nimport WeightInput from \"./WeightInput\";\n\nimport { getAge } from \"../../logic/entry\";\nimport { getString, localizeFlight } from \"../../logic/strings\";\nimport { displayNumber, displayWeight } from \"../../logic/units\";\nimport { validatePositiveInteger } from \"../../validation/positiveInteger\";\n\nimport { updateRegistration } from \"../../actions/registrationActions\";\n\nimport { Entry, Flight, Language, Validation } from \"../../types/dataTypes\";\nimport { GlobalState, MeetState } from \"../../types/stateTypes\";\nimport { Dispatch } from \"redux\";\nimport { FormControlTypeHack, assertFlight, assertString } from \"../../types/utils\";\n\ninterface OwnProps {\n  id: number;\n  inLiftingPage?: boolean;\n}\n\ninterface StateProps {\n  meet: MeetState;\n  entry: Entry;\n  language: Language;\n}\n\ninterface DispatchProps {\n  updateRegistration: (entryId: number, obj: Partial<Entry>) => void;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nclass LifterRow extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n    this.updateRegistrationFlight = this.updateRegistrationFlight.bind(this);\n    this.updateRegistrationSquatRackInfo = this.updateRegistrationSquatRackInfo.bind(this);\n    this.updateRegistrationBenchRackInfo = this.updateRegistrationBenchRackInfo.bind(this);\n    this.updateRegistrationAge = this.updateRegistrationAge.bind(this);\n  }\n\n  updateRegistrationFlight = (event: React.FormEvent<FormControlTypeHack>) => {\n    const flight = event.currentTarget.value;\n    if (this.props.entry.flight !== flight && assertString(flight) && assertFlight(flight)) {\n      this.props.updateRegistration(this.props.id, { flight: flight });\n    }\n  };\n\n  updateRegistrationSquatRackInfo = (value: string) => {\n    if (this.props.entry.squatRackInfo !== value) {\n      this.props.updateRegistration(this.props.id, { squatRackInfo: value });\n    }\n  };\n\n  updateRegistrationBenchRackInfo = (value: string) => {\n    if (this.props.entry.benchRackInfo !== value) {\n      this.props.updateRegistration(this.props.id, { benchRackInfo: value });\n    }\n  };\n\n  updateRegistrationAge = (value: string) => {\n    const age: number = value === \"\" ? 0 : Number(value);\n    if (this.props.entry.age !== age) {\n      this.props.updateRegistration(this.props.id, { age: age });\n    }\n  };\n\n  validateAge = (value?: string): Validation => {\n    if (value === \"\") return null;\n\n    const pos: Validation = validatePositiveInteger(value);\n    if (pos === \"success\") {\n      // Complain a little if the age is implausible.\n      const n = Number(value);\n      if (n <= 4 || n > 100) return \"warning\";\n    }\n    return pos;\n  };\n\n  validateRack = (value?: string): Validation => {\n    if (value === \"\") return null;\n    return \"success\";\n  };\n\n  render() {\n    const language = this.props.language;\n    const entry = this.props.entry;\n\n    // Check whether the event(s) include a given lift.\n    let hasSquat = false;\n    let hasBench = false;\n    let hasDeadlift = false;\n    for (let i = 0; i < entry.events.length; i++) {\n      const event = entry.events[i];\n      if (event.includes(\"S\")) {\n        hasSquat = true;\n      }\n      if (event.includes(\"B\")) {\n        hasBench = true;\n      }\n      if (event.includes(\"D\")) {\n        hasDeadlift = true;\n      }\n    }\n\n    // Check whether the first attempt already occurred.\n    const disableSquatWeight = !hasSquat || entry.squatStatus[0] !== 0;\n    const disableBenchWeight = !hasBench || entry.benchStatus[0] !== 0;\n    const disableDeadliftWeight = !hasDeadlift || entry.deadliftStatus[0] !== 0;\n\n    // Only show the Flight selector if the Weigh-ins page is non-embedded.\n    let flight: string | JSX.Element = localizeFlight(entry.flight, language);\n    if (this.props.inLiftingPage !== true) {\n      // Can be undefined.\n      flight = (\n        <FormControl\n          defaultValue={entry.flight}\n          as=\"select\"\n          onChange={this.updateRegistrationFlight}\n          className=\"custom-select\"\n        >\n          <option value=\"A\">{getString(\"flight.a\", language)}</option>\n          <option value=\"B\">{getString(\"flight.b\", language)}</option>\n          <option value=\"C\">{getString(\"flight.c\", language)}</option>\n          <option value=\"D\">{getString(\"flight.d\", language)}</option>\n          <option value=\"E\">{getString(\"flight.e\", language)}</option>\n          <option value=\"F\">{getString(\"flight.f\", language)}</option>\n          <option value=\"G\">{getString(\"flight.g\", language)}</option>\n          <option value=\"H\">{getString(\"flight.h\", language)}</option>\n          <option value=\"I\">{getString(\"flight.i\", language)}</option>\n          <option value=\"J\">{getString(\"flight.j\", language)}</option>\n          <option value=\"K\">{getString(\"flight.k\", language)}</option>\n          <option value=\"L\">{getString(\"flight.l\", language)}</option>\n          <option value=\"M\">{getString(\"flight.m\", language)}</option>\n          <option value=\"N\">{getString(\"flight.n\", language)}</option>\n          <option value=\"O\">{getString(\"flight.o\", language)}</option>\n          <option value=\"P\">{getString(\"flight.p\", language)}</option>\n        </FormControl>\n      );\n    }\n\n    const age = getAge(entry, this.props.meet.date);\n    const ageStr = age === 0 ? getString(\"common.age\", language) : displayNumber(age, language);\n\n    return (\n      <tr>\n        <td>{entry.platform}</td>\n        <td>{flight}</td>\n        <td>{entry.name}</td>\n\n        <td>\n          <ValidatedInput\n            initialValue={entry.age === 0 ? \"\" : displayNumber(entry.age, language)}\n            placeholder={ageStr}\n            validate={this.validateAge}\n            onSuccess={this.updateRegistrationAge}\n          />\n        </td>\n\n        <td>\n          <WeightInput\n            id={this.props.id}\n            field=\"bodyweightKg\"\n            placeholder={getString(\"weigh-ins.bodyweight-placeholder\", language)}\n            disabled={false}\n          />\n        </td>\n\n        <td>\n          <ValidatedInput\n            initialValue={entry.squatRackInfo}\n            placeholder={hasSquat ? getString(\"weigh-ins.squat-rack-placeholder\", language) : undefined}\n            disabled={!hasSquat}\n            validate={this.validateRack}\n            onSuccess={this.updateRegistrationSquatRackInfo}\n          />\n        </td>\n\n        <td>\n          <WeightInput\n            id={this.props.id}\n            lift=\"S\"\n            multipleOf={2.5}\n            attemptOneIndexed={1}\n            placeholder={hasSquat ? getString(\"weigh-ins.squat-placeholder\", language) : undefined}\n            disabled={disableSquatWeight}\n          />\n        </td>\n\n        <td>\n          <ValidatedInput\n            initialValue={entry.benchRackInfo}\n            placeholder={hasBench ? getString(\"weigh-ins.bench-rack-placeholder\", language) : undefined}\n            disabled={!hasBench}\n            validate={this.validateRack}\n            onSuccess={this.updateRegistrationBenchRackInfo}\n          />\n        </td>\n\n        <td>\n          <WeightInput\n            id={this.props.id}\n            lift=\"B\"\n            multipleOf={2.5}\n            attemptOneIndexed={1}\n            placeholder={hasBench ? getString(\"weigh-ins.bench-placeholder\", language) : undefined}\n            disabled={disableBenchWeight}\n          />\n        </td>\n\n        <td>\n          <WeightInput\n            id={this.props.id}\n            lift=\"D\"\n            multipleOf={2.5}\n            attemptOneIndexed={1}\n            placeholder={hasDeadlift ? getString(\"weigh-ins.deadlift-placeholder\", language) : undefined}\n            disabled={disableDeadliftWeight}\n          />\n        </td>\n      </tr>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState, ownProps: OwnProps): StateProps => {\n  // Only have props for the entry corresponding to this one row.\n  const lookup = state.registration.lookup;\n  const entry = state.registration.entries[lookup[ownProps.id]];\n\n  return {\n    meet: state.meet,\n    entry: entry,\n    language: state.language\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    updateRegistration: (entryId: number, obj: Partial<Entry>) => dispatch(updateRegistration(entryId, obj))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LifterRow);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// The parent component of the Weigh-ins page, contained by the WeighinsContainer.\n// The Weigh-ins page updates more information in the Registration state.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Card from \"react-bootstrap/Card\";\n\nimport { getLiftersOnDay } from \"../../logic/entry\";\nimport LifterTable from \"./LifterTable\";\nimport LifterRow from \"./LifterRow\";\n\nimport { Entry } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\n\nconst marginStyle = { margin: \"0 20px 0 20px\" };\n\n// For use when embedded inside the Lifting page.\ninterface OwnProps {\n  day?: number;\n  platform?: number;\n  inLiftingPage?: boolean; // The weigh-ins page can be embedded.\n}\n\ninterface StateProps {\n  entries: Array<Entry>;\n}\n\ntype Props = Readonly<OwnProps> & Readonly<StateProps>;\n\nclass WeighinsView extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n    this.getNumDaysFromEntries = this.getNumDaysFromEntries.bind(this);\n  }\n\n  // Figure out how many days there are by looking at the entries themselves.\n  //\n  // The meet page information may be unreliable: someone might have created\n  // a second day, added a lifter to it, then removed the second day without\n  // yet updating that lifter.\n  //\n  // This is an attempt to make that error more obvious, so it can be corrected.\n  getNumDaysFromEntries = () => {\n    let max_day = 0;\n    const entries = this.props.entries;\n    for (let i = 0; i < entries.length; i++) {\n      const entry = entries[i];\n      if (entry.day > max_day) {\n        max_day = entry.day;\n      }\n    }\n    return max_day;\n  };\n\n  render() {\n    // Determine whether this is being shown embedded in the Lifting page.\n    const inLiftingPage = this.props.inLiftingPage === true;\n\n    // Make a separate panel for each day.\n    const numDays = this.getNumDaysFromEntries();\n    let dayCards = [];\n    for (let i = 1; i <= numDays; i++) {\n      const lifters = getLiftersOnDay(this.props.entries, i);\n\n      // Skip if the OwnProps excluded this selection.\n      if (lifters.length === 0) {\n        continue;\n      }\n\n      // Present the lifters in sorted order.\n      lifters.sort((a, b) => {\n        if (a.platform !== b.platform) return a.platform - b.platform;\n        if (a.flight !== b.flight) return a.flight < b.flight ? -1 : 1;\n        if (a.name < b.name) return -1;\n        if (a.name > b.name) return 1;\n        return 0;\n      });\n\n      dayCards.push(\n        <Card key={i}>\n          <Card.Header>\n            <FormattedMessage\n              id=\"weigh-ins.day-header\"\n              defaultMessage=\"Day {dayNumber} Weigh-ins\"\n              values={{ dayNumber: i }}\n            />\n          </Card.Header>\n          <Card.Body>\n            <LifterTable entries={lifters} rowRenderer={LifterRow} inLiftingPage={inLiftingPage} />\n          </Card.Body>\n        </Card>\n      );\n    }\n\n    // If there are no days thus far, show a default warning panel.\n    if (dayCards.length === 0) {\n      dayCards.push(\n        <Card key={0} border=\"info\">\n          <Card.Header>\n            <FormattedMessage id=\"weigh-ins.empty-header\" defaultMessage=\"Waiting for Registration\" />\n          </Card.Header>\n          <Card.Body>\n            <FormattedMessage\n              id=\"weigh-ins.empty-body\"\n              defaultMessage=\"Add lifters on the Registration page before weighing them in.\"\n            />\n          </Card.Body>\n        </Card>\n      );\n    }\n\n    return <div style={marginStyle}>{dayCards}</div>;\n  }\n}\n\nconst mapStateToProps = (state: GlobalState, ownProps: OwnProps): StateProps => {\n  const { day, platform } = ownProps;\n  let entries = state.registration.entries;\n\n  // Filter if requested by the OwnProps.\n  if (typeof day === \"number\" && typeof platform === \"number\") {\n    entries = entries.filter(e => e.day === day && e.platform === platform);\n  }\n\n  return { entries };\n};\n\nexport default connect(\n  mapStateToProps,\n  null\n)(WeighinsView);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Container for the Weighins page.\n\nimport React from \"react\";\nimport WeighinsView from \"../components/weighins/WeighinsView\";\n\nclass WeighinsContainer extends React.Component<{}> {\n  render() {\n    return <WeighinsView />;\n  }\n}\n\nexport default WeighinsContainer;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { kg2lbs, displayWeight } from \"../logic/units\";\n\nimport { PlateColors } from \"../constants/plateColors\";\n\nimport { Plate, LoadedPlate } from \"../types/dataTypes\";\n\n// Convert from kg to lbs with rounding to 2 decimal places.\n// It's OK that this is slow, since it rarely executes.\nconst safeKg2Lbs = (kg: number): number => {\n  return Number(displayWeight(kg2lbs(kg)));\n};\n\n// Returns a list of plate weights in loading order.\n// Any unloadable remainder is reported as a final number with a negative value.\nexport const selectPlates = (\n  loadingKg: number,\n  barAndCollarsWeightKg: number,\n  plates: ReadonlyArray<Plate>,\n  inKg: boolean\n): Array<LoadedPlate> => {\n  // Flow doesn't like it when arguments get redefined.\n  let loadingAny = loadingKg;\n  let barAndCollarsWeightAny = barAndCollarsWeightKg;\n  let platesAny = plates;\n\n  // Convert to pounds, avoiding floating point errors.\n  if (inKg === false) {\n    loadingAny = safeKg2Lbs(loadingKg);\n    barAndCollarsWeightAny = safeKg2Lbs(barAndCollarsWeightKg);\n    platesAny = plates.map(x => ({ ...x, weightKg: safeKg2Lbs(x.weightKg) }));\n  }\n\n  // Sort a copy of the platesAny array by descending weight.\n  const sortedPlates = platesAny.slice().sort((a, b) => {\n    return b.weightKg - a.weightKg;\n  });\n\n  let sideWeightKg = (loadingAny - barAndCollarsWeightAny) / 2;\n  let loading: Array<LoadedPlate> = [];\n\n  // Run through each plate in order, applying as many of that plate as will fit.\n  for (let i = 0; i < sortedPlates.length; i++) {\n    let { weightKg, pairCount, color } = sortedPlates[i];\n    while (pairCount > 0 && weightKg <= sideWeightKg) {\n      pairCount--;\n      sideWeightKg -= weightKg;\n      loading.push({ weightAny: weightKg, isAlreadyLoaded: false, color: color });\n    }\n  }\n\n  // Report any remainder as a negative number.\n  if (sideWeightKg > 0) {\n    loading.push({ weightAny: -sideWeightKg, isAlreadyLoaded: false, color: PlateColors.PLATE_DEFAULT_RED });\n  }\n  return loading;\n};\n\n// Helper function: like Array.findIndex(), but starting from a specific index.\nconst findWeightFrom = (loading: Array<LoadedPlate>, startFrom: number, weight: number): number => {\n  for (let i = startFrom; i < loading.length; i++) {\n    if (loading[i].weightAny === weight) return i;\n  }\n  return -1;\n};\n\n// Sets the 'isAlreadyLoaded' property of each LoadedPlate relative to another loading.\n//\n// Both 'loading' and 'relativeTo' are sorted in non-ascending order of weight.\nexport const makeLoadingRelative = (loading: Array<LoadedPlate>, relativeTo: Array<LoadedPlate>): void => {\n  let finger = 0; // Increasing index into the relativeTo array.\n\n  // For each plate in the loading, look for a matching plate in relativeTo[finger..].\n  // When found, move the finger past that point.\n  for (let i = 0; i < loading.length; i++) {\n    let loadedPlate = loading[i];\n    const index = findWeightFrom(relativeTo, finger, loadedPlate.weightAny);\n    if (index >= 0) {\n      finger = index + 1;\n      loadedPlate.isAlreadyLoaded = true;\n    }\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// This is the widget that gives a visual display of the weights on the bar,\n// used by the loading crew.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport { displayWeight } from \"../../logic/units\";\nimport { PlateColors } from \"../../constants/plateColors\";\n\nimport { Language, Lift, LoadedPlate } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\n\nimport styles from \"./BarLoad.module.scss\";\n\ninterface OwnProps {\n  loading: Array<LoadedPlate>;\n  rackInfo: string;\n  inKg: boolean;\n}\n\ninterface StateProps {\n  lift: Lift;\n  language: Language;\n}\n\ntype Props = OwnProps & StateProps;\n\nclass BarLoad extends React.Component<Props> {\n  weightKgToStyle = (weightKg: number): string => {\n    switch (weightKg) {\n      case 50:\n        return styles.kg50;\n      case 25:\n        return styles.kg25;\n      case 20:\n        return styles.kg20;\n      case 15:\n        return styles.kg15;\n      case 10:\n        return styles.kg10;\n      case 5:\n        return styles.kg5;\n      case 2.5:\n        return styles.kg2p5;\n      case 1.25:\n        return styles.kg1p25;\n      case 1:\n        return styles.kg1;\n      case 0.75:\n        return styles.kg0p75;\n      case 0.5:\n        return styles.kg0p5;\n      case 0.25:\n        return styles.kg0p25;\n      default:\n        return styles.error;\n    }\n  };\n\n  weightLbsToStyle = (weightLbs: number): string => {\n    switch (weightLbs) {\n      case 100:\n        return styles.lbs100;\n      case 55:\n        return styles.lbs55;\n      case 45:\n        return styles.lbs45;\n      case 35:\n        return styles.lbs35;\n      case 25:\n        return styles.lbs25;\n      case 10:\n        return styles.lbs10;\n      case 5:\n        return styles.lbs5;\n      case 2.5:\n        return styles.lbs2p5;\n      case 1.25:\n        return styles.lbs1p25;\n      case 0.5:\n        return styles.lbs0p5;\n      default:\n        return styles.error;\n    }\n  };\n\n  weightAnyToText = (weightAny: number, language: Language): string => {\n    switch (weightAny) {\n      case 1.25:\n        return \"1¼\";\n      case 0.75:\n        return \"¾\";\n      case 0.5:\n        return \"½\";\n      case 0.25:\n        return \"¼\";\n      default:\n        return displayWeight(weightAny, language);\n    }\n  };\n\n  // Turns the selectPlates() array into divs.\n  renderPlates = () => {\n    const plates: Array<LoadedPlate> = this.props.loading;\n    const inKg: boolean = this.props.inKg;\n\n    let divs = [];\n    let i = 0;\n\n    // Iterate on a group of plates of the same weight at a time.\n    while (i < plates.length) {\n      const weightAny = plates[i].weightAny;\n\n      // If the weight is negative, it's an error report.\n      if (weightAny < 0) {\n        divs.push(\n          <div key={\"error\"} className={styles.error}>\n            ?{displayWeight(-1 * weightAny, this.props.language)}\n          </div>\n        );\n        break;\n      }\n\n      // Count how many times this same plate kind appears consecutively.\n      let plateCount = 1;\n      for (let j = i + 1; j < plates.length && plates[j].weightAny === weightAny; j++) {\n        plateCount++;\n      }\n\n      // If that plate is large and occurs a bunch, show a counter.\n      const showCounter = plateCount >= 3;\n\n      // Push each of the plates individually.\n      for (let j = 0; j < plateCount; j++) {\n        const plate = plates[i + j];\n        const counter = String(j + 1);\n\n        // Light backgrounds need dark text.\n        const is_light =\n          plate.color === PlateColors.PLATE_DEFAULT_WHITE || plate.color === PlateColors.PLATE_DEFAULT_YELLOW;\n\n        const style = {\n          backgroundColor: plate.color,\n          opacity: plate.isAlreadyLoaded ? 0.25 : undefined,\n          color: is_light ? \"#232323\" : \"#FFFFFF\",\n          // White plates need a border.\n          border: plate.color === PlateColors.PLATE_DEFAULT_WHITE ? \"1.5px solid #232323\" : undefined\n        };\n        divs.push(\n          <div\n            key={weightAny + \"-\" + counter}\n            className={inKg ? this.weightKgToStyle(weightAny) : this.weightLbsToStyle(weightAny)}\n            style={style}\n          >\n            <div>{this.weightAnyToText(weightAny, this.props.language)}</div>\n            {showCounter ? <div>{counter}</div> : null}\n          </div>\n        );\n      }\n\n      i += plateCount;\n    }\n\n    return divs;\n  };\n\n  render() {\n    // Only show rack info for lifts that use a rack.\n    let rackInfo = null;\n    if (this.props.lift !== \"D\") {\n      rackInfo = (\n        <div key={this.props.rackInfo} className={styles.rackInfo}>\n          <FormattedMessage\n            id=\"lifting.rack-info\"\n            defaultMessage=\"Rack {rackInfo}\"\n            values={{\n              rackInfo: this.props.rackInfo\n            }}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <div className={styles.container}>\n        <div className={styles.bar} />\n        {this.renderPlates()}\n        <div className={styles.collar} />\n        <div className={styles.bar} />\n        {rackInfo}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => {\n  return {\n    lift: state.lifting.lift,\n    language: state.language\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  null\n)(BarLoad);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// The left card on the lifting page, showing information about the current lifter\n// and helpful information for the loading crew.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport { selectPlates, makeLoadingRelative } from \"../../logic/barLoad\";\nimport { liftToAttemptFieldName } from \"../../logic/entry\";\nimport { getString } from \"../../logic/strings\";\nimport { kg2lbs, displayWeightOnePlace } from \"../../logic/units\";\n\nimport BarLoad from \"./BarLoad\";\n\nimport styles from \"./LeftCard.module.scss\";\n\nimport { Entry, Language, LoadedPlate, Plate } from \"../../types/dataTypes\";\nimport { GlobalState, LiftingState, RegistrationState } from \"../../types/stateTypes\";\n\ninterface OwnProps {\n  attemptOneIndexed: number;\n  orderedEntries: Array<Entry>;\n  currentEntryId: number | null;\n  nextEntryId: number | null;\n  nextAttemptOneIndexed: number | null;\n}\n\ninterface StateProps {\n  inKg: boolean;\n  showAlternateUnits: boolean;\n  squatBarAndCollarsWeightKg: number;\n  benchBarAndCollarsWeightKg: number;\n  deadliftBarAndCollarsWeightKg: number;\n  plates: Array<Plate>;\n  registration: RegistrationState;\n  lifting: LiftingState;\n  language: Language;\n}\n\ntype Props = OwnProps & StateProps;\n\ninterface BarLoadOptions {\n  weightKg: number;\n  weightLbs: number;\n  rackInfo: string;\n}\n\nclass LeftCard extends React.Component<Props> {\n  getBarLoadProps = (entryId: number | null, attemptOneIndexed: number | null): BarLoadOptions => {\n    const lift = this.props.lifting.lift;\n    const fieldKg = liftToAttemptFieldName(lift);\n\n    // Defaults, in case of no lifter.\n    if (entryId === null || entryId === undefined || attemptOneIndexed === null || attemptOneIndexed === undefined) {\n      return { weightKg: 0, weightLbs: 0, rackInfo: \"\" };\n    }\n\n    const idx = this.props.registration.lookup[entryId];\n    const entry = this.props.registration.entries[idx];\n\n    const weightKg = entry[fieldKg][attemptOneIndexed - 1];\n    const weightLbs = kg2lbs(weightKg);\n\n    let rackInfo = \"\";\n    if (lift === \"S\") rackInfo = entry.squatRackInfo;\n    if (lift === \"B\") rackInfo = entry.benchRackInfo;\n\n    return { weightKg, weightLbs, rackInfo };\n  };\n\n  getBarAndCollarsWeightKg = (): number => {\n    switch (this.props.lifting.lift) {\n      case \"S\":\n        return this.props.squatBarAndCollarsWeightKg;\n      case \"B\":\n        return this.props.benchBarAndCollarsWeightKg;\n      case \"D\":\n        return this.props.deadliftBarAndCollarsWeightKg;\n      default:\n        return 0;\n    }\n  };\n\n  render() {\n    const current = this.getBarLoadProps(this.props.currentEntryId, this.props.attemptOneIndexed);\n    const next = this.getBarLoadProps(this.props.nextEntryId, this.props.nextAttemptOneIndexed);\n\n    // Show one decimal point, and omit it if possible.\n    const language = this.props.language;\n    const weightKgText = displayWeightOnePlace(current.weightKg, language);\n    const weightLbsText = displayWeightOnePlace(current.weightLbs, language);\n\n    const barAndCollarsWeightKg = this.getBarAndCollarsWeightKg();\n\n    // Calculate both loadings.\n    const currentLoading: Array<LoadedPlate> = selectPlates(\n      current.weightKg,\n      barAndCollarsWeightKg,\n      this.props.plates,\n      this.props.inKg\n    );\n    const nextLoading: Array<LoadedPlate> = selectPlates(\n      next.weightKg,\n      barAndCollarsWeightKg,\n      this.props.plates,\n      this.props.inKg\n    );\n\n    // Set the next loading relative to the current loading.\n    if (next.weightKg >= current.weightKg) {\n      makeLoadingRelative(nextLoading, currentLoading);\n    }\n\n    let nextEntryName = undefined;\n    if (typeof this.props.nextEntryId === \"number\") {\n      const idx = this.props.registration.lookup[this.props.nextEntryId];\n      nextEntryName = this.props.registration.entries[idx].name;\n    }\n\n    const nextBarLoad =\n      next.weightKg === 0 ? (\n        undefined\n      ) : (\n        <div className={styles.loadingBar}>\n          <div className={styles.nextText}>\n            <FormattedMessage\n              id=\"lifting.next-up\"\n              defaultMessage=\"NEXT UP – {lifter}\"\n              values={{\n                lifter: nextEntryName\n              }}\n            />\n          </div>\n          <div className={styles.barArea}>\n            <BarLoad\n              key={String(next.weightKg) + next.rackInfo}\n              loading={nextLoading}\n              rackInfo={next.rackInfo}\n              inKg={this.props.inKg}\n            />\n          </div>\n        </div>\n      );\n\n    let attemptTemplate = \"\";\n    if (this.props.inKg) {\n      if (this.props.showAlternateUnits) {\n        attemptTemplate = getString(\"lifting.current-weight-kg-lbs\", language);\n      } else {\n        attemptTemplate = getString(\"lifting.current-weight-kg\", language);\n      }\n    } else {\n      if (this.props.showAlternateUnits) {\n        attemptTemplate = getString(\"lifting.current-weight-lbs-kg\", language);\n      } else {\n        attemptTemplate = getString(\"lifting.current-weight-lbs\", language);\n      }\n    }\n\n    return (\n      <div className={styles.container}>\n        <div className={styles.activeCard}>\n          <div className={styles.loadingBar}>\n            <div className={styles.attemptText}>\n              {attemptTemplate.replace(\"{kg}\", weightKgText).replace(\"{lbs}\", weightLbsText)}\n            </div>\n            <div className={styles.barArea}>\n              <BarLoad\n                key={String(current.weightKg) + current.rackInfo}\n                loading={currentLoading}\n                rackInfo={current.rackInfo}\n                inKg={this.props.inKg}\n              />\n            </div>\n          </div>\n        </div>\n        {nextBarLoad}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => {\n  return {\n    inKg: state.meet.inKg,\n    showAlternateUnits: state.meet.showAlternateUnits,\n    squatBarAndCollarsWeightKg: state.meet.squatBarAndCollarsWeightKg,\n    benchBarAndCollarsWeightKg: state.meet.benchBarAndCollarsWeightKg,\n    deadliftBarAndCollarsWeightKg: state.meet.deadliftBarAndCollarsWeightKg,\n    plates: state.meet.plates,\n    registration: state.registration,\n    lifting: state.lifting,\n    language: state.language\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  null\n)(LeftCard);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// An editable component for attempt manipulation in the LiftingContent.\n\nimport React, { FormEvent } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Form from \"react-bootstrap/Form\";\n\nimport { liftToAttemptFieldName, liftToStatusFieldName } from \"../../logic/entry\";\nimport { enterAttempt } from \"../../actions/liftingActions\";\nimport { kg2lbs, lbs2kg, displayWeight } from \"../../logic/units\";\n\nimport { Entry, Language, Lift, Validation } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\n\nimport styles from \"./LiftingTable.module.scss\";\nimport { FormControlTypeHack } from \"../../types/utils\";\nimport { Dispatch } from \"redux\";\n\ninterface StateProps {\n  inKg: boolean;\n  language: Language;\n}\n\ninterface OwnProps {\n  entry: Entry;\n  lift: Lift;\n  attemptOneIndexed: number;\n  id: string;\n}\n\ninterface DispatchProps {\n  enterAttempt: (entryId: number, lift: Lift, attemptOneIndexed: number, weightKg: number) => void;\n}\n\ntype Props = StateProps & OwnProps & DispatchProps;\n\ninterface InternalState {\n  lastGoodValue: string;\n  value: string;\n}\n\nclass AttemptInput extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    this.validate = this.validate.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n\n    const fieldKg = liftToAttemptFieldName(this.props.lift);\n    const weightKg: number = this.props.entry[fieldKg][this.props.attemptOneIndexed - 1];\n\n    let weightStr = \"\";\n    if (weightKg !== 0) {\n      weightStr = displayWeight(this.props.inKg ? weightKg : kg2lbs(weightKg), this.props.language);\n    }\n\n    this.state = {\n      lastGoodValue: weightStr,\n      value: weightStr\n    };\n  }\n\n  validate = (): Validation => {\n    let { value } = this.state;\n    if (value === \"\") return null;\n\n    // Allow use of commas as decimal separator.\n    value = value.replace(\",\", \".\");\n\n    // Handle all errors before all warnings.\n    // Check that the input is a number.\n    const asNumber = Number(value);\n    if (isNaN(asNumber)) return \"error\";\n    if (!isFinite(asNumber)) return \"error\";\n    if (asNumber < 0) return \"error\";\n\n    // The bar weight must be monotonically increasing between attempts.\n    if (this.props.attemptOneIndexed > 1) {\n      const asKg = this.props.inKg ? asNumber : lbs2kg(asNumber);\n\n      const entry = this.props.entry;\n      const fieldKg = liftToAttemptFieldName(this.props.lift);\n      const fieldStatus = liftToStatusFieldName(this.props.lift);\n\n      const prevAttemptOneIndexed = this.props.attemptOneIndexed - 1;\n      const prevKg = entry[fieldKg][prevAttemptOneIndexed - 1];\n      const prevStatus = entry[fieldStatus][prevAttemptOneIndexed - 1];\n\n      // The previous weight cannot be greater than the current weight.\n      if (prevKg > asKg) return \"error\";\n\n      // The current weight cannot repeat a successful attempt.\n      if (prevKg === asKg && prevStatus === 1) return \"error\";\n\n      // However, they can be equal if the previous attempt was failed.\n      if (prevKg === asKg && prevStatus !== -1) return \"warning\";\n    }\n\n    if (asNumber % 2.5 !== 0) return \"warning\";\n    return null;\n  };\n\n  handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === \"Enter\") {\n      event.currentTarget.blur();\n    }\n  };\n\n  handleChange = (event: FormEvent<FormControlTypeHack>) => {\n    const value = event.currentTarget.value;\n    if (typeof value === \"string\") {\n      let fixups = value.replace(\" \", \"\");\n\n      // Dvorak \"e\" corresponds to QWERTY \".\", but also is used in exponential\n      // notation, which is a fairly impactful typo.\n      fixups = value.replace(\"e\", \".\");\n\n      this.setState({ value: fixups });\n    }\n  };\n\n  handleBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n    if (this.validate() === \"error\") {\n      this.setState({ value: this.state.lastGoodValue });\n      return;\n    }\n\n    const entryId = this.props.entry.id;\n    const lift = this.props.lift;\n    const attemptOneIndexed = this.props.attemptOneIndexed;\n    const asNumber = Number(this.state.value.replace(\",\", \".\"));\n    const weightKg = this.props.inKg ? asNumber : lbs2kg(asNumber);\n\n    this.props.enterAttempt(entryId, lift, attemptOneIndexed, weightKg);\n    this.setState({ lastGoodValue: this.state.value });\n  };\n\n  render() {\n    const validation: Validation = this.validate();\n\n    return (\n      <Form.Group style={{ marginBottom: 0 }}>\n        <Form.Control\n          id={this.props.id}\n          type=\"text\"\n          placeholder=\"\"\n          value={this.state.value}\n          onKeyDown={this.handleKeyDown}\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n          // Nothing for Valid == we don't want borders.\n          isInvalid={validation === \"error\"}\n          // Special rules in the _openlifter.scss override warning styles.\n          // Makes the borders look normal but shows a yellow background.\n          className={(validation === \"warning\" ? \"is-warning \" : \"\") + styles.attemptInput + \" attempt-input\"}\n        />\n      </Form.Group>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  inKg: state.meet.inKg,\n  language: state.language\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  enterAttempt: (entryId, lift, attemptOneIndexed, weightKg) =>\n    dispatch(enterAttempt(entryId, lift, attemptOneIndexed, weightKg))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AttemptInput);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the calculation of AH points, used by ParaPL.\n// Taken from https://gitlab.com/openpowerlifting/opl-data/blob/master/modules/coefficients/src/ah.rs\n\nimport { Sex } from \"../../types/dataTypes\";\nimport { checkExhausted } from \"../../types/utils\";\n\n// Calculates the AH coefficient for men.\n//\n// The full formula is defined in Excel:\n//  =ROUND($AM$1/(POWER(LOG(I13),$AM$2))*M13,2)\n//\n// Where:\n//  I13: Bodyweight\n//  M13: Lift Attempt\n//  AM1: 3.2695\n//  AM2: 1.95\nfunction ahMen(bodyweightKg: number): number {\n  const AM1: number = 3.2695;\n  const AM2: number = 1.95;\n\n  const adjusted = Math.min(Math.max(bodyweightKg, 32.0), 157.0);\n\n  return AM1 / Math.pow(Math.log10(adjusted), AM2);\n}\n\n// Calculates the AH coefficient for women.\n//\n// The full formula is defined in Excel:\n//  =ROUND($AG$1/(POWER(LOG(I13),$AG$10))*M13,2)\n//\n// Where:\n//  I13: Bodyweight\n//  M13: Lift Attempt\n//  AG1: 2.7566\n//  AG10: 1.8\nfunction ahWomen(bodyweightKg: number): number {\n  const AG1: number = 2.7566;\n  const AG10: number = 1.8;\n\n  const adjusted = Math.min(Math.max(bodyweightKg, 28.0), 112.0);\n\n  return AG1 / Math.pow(Math.log10(adjusted), AG10);\n}\n\n// Calculates AH (Haleczko) points, used in ParaPL bench-only meets.\nexport const ah = (sex: Sex, bodyweightKg: number, totalKg: number): number => {\n  switch (sex) {\n    case \"M\":\n    case \"Mx\":\n      return ahMen(bodyweightKg) * totalKg;\n    case \"F\":\n      return ahWomen(bodyweightKg) * totalKg;\n    default:\n      checkExhausted(sex);\n      return 0;\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the calculation of Dots points.\n//\n// Dots were introduced by the German IPF Affiliate BVDK after the IPF switched to\n// IPF Points, which do not allow comparing between sexes. The BVDK hosts team\n// competitions that allow lifters of all sexes to compete on a singular team.\n//\n// Since Wilks points have been ostracized from the IPF, and IPF Points are\n// unsuitable, German lifters therefore came up with their own formula.\n//\n// The author of the Dots formula is Tim Konertz <tim.konertz@outlook.com>.\n//\n// Tim says that Dots is an acronym for \"Dynamic Objective Team Scoring,\"\n// but that they chose the acronym before figuring out the expansion.\n//\n// Implementation taken from the main OpenPowerlifting repo, also AGPLv3+.\n\nimport { Sex } from \"../../types/dataTypes\";\nimport { checkExhausted } from \"../../types/utils\";\n\nfunction dotsPoly(a: number, b: number, c: number, d: number, e: number, x: number): number {\n  const x2 = x * x;\n  const x3 = x2 * x;\n  const x4 = x3 * x;\n  return 500.0 / (a * x4 + b * x3 + c * x2 + d * x + e);\n}\n\nexport function dotsMen(bodyweightKg: number): number {\n  const A = -0.000001093;\n  const B = 0.0007391293;\n  const C = -0.1918759221;\n  const D = 24.0900756;\n  const E = -307.75076;\n\n  const adjusted = Math.max(Math.min(bodyweightKg, 210.0), 40.0);\n  return dotsPoly(A, B, C, D, E, adjusted);\n}\n\nexport function dotsWomen(bodyweightKg: number): number {\n  const A = -0.0000010706;\n  const B = 0.0005158568;\n  const C = -0.1126655495;\n  const D = 13.6175032;\n  const E = -57.96288;\n\n  const adjusted = Math.max(Math.min(bodyweightKg, 150.0), 40.0);\n  return dotsPoly(A, B, C, D, E, adjusted);\n}\n\nexport const dots = (sex: Sex, bodyweightKg: number, totalKg: number): number => {\n  if (bodyweightKg === 0 || totalKg === 0) {\n    return 0.0;\n  }\n\n  switch (sex) {\n    case \"M\":\n    case \"Mx\":\n      return dotsMen(bodyweightKg) * totalKg;\n    case \"F\":\n      return dotsWomen(bodyweightKg) * totalKg;\n    default:\n      checkExhausted(sex);\n      return 0;\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines Foster-McCulloch age coefficients.\n//\n// These are taken from the OpenPowerlifting coefficients module,\n// translated from the original Rust code.\n\nconst AGE_COEFFICIENTS = [\n  // Coefficients in the range of 0-4 are clearly nonsense.\n  0.0, // 0\n  0.0, // 1\n  0.0, // 2\n  0.0, // 3\n  0.0, // 4\n  // These coefficients don't actually exist, and are just low-balled best guesses.\n  // Kids really shouldn't be competing in this sport...\n  // Ranges from age 5 to 13.\n  1.73, // 5\n  1.67, // 6\n  1.61, // 7\n  1.55, // 8\n  1.49, // 9\n  1.43, // 10\n  1.38, // 11\n  1.33, // 12\n  1.28, // 13\n  // Foster coefficients:\n  // http://www.usapl-sd.com/Formulas/Foster.htm\n  // Ranges from age 14 to 22.\n  1.23, // 14\n  1.18, // 15\n  1.13, // 16\n  1.08, // 17\n  1.06, // 18\n  1.04, // 19\n  1.03, // 20\n  1.02, // 21\n  1.01, // 22\n  // Lifters in the range 23-40 receive no handicap.\n  1.0, // 23\n  1.0, // 24\n  1.0, // 25\n  1.0, // 26\n  1.0, // 27\n  1.0, // 28\n  1.0, // 29\n  1.0, // 30\n  1.0, // 31\n  1.0, // 32\n  1.0, // 33\n  1.0, // 34\n  1.0, // 35\n  1.0, // 36\n  1.0, // 37\n  1.0, // 38\n  1.0, // 39\n  1.0, // 40\n  // McCulloch coefficients:\n  //  http://www.usapl-sd.com/Formulas/Mcculloch.htm (contains some errors).\n  // Errors were corrected using the Masters coefficients from:\n  //  http://worldpowerliftingcongress.com/wp-content/uploads/2015/02/Glossbrenner.htm\n  // Ranges from age 41 to 80.\n  1.01, // 41\n  1.02, // 42\n  1.031, // 43\n  1.043, // 44\n  1.055, // 45\n  1.068, // 46\n  1.082, // 47\n  1.097, // 48\n  1.113, // 49\n  1.13, // 50\n  1.147, // 51\n  1.165, // 52\n  1.184, // 53\n  1.204, // 54\n  1.225, // 55\n  1.246, // 56\n  1.268, // 57\n  1.291, // 58\n  1.315, // 59\n  1.34, // 60\n  1.366, // 61\n  1.393, // 62\n  1.421, // 63\n  1.45, // 64\n  1.48, // 65\n  1.511, // 66\n  1.543, // 67\n  1.576, // 68\n  1.61, // 69\n  1.645, // 70\n  1.681, // 71\n  1.718, // 72\n  1.756, // 73\n  1.795, // 74\n  1.835, // 75\n  1.876, // 76\n  1.918, // 77\n  1.961, // 78\n  2.005, // 79\n  2.05, // 80\n  // These coefficients taken from:\n  // http://www.usapltwinportsrawopen.com/resources/USAPL+Age+Coefficients.pdf\n  // Ranges from age 81 to 90.\n  2.096, // 81\n  2.143, // 82\n  2.19, // 83\n  2.238, // 84\n  2.287, // 85\n  2.337, // 86\n  2.388, // 87\n  2.44, // 88\n  2.494, // 89\n  2.549, // 90\n  // Coefficients above 90 were just guessed at, and are unstandardized.\n  2.605, // 91\n  2.662, // 92\n  2.72, // 93\n  2.779, // 94\n  2.839, // 95\n  2.9, // 96\n  2.962, // 97\n  3.025, // 98\n  3.089, // 99\n  3.154 // 100\n];\n\n// Maps the given age into the table above.\nexport const fosterMcCulloch = (age: number): number => {\n  if (!Number.isInteger(age) || age <= 0) {\n    return 1.0;\n  }\n\n  // Greater-than is correct here: (age) is used to index into table, not (age-1).\n  if (age > AGE_COEFFICIENTS.length) {\n    return 1.0;\n  }\n\n  return AGE_COEFFICIENTS[age];\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the calculation of Schwartz-Malone points.\n// Taken from https://gitlab.com/openpowerlifting/opl-data.\n\nimport { Sex } from \"../../types/dataTypes\";\n\n// Calculated the Schwartz coefficient, used for men.\nexport const schwartz_coefficient = (bodyweightKg: number): number => {\n  // Values calculated by fitting to coefficient tables.\n  const A = 3565.902903983125;\n  const B = -2.244917050872728;\n  const C = 0.445775838479913;\n\n  // Arbitrary choice of lower bound.\n  let adjusted = Math.max(bodyweightKg, 40.0);\n\n  return A * Math.pow(adjusted, B) + C;\n};\n\n// Calculates the Malone coefficient, used for women.\nexport const malone_coefficient = (bodyweightKg: number): number => {\n  // Values calculated by fitting to coefficient tables.\n  const A = 106.011586323613;\n  const B = -1.293027130579051;\n  const C = 0.322935585328304;\n\n  // Lower bound chosen at point where Malone = max(Wilks).\n  let adjusted = Math.max(bodyweightKg, 29.24);\n\n  return A * Math.pow(adjusted, B) + C;\n};\n\n// Calculates Schwartz-Malone points.\n//\n// Schwartz-Malone is an older system that was superseded by Wilks.\nexport const schwartzmalone = (sex: Sex, bodyweightKg: number, totalKg: number): number => {\n  switch (sex) {\n    case \"M\":\n      return schwartz_coefficient(bodyweightKg) * totalKg;\n    case \"F\":\n      return malone_coefficient(bodyweightKg) * totalKg;\n    default:\n      return 0;\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the calculation of Wilks points.\n// Taken from https://gitlab.com/openpowerlifting/ipf-points-calculator.\n\nimport { Sex } from \"../../types/dataTypes\";\nimport { checkExhausted } from \"../../types/utils\";\n\nfunction wilksPoly(a: number, b: number, c: number, d: number, e: number, f: number, x: number): number {\n  var x2 = x * x,\n    x3 = x2 * x,\n    x4 = x3 * x,\n    x5 = x4 * x;\n  return 500.0 / (a + b * x + c * x2 + d * x3 + e * x4 + f * x5);\n}\n\nexport function wilksMen(bodyweightKg: number): number {\n  const normalized = Math.min(Math.max(bodyweightKg, 40.0), 201.9);\n  return wilksPoly(-216.0475144, 16.2606339, -0.002388645, -0.00113732, 7.01863e-6, -1.291e-8, normalized);\n}\n\nexport function wilksWomen(bodyweightKg: number): number {\n  const normalized = Math.min(Math.max(bodyweightKg, 26.51), 154.53);\n  return wilksPoly(\n    594.31747775582,\n    -27.23842536447,\n    0.82112226871,\n    -0.00930733913,\n    0.00004731582,\n    -0.00000009054,\n    normalized\n  );\n}\n\nexport const wilks = (sex: Sex, bodyweightKg: number, totalKg: number): number => {\n  switch (sex) {\n    case \"M\":\n    case \"Mx\":\n      return wilksMen(bodyweightKg) * totalKg;\n    case \"F\":\n      return wilksWomen(bodyweightKg) * totalKg;\n    default:\n      checkExhausted(sex);\n      return 0;\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the calculation of Glossbrenner points.\n// Taken from https://gitlab.com/openpowerlifting/opl-data.\n\nimport { schwartz_coefficient, malone_coefficient } from \"./schwartzmalone\";\nimport { wilksMen, wilksWomen } from \"./wilks\";\n\nimport { Sex } from \"../../types/dataTypes\";\nimport { checkExhausted } from \"../../types/utils\";\n\nconst glossbrenner_coefficient_men = (bodyweightKg: number): number => {\n  // Glossbrenner is defined piecewise.\n  if (bodyweightKg < 153.05) {\n    return (schwartz_coefficient(bodyweightKg) + wilksMen(bodyweightKg)) / 2.0;\n  } else {\n    // Linear coefficients found by fitting to a table.\n    const A = -0.000821668402557;\n    const B = 0.676940740094416;\n    return (schwartz_coefficient(bodyweightKg) + A * bodyweightKg + B) / 2.0;\n  }\n};\n\nconst glossbrenner_coefficient_women = (bodyweightKg: number): number => {\n  // Glossbrenner is defined piecewise.\n  if (bodyweightKg < 106.3) {\n    return (malone_coefficient(bodyweightKg) + wilksWomen(bodyweightKg)) / 2.0;\n  } else {\n    // Linear coefficients found by fitting to a table.\n    const A = -0.000313738002024;\n    const B = 0.852664892884785;\n    return (malone_coefficient(bodyweightKg) + A * bodyweightKg + B) / 2.0;\n  }\n};\n\n// Calculates Glossbrenner points.\n//\n// Glossbrenner is the average of two older systems, Schwartz-Malone and Wilks,\n// with a piecewise linear section.\n//\n// This points system is most often used by GPC affiliates.\nexport const glossbrenner = (sex: Sex, bodyweightKg: number, totalKg: number): number => {\n  switch (sex) {\n    case \"M\":\n    case \"Mx\":\n      return glossbrenner_coefficient_men(bodyweightKg) * totalKg;\n    case \"F\":\n      return glossbrenner_coefficient_women(bodyweightKg) * totalKg;\n    default:\n      checkExhausted(sex);\n      return 0;\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the calculation of IPF Points.\n// Taken from https://gitlab.com/openpowerlifting/ipf-points-calculator.\n\nimport { Sex, Event, Equipment } from \"../../types/dataTypes\";\n\ntype Coefficients = Array<number>;\ntype ByEvent = {\n  SBD: Coefficients;\n  S: Coefficients;\n  B: Coefficients;\n  D: Coefficients;\n};\ntype ByEquipment = {\n  Sleeves: ByEvent;\n  \"Single-ply\": ByEvent;\n};\ntype BySex = {\n  M: ByEquipment;\n  F: ByEquipment;\n};\n\nconst PARAMETERS: BySex = {\n  M: {\n    Sleeves: {\n      SBD: [310.67, 857.785, 53.216, 147.0835],\n      S: [123.1, 363.085, 25.1667, 75.4311],\n      B: [86.4745, 259.155, 17.57845, 53.122],\n      D: [103.5355, 244.765, 15.3714, 31.5022]\n    },\n    \"Single-ply\": {\n      SBD: [387.265, 1121.28, 80.6324, 222.4896],\n      S: [150.485, 446.445, 36.5155, 103.7061],\n      B: [133.94, 441.465, 35.3938, 113.0057],\n      D: [110.135, 263.66, 14.996, 23.011]\n    }\n  },\n  F: {\n    Sleeves: {\n      SBD: [125.1435, 228.03, 34.5246, 86.8301],\n      S: [50.479, 105.632, 19.1846, 56.2215],\n      B: [25.0485, 43.848, 6.7172, 13.952],\n      D: [47.136, 67.349, 9.1555, 13.67]\n    },\n    \"Single-ply\": {\n      SBD: [176.58, 373.315, 48.4534, 110.0103],\n      S: [74.6855, 171.585, 21.9475, 52.2948],\n      B: [49.106, 124.209, 23.199, 67.4926],\n      D: [51.002, 69.8265, 8.5802, 5.7258]\n    }\n  }\n};\n\nexport const ipfpoints = (\n  totalKg: number,\n  bodyweightKg: number,\n  sex: Sex,\n  equipment: Equipment,\n  event: Event\n): number => {\n  if (totalKg === 0) return 0;\n  if (bodyweightKg < 40) return 0;\n\n  // Restrict inputs to only the defined subset.\n  let normalizedEquipment = equipment;\n  if (equipment === \"Bare\" || equipment === \"Wraps\") {\n    normalizedEquipment = \"Sleeves\";\n  } else if (equipment === \"Multi-ply\") {\n    normalizedEquipment = \"Single-ply\";\n  }\n  if (normalizedEquipment !== \"Sleeves\" && normalizedEquipment !== \"Single-ply\") {\n    return 0;\n  }\n\n  // Consider Mx athletes as M, since that's the harsher formula.\n  let normalizedSex = sex;\n  if (sex === \"Mx\") normalizedSex = \"M\";\n\n  if (event !== \"SBD\" && event !== \"S\" && event !== \"B\" && event !== \"D\") return 0;\n  if (normalizedSex !== \"M\" && normalizedSex !== \"F\") return 0;\n\n  const params = PARAMETERS[normalizedSex][normalizedEquipment][event];\n  const bw_log = Math.log(bodyweightKg);\n\n  const mean = params[0] * bw_log - params[1];\n  const dev = params[2] * bw_log - params[3];\n\n  const points = 500 + (100 * (totalKg - mean)) / dev;\n  if (isNaN(points) || points < 0) {\n    return 0;\n  }\n  return points;\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the calculation of Reshel points.\n//\n// Reshel is published as a table, with rounded x-values and rounded y-values.\n// No formula is given. We attempted to fit a function to the curve.\n//\n// The formula here is accurate to about 0.01, and is most inaccurate between\n// 70-80kg for men. Elsewhere it fits very closely.\n\nimport { Sex } from \"../../types/dataTypes\";\nimport { checkExhausted } from \"../../types/utils\";\n\nexport function reshelMen(bodyweightKg: number): number {\n  // Coefficients determined by GNUPlot. They need improvement.\n  const a: number = 23740.8329088123;\n  const b: number = -9.75618720662844;\n  const c: number = 0.787990994925928;\n  const d: number = -2.68445158813578;\n\n  const normalized = Math.min(Math.max(bodyweightKg, 50.0), 174.75);\n  return a * Math.pow(normalized + b, d) + c;\n}\n\nexport function reshelWomen(bodyweightKg: number): number {\n  // Coefficients determined by GNUPlot. They need improvement.\n  const a: number = 239.894659799145;\n  const b: number = -20.5105859285582;\n  const c: number = 1.16052601684125;\n  const d: number = -1.61417872668708;\n\n  const normalized = Math.min(Math.max(bodyweightKg, 40.0), 118.75);\n  return a * Math.pow(normalized + b, d) + c;\n}\n\nexport const reshel = (sex: Sex, bodyweightKg: number, totalKg: number): number => {\n  switch (sex) {\n    case \"M\":\n    case \"Mx\":\n      return reshelMen(bodyweightKg) * totalKg;\n    case \"F\":\n      return reshelWomen(bodyweightKg) * totalKg;\n    default:\n      checkExhausted(sex);\n      return 0;\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Wraps all the points functions into a common interface.\n\nimport { ah } from \"./ah\";\nimport { bodyweight_multiple } from \"./bodyweight-multiple\";\nimport { dots } from \"./dots\";\nimport { fosterMcCulloch } from \"./foster-mcculloch\";\nimport { glossbrenner } from \"./glossbrenner\";\nimport { ipfpoints } from \"./ipf\";\nimport { nasapoints } from \"./nasa\";\nimport { reshel } from \"./reshel\";\nimport { schwartzmalone } from \"./schwartzmalone\";\nimport { wilks } from \"./wilks\";\n\nimport { getAge } from \"../entry\";\nimport { kg2lbs } from \"../units\";\n\nimport { AgeCoefficients, Entry, Event, Equipment, Formula, Sex } from \"../../types/dataTypes\";\nimport { checkExhausted } from \"../../types/utils\";\n\nexport const getPoints = (formula: Formula, entry: Entry, event: Event, totalKg: number, inKg: boolean): number => {\n  // Some of the data are singular properties of the entry.\n  const sex: Sex = entry.sex;\n  const equipment: Equipment = entry.equipment;\n  const bodyweightKg: number = entry.bodyweightKg;\n\n  switch (formula) {\n    case \"AH\":\n      return ah(sex, bodyweightKg, totalKg);\n    case \"Bodyweight Multiple\":\n      return bodyweight_multiple(bodyweightKg, totalKg);\n    case \"Dots\":\n      return dots(sex, bodyweightKg, totalKg);\n    case \"Glossbrenner\":\n      return glossbrenner(sex, bodyweightKg, totalKg);\n    case \"IPF Points\":\n      return ipfpoints(totalKg, bodyweightKg, sex, equipment, event);\n    case \"NASA Points\":\n      return nasapoints(bodyweightKg, totalKg);\n    case \"Reshel\":\n      return reshel(sex, bodyweightKg, totalKg);\n    case \"Schwartz/Malone\":\n      return schwartzmalone(sex, bodyweightKg, totalKg);\n    case \"Total\":\n      return inKg ? totalKg : kg2lbs(totalKg);\n    case \"Wilks\":\n      return wilks(sex, bodyweightKg, totalKg);\n    default:\n      checkExhausted(formula);\n      return 0;\n  }\n};\n\nexport const getAgeAdjustedPoints = (\n  ageCoefficients: AgeCoefficients,\n  meetDate: string,\n  formula: Formula,\n  entry: Entry,\n  event: Event,\n  totalKg: number,\n  inKg: boolean\n): number => {\n  const points = getPoints(formula, entry, event, totalKg, inKg);\n\n  switch (ageCoefficients) {\n    case \"None\":\n      return points;\n    case \"FosterMcCulloch\":\n      return fosterMcCulloch(getAge(entry, meetDate)) * points;\n    default:\n      checkExhausted(ageCoefficients);\n      return 0;\n  }\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the calculation of points as a multiple of bodyweight.\n//\n// Although this logic is very simple, there is some finesse to avoid\n// division by zero that is easier to write once and import than repeat.\n\nexport const bodyweight_multiple = (bodyweightKg: number, totalKg: number): number => {\n  if (bodyweightKg <= 0 || totalKg <= 0) {\n    return 0;\n  }\n  return totalKg / bodyweightKg;\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the calculation of NASA Points.\n// They are defined in a coefficient table: http://nasa-sports.com/coefficient-system/\n// It turns out that they are a simple line.\n\nexport const nasapoints = (bodyweightKg: number, totalKg: number): number => {\n  // The function was determined using fitting in GNUPlot:\n  //\n  // Final set of parameters            Asymptotic Standard Error\n  // =======================            ==========================\n  // m               = 0.00620912       +/- 1.265e-06    (0.02037%)\n  // b               = 0.565697         +/- 0.0001322    (0.02337%)\n  const m = 0.00620912;\n  const b = 0.565697;\n\n  if (bodyweightKg < 30) return 0; // Arbitrary lower bound.\n  return (totalKg / bodyweightKg) * (m * bodyweightKg + b);\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { liftToAttemptFieldName, liftToStatusFieldName, MAX_ATTEMPTS } from \"./entry\";\n\nimport { LiftingOrder, Entry, FieldKg, FieldStatus } from \"../types/dataTypes\";\nimport { LiftingState } from \"../types/stateTypes\";\n\n// Helper function: for a given entry, see what attempt number would be next.\n//\n// Returns a number >1 if the entry is still lifting, representing the next attempt.\n// Returns zero if the entry does not have any pending attempts.\nconst getNextAttemptNumberForEntry = (entry: Entry, fieldKg: FieldKg, fieldStatus: FieldStatus): number => {\n  const weightsKg = entry[fieldKg];\n  const statuses = entry[fieldStatus];\n\n  // Lifters only set the next attempt, so loop backwards,\n  // looking for the first attempt that meets the criteria.\n  for (var i = MAX_ATTEMPTS - 1; i >= 0; i--) {\n    if (weightsKg[i] !== 0 && statuses[i] === 0) {\n      return i + 1;\n    }\n  }\n  return 0;\n};\n\n// Determine the current active attempt for the current lift.\n//\n// An attempt is active if either:\n// 1. It has been overridden by the Attempt selector.\n// 2. There exists an attempt of that number with no success/failure value,\n//    and there is no lower attempt number with that property.\n//\n// Returns a number in the (inclusive) range of [1, MAX_ATTEMPTS].\n// If there is not enough data to make a decision, returns 1.\nconst getActiveAttemptNumber = (entriesInFlight: Array<Entry>, lifting: LiftingState): number => {\n  const lift = lifting.lift;\n  const fieldKg = liftToAttemptFieldName(lift);\n  const fieldStatus = liftToStatusFieldName(lift);\n\n  // Allow manual override.\n  if (lifting.overrideAttempt !== null) {\n    return Number(lifting.overrideAttempt);\n  }\n\n  // Iterate in reverse, looking for the earliest attempt that hasn't been lifted.\n  let earliestAttemptOneIndexed = MAX_ATTEMPTS + 1;\n  for (var i = 0; i < entriesInFlight.length; i++) {\n    const entry = entriesInFlight[i];\n    const next = getNextAttemptNumberForEntry(entry, fieldKg, fieldStatus);\n    // Zero return value means \"no pending attempts for this entry.\"\n    if (next > 0 && next < earliestAttemptOneIndexed) {\n      earliestAttemptOneIndexed = next;\n    }\n  }\n\n  // In the case of no pending lifts, just default to first attempt.\n  if (earliestAttemptOneIndexed === MAX_ATTEMPTS + 1) {\n    return 1;\n  }\n  return earliestAttemptOneIndexed;\n};\n\n// Helper function for recursive comparison.\nexport const compareEntriesByAttempt = (a: Entry, b: Entry, fieldKg: FieldKg, attemptOneIndexed: number): number => {\n  const aKg = a[fieldKg][attemptOneIndexed - 1];\n  const bKg = b[fieldKg][attemptOneIndexed - 1];\n\n  // If non-equal, sort by weight, ascending.\n  if (aKg !== bKg) return aKg - bKg;\n\n  // If the federation uses lot numbers, break ties using lot.\n  if (a.lot !== 0 && b.lot !== 0) return a.lot - b.lot;\n\n  // If this is not the first attempt, preserve the order from the last attempt.\n  if (attemptOneIndexed > 1) {\n    return compareEntriesByAttempt(a, b, fieldKg, attemptOneIndexed - 1);\n  }\n\n  // Try to break ties using bodyweight, with the lighter lifter going first.\n  if (a.bodyweightKg !== b.bodyweightKg) return a.bodyweightKg - b.bodyweightKg;\n\n  // If we've run out of properties by which to compare them, resort to Name.\n  if (a.name < b.name) return -1;\n  if (a.name > b.name) return 1;\n  return 0;\n};\n\n// Helper function: performs an in-place sort on an array of entries.\n// Assumes that zero entries are not mixed in with non-zero entries.\nexport const orderEntriesByAttempt = (\n  entries: Array<Entry>,\n  fieldKg: FieldKg,\n  attemptOneIndexed: number\n): Array<Entry> => {\n  return entries.sort((a, b) => {\n    return compareEntriesByAttempt(a, b, fieldKg, attemptOneIndexed);\n  });\n};\n\n// Returns a copy of the entries in lifting order for the current attempt.\nconst orderEntriesForAttempt = (\n  entriesInFlight: Array<Entry>,\n  lifting: LiftingState,\n  attemptOneIndexed: number\n): Array<Entry> => {\n  const lift = lifting.lift;\n  const fieldKg = liftToAttemptFieldName(lift);\n\n  const attemptZeroIndexed = attemptOneIndexed - 1;\n  const existsNextAttempt = attemptOneIndexed + 1 <= MAX_ATTEMPTS;\n  const existsPrevAttempt = attemptOneIndexed > 1;\n\n  // Divide the entries into disjoint groups:\n  let byNextAttempt: Array<Entry> = []; // Entries sorted by their next attempt.\n  let byThisAttempt: Array<Entry> = []; // Entries sorted by this attempt.\n  let byPrevAttempt: Array<Entry> = []; // Entries sorted by previous attempt.\n  let notLifting: Array<Entry> = []; // Entries that don't have this or next attempts in.\n\n  for (let i = 0; i < entriesInFlight.length; i++) {\n    const entry = entriesInFlight[i];\n\n    if (existsNextAttempt && entry[fieldKg][attemptZeroIndexed + 1] !== 0) {\n      byNextAttempt.push(entry);\n    } else if (entry[fieldKg][attemptZeroIndexed] !== 0) {\n      byThisAttempt.push(entry);\n    } else if (existsPrevAttempt && entry[fieldKg][attemptZeroIndexed - 1] !== 0) {\n      byPrevAttempt.push(entry);\n    } else {\n      notLifting.push(entry);\n    }\n  }\n\n  // Perform sorting on the relative groups.\n  if (existsNextAttempt) {\n    orderEntriesByAttempt(byNextAttempt, fieldKg, attemptOneIndexed + 1);\n  }\n  orderEntriesByAttempt(byThisAttempt, fieldKg, attemptOneIndexed);\n  if (existsPrevAttempt) {\n    orderEntriesByAttempt(byPrevAttempt, fieldKg, attemptOneIndexed - 1);\n  }\n  orderEntriesByAttempt(notLifting, fieldKg, attemptOneIndexed);\n\n  // Arrange these three groups consecutively.\n  return Array.prototype.concat(byNextAttempt, byThisAttempt, byPrevAttempt, notLifting);\n};\n\n// Returns either the current entry ID or null if no active entry.\n//\n// In the ordered entries, the earliest lifter that hasn't gone yet is going.\n// This can be manually overridden by UI controls.\nconst getCurrentEntryId = (\n  lifting: LiftingState,\n  orderedEntries: Array<Entry>,\n  attemptOneIndexed: number\n): number | null => {\n  const lift = lifting.lift;\n  const fieldKg = liftToAttemptFieldName(lift);\n  const fieldStatus = liftToStatusFieldName(lift);\n\n  if (lifting.overrideEntryId !== null) {\n    return Number(lifting.overrideEntryId);\n  }\n\n  for (let i = 0; i < orderedEntries.length; i++) {\n    const entry = orderedEntries[i];\n    const idx = attemptOneIndexed - 1;\n    if (entry[fieldKg][idx] !== 0 && entry[fieldStatus][idx] === 0) {\n      return entry.id;\n    }\n  }\n  return null;\n};\n\ntype NextEntryInfo = {\n  entryId: number;\n  attemptOneIndexed: number;\n};\n\n// Returns either an Object of {entryId, attemptOneIndexed}, or null.\nconst getNextEntryInfo = (\n  lifting: LiftingState,\n  currentEntryId: number | null,\n  orderedEntries: Array<Entry>,\n  attemptOneIndexed: number\n): NextEntryInfo | null => {\n  const lift = lifting.lift;\n  const fieldKg = liftToAttemptFieldName(lift);\n  const fieldStatus = liftToStatusFieldName(lift);\n\n  if (currentEntryId === null) {\n    return null;\n  }\n\n  // Find the index of the currentEntryId in the orderedEntries.\n  const currentEntryIndex = orderedEntries.findIndex(e => e.id === currentEntryId);\n  if (currentEntryIndex === -1) {\n    return null;\n  }\n\n  // Walk forward, looking for additional valid attempts.\n  for (let i = currentEntryIndex + 1; i < orderedEntries.length; i++) {\n    const hasAttempt = orderedEntries[i][fieldKg][attemptOneIndexed - 1] !== 0;\n    const notTaken = orderedEntries[i][fieldStatus][attemptOneIndexed - 1] === 0;\n\n    if (hasAttempt && notTaken) {\n      return {\n        entryId: orderedEntries[i].id,\n        attemptOneIndexed: attemptOneIndexed\n      };\n    }\n  }\n\n  // If none were found walking forward, check the next attempt by wrapping around.\n  if (attemptOneIndexed + 1 > MAX_ATTEMPTS) {\n    return null;\n  }\n  const nextAttemptOneIndexed = attemptOneIndexed + 1;\n\n  for (let i = 0; i < currentEntryIndex; i++) {\n    const hasAttempt = orderedEntries[i][fieldKg][nextAttemptOneIndexed - 1] !== 0;\n    const notTaken = orderedEntries[i][fieldStatus][nextAttemptOneIndexed - 1] === 0;\n\n    if (hasAttempt && notTaken) {\n      return {\n        entryId: orderedEntries[i].id,\n        attemptOneIndexed: nextAttemptOneIndexed\n      };\n    }\n  }\n\n  return null;\n};\n\n// Main application logic. Resolves the LiftingState to a LiftingOrder.\nexport const getLiftingOrder = (entriesInFlight: Array<Entry>, lifting: LiftingState): LiftingOrder => {\n  const attemptOneIndexed = getActiveAttemptNumber(entriesInFlight, lifting);\n  const orderedEntries = orderEntriesForAttempt(entriesInFlight, lifting, attemptOneIndexed);\n  const currentEntryId = getCurrentEntryId(lifting, orderedEntries, attemptOneIndexed);\n  const nextEntryInfo = getNextEntryInfo(lifting, currentEntryId, orderedEntries, attemptOneIndexed);\n\n  return {\n    orderedEntries: orderedEntries,\n    attemptOneIndexed: attemptOneIndexed,\n    currentEntryId: currentEntryId,\n    nextAttemptOneIndexed: nextEntryInfo ? nextEntryInfo.attemptOneIndexed : null,\n    nextEntryId: nextEntryInfo ? nextEntryInfo.entryId : null\n  };\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the logic for calculating the division Place of a lifter, shared between\n// the Lifting page, the Rankings page, and data export code.\n//\n// The algorithm used is particularly bad -- the foremost goal was to make an interface\n// that allowed for maximum code reuse between the Rankings and Lifting pages,\n// which have slightly different needs.\n\nimport { getProjectedEventTotalKg, getFinalEventTotalKg, liftToAttemptFieldName } from \"./entry\";\nimport { compareEntriesByAttempt } from \"./liftingOrder\";\nimport { getWeightClassStr } from \"../reducers/meetReducer\";\n\nimport { Sex, Event, Equipment, Entry, Lift } from \"../types/dataTypes\";\nimport { checkExhausted } from \"../types/utils\";\n\nexport type Place = number | \"DQ\";\n\n// Determines how the total is calculated.\ntype ResultsType = \"Projected\" | \"Final\";\n\n// Specifies a competition category under which entries can be ranked together.\nexport type Category = {\n  sex: Sex;\n  event: Event;\n  equipment: Equipment;\n  division: string;\n  weightClassStr: string;\n};\n\n// Wraps up all the entries in a category with the category's descriptors.\nexport type CategoryResults = {\n  category: Category;\n  orderedEntries: Array<Entry>;\n};\n\n// Generates a unique String out of a Category, for purposes of using as a Map key.\nconst categoryToKey = (category: Category): string => {\n  return JSON.stringify(category);\n};\nconst keyToCategory = (key: string): Category => {\n  return JSON.parse(key);\n};\n\n// Helper function for sortByPlaceInCategory().\n//\n// Determines the last successful Lift (for example, \"B\") for the Entry in\n// the given Event category.\n//\n// Lifters have already been checked to have a non-zero total.\nconst getLastSuccessfulLift = (event: Event, entry: Entry): Lift => {\n  // Iterate backwards over the Event types.\n  for (let i = event.length - 1; i >= 0; --i) {\n    const lift = event[i];\n    switch (lift) {\n      case \"S\":\n        if (entry.squatStatus.includes(1)) {\n          return \"S\";\n        }\n        break;\n      case \"B\":\n        if (entry.benchStatus.includes(1)) {\n          return \"B\";\n        }\n        break;\n      case \"D\":\n        if (entry.deadliftStatus.includes(1)) {\n          return \"D\";\n        }\n        break;\n      default:\n        return \"S\";\n    }\n  }\n  return \"S\";\n};\n\n// Helper function for sortByPlaceInCategory().\n//\n// Determines the last successful attempt (only counting the first three) for\n// the Entry for the given Lift.\n//\n// The caller already knows that a successful attempt was made, since it\n// passed getLastSuccessfulLift().\nconst getLastSuccessfulAttempt = (lift: Lift, entry: Entry): number => {\n  let statuses = null;\n  switch (lift) {\n    case \"S\":\n      statuses = entry.squatStatus;\n      break;\n    case \"B\":\n      statuses = entry.benchStatus;\n      break;\n    case \"D\":\n      statuses = entry.deadliftStatus;\n      break;\n    default:\n      checkExhausted(lift);\n      return 0;\n  }\n\n  // Consider only the first three attempts, in reverse.\n  for (let i = 2; i >= 0; --i) {\n    if (statuses[i] === 1) return i;\n  }\n  return 0;\n};\n\n// Returns a copy of the entries array sorted by Place.\n// All entries are assumed to be part of the same category.\nconst sortByPlaceInCategory = (entries: Array<Entry>, category: Category, type: ResultsType): Array<Entry> => {\n  const event = category.event;\n\n  // Clone the entries array to avoid modifying the original.\n  let clonedEntries = entries.slice();\n\n  // Sort in the given category, first place having the lowest index.\n  clonedEntries.sort((a, b) => {\n    let aTotal = 0;\n\n    // First sort by Total, higher sorting lower.\n    if (type === \"Projected\") {\n      aTotal = getProjectedEventTotalKg(a, event);\n      const bTotal = getProjectedEventTotalKg(b, event);\n      if (aTotal !== bTotal) return bTotal - aTotal;\n    } else if (type === \"Final\") {\n      aTotal = getFinalEventTotalKg(a, event);\n      const bTotal = getFinalEventTotalKg(b, event);\n      if (aTotal !== bTotal) return bTotal - aTotal;\n    }\n\n    // If totals are equal, sort by Bodyweight, lower sorting lower.\n    if (a.bodyweightKg !== b.bodyweightKg) return a.bodyweightKg - b.bodyweightKg;\n\n    // If totals are zero, neither lifter took a successful attempt,\n    // so just sort arbitrarily by name.\n    if (aTotal === 0) {\n      if (a.name < b.name) return -1;\n      if (a.name > b.name) return 1;\n      return 0;\n    }\n\n    // If totals are equal and bodyweights are equal, the winner is the\n    // lifter who reached the total first. Because our implementation is\n    // stateless and doesn't remember lifting order, this gets complicated.\n    //\n    // For purposes of simplicity, this is broken into cases.\n    //\n    // At this point, the logic requires that each lifter have taken at least\n    // one successful attempt -- this is validated by checking the total\n    // against zero above.\n    //\n    // Case 1: If the lifters' last successful lifts were for different Lifts,\n    //         then the lifter with the earlier lift in SBD order wins.\n    const aLastSuccessfulLift = getLastSuccessfulLift(event, a);\n    const bLastSuccessfulLift = getLastSuccessfulLift(event, b);\n    const aLastSuccessfulLiftIndex = [\"S\", \"B\", \"D\"].indexOf(aLastSuccessfulLift);\n    const bLastSuccessfulLiftIndex = [\"S\", \"B\", \"D\"].indexOf(bLastSuccessfulLift);\n    if (aLastSuccessfulLiftIndex !== bLastSuccessfulLiftIndex) {\n      return aLastSuccessfulLiftIndex - bLastSuccessfulLiftIndex;\n    }\n\n    // Case 2: If the lifters reached the total on the same lift but on different\n    //         attempts, the lifter with the earlier attempt wins.\n    const lift: Lift = aLastSuccessfulLift;\n    const aLastSuccessfulAttempt: number = getLastSuccessfulAttempt(lift, a);\n    const bLastSuccessfulAttempt: number = getLastSuccessfulAttempt(lift, b);\n    if (aLastSuccessfulAttempt !== bLastSuccessfulAttempt) {\n      return aLastSuccessfulAttempt - bLastSuccessfulAttempt;\n    }\n\n    // Case 3: If the lifters reached the total on the same lift and on the same\n    //         attempt, defer to the lifting order to determine who lifted first.\n    const attempt = aLastSuccessfulAttempt;\n    return compareEntriesByAttempt(a, b, liftToAttemptFieldName(lift), attempt);\n  });\n\n  return clonedEntries;\n};\n\n// Determines the sort order by Event.\nconst getEventSortOrder = (ev: Event): number => {\n  return [\"SBD\", \"BD\", \"SB\", \"SD\", \"S\", \"B\", \"D\"].indexOf(ev);\n};\n\n// Determines the sort order by Equipment.\nconst getEquipmentSortOrder = (eq: Equipment): number => {\n  return [\"Bare\", \"Sleeves\", \"Wraps\", \"Single-ply\", \"Multi-ply\"].indexOf(eq);\n};\n\n// Determines the sort order by Sex.\nconst getSexSortOrder = (sex: Sex): number => {\n  switch (sex) {\n    case \"F\":\n      return 0;\n    case \"M\":\n      return 1;\n    case \"Mx\":\n      return 2;\n    default:\n      checkExhausted(sex);\n      return 3;\n  }\n};\n\n// Determines the sort (and therefore presentation) order for the Category Results.\n// The input array is sorted in-place; nothing is returned.\nexport const sortCategoryResults = (results: Array<CategoryResults>) => {\n  results.sort((a, b) => {\n    const catA = a.category;\n    const catB = b.category;\n\n    // First, sort by Sex.\n    const aSex = getSexSortOrder(catA.sex);\n    const bSex = getSexSortOrder(catB.sex);\n    if (aSex !== bSex) return aSex - bSex;\n\n    // Next, sort by Event.\n    const aEvent = getEventSortOrder(catA.event);\n    const bEvent = getEventSortOrder(catB.event);\n    if (aEvent !== bEvent) return aEvent - bEvent;\n\n    // Next, sort by Equipment.\n    const aEquipment = getEquipmentSortOrder(catA.equipment);\n    const bEquipment = getEquipmentSortOrder(catB.equipment);\n    if (aEquipment !== bEquipment) return aEquipment - bEquipment;\n\n    // Next, sort by Division as string.\n    if (catA.division < catB.division) return -1;\n    if (catA.division > catB.division) return 1;\n\n    // Finally, sort by WeightClass.\n    // Any SHW class should be placed at the end.\n    const aIsSHW: boolean = catA.weightClassStr.includes(\"+\");\n    const bIsSHW: boolean = catB.weightClassStr.includes(\"+\");\n    if (aIsSHW && !bIsSHW) return 1;\n    if (!aIsSHW && bIsSHW) return -1;\n    // parseInt() ignores the \"+\" at the end of SHW class strings.\n    const aWeightClass = catA.weightClassStr === \"\" ? 0 : parseInt(catA.weightClassStr);\n    const bWeightClass = catB.weightClassStr === \"\" ? 0 : parseInt(catB.weightClassStr);\n    return aWeightClass - bWeightClass;\n  });\n};\n\nconst mapSexToClasses = (sex: Sex, men: Array<number>, women: Array<number>, mx: Array<number>): Array<number> => {\n  switch (sex) {\n    case \"M\":\n      return men;\n    case \"F\":\n      return women;\n    case \"Mx\":\n      return mx;\n    default:\n      checkExhausted(sex);\n      return men;\n  }\n};\n\n// Generates objects representing every present category of competition,\n// with each entry given a Place designation.\n//\n// The returned objects are sorted in intended order of presentation.\nconst getAllResults = (\n  entries: Array<Entry>,\n  weightClassesKgMen: Array<number>,\n  weightClassesKgWomen: Array<number>,\n  weightClassesKgMx: Array<number>,\n  combineSleevesAndWraps: boolean,\n  type: ResultsType\n): Array<CategoryResults> => {\n  // Generate a map from category to the entries within that category.\n  // The map is populated by iterating over each entry and having the entry\n  // append itself to per-category lists.\n  let categoryMap = new Map();\n  for (let i = 0; i < entries.length; i++) {\n    const e = entries[i];\n\n    // Remember consistent properties.\n    const sex = e.sex;\n    const classesForSex = mapSexToClasses(sex, weightClassesKgMen, weightClassesKgWomen, weightClassesKgMx);\n    const weightClassStr = getWeightClassStr(classesForSex, e.bodyweightKg);\n\n    // If the results combine Sleeves and Wraps, promote Sleeves to Wraps.\n    let equipment = e.equipment;\n    if (combineSleevesAndWraps && equipment === \"Sleeves\") {\n      equipment = \"Wraps\";\n    }\n\n    // Iterate over every combination of division and event, adding to the map.\n    for (let dividx = 0; dividx < e.divisions.length; dividx++) {\n      const division = e.divisions[dividx];\n\n      for (let evidx = 0; evidx < e.events.length; evidx++) {\n        const event = e.events[evidx];\n        const category = { sex, event, equipment, division, weightClassStr };\n        const key = categoryToKey(category);\n\n        const catEntries = categoryMap.get(key);\n        catEntries === undefined ? categoryMap.set(key, [e]) : catEntries.push(e);\n      }\n    }\n  }\n\n  // Iterate over each category and assign a Place to the entries therein.\n  let results = [];\n  for (let [key, catEntries] of categoryMap) {\n    const category = keyToCategory(key);\n    const orderedEntries = sortByPlaceInCategory(catEntries, category, type);\n    results.push({ category, orderedEntries });\n  }\n\n  sortCategoryResults(results);\n  return results;\n};\n\nexport const getProjectedResults = (\n  entries: Array<Entry>,\n  weightClassesKgMen: Array<number>,\n  weightClassesKgWomen: Array<number>,\n  weightClassesKgMx: Array<number>,\n  combineSleevesAndWraps: boolean\n): Array<CategoryResults> => {\n  return getAllResults(\n    entries,\n    weightClassesKgMen,\n    weightClassesKgWomen,\n    weightClassesKgMx,\n    combineSleevesAndWraps,\n    \"Projected\"\n  );\n};\n\nexport const getFinalResults = (\n  entries: Array<Entry>,\n  weightClassesKgMen: Array<number>,\n  weightClassesKgWomen: Array<number>,\n  weightClassesKgMx: Array<number>,\n  combineSleevesAndWraps: boolean\n): Array<CategoryResults> => {\n  return getAllResults(\n    entries,\n    weightClassesKgMen,\n    weightClassesKgWomen,\n    weightClassesKgMx,\n    combineSleevesAndWraps,\n    \"Final\"\n  );\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// The main component of the Lifting page, contained by the LiftingView.\n\nimport React, { CSSProperties } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport AttemptInput from \"./AttemptInput\";\nimport LocalizedString from \"../translations/LocalizedString\";\n\nimport { getWeightClassStr, getWeightClassLbsStr } from \"../../reducers/meetReducer\";\nimport { getPoints } from \"../../logic/coefficients/coefficients\";\nimport { getProjectedTotalKg, getFinalTotalKg, liftToAttemptFieldName, liftToStatusFieldName } from \"../../logic/entry\";\n\nimport { getProjectedResults, getFinalResults } from \"../../logic/divisionPlace\";\nimport { kg2lbs, displayWeight, displayPoints } from \"../../logic/units\";\n\nimport { CategoryResults } from \"../../logic/divisionPlace\";\nimport { Entry, Equipment, Language, Lift, Sex } from \"../../types/dataTypes\";\nimport { GlobalState, MeetState, LiftingState } from \"../../types/stateTypes\";\n\nimport styles from \"./LiftingTable.module.scss\";\nimport { checkExhausted } from \"../../types/utils\";\n\ninterface OwnProps {\n  attemptOneIndexed: number;\n  orderedEntries: Array<Entry>;\n  currentEntryId: number | null;\n}\n\ninterface StateProps {\n  meet: MeetState;\n  lifting: LiftingState;\n  language: Language;\n}\n\ntype Props = OwnProps & StateProps;\n\n// List of possible columns that can be rendered.\n// The main render() function decides what columns to render,\n// and communicates its selection with each row's renderer.\ntype ColumnType =\n  | \"Lifter\"\n  | \"Bodyweight\"\n  | \"WeightClass\"\n  | \"Division\"\n  | \"Lot\"\n  | \"Equipment\"\n  | \"Age\"\n  | \"Team\"\n  | \"S1\"\n  | \"S2\"\n  | \"S3\"\n  | \"S4\" // eslint-disable-line\n  | \"B1\"\n  | \"B2\"\n  | \"B3\"\n  | \"B4\" // eslint-disable-line\n  | \"D1\"\n  | \"D2\"\n  | \"D3\"\n  | \"D4\" // eslint-disable-line\n  | \"BestSquat\"\n  | \"BestBench\" // eslint-disable-line\n  | \"Spacer1\"\n  | \"Spacer2\"\n  | \"ProjectedTotal\"\n  | \"ProjectedPoints\"\n  | \"FinalTotal\"\n  | \"FinalPoints\"\n  | \"Place\";\n\n// This is a global for remembering the last AttemptInput that was rendered.\n// After the \"No Lift\" or \"Good Lift\" buttons are clicked, the last-rendered\n// AttemptInput is given focus by an event handler.\n//\n// This works because the LiftingTable is always re-rendered when one of\n// those buttons is clicked, and because there's only one LiftingTable.\nexport var globalFocusAttemptInputId: string | null = null;\n\n// The logic for globalFocusAttemptInputId is looking for the AttemptInput\n// that's all the way on the right, and as far down the table as possible.\nvar globalHighestAttemptInputAttempt: number = 0;\n\nclass LiftingTable extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n    this.renderRows = this.renderRows.bind(this);\n    this.renderBest3AttemptField = this.renderBest3AttemptField.bind(this);\n    this.renderAttemptField = this.renderAttemptField.bind(this);\n    this.renderCell = this.renderCell.bind(this);\n  }\n\n  renderBest3AttemptField = (entry: Entry, lift: Lift, columnType: ColumnType) => {\n    const fieldKg = liftToAttemptFieldName(lift);\n    const fieldStatus = liftToStatusFieldName(lift);\n\n    // Look for either the best lift or the lightest no-lift.\n    let best3 = 0.0;\n    let lightestFailed = 0.0;\n\n    for (let i = 0; i < 3; i++) {\n      const kg = entry[fieldKg][i];\n\n      if (entry[fieldStatus][i] === 1) {\n        best3 = Math.max(best3, kg);\n      } else if (entry[fieldStatus][i] === -1) {\n        lightestFailed = lightestFailed === 0 ? kg : Math.min(lightestFailed, kg);\n      }\n    }\n\n    // Render cells using attempt coloring.\n    if (best3 !== 0) {\n      const asNumber = this.props.meet.inKg ? best3 : kg2lbs(best3);\n      return (\n        <td key={columnType} className={styles.goodlift}>\n          {displayWeight(asNumber, this.props.language)}\n        </td>\n      );\n    }\n    if (lightestFailed !== 0) {\n      const asNumber = this.props.meet.inKg ? lightestFailed : kg2lbs(lightestFailed);\n      return (\n        <td key={columnType} className={styles.nolift}>\n          {displayWeight(asNumber, this.props.language)}\n        </td>\n      );\n    }\n\n    // Show an empty cell by default.\n    return <td key={columnType} />;\n  };\n\n  renderAttemptField = (entry: Entry, lift: Lift, attemptOneIndexed: number, columnType: ColumnType) => {\n    const fieldKg = liftToAttemptFieldName(lift);\n    const fieldStatus = liftToStatusFieldName(lift);\n\n    const kg = entry[fieldKg][attemptOneIndexed - 1];\n    const status = entry[fieldStatus][attemptOneIndexed - 1];\n    const wStr = displayWeight(this.props.meet.inKg ? kg : kg2lbs(kg), this.props.language);\n    const displayStr = kg === 0 ? \"\" : wStr;\n\n    // Get a unique ID for each AttemptInput.\n    // This is used in combination with the globalFocusAttemptInputId to give\n    // focus to the last-rendered AttemptInput after a button is clicked.\n    const id = \"AttemptInput-\" + entry.id + \"-\" + lift + attemptOneIndexed;\n\n    // If the lifter was manually selected, always show an AttemptInput.\n    // This allows manual correction of weights when a misload occurs,\n    // even though the lift has already been marked good lift / no lift.\n    if (this.props.lifting.overrideEntryId === entry.id && attemptOneIndexed === this.props.attemptOneIndexed) {\n      // Is this a better match for giving focus?\n      if (attemptOneIndexed >= globalHighestAttemptInputAttempt) {\n        globalHighestAttemptInputAttempt = attemptOneIndexed;\n        globalFocusAttemptInputId = id;\n      }\n\n      return (\n        <td key={columnType} className={styles.attemptInputCell}>\n          <AttemptInput id={id} entry={entry} lift={lift} attemptOneIndexed={attemptOneIndexed} />\n        </td>\n      );\n    }\n\n    // If the attempt was already made, render a colored text field.\n    // The weight cannot be changed after the fact.\n    if (status !== 0) {\n      const className = status === 1 ? styles.goodlift : styles.nolift;\n      const maybeNegative = status === 1 ? \"\" : \"-\";\n      return (\n        <td key={columnType} className={className}>\n          {maybeNegative}\n          {displayStr}\n        </td>\n      );\n    }\n\n    // If the attempt isn't for the current lift, just show the number.\n    if (lift !== this.props.lifting.lift) {\n      return <td key={columnType}>{displayStr}</td>;\n    }\n\n    // Was any previous attempt taken?\n    let anyPreviousAttemptTaken = false;\n    for (var i = 1; i < attemptOneIndexed; i++) {\n      if (entry[fieldStatus][i - 1] !== 0) {\n        anyPreviousAttemptTaken = true;\n        break;\n      }\n    }\n\n    // Show a text input box if either:\n    // 1. This column is for the current attempt, and the lifter has a previous attempt.\n    // 2. This column is for the next attempt, and the lifter took the current attempt.\n    // 3. For whatever reason, someone managed to specify a weight.\n    const currentAndHasPrevious = attemptOneIndexed === this.props.attemptOneIndexed && anyPreviousAttemptTaken;\n    const nextAndTookLast =\n      attemptOneIndexed === this.props.attemptOneIndexed + 1 &&\n      entry[fieldStatus][this.props.attemptOneIndexed - 1] !== 0;\n\n    if (kg !== 0 || currentAndHasPrevious || nextAndTookLast) {\n      // Is this a better match for giving focus?\n      if (attemptOneIndexed >= globalHighestAttemptInputAttempt) {\n        globalHighestAttemptInputAttempt = attemptOneIndexed;\n        globalFocusAttemptInputId = id;\n      }\n\n      return (\n        <td key={columnType} className={styles.attemptInputCell}>\n          <AttemptInput id={id} entry={entry} lift={lift} attemptOneIndexed={attemptOneIndexed} />\n        </td>\n      );\n    }\n\n    // Default handler.\n    return <td key={columnType}>{displayStr}</td>;\n  };\n\n  mapSexToClasses = (sex: Sex, meetState: MeetState): Array<number> => {\n    switch (sex) {\n      case \"M\":\n        return meetState.weightClassesKgMen;\n      case \"F\":\n        return meetState.weightClassesKgWomen;\n      case \"Mx\":\n        return meetState.weightClassesKgMx;\n      default:\n        checkExhausted(sex);\n        return meetState.weightClassesKgMen;\n    }\n  };\n\n  renderCell = (entry: Entry, columnType: ColumnType, categoryResults: Array<CategoryResults>): JSX.Element => {\n    switch (columnType) {\n      case \"Lifter\": {\n        let cell: string | JSX.Element = entry.name;\n\n        // Bold the name of the current lifter.\n        if (this.props.currentEntryId === entry.id) {\n          cell = <b>{entry.name}</b>;\n        }\n\n        return (\n          <td key={columnType} className={styles.textCell}>\n            {cell}\n          </td>\n        );\n      }\n      case \"Bodyweight\": {\n        const bw = entry.bodyweightKg;\n        const bwStr = displayWeight(this.props.meet.inKg ? bw : kg2lbs(bw), this.props.language);\n        return <td key={columnType}>{bw === 0 ? null : bwStr}</td>;\n      }\n      case \"WeightClass\": {\n        const bw = entry.bodyweightKg;\n        const classesForSex = this.mapSexToClasses(entry.sex, this.props.meet);\n        const weightClass = this.props.meet.inKg\n          ? getWeightClassStr(classesForSex, bw, this.props.language)\n          : getWeightClassLbsStr(classesForSex, bw);\n        return <td key={columnType}>{bw === 0 ? null : weightClass}</td>;\n      }\n      case \"Division\": {\n        // Just show the first division in the list, if any.\n        // Changing this requires coordination with the \"Place\" column code.\n        const firstDiv = entry.divisions.length > 0 ? entry.divisions[0] : null;\n        return (\n          <td key={columnType} className={styles.textCell}>\n            {firstDiv}\n          </td>\n        );\n      }\n      case \"Lot\": {\n        return (\n          <td key={columnType} className={styles.textCell}>\n            {entry.lot === 0 ? \"\" : entry.lot}\n          </td>\n        );\n      }\n      case \"Equipment\": {\n        // Use shorter names to actually fit in the table.\n        let equipment: string | Equipment = entry.equipment;\n        if (equipment === \"Single-ply\") equipment = \"Single\";\n        if (equipment === \"Multi-ply\") equipment = \"Multi\";\n        return <td key={columnType}>{equipment}</td>;\n      }\n      case \"Age\":\n        return <td key={columnType}>{entry.age}</td>;\n      case \"Team\":\n        return (\n          <td key={columnType} className={styles.textCell}>\n            {entry.team}\n          </td>\n        );\n      case \"S1\":\n        return this.renderAttemptField(entry, \"S\", 1, columnType);\n      case \"S2\":\n        return this.renderAttemptField(entry, \"S\", 2, columnType);\n      case \"S3\":\n        return this.renderAttemptField(entry, \"S\", 3, columnType);\n      case \"S4\":\n        return this.renderAttemptField(entry, \"S\", 4, columnType);\n      case \"B1\":\n        return this.renderAttemptField(entry, \"B\", 1, columnType);\n      case \"B2\":\n        return this.renderAttemptField(entry, \"B\", 2, columnType);\n      case \"B3\":\n        return this.renderAttemptField(entry, \"B\", 3, columnType);\n      case \"B4\":\n        return this.renderAttemptField(entry, \"B\", 4, columnType);\n      case \"D1\":\n        return this.renderAttemptField(entry, \"D\", 1, columnType);\n      case \"D2\":\n        return this.renderAttemptField(entry, \"D\", 2, columnType);\n      case \"D3\":\n        return this.renderAttemptField(entry, \"D\", 3, columnType);\n      case \"D4\":\n        return this.renderAttemptField(entry, \"D\", 4, columnType);\n      case \"BestSquat\":\n        return this.renderBest3AttemptField(entry, \"S\", columnType);\n      case \"BestBench\":\n        return this.renderBest3AttemptField(entry, \"B\", columnType);\n      case \"Spacer1\": // fallthrough\n      case \"Spacer2\":\n        return <td key={columnType} className={styles.spacerCell} />;\n      case \"ProjectedTotal\": {\n        const totalKg = getProjectedTotalKg(entry);\n        const asNumber = this.props.meet.inKg ? totalKg : kg2lbs(totalKg);\n        return <td key={columnType}>{totalKg === 0 ? null : displayWeight(asNumber, this.props.language)}</td>;\n      }\n      case \"ProjectedPoints\": {\n        const totalKg: number = getProjectedTotalKg(entry);\n        const event = entry.events.length > 0 ? entry.events[0] : \"SBD\";\n        const points: number = getPoints(this.props.meet.formula, entry, event, totalKg, this.props.meet.inKg);\n\n        // Normally this column is hidden for \"Total\", but it's handled just in case.\n        if (this.props.meet.formula === \"Total\") {\n          return <td key={columnType}>{points !== 0 ? displayWeight(points, this.props.language) : null}</td>;\n        }\n        return <td key={columnType}>{points !== 0 ? displayPoints(points, this.props.language) : null}</td>;\n      }\n      case \"FinalTotal\": {\n        const totalKg = getFinalTotalKg(entry);\n        const asNumber = this.props.meet.inKg ? totalKg : kg2lbs(totalKg);\n        return <td key={columnType}>{totalKg === 0 ? null : displayWeight(asNumber, this.props.language)}</td>;\n      }\n      case \"FinalPoints\": {\n        const totalKg: number = getFinalTotalKg(entry);\n        const event = entry.events.length > 0 ? entry.events[0] : \"SBD\";\n        const points: number = getPoints(this.props.meet.formula, entry, event, totalKg, this.props.meet.inKg);\n\n        // Normally this column is hidden for \"Total\", but it's handled just in case.\n        if (this.props.meet.formula === \"Total\") {\n          return <td key={columnType}>{points !== 0 ? displayWeight(points, this.props.language) : null}</td>;\n        }\n        return <td key={columnType}>{points !== 0 ? displayPoints(points, this.props.language) : null}</td>;\n      }\n      case \"Place\": {\n        // If the lifter has no total, then don't report a place.\n        if (getFinalTotalKg(entry) === 0) return <td key={columnType} />;\n\n        // Just show the Place from the first division in the list.\n        // This is the same division as shown in the \"Division\" column.\n        if (entry.divisions.length === 0) return <td key={columnType} />;\n        const firstDiv = entry.divisions[0];\n\n        // Look at all the categories, and find the first one including this division\n        // and entry. Because the categories are in sorted order, SBD takes priority\n        // over B by default.\n        for (let i = 0; i < categoryResults.length; i++) {\n          const result = categoryResults[i];\n          if (result.category.division !== firstDiv) {\n            continue;\n          }\n\n          const catEntries = result.orderedEntries;\n          for (let j = 0; j < catEntries.length; j++) {\n            const catEntry = catEntries[j];\n\n            if (catEntry.id === entry.id) {\n              return <td key={columnType}>{j + 1}</td>;\n            }\n          }\n        }\n\n        return <td key={columnType} />; // Shouldn't happen.\n      }\n      default:\n        checkExhausted(columnType);\n        return <td key={columnType} />;\n    }\n  };\n\n  renderRows = (columns: Array<ColumnType>, categoryResults: Array<CategoryResults>) => {\n    const orderedEntries = this.props.orderedEntries;\n    const currentEntryId = this.props.currentEntryId;\n\n    let rows = [];\n    for (let i = 0; i < orderedEntries.length; i++) {\n      const entry = orderedEntries[i];\n\n      // Iterate over each columnType, handling each.\n      let cells = [];\n      for (let col = 0; col < columns.length; col++) {\n        const columnType = columns[col];\n        cells.push(this.renderCell(entry, columnType, categoryResults));\n      }\n\n      const isCurrent = entry.id === currentEntryId;\n      const rowClassName = isCurrent ? styles.current : \"\";\n      rows.push(\n        <tr key={entry.id} className={rowClassName}>\n          {cells}\n        </tr>\n      );\n    }\n    return rows;\n  };\n\n  getColumnHeaderLabel = (columnType: ColumnType) => {\n    switch (columnType) {\n      case \"Lifter\":\n        return <LocalizedString id=\"lifting.column-lifter\" />;\n      case \"Bodyweight\":\n        return <LocalizedString id=\"lifting.column-bodyweight\" />;\n      case \"WeightClass\":\n        return <LocalizedString id=\"lifting.column-weightclass\" />;\n      case \"Division\":\n        return <LocalizedString id=\"lifting.column-division\" />;\n      case \"Lot\":\n        return <LocalizedString id=\"lifting.column-lot\" />;\n      case \"Equipment\":\n        return <LocalizedString id=\"lifting.column-equipment\" />;\n      case \"Age\":\n        return <LocalizedString id=\"lifting.column-age\" />;\n      case \"Team\":\n        return \"Club\";\n      case \"S1\":\n        return <LocalizedString id=\"lifting.column-s1\" />;\n      case \"S2\":\n        return <LocalizedString id=\"lifting.column-s2\" />;\n      case \"S3\":\n        return <LocalizedString id=\"lifting.column-s3\" />;\n      case \"S4\":\n        return <LocalizedString id=\"lifting.column-s4\" />;\n      case \"B1\":\n        return <LocalizedString id=\"lifting.column-b1\" />;\n      case \"B2\":\n        return <LocalizedString id=\"lifting.column-b2\" />;\n      case \"B3\":\n        return <LocalizedString id=\"lifting.column-b3\" />;\n      case \"B4\":\n        return <LocalizedString id=\"lifting.column-b4\" />;\n      case \"D1\":\n        return <LocalizedString id=\"lifting.column-d1\" />;\n      case \"D2\":\n        return <LocalizedString id=\"lifting.column-d2\" />;\n      case \"D3\":\n        return <LocalizedString id=\"lifting.column-d3\" />;\n      case \"D4\":\n        return <LocalizedString id=\"lifting.column-d4\" />;\n      case \"BestSquat\":\n        return <LocalizedString id=\"lifting.column-bestsquat\" />;\n      case \"BestBench\":\n        return <LocalizedString id=\"lifting.column-bestbench\" />;\n      case \"Spacer1\": // fallthrough\n      case \"Spacer2\":\n        return \"\";\n      case \"ProjectedTotal\":\n        return <LocalizedString id=\"lifting.column-projectedtotal\" />;\n      case \"ProjectedPoints\":\n        return <LocalizedString id=\"lifting.column-projectedpoints\" />;\n      case \"FinalTotal\":\n        return <LocalizedString id=\"lifting.column-projectedtotal\" />;\n      case \"FinalPoints\":\n        return <LocalizedString id=\"lifting.column-finalpoints\" />;\n      case \"Place\":\n        return <LocalizedString id=\"lifting.column-place\" />;\n      default:\n        checkExhausted(columnType);\n        return \"\";\n    }\n  };\n\n  render() {\n    // Reset this: hunting for a new AttemptIndex.\n    globalHighestAttemptInputAttempt = 0;\n\n    // Select the columns for display.\n    let columns: Array<ColumnType> = [\"Lifter\"];\n    // If the score table set the division column with to zero, hide it.\n    if (this.props.lifting.columnDivisionWidthPx !== 0) {\n      columns.push(\"Division\");\n    }\n    // Skip the \"Team\" column if columnTeamWidthPx is zero or undefined.\n    if (this.props.lifting.columnTeamWidthPx) {\n      columns.push(\"Team\");\n    }\n    columns.push(\"Bodyweight\", \"WeightClass\");\n\n    // The \"Lot\" column is only shown if lot numbers are used.\n    for (let i = 0; i < this.props.orderedEntries.length; ++i) {\n      if (this.props.orderedEntries[i].lot !== 0) {\n        columns.push(\"Lot\");\n        break;\n      }\n    }\n\n    // Select lift columns based off the current lift.\n    if (this.props.lifting.lift === \"S\") {\n      columns.push(\"Spacer1\");\n      columns.push(\"S1\", \"S2\", \"S3\");\n      if (this.props.attemptOneIndexed === 4) {\n        columns.push(\"S4\");\n      }\n      columns.push(\"Spacer2\");\n      columns.push(\"B1\", \"D1\");\n    } else if (this.props.lifting.lift === \"B\") {\n      columns.push(\"BestSquat\", \"Spacer1\", \"B1\", \"B2\", \"B3\");\n      if (this.props.attemptOneIndexed === 4) {\n        columns.push(\"B4\");\n      }\n      columns.push(\"Spacer2\", \"D1\");\n    } else if (this.props.lifting.lift === \"D\") {\n      columns.push(\"BestSquat\", \"BestBench\", \"Spacer1\", \"D1\", \"D2\", \"D3\");\n      if (this.props.attemptOneIndexed === 4) {\n        columns.push(\"D4\");\n      }\n      columns.push(\"Spacer2\");\n    }\n\n    // Use projected totals for everything before 2nd attempt deadlifts.\n    const useProjected = this.props.lifting.lift !== \"D\" || this.props.attemptOneIndexed < 2;\n    columns.push(useProjected ? \"ProjectedTotal\" : \"FinalTotal\");\n    if (this.props.meet.formula !== \"Total\") {\n      columns.push(useProjected ? \"ProjectedPoints\" : \"FinalPoints\");\n    }\n    columns.push(\"Place\");\n\n    // Build headers.\n    let headers = [];\n    let highlightColumn = this.props.lifting.lift + String(this.props.attemptOneIndexed);\n    for (let i = 0; i < columns.length; i++) {\n      const column = columns[i];\n      let className = styles.smallCell;\n      let style: CSSProperties | undefined;\n\n      if (column === \"Lifter\") {\n        className = styles.nameCell;\n      } else if (column === \"Division\") {\n        className = styles.textCell;\n        if (this.props.lifting.columnDivisionWidthPx) {\n          style = { width: this.props.lifting.columnDivisionWidthPx + \"px\" };\n        }\n      } else if (column === \"Team\") {\n        className = styles.textCell;\n        if (this.props.lifting.columnTeamWidthPx) {\n          style = { width: this.props.lifting.columnTeamWidthPx + \"px\" };\n        }\n      } else if (column === \"Spacer1\" || column === \"Spacer2\") {\n        className = styles.spacerCell;\n      } else if (column === highlightColumn) {\n        className = styles.activeColumn;\n      }\n\n      headers.push(\n        <th key={column} className={className} style={style}>\n          {this.getColumnHeaderLabel(column)}\n        </th>\n      );\n    }\n\n    // Calculate the Division placings for each of the lifters.\n    const categoryResults = useProjected\n      ? getProjectedResults(\n          this.props.orderedEntries,\n          this.props.meet.weightClassesKgMen,\n          this.props.meet.weightClassesKgWomen,\n          this.props.meet.weightClassesKgMx,\n          this.props.meet.combineSleevesAndWraps\n        )\n      : getFinalResults(\n          this.props.orderedEntries,\n          this.props.meet.weightClassesKgMen,\n          this.props.meet.weightClassesKgWomen,\n          this.props.meet.weightClassesKgMx,\n          this.props.meet.combineSleevesAndWraps\n        );\n\n    return (\n      <table className={styles.liftingtable}>\n        <thead>\n          <tr>{headers}</tr>\n        </thead>\n        <tbody>{this.renderRows(columns, categoryResults)}</tbody>\n      </table>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => {\n  return {\n    meet: state.meet,\n    lifting: state.lifting,\n    language: state.language\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  null\n)(LiftingTable);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// The footer of the Lifting page, contained by the LiftingView.\n// This is the parent element of the controls that affect present lifting state.\n\nimport React, { FormEvent } from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Button from \"react-bootstrap/Button\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Form from \"react-bootstrap/Form\";\n\nimport { globalFocusAttemptInputId } from \"./LiftingTable\";\n\nimport { getString, localizeFlight } from \"../../logic/strings\";\nimport { displayNumber } from \"../../logic/units\";\n\nimport { markLift, overrideAttempt, overrideEntryId, setLiftingGroup } from \"../../actions/liftingActions\";\n\nimport { Entry, Flight, Language, Lift } from \"../../types/dataTypes\";\nimport { GlobalState, LiftingState } from \"../../types/stateTypes\";\n\nimport styles from \"./LiftingFooter.module.scss\";\nimport { Dispatch } from \"redux\";\nimport { FormControlTypeHack, assertFlight, assertString, assertLift } from \"../../types/utils\";\n\ninterface OwnProps {\n  attemptOneIndexed: number;\n  orderedEntries: Array<Entry>;\n  currentEntryId: number | null;\n  flightsOnPlatform: Array<Flight>;\n  toggleReplaceTableWithWeighins: () => void;\n}\n\ninterface StateProps {\n  lifting: LiftingState;\n  lengthDays: number;\n  platformsOnDays: Array<number>;\n  allow4thAttempts: boolean;\n  language: Language;\n}\n\ninterface DispatchProps {\n  setLiftingGroup: (day: number, platform: number, flight: Flight, lift: Lift) => void;\n  overrideAttempt: (attempt: number) => void;\n  overrideEntryId: (entryId: number) => void;\n  markLift: (entryId: number, lift: Lift, attempt: number, success: boolean) => void;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nclass LiftingFooter extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    this.handleDayChange = this.handleDayChange.bind(this);\n    this.handlePlatformChange = this.handlePlatformChange.bind(this);\n    this.handleFlightChange = this.handleFlightChange.bind(this);\n    this.handleLiftChange = this.handleLiftChange.bind(this);\n\n    this.handleOnMouseEnter = this.handleOnMouseEnter.bind(this);\n    this.handleGoodLift = this.handleGoodLift.bind(this);\n    this.handleNoLift = this.handleNoLift.bind(this);\n\n    this.handleAttemptChange = this.handleAttemptChange.bind(this);\n    this.handleLifterChange = this.handleLifterChange.bind(this);\n\n    this.setFocusAttemptInputTimeout = this.setFocusAttemptInputTimeout.bind(this);\n\n    this.makeLifterOptions = this.makeLifterOptions.bind(this);\n  }\n\n  handleDayChange = (event: FormEvent<FormControlTypeHack>) => {\n    const day = Number(event.currentTarget.value);\n    const flight = this.props.lifting.flight;\n    const lift = this.props.lifting.lift;\n\n    // If the new day has fewer platforms, reset the platform selector also.\n    let platform = this.props.lifting.platform;\n    if (platform > this.props.platformsOnDays[day - 1]) {\n      platform = 1;\n    }\n\n    this.props.setLiftingGroup(day, platform, flight, lift);\n  };\n\n  handlePlatformChange = (event: FormEvent<FormControlTypeHack>) => {\n    const day = this.props.lifting.day;\n    const platform = Number(event.currentTarget.value);\n    const flight = this.props.lifting.flight;\n    const lift = this.props.lifting.lift;\n    this.props.setLiftingGroup(day, platform, flight, lift);\n  };\n\n  handleFlightChange = (event: FormEvent<FormControlTypeHack>) => {\n    const day = this.props.lifting.day;\n    const platform = this.props.lifting.platform;\n    const flight = event.currentTarget.value;\n    const lift = this.props.lifting.lift;\n    if (assertString(flight) && assertFlight(flight)) {\n      this.props.setLiftingGroup(day, platform, flight, lift);\n    }\n  };\n\n  handleLiftChange = (event: FormEvent<FormControlTypeHack>) => {\n    const day = this.props.lifting.day;\n    const platform = this.props.lifting.platform;\n    const flight = \"A\"; // Always reset to Flight A.\n    const lift = event.currentTarget.value;\n    if (assertString(lift) && assertLift(lift)) {\n      this.props.setLiftingGroup(day, platform, flight, lift);\n    }\n  };\n\n  handleAttemptChange = (event: FormEvent<FormControlTypeHack>) => {\n    const attempt = Number(event.currentTarget.value);\n    this.props.overrideAttempt(attempt);\n  };\n\n  handleLifterChange = (event: FormEvent<FormControlTypeHack>) => {\n    const entryId = Number(event.currentTarget.value);\n    this.props.overrideEntryId(entryId);\n  };\n\n  // After a \"No Lift\" or \"Good Lift\" button is clicked, try to change focus\n  // to the AttemptInput that the score table is likely to want to type into.\n  setFocusAttemptInputTimeout = () => {\n    if (globalFocusAttemptInputId === null) {\n      return;\n    }\n\n    // Auto-focusing is significantly less useful on 3rd attempts and beyond.\n    if (this.props.attemptOneIndexed >= 3) {\n      return;\n    }\n\n    setTimeout(function() {\n      if (globalFocusAttemptInputId === null) {\n        return;\n      }\n\n      const elem = document.getElementById(globalFocusAttemptInputId);\n      if (elem) {\n        elem.focus();\n      }\n    }, 100);\n  };\n\n  // This resolves Issue #224. The Good Lift and No Lift buttons are connected\n  // to onMouseDown handlers to greatly improve responsive feel. However, that\n  // means that an onBlur event is not fired for any AttemptInput that is\n  // currently being edited. We need to ensure that it's fired, just as if we\n  // were using a normal onClick handler.\n  //\n  // To ensure that any current AttemptInput is blurred, an onMouseEnter handler\n  // is added that always blurs the currently-focused element. Because there are\n  // several hundred milliseconds between onMouseEnter and onMouseDown due to\n  // human reaction timing, the onBlur event will fully-execute before onMouseDown.\n  handleOnMouseEnter = () => {\n    const activeElement = document.activeElement;\n    if (activeElement instanceof HTMLElement) {\n      activeElement.blur();\n    }\n  };\n\n  handleGoodLift = () => {\n    // If there's no active entry, there's nothing to set.\n    if (this.props.currentEntryId === null) {\n      return;\n    }\n\n    const entryId = Number(this.props.currentEntryId);\n    const lift = this.props.lifting.lift;\n    const attempt = this.props.attemptOneIndexed;\n    this.props.markLift(entryId, lift, attempt, true);\n    this.setFocusAttemptInputTimeout();\n  };\n\n  handleNoLift = () => {\n    // If there's no active entry, there's nothing to set.\n    if (this.props.currentEntryId === null) {\n      return;\n    }\n\n    const entryId = Number(this.props.currentEntryId);\n    const lift = this.props.lifting.lift;\n    const attempt = this.props.attemptOneIndexed;\n    this.props.markLift(entryId, lift, attempt, false);\n    this.setFocusAttemptInputTimeout();\n  };\n\n  // Check whether \"document.fullscreenElement\" exists, including prefixes.\n  hasFullscreenElement = (): boolean => {\n    let doc: any = document;\n    if (doc.fullscreenElement) return true;\n    if (doc.webkitFullscreenElement) return true;\n    if (doc.mozFullscreenElement) return true;\n    if (doc.msFullscreenElement) return true;\n    return false;\n  };\n\n  // Calls exitFullscreen(), but with prefixes.\n  exitFullscreen = () => {\n    let doc: any = document;\n    if (typeof doc.exitFullscreen === \"function\") doc.exitFullscreen();\n    else if (typeof doc.webkitExitFullscreen === \"function\") doc.webkitExitFullscreen();\n    else if (typeof doc.mozExitFullscreen === \"function\") doc.mozExitFullscreen();\n    else if (typeof doc.msExitFullscreen === \"function\") doc.msExitFullscreen();\n  };\n\n  // Calls requestFullscreen(), but with prefixes.\n  requestFullscreen = (e: any) => {\n    if (typeof e.requestFullscreen === \"function\") e.requestFullscreen();\n    else if (typeof e.webkitRequestFullscreen === \"function\") e.webkitRequestFullscreen();\n    else if (typeof e.mozRequestFullscreen === \"function\") e.mozRequestFullscreen();\n    else if (typeof e.msRequestFullscreen === \"function\") e.msRequestFullscreen();\n  };\n\n  // Called when the \"Toggle Fullscreen\" button is clicked.\n  handleFullscreen = () => {\n    // Document must be typecast to \"any\" because the fullscreen properties\n    // used here aren't defined in the Flow Document type definition.\n    if (this.hasFullscreenElement() === true) {\n      this.exitFullscreen();\n    } else {\n      const liftingView = document.getElementById(\"liftingView\");\n      if (liftingView !== null) {\n        this.requestFullscreen(liftingView);\n      }\n    }\n  };\n\n  makeLifterOptions = () => {\n    const orderedEntries = this.props.orderedEntries;\n\n    if (orderedEntries.length === 0) {\n      return (\n        <option value={0} key={0}>\n          {getString(\"lifting.footer-no-lifters\", this.props.language)}\n        </option>\n      );\n    }\n\n    let lifterOptions = [];\n    for (let i = 0; i < orderedEntries.length; i++) {\n      const entry = orderedEntries[i];\n      lifterOptions.push(\n        <option value={entry.id} key={entry.id}>\n          {entry.name}\n        </option>\n      );\n    }\n    return lifterOptions;\n  };\n\n  render() {\n    const language = this.props.language;\n    const numPlatforms = this.props.platformsOnDays[this.props.lifting.day - 1];\n\n    let dayOptions = [];\n    const dayTemplate = getString(\"lifting.footer-day-template\", language);\n    for (let i = 1; i <= this.props.lengthDays; i++) {\n      dayOptions.push(\n        <option value={i} key={i}>\n          {dayTemplate.replace(\"{N}\", displayNumber(i, language))}\n        </option>\n      );\n    }\n\n    let platformOptions = [];\n    const platformTemplate = getString(\"lifting.footer-platform-template\", language);\n    for (let i = 1; i <= numPlatforms; i++) {\n      platformOptions.push(\n        <option value={i} key={i}>\n          {platformTemplate.replace(\"{N}\", displayNumber(i, language))}\n        </option>\n      );\n    }\n\n    const liftOptions = [\n      <option key={\"S\"} value={\"S\"}>\n        {getString(\"lifting.footer-squat\", language)}\n      </option>,\n      <option key={\"B\"} value={\"B\"}>\n        {getString(\"lifting.footer-bench\", language)}\n      </option>,\n      <option key={\"D\"} value={\"D\"}>\n        {getString(\"lifting.footer-deadlift\", language)}\n      </option>\n    ];\n\n    let flightOptions = [];\n    const flightTemplate = getString(\"lifting.footer-flight-template\", language);\n    for (let i = 0; i < this.props.flightsOnPlatform.length; i++) {\n      const flight = this.props.flightsOnPlatform[i];\n      const key = this.props.lifting.day + \"-\" + this.props.lifting.platform + \"-\" + i;\n      flightOptions.push(\n        <option value={flight} key={key}>\n          {flightTemplate.replace(\"{flight}\", localizeFlight(flight, language))}\n        </option>\n      );\n    }\n    if (flightOptions.length === 0) {\n      flightOptions.push(<option key=\"none\">{getString(\"lifting.footer-no-flights\", language)}</option>);\n    }\n\n    let attemptOptions = [];\n    const attemptTemplate = getString(\"lifting.footer-attempt-template\", language);\n    for (let i = 1; i <= 3; i++) {\n      attemptOptions.push(\n        <option key={i} value={i}>\n          {attemptTemplate.replace(\"{N}\", displayNumber(i, language))}\n        </option>\n      );\n    }\n    if (this.props.allow4thAttempts === true) {\n      attemptOptions.push(\n        <option key={4} value={4}>\n          {attemptTemplate.replace(\"{N}\", displayNumber(4, language))}\n        </option>\n      );\n    }\n\n    const currentEntryId = this.props.currentEntryId === null ? undefined : this.props.currentEntryId.toString();\n\n    return (\n      <div className={styles.footer}>\n        <div className={styles.leftControls}>\n          <Form.Control\n            as=\"select\"\n            defaultValue={this.props.lifting.day.toString()}\n            onChange={this.handleDayChange}\n            className={`custom-select ${styles.selector}`}\n          >\n            {dayOptions}\n          </Form.Control>\n          <Form.Control\n            as=\"select\"\n            defaultValue={this.props.lifting.platform.toString()}\n            onChange={this.handlePlatformChange}\n            className={`custom-select ${styles.selector}`}\n          >\n            {platformOptions}\n          </Form.Control>\n          <Form.Control\n            as=\"select\"\n            defaultValue={this.props.lifting.lift}\n            onChange={this.handleLiftChange}\n            className={`custom-select ${styles.selector}`}\n          >\n            {liftOptions}\n          </Form.Control>\n          <Form.Control\n            key={\"flight-\" + this.props.lifting.flight}\n            as=\"select\"\n            defaultValue={this.props.lifting.flight}\n            onChange={this.handleFlightChange}\n            className={`custom-select ${styles.selector}`}\n          >\n            {flightOptions}\n          </Form.Control>\n          <Form.Control\n            value={this.props.attemptOneIndexed.toString()}\n            as=\"select\"\n            onChange={this.handleAttemptChange}\n            className={`custom-select ${styles.selector}`}\n          >\n            {attemptOptions}\n          </Form.Control>\n          <Form.Control\n            value={currentEntryId}\n            as=\"select\"\n            onChange={this.handleLifterChange}\n            className={`custom-select ${styles.selector}`}\n          >\n            {this.makeLifterOptions()}\n          </Form.Control>\n        </div>\n\n        <div className={styles.rightControls}>\n          <ButtonGroup>\n            <Button variant=\"outline-primary\" onClick={this.props.toggleReplaceTableWithWeighins}>\n              <FormattedMessage id=\"lifting.button-toggle-weigh-ins\" defaultMessage=\"Toggle Weigh-ins\" />\n            </Button>\n            <Button variant=\"outline-secondary\" onClick={this.handleFullscreen} className={styles.fullscreen}>\n              <FormattedMessage id=\"lifting.button-toggle-fullscreen\" defaultMessage=\"Toggle Fullscreen\" />\n            </Button>\n          </ButtonGroup>\n          <button\n            type=\"button\"\n            onMouseEnter={this.handleOnMouseEnter}\n            onMouseDown={this.handleNoLift}\n            className={styles.noLift}\n          >\n            <FormattedMessage id=\"lifting.button-no-lift\" defaultMessage=\"No Lift\" />\n          </button>\n          <button\n            type=\"button\"\n            onMouseEnter={this.handleOnMouseEnter}\n            onMouseDown={this.handleGoodLift}\n            className={styles.goodLift}\n          >\n            <FormattedMessage id=\"lifting.button-good-lift\" defaultMessage=\"Good Lift\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState) => {\n  return {\n    lengthDays: state.meet.lengthDays,\n    platformsOnDays: state.meet.platformsOnDays,\n    allow4thAttempts: state.meet.allow4thAttempts,\n    lifting: state.lifting,\n    language: state.language\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    setLiftingGroup: (day: number, platform: number, flight: Flight, lift: Lift) =>\n      dispatch(setLiftingGroup(day, platform, flight, lift)),\n    overrideAttempt: (attempt: number) => dispatch(overrideAttempt(attempt)),\n    overrideEntryId: (entryId: number) => dispatch(overrideEntryId(entryId)),\n    markLift: (entryId: number, lift: Lift, attempt: number, success: boolean) =>\n      dispatch(markLift(entryId, lift, attempt, success))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LiftingFooter);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// The top bar of the Lifting page, containing huge text about the current lifter.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport LocalizedString from \"../translations/LocalizedString\";\nimport { localizeEquipment } from \"../../logic/strings\";\nimport { displayNumber } from \"../../logic/units\";\n\nimport { Entry, Language } from \"../../types/dataTypes\";\nimport { GlobalState, RegistrationState } from \"../../types/stateTypes\";\n\nimport styles from \"./LiftingHeader.module.scss\";\n\ninterface OwnProps {\n  attemptOneIndexed: number;\n  orderedEntries: Array<Entry>;\n  currentEntryId: number | null;\n}\n\ninterface StateProps {\n  registration: RegistrationState;\n  language: Language;\n}\n\ntype Props = OwnProps & StateProps;\n\nclass LiftingHeader extends React.Component<Props> {\n  render() {\n    // Defaults, in case of no lifter.\n    let lifterName = <LocalizedString id=\"lifting.flight-complete\" />;\n    let info = \"\";\n\n    // In the case of a lifter, set fields.\n    if (this.props.currentEntryId !== null && this.props.currentEntryId !== undefined) {\n      const idx = this.props.registration.lookup[this.props.currentEntryId];\n      const entry = this.props.registration.entries[idx];\n      lifterName = <span>{entry.name}</span>;\n\n      let infoBuilder: Array<string> = [];\n\n      if (typeof entry.instagram === \"string\" && entry.instagram !== \"\") {\n        infoBuilder.push(\"@\" + entry.instagram);\n      } else {\n        infoBuilder.push(\"\"); // Causes a separator dot to display.\n      }\n      if (entry.age > 0) {\n        infoBuilder.push(displayNumber(entry.age, this.props.language));\n      }\n\n      // If the team is provided, show only that (for IrishPF Team Meets).\n      if (entry.team) {\n        infoBuilder.push(entry.team);\n      } else {\n        infoBuilder.push(localizeEquipment(entry.equipment, this.props.language));\n        if (entry.divisions.length > 0) {\n          infoBuilder.push(entry.divisions.join(\", \"));\n        }\n      }\n\n      info = infoBuilder.join(\" · \");\n    }\n\n    return (\n      <div className={styles.header}>\n        <div className={styles.lifterName}>{lifterName}</div>\n        <div className={styles.info}>{info}</div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => {\n  return {\n    registration: state.registration,\n    language: state.language\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  null\n)(LiftingHeader);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// This defines a widget for manually adjusting the width of a column\n// in the LiftingTable. The width information is stored in the LiftingState.\n//\n// The value is stored in the LiftingState in pixels, but is presented\n// here as (pixels / 9) to make it look nicer. 9 is used because most columns\n// are set to 72px, which is divisible by 9.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Form from \"react-bootstrap/Form\";\n\nimport { setTableInfo } from \"../../actions/liftingActions\";\n\nimport { Validation } from \"../../types/dataTypes\";\nimport { GlobalState, LiftingState } from \"../../types/stateTypes\";\nimport { FormControlTypeHack, isString } from \"../../types/utils\";\nimport { Dispatch } from \"redux\";\nimport { isNumber } from \"util\";\n\ntype WidthFields = \"columnDivisionWidthPx\" | \"columnTeamWidthPx\";\n\ninterface OwnProps {\n  label: string; // The label to display.\n  fieldName: WidthFields; // Field on the LiftingState to change.\n}\n\ninterface StateProps {\n  lifting: LiftingState;\n}\n\ninterface DispatchProps {\n  setTableInfo: (changes: Partial<LiftingState>) => void;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\ninterface InternalState {\n  value: number | string;\n}\n\n// To show smaller numbers, the actual pixel count is divided by this.\nconst MULTIPLE: number = 9;\n\nclass ColumnWidth extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    this.validate = this.validate.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      value: Math.ceil(this.props.lifting[this.props.fieldName] / MULTIPLE)\n    };\n  }\n\n  validate = (): Validation => {\n    const { value } = this.state;\n    const asNumber = Number(value);\n\n    if (isNaN(asNumber) || asNumber < 0 || asNumber > 1000) {\n      return \"error\";\n    }\n    return \"success\";\n  };\n\n  handleChange = (event: React.FormEvent<FormControlTypeHack>) => {\n    const value = event.currentTarget.value;\n    if (!isNumber(value) && !isString(value)) {\n      throw new Error(`Expected either a number or a string, but got \"${value}\"`);\n    }\n\n    this.setState({ value: value }, () => {\n      // As callback, save successful value into Redux store.\n      if (this.validate() !== \"error\") {\n        // TODO: figure out how to type this nicely. For now, use any\n        let changes: any = {};\n        changes[this.props.fieldName] = Math.floor(Number(value) * MULTIPLE);\n        this.props.setTableInfo(changes);\n      }\n    });\n  };\n\n  render() {\n    const validation: Validation = this.validate();\n\n    return (\n      <Form.Group style={{ width: \"160px\", paddingRight: \"16px\" }}>\n        <Form.Label>{this.props.label}</Form.Label>\n        <Form.Control\n          type=\"number\"\n          pattern=\"[0-9]+\"\n          min=\"0\"\n          step=\"1\"\n          value={this.state.value.toString()}\n          onChange={this.handleChange}\n          isValid={validation === \"success\"}\n          isInvalid={validation === \"error\"}\n          className={validation === \"warning\" ? \"is-warning\" : undefined}\n        />\n      </Form.Group>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  lifting: state.lifting\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    setTableInfo: (changes: Partial<LiftingState>) => dispatch(setTableInfo(changes))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ColumnWidth);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// The parent component of the Lifting page, contained by the LiftingContainer.\n//\n// The LiftingTable, LiftingFooter, etc. all share calculated state.\n// This class performs the state calculations and communicates that to its\n// sub-components via props.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Card from \"react-bootstrap/Card\";\n\nimport LeftCard from \"./LeftCard\";\nimport LiftingFooter from \"./LiftingFooter\";\nimport LiftingHeader from \"./LiftingHeader\";\nimport LiftingTable from \"./LiftingTable\";\nimport WeighinsView from \"../weighins/WeighinsView\";\n\nimport ColumnWidth from \"./ColumnWidth\";\n\nimport { getString } from \"../../logic/strings\";\n\nimport styles from \"./LiftingView.module.scss\";\n\nimport { getLiftingOrder } from \"../../logic/liftingOrder\";\n\nimport { Entry, Flight, Language } from \"../../types/dataTypes\";\nimport { GlobalState, MeetState, LiftingState } from \"../../types/stateTypes\";\n\ninterface StateProps {\n  meet: MeetState;\n  lifting: LiftingState;\n  flightsOnPlatform: Array<Flight>;\n  entriesInFlight: Array<Entry>;\n  language: Language;\n}\n\ntype Props = StateProps;\n\ninterface InternalState {\n  // If true, the LiftingTable is replaced with the Weighins page.\n  // This lets the score table change arbitrary rack height and attempt information\n  // without removing the current lifter or bar load displays.\n  replaceTableWithWeighins: boolean;\n}\n\nclass LiftingView extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n    this.toggleReplaceTableWithWeighins = this.toggleReplaceTableWithWeighins.bind(this);\n    this.state = {\n      replaceTableWithWeighins: false\n    };\n  }\n\n  toggleReplaceTableWithWeighins = (): void => {\n    this.setState({\n      replaceTableWithWeighins: !this.state.replaceTableWithWeighins\n    });\n  };\n\n  render() {\n    const now = getLiftingOrder(this.props.entriesInFlight, this.props.lifting);\n\n    let rightElement = null;\n    if (this.state.replaceTableWithWeighins === false) {\n      rightElement = (\n        <LiftingTable\n          attemptOneIndexed={now.attemptOneIndexed}\n          orderedEntries={now.orderedEntries}\n          currentEntryId={now.currentEntryId}\n        />\n      );\n    } else {\n      rightElement = (\n        <WeighinsView day={this.props.lifting.day} platform={this.props.lifting.platform} inLiftingPage={true} />\n      );\n    }\n\n    return (\n      <div>\n        <Card border=\"primary\" style={{ marginLeft: \"12px\", marginRight: \"12px\" }}>\n          <Card.Body>\n            <div style={{ display: \"flex\", flexFlow: \"row\" }}>\n              <ColumnWidth\n                label={getString(\"lifting.division-column-width-label\", this.props.language)}\n                fieldName=\"columnDivisionWidthPx\"\n              />\n              <ColumnWidth label=\"Club Column Width\" fieldName=\"columnTeamWidthPx\" />\n            </div>\n            <h3>\n              <FormattedMessage\n                id=\"lifting.garish-instructions\"\n                defaultMessage=\"To fit to the screen, zoom the browser in or out and then press Toggle Fullscreen.\"\n              />\n            </h3>\n          </Card.Body>\n        </Card>\n        <div id=\"liftingView\" className={styles.liftingView}>\n          <LiftingHeader\n            attemptOneIndexed={now.attemptOneIndexed}\n            orderedEntries={now.orderedEntries}\n            currentEntryId={now.currentEntryId}\n          />\n\n          <div className={styles.middleParentContainer}>\n            <div className={styles.leftCardContainer}>\n              <LeftCard\n                attemptOneIndexed={now.attemptOneIndexed}\n                orderedEntries={now.orderedEntries}\n                currentEntryId={now.currentEntryId}\n                nextEntryId={now.nextEntryId}\n                nextAttemptOneIndexed={now.nextAttemptOneIndexed}\n              />\n            </div>\n\n            <div className={styles.rightCardContainer}>{rightElement}</div>\n          </div>\n\n          <LiftingFooter\n            attemptOneIndexed={now.attemptOneIndexed}\n            orderedEntries={now.orderedEntries}\n            currentEntryId={now.currentEntryId}\n            flightsOnPlatform={this.props.flightsOnPlatform}\n            toggleReplaceTableWithWeighins={this.toggleReplaceTableWithWeighins}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => {\n  const day = state.lifting.day;\n  const platform = state.lifting.platform;\n  const flight = state.lifting.flight;\n\n  const entriesOnPlatform = state.registration.entries.filter(\n    entry => entry.day === day && entry.platform === platform\n  );\n\n  // Determine available flights from the entries themselves.\n  let flights: Array<Flight> = [];\n  for (let i = 0; i < entriesOnPlatform.length; i++) {\n    const entry = entriesOnPlatform[i];\n    if (flights.indexOf(entry.flight) === -1) {\n      flights.push(entry.flight);\n    }\n  }\n  flights.sort();\n\n  // Only receive entries that are in the currently-lifting group.\n  const entriesInFlight = entriesOnPlatform.filter(entry => entry.flight === flight);\n\n  return {\n    meet: state.meet,\n    lifting: state.lifting,\n    flightsOnPlatform: flights,\n    entriesInFlight: entriesInFlight,\n    language: state.language\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  null\n)(LiftingView);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Container for the Lifting page.\n\nimport React from \"react\";\nimport LiftingView from \"../components/lifting/LiftingView\";\n\nclass LiftingContainer extends React.Component<{}> {\n  render() {\n    return <LiftingView />;\n  }\n}\n\nexport default LiftingContainer;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Shows the first attempt ordering of lifters for a single flight.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Card from \"react-bootstrap/Card\";\nimport Table from \"react-bootstrap/Table\";\n\nimport { liftToAttemptFieldName } from \"../../logic/entry\";\nimport { orderEntriesByAttempt } from \"../../logic/liftingOrder\";\nimport { getString, localizeFlight } from \"../../logic/strings\";\nimport { kg2lbs, displayNumber, displayWeight } from \"../../logic/units\";\n\nimport { Entry, Flight, Language, Lift } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { checkExhausted } from \"../../types/utils\";\n\nimport styles from \"./OneFlightOrder.module.scss\";\n\ntype Column =\n  | \"SquatName\"\n  | \"SquatKg\"\n  | \"SquatLbs\"\n  | \"BenchSeparator\"\n  | \"BenchName\"\n  | \"BenchKg\"\n  | \"BenchLbs\"\n  | \"DeadliftSeparator\"\n  | \"DeadliftName\"\n  | \"DeadliftKg\"\n  | \"DeadliftLbs\";\n\ninterface OwnProps {\n  flight: Flight;\n  entriesInFlight: Array<Entry>;\n}\n\ninterface StateProps {\n  inKg: boolean;\n  showAlternateUnits: boolean;\n  language: Language;\n}\n\ntype Props = OwnProps & StateProps;\n\nclass OneFlightOrder extends React.Component<Props> {\n  getOrderBy = (lift: Lift): Array<Entry> => {\n    const fieldKg = liftToAttemptFieldName(lift);\n\n    // Only consider entries that registered a first attempt.\n    const entriesForLift = this.props.entriesInFlight.filter(e => {\n      return e[fieldKg][0] !== 0;\n    });\n\n    // Sort them in-place on the basis of that first attempt.\n    return orderEntriesByAttempt(entriesForLift, fieldKg, 1);\n  };\n\n  getColumnHeader(column: Column, language: Language): string {\n    switch (column) {\n      case \"SquatName\":\n        return getString(\"flight-order.squat-column-header\", language);\n      case \"SquatKg\":\n        return getString(\"flight-order.kilograms-header\", language);\n      case \"SquatLbs\":\n        return getString(\"flight-order.pounds-header\", language);\n      case \"BenchSeparator\":\n        return \"\";\n      case \"BenchName\":\n        return getString(\"flight-order.bench-column-header\", language);\n      case \"BenchKg\":\n        return getString(\"flight-order.kilograms-header\", language);\n      case \"BenchLbs\":\n        return getString(\"flight-order.pounds-header\", language);\n      case \"DeadliftSeparator\":\n        return \"\";\n      case \"DeadliftName\":\n        return getString(\"flight-order.deadlift-column-header\", language);\n      case \"DeadliftKg\":\n        return getString(\"flight-order.kilograms-header\", language);\n      case \"DeadliftLbs\":\n        return getString(\"flight-order.pounds-header\", language);\n      default:\n        checkExhausted(column);\n        return \"\";\n    }\n  }\n\n  render() {\n    const language = this.props.language;\n\n    const bySquat = this.getOrderBy(\"S\");\n    const byBench = this.getOrderBy(\"B\");\n    const byDeadlift = this.getOrderBy(\"D\");\n\n    const hasSquat = bySquat.length !== 0;\n    const hasBench = byBench.length !== 0;\n    const hasDeadlift = byDeadlift.length !== 0;\n\n    const maxRows = Math.max(bySquat.length, byBench.length, byDeadlift.length);\n\n    // Figure out what columns to render, and in which order.\n    let columns: Array<Column> = [];\n    if (hasSquat) {\n      columns.push(\"SquatName\");\n      columns.push(this.props.inKg ? \"SquatKg\" : \"SquatLbs\");\n      if (this.props.showAlternateUnits) {\n        columns.push(this.props.inKg ? \"SquatLbs\" : \"SquatKg\");\n      }\n    }\n    if (hasBench) {\n      if (hasSquat) {\n        columns.push(\"BenchSeparator\");\n      }\n      columns.push(\"BenchName\");\n      columns.push(this.props.inKg ? \"BenchKg\" : \"BenchLbs\");\n      if (this.props.showAlternateUnits) {\n        columns.push(this.props.inKg ? \"BenchLbs\" : \"BenchKg\");\n      }\n    }\n    if (hasDeadlift) {\n      if (hasSquat || hasBench) {\n        columns.push(\"DeadliftSeparator\");\n      }\n      columns.push(\"DeadliftName\");\n      columns.push(this.props.inKg ? \"DeadliftKg\" : \"DeadliftLbs\");\n      if (this.props.showAlternateUnits) {\n        columns.push(this.props.inKg ? \"DeadliftLbs\" : \"DeadliftKg\");\n      }\n    }\n\n    // Construct a table row-by-row.\n    let rows = [];\n    for (let i = 0; i < maxRows; ++i) {\n      let builder = [];\n\n      for (let j = 0; j < columns.length; ++j) {\n        const column = columns[j];\n        let key: string = column + String(i);\n\n        let content: string = \"\";\n        let className = undefined;\n\n        switch (column) {\n          case \"SquatName\": {\n            if (i < bySquat.length) {\n              const entry = bySquat[i];\n              content = displayNumber(i + 1, language) + \". \" + entry.name;\n            }\n            break;\n          }\n          case \"SquatKg\": {\n            if (i < bySquat.length) {\n              const entry = bySquat[i];\n              content = displayWeight(entry.squatKg[0], language);\n            }\n            break;\n          }\n          case \"SquatLbs\": {\n            if (i < bySquat.length) {\n              const entry = bySquat[i];\n              content = displayWeight(kg2lbs(entry.squatKg[0]), language);\n            }\n            break;\n          }\n          case \"BenchSeparator\":\n            className = styles.leftDivider;\n            break;\n          case \"BenchName\": {\n            if (i < byBench.length) {\n              const entry = byBench[i];\n              content = displayNumber(i + 1, language) + \". \" + entry.name;\n            }\n            break;\n          }\n          case \"BenchKg\": {\n            if (i < byBench.length) {\n              const entry = byBench[i];\n              content = displayWeight(entry.benchKg[0], language);\n            }\n            break;\n          }\n          case \"BenchLbs\": {\n            if (i < byBench.length) {\n              const entry = byBench[i];\n              content = displayWeight(kg2lbs(entry.benchKg[0]), language);\n            }\n            break;\n          }\n          case \"DeadliftSeparator\":\n            className = styles.leftDivider;\n            break;\n          case \"DeadliftName\": {\n            if (i < byDeadlift.length) {\n              const entry = byDeadlift[i];\n              content = displayNumber(i + 1, language) + \". \" + entry.name;\n            }\n            break;\n          }\n          case \"DeadliftKg\": {\n            if (i < byDeadlift.length) {\n              const entry = byDeadlift[i];\n              content = displayWeight(entry.deadliftKg[0], language);\n            }\n            break;\n          }\n          case \"DeadliftLbs\": {\n            if (i < byDeadlift.length) {\n              const entry = byDeadlift[i];\n              content = displayWeight(kg2lbs(entry.deadliftKg[0]), language);\n            }\n            break;\n          }\n        }\n\n        builder.push(\n          <td key={key} className={className}>\n            {content}\n          </td>\n        );\n      }\n\n      rows.push(<tr key={i}>{builder}</tr>);\n    }\n\n    // Construct the table header.\n    let header = [];\n    for (let i = 0; i < columns.length; ++i) {\n      const column = columns[i];\n      const title = this.getColumnHeader(column, this.props.language);\n      header.push(<th key={column}>{title}</th>);\n    }\n\n    return (\n      <Card>\n        <Card.Header>\n          <FormattedMessage\n            id=\"flight-order.flight-card\"\n            defaultMessage=\"Flight {flight} Lifting Order\"\n            values={{ flight: localizeFlight(this.props.flight, this.props.language) }}\n          />\n        </Card.Header>\n        <Card.Body>\n          <Table striped hover size=\"sm\" style={{ margin: \"0px\" }}>\n            <thead>\n              <tr>{header}</tr>\n            </thead>\n            <tbody>{rows}</tbody>\n          </Table>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => {\n  return {\n    inKg: state.meet.inKg,\n    showAlternateUnits: state.meet.showAlternateUnits,\n    language: state.language\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  null\n)(OneFlightOrder);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// The parent component of the FlightOrder page, contained by the FlightOrderContainer.\n\nimport React, { FormEvent } from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport FormControl from \"react-bootstrap/FormControl\";\n\nimport OneFlightOrder from \"./OneFlightOrder\";\nimport OneCategory from \"./OneCategory\";\n\nimport { getProjectedResults } from \"../../logic/divisionPlace\";\nimport { getString } from \"../../logic/strings\";\nimport { displayNumber } from \"../../logic/units\";\n\nimport { Entry, Flight, Language } from \"../../types/dataTypes\";\nimport { GlobalState, MeetState } from \"../../types/stateTypes\";\nimport { FormControlTypeHack } from \"../../types/utils\";\n\ninterface StateProps {\n  meet: MeetState;\n  entries: Array<Entry>;\n  language: Language;\n}\n\ntype Props = StateProps;\n\ninterface InternalState {\n  day: number;\n  platform: number;\n}\n\nconst marginStyle = { margin: \"0\" };\n\nclass FlightOrderView extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    this.updateDay = this.updateDay.bind(this);\n    this.updatePlatform = this.updatePlatform.bind(this);\n    this.handlePrint = this.handlePrint.bind(this);\n\n    this.state = {\n      day: 1,\n      platform: 1\n    };\n  }\n\n  updateDay = (event: FormEvent<FormControlTypeHack>) => {\n    const day = Number(event.currentTarget.value);\n    if (this.state.day !== day) {\n      // If the currently-selected platform number becomes invalid, reset it.\n      if (this.state.platform > this.props.meet.platformsOnDays[day - 1]) {\n        this.setState({ day: day, platform: 1 });\n      } else {\n        this.setState({ day: day });\n      }\n    }\n  };\n\n  updatePlatform = (event: React.FormEvent<FormControlTypeHack>) => {\n    const platform = Number(event.currentTarget.value);\n    if (this.state.platform !== platform) {\n      this.setState({ platform: platform });\n    }\n  };\n\n  handlePrint = () => {\n    window.print();\n  };\n\n  render() {\n    const language = this.props.language;\n    const selectorStyle = { width: \"120px\" };\n\n    // Make options for all of the days.\n    let dayOptions = [];\n    const dayTemplate = getString(\"lifting.footer-day-template\", language);\n    for (let i = 1; i <= this.props.meet.lengthDays; i++) {\n      dayOptions.push(\n        <option value={i} key={i}>\n          {dayTemplate.replace(\"{N}\", displayNumber(i, language))}\n        </option>\n      );\n    }\n\n    // Make options for all of the available platforms on the current day.\n    let platformOptions = [];\n    const platformTemplate = getString(\"lifting.footer-platform-template\", language);\n    const numPlatforms = this.props.meet.platformsOnDays[this.state.day - 1];\n    for (let i = 1; i <= numPlatforms; i++) {\n      platformOptions.push(\n        <option value={i} key={i}>\n          {platformTemplate.replace(\"{N}\", displayNumber(i, language))}\n        </option>\n      );\n    }\n\n    // Get all the entries under the current (day, platform) selection.\n    let shownEntries = this.props.entries.filter(e => {\n      return e.day === this.state.day && e.platform === this.state.platform;\n    });\n\n    // Look through the entries to discover what flights exist.\n    let knownFlights: Flight[] = [];\n    for (let i = 0; i < shownEntries.length; i++) {\n      const entry = shownEntries[i];\n      if (knownFlights.indexOf(entry.flight) === -1) {\n        knownFlights.push(entry.flight);\n      }\n    }\n    knownFlights.sort();\n\n    // For each flight, see if there are any lifters, and build a OneFlightOrder.\n    let flightOrders = [];\n    for (let i = 0; i < knownFlights.length; i++) {\n      const flight = knownFlights[i];\n      const entriesInFlight = shownEntries.filter(e => e.flight === flight);\n      const id = \"\" + this.state.day + \"-\" + this.state.platform + \"-\" + flight;\n      flightOrders.push(<OneFlightOrder key={id} flight={flight} entriesInFlight={entriesInFlight} />);\n    }\n\n    // Look through the entries to discover what divisions exist.\n    const categoryResults = getProjectedResults(\n      shownEntries,\n      this.props.meet.weightClassesKgMen,\n      this.props.meet.weightClassesKgWomen,\n      this.props.meet.weightClassesKgMx,\n      this.props.meet.combineSleevesAndWraps\n    );\n\n    let categories: Array<JSX.Element> = [];\n    // FIXME: Disable categories for the moment. They seem unhelpful.\n    // As far as I know, no one has paid them much attention.\n    /*\n    for (let i = 0; i < categoryResults.length; i++) {\n      const id = \"\" + this.state.day + \"-\" + this.state.platform + \"-\" + i;\n      categories.push(<OneCategory key={id} platform={this.state.platform} categoryResults={categoryResults[i]} />);\n    }\n    */\n\n    return (\n      <div style={marginStyle}>\n        <Card border=\"info\">\n          <Card.Body style={{ display: \"flex\" }}>\n            <FormControl\n              defaultValue={this.state.day}\n              as=\"select\"\n              onChange={this.updateDay}\n              style={selectorStyle}\n              className=\"custom-select\"\n            >\n              {dayOptions}\n            </FormControl>\n\n            <FormControl\n              defaultValue={this.state.platform.toString()}\n              as=\"select\"\n              onChange={this.updatePlatform}\n              style={selectorStyle}\n              className=\"custom-select\"\n            >\n              {platformOptions}\n            </FormControl>\n\n            <Button variant=\"info\" onClick={this.handlePrint}>\n              <FormattedMessage id=\"flight-order.print-button\" defaultMessage=\"Print Page\" />\n            </Button>\n          </Card.Body>\n        </Card>\n\n        {flightOrders}\n        {categories}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => {\n  return {\n    meet: state.meet,\n    entries: state.registration.entries,\n    language: state.language\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  null\n)(FlightOrderView);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Container for the FlightOrder page.\n\nimport React from \"react\";\nimport FlightOrderView from \"../components/flight-order/FlightOrderView\";\n\nclass FlightOrderContainer extends React.Component<{}> {\n  render() {\n    return <FlightOrderView />;\n  }\n}\n\nexport default FlightOrderContainer;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Displays the results by division.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Card from \"react-bootstrap/Card\";\nimport Table from \"react-bootstrap/Table\";\n\nimport { getFinalResults } from \"../../logic/divisionPlace\";\nimport { getWeightClassStr, getWeightClassLbsStr, wtclsStrKg2Lbs } from \"../../reducers/meetReducer\";\nimport {\n  getBest5SquatKg,\n  getBest5BenchKg,\n  getBest5DeadliftKg,\n  getFinalEventTotalKg,\n  entryHasLifted\n} from \"../../logic/entry\";\nimport { kg2lbs, displayWeight, displayPoints, displayNumber } from \"../../logic/units\";\n\nimport { getString, localizeEquipment, localizeEvent, localizeWeightClassStr } from \"../../logic/strings\";\nimport { getPoints } from \"../../logic/coefficients/coefficients\";\n\nimport { Category, CategoryResults } from \"../../logic/divisionPlace\";\nimport { Entry, Formula, Language, Sex } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { checkExhausted } from \"../../types/utils\";\n\ninterface StateProps {\n  inKg: boolean;\n  showAlternateUnits: boolean;\n  meetName: string;\n  formula: Formula;\n  combineSleevesAndWraps: boolean;\n  lengthDays: number;\n  weightClassesKgMen: Array<number>;\n  weightClassesKgWomen: Array<number>;\n  weightClassesKgMx: Array<number>;\n  language: Language;\n  entries: Array<Entry>;\n}\n\ninterface OwnProps {\n  day: string | number; // Really a number, 0 meaning \"all\".\n}\n\ntype Props = StateProps & OwnProps;\n\nconst mapSexToClasses = (sex: Sex, props: Props): Array<number> => {\n  switch (sex) {\n    case \"M\":\n      return props.weightClassesKgMen;\n    case \"F\":\n      return props.weightClassesKgWomen;\n    case \"Mx\":\n      return props.weightClassesKgMx;\n    default:\n      checkExhausted(sex);\n      return props.weightClassesKgMen;\n  }\n};\n\nclass ByDivision extends React.Component<Props> {\n  renderEntryRow = (entry: Entry, category: Category, key: number): JSX.Element | null => {\n    // Skip no-show entries.\n    if (!entryHasLifted(entry)) return null;\n\n    // Skip DQ'd lifters. Meet directors have reported that it's embarrassing\n    // to the DQ'd lifter to have that projected.\n    const totalKg = getFinalEventTotalKg(entry, category.event);\n    if (totalKg === 0) return null;\n\n    const inKg = this.props.inKg;\n    const language = this.props.language;\n\n    // The place proceeds in order by key, except for DQ entries.\n    const place = totalKg === 0 ? getString(\"results.lifter-disqualified\", language) : key + 1;\n\n    const points: number = getPoints(this.props.formula, entry, category.event, totalKg, inKg);\n\n    let pointsStr = \"\";\n    if (totalKg !== 0 && points === 0) {\n      pointsStr = getString(\"results.value-not-applicable\", language);\n    } else if (totalKg !== 0 && points !== 0) {\n      pointsStr = displayPoints(points, language);\n    }\n\n    const classes = mapSexToClasses(entry.sex, this.props);\n    const wtcls = inKg\n      ? getWeightClassStr(classes, entry.bodyweightKg, language)\n      : getWeightClassLbsStr(classes, entry.bodyweightKg);\n    const bw = inKg ? entry.bodyweightKg : kg2lbs(entry.bodyweightKg);\n\n    const squatKg = getBest5SquatKg(entry);\n    const squat = inKg ? squatKg : kg2lbs(squatKg);\n\n    const benchKg = getBest5BenchKg(entry);\n    const bench = inKg ? benchKg : kg2lbs(benchKg);\n\n    const deadliftKg = getBest5DeadliftKg(entry);\n    const deadlift = inKg ? deadliftKg : kg2lbs(deadliftKg);\n\n    let weightTemplate = \"\";\n    if (inKg) {\n      if (this.props.showAlternateUnits === true) {\n        weightTemplate = getString(\"lifting.current-weight-kg-lbs\", language);\n      } else {\n        weightTemplate = getString(\"lifting.current-weight-kg\", language);\n      }\n    } else {\n      if (this.props.showAlternateUnits === true) {\n        weightTemplate = getString(\"lifting.current-weight-lbs-kg\", language);\n      } else {\n        weightTemplate = getString(\"lifting.current-weight-lbs\", language);\n      }\n    }\n\n    let weightString: null | string = null;\n    if (totalKg > 0) {\n      weightString = weightTemplate\n        .replace(\"{kg}\", displayWeight(totalKg, language))\n        .replace(\"{lbs}\", displayWeight(kg2lbs(totalKg), language));\n    }\n\n    return (\n      <tr key={key}>\n        <td>{place}</td>\n        <td>{entry.name}</td>\n        <td>{entry.team}</td>\n        <td>{entry.bodyweightKg === 0 ? null : wtcls}</td>\n        <td>{entry.bodyweightKg === 0 ? null : displayWeight(bw, language)}</td>\n        <td>{entry.age === 0 ? null : entry.age}</td>\n        <td>{squatKg === 0 ? \"\" : displayWeight(squat, language)}</td>\n        <td>{benchKg === 0 ? \"\" : displayWeight(bench, language)}</td>\n        <td>{deadliftKg === 0 ? \"\" : displayWeight(deadlift, language)}</td>\n        <td>{weightString}</td>\n        <td>{pointsStr}</td>\n      </tr>\n    );\n  };\n\n  mapSexToLabel = (sex: Sex, language: Language): string => {\n    switch (sex) {\n      case \"M\":\n        return getString(\"results.mens\", language);\n      case \"F\":\n        return getString(\"results.womens\", language);\n      case \"Mx\":\n        return getString(\"results.mxs\", language);\n      default:\n        checkExhausted(sex);\n        return \"\";\n    }\n  };\n\n  renderCategoryResults = (results: CategoryResults, key: number): JSX.Element | null => {\n    const { category, orderedEntries } = results;\n    const language = this.props.language;\n    const sex: string = this.mapSexToLabel(category.sex, language);\n\n    // Gather rows.\n    let rows = [];\n    for (let i = 0; i < orderedEntries.length; i++) {\n      const row = this.renderEntryRow(orderedEntries[i], category, i);\n      if (row !== null) {\n        rows.push(row);\n      }\n    }\n\n    // If all entries were no-show, don't show this panel.\n    if (rows.length === 0) {\n      return null;\n    }\n\n    let eqpstr: string = localizeEquipment(category.equipment, language);\n    if (this.props.combineSleevesAndWraps) {\n      eqpstr = getString(\"results.combined-sleeves-wraps\", language);\n    }\n\n    let units = this.props.inKg\n      ? getString(\"results.spoken-unit-kilo\", language)\n      : getString(\"results.spoken-unit-pound\", language);\n\n    // Convert the category.weightClassStr to pounds.\n    let wtcls = localizeWeightClassStr(category.weightClassStr, language);\n    if (category.weightClassStr !== \"\" && !this.props.inKg) {\n      wtcls = wtclsStrKg2Lbs(category.weightClassStr);\n    }\n\n    const template = getString(\"results.division-template\", language);\n    const division = template\n      .replace(\"{sex}\", sex)\n      .replace(\"{weightClass}\", wtcls)\n      .replace(\"{spokenUnits}\", category.weightClassStr !== \"\" ? units : \"\")\n      .replace(\"{equipment}\", eqpstr)\n      .replace(\"{division}\", category.division)\n      .replace(\"{event}\", localizeEvent(category.event, language));\n\n    return (\n      <Card key={key}>\n        <Card.Header>{division}</Card.Header>\n        <Card.Body>\n          <Table hover size=\"sm\">\n            <thead>\n              <tr>\n                <th>{getString(\"lifting.column-place\", language)}</th>\n                <th>{getString(\"lifting.column-lifter\", language)}</th>\n                <th>Club</th>\n                <th>{getString(\"lifting.column-weightclass\", language)}</th>\n                <th>{getString(\"lifting.column-bodyweight\", language)}</th>\n                <th>{getString(\"lifting.column-age\", language)}</th>\n                <th>{getString(\"flight-order.squat-column-header\", language)}</th>\n                <th>{getString(\"flight-order.bench-column-header\", language)}</th>\n                <th>{getString(\"flight-order.deadlift-column-header\", language)}</th>\n                <th>{getString(\"lifting.column-finaltotal\", language)}</th>\n                <th>{getString(\"lifting.column-finalpoints\", language)}</th>\n              </tr>\n            </thead>\n            <tbody>{rows}</tbody>\n          </Table>\n        </Card.Body>\n      </Card>\n    );\n  };\n\n  render() {\n    const results = getFinalResults(\n      this.props.entries,\n      this.props.weightClassesKgMen,\n      this.props.weightClassesKgWomen,\n      this.props.weightClassesKgMx,\n      this.props.combineSleevesAndWraps\n    );\n\n    let categoryCards = [];\n    for (let i = 0; i < results.length; i++) {\n      const panel = this.renderCategoryResults(results[i], i);\n      if (panel !== null) {\n        categoryCards.push(panel);\n      }\n    }\n\n    return <div>{categoryCards}</div>;\n  }\n}\n\nconst mapStateToProps = (state: GlobalState, ownProps: OwnProps): StateProps => {\n  const day = Number(ownProps.day);\n  let entries = state.registration.entries;\n  if (day > 0) {\n    entries = entries.filter(e => e.day === day);\n  }\n\n  return {\n    inKg: state.meet.inKg,\n    showAlternateUnits: state.meet.showAlternateUnits,\n    meetName: state.meet.name,\n    formula: state.meet.formula,\n    combineSleevesAndWraps: state.meet.combineSleevesAndWraps,\n    lengthDays: state.meet.lengthDays,\n    weightClassesKgMen: state.meet.weightClassesKgMen,\n    weightClassesKgWomen: state.meet.weightClassesKgWomen,\n    weightClassesKgMx: state.meet.weightClassesKgMx,\n    language: state.language,\n    entries: entries\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ByDivision);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the logic for calculating the division Place of a lifter, shared between\n// the Lifting page, the Rankings page, and data export code.\n//\n// The algorithm used is particularly bad -- the foremost goal was to make an interface\n// that allowed for maximum code reuse between the Rankings and Lifting pages,\n// which have slightly different needs.\n\nimport { getFinalEventTotalKg } from \"./entry\";\n\n// Import points formulas.\nimport { getPoints, getAgeAdjustedPoints } from \"./coefficients/coefficients\";\n\n// Import age coefficients.\nimport { checkExhausted } from \"../types/utils\";\nimport { AgeCoefficients, Sex, Event, Equipment, Entry, Formula } from \"../types/dataTypes\";\n\n// Specifies a points category under which entries can be ranked together.\nexport type PointsCategory = {\n  sex: Sex;\n  event: Event;\n  equipment: Equipment;\n};\n\n// Wraps up all the entries in a category with the category's descriptors.\nexport type PointsCategoryResults = {\n  category: PointsCategory;\n  orderedEntries: Array<Entry>;\n};\n\n// Generates a unique String out of a Category, for purposes of using as a Map key.\nconst categoryToKey = (category: PointsCategory): string => {\n  return JSON.stringify(category);\n};\nconst keyToCategory = (key: string): PointsCategory => {\n  return JSON.parse(key);\n};\n\n// Returns a copy of the entries array sorted by Formula Place (Rank).\n// All entries are assumed to be part of the same category.\nconst sortByFormulaPlaceInCategory = (\n  entries: Array<Entry>,\n  category: PointsCategory,\n  formula: Formula,\n  ageCoefficients: AgeCoefficients,\n  inKg: boolean,\n  meetDate: string\n): Array<Entry> => {\n  // Make a map from Entry to initial index.\n  let indexMap = new Map();\n  for (let i = 0; i < entries.length; i++) {\n    indexMap.set(entries[i], i);\n  }\n\n  // Pre-calculate all the points into an array to avoid computing them multiple\n  // times in the sort.\n  let memoizedPoints = new Array(entries.length);\n  for (let i = 0; i < entries.length; i++) {\n    const entry = entries[i];\n    const totalKg = getFinalEventTotalKg(entry, category.event);\n\n    memoizedPoints[i] = getAgeAdjustedPoints(ageCoefficients, meetDate, formula, entry, category.event, totalKg, inKg);\n  }\n\n  // Clone the entries array to avoid modifying the original.\n  let clonedEntries = entries.slice();\n\n  // Sort in the given category, first place having the lowest index.\n  clonedEntries.sort((a, b) => {\n    const aIndex = indexMap.get(a);\n    const bIndex = indexMap.get(b);\n\n    // Appease the type checker even though this can't happen.\n    if (aIndex === undefined || bIndex === undefined) return 0;\n\n    // First sort by points, higher sorting lower.\n    const aPoints = memoizedPoints[aIndex];\n    const bPoints = memoizedPoints[bIndex];\n    if (aPoints !== bPoints) return bPoints - aPoints;\n\n    // If points are equal, sort by Bodyweight, lower sorting lower.\n    if (a.bodyweightKg !== b.bodyweightKg) return a.bodyweightKg - b.bodyweightKg;\n\n    // Otherwise, they're equal.\n    return 0;\n  });\n\n  return clonedEntries;\n};\n\n// Determines the sort order by Event.\nconst getEventSortOrder = (ev: Event): number => {\n  return [\"SBD\", \"BD\", \"SB\", \"SD\", \"S\", \"B\", \"D\"].indexOf(ev);\n};\n\n// Determines the sort order by Equipment.\nconst getEquipmentSortOrder = (eq: Equipment): number => {\n  // Combine classic and equipped lifting.\n  return [\"Bare\", \"Sleeves\", \"Wraps\", \"Single-ply\", \"Multi-ply\"].indexOf(eq);\n};\n\n// Determines the sort order by Sex.\nconst getSexSortOrder = (sex: Sex): number => {\n  switch (sex) {\n    case \"F\":\n      return 0;\n    case \"M\":\n      return 1;\n    case \"Mx\":\n      return 2;\n    default:\n      checkExhausted(sex);\n      return 3;\n  }\n};\n\n// Determines the sort (and therefore presentation) order for the Category Results.\n// The input array is sorted in-place; nothing is returned.\nexport const sortPointsCategoryResults = (results: Array<PointsCategoryResults>) => {\n  results.sort((a, b) => {\n    const catA = a.category;\n    const catB = b.category;\n\n    // First, sort by Sex.\n    const aSex = getSexSortOrder(catA.sex);\n    const bSex = getSexSortOrder(catB.sex);\n    if (aSex !== bSex) return aSex - bSex;\n\n    // Next, sort by Event.\n    const aEvent = getEventSortOrder(catA.event);\n    const bEvent = getEventSortOrder(catB.event);\n    if (aEvent !== bEvent) return aEvent - bEvent;\n\n    // Finally, sort by Equipment.\n    const aEquipment = getEquipmentSortOrder(catA.equipment);\n    const bEquipment = getEquipmentSortOrder(catB.equipment);\n    if (aEquipment !== bEquipment) return aEquipment - bEquipment;\n\n    return 0;\n  });\n};\n\n// Generates objects representing the various ByPoints categories.\n// The returned objects are sorted in intended order of presentation.\nexport const getAllRankings = (\n  entries: Array<Entry>,\n  formula: Formula,\n  ageCoefficients: AgeCoefficients,\n  combineSleevesAndWraps: boolean,\n  inKg: boolean,\n  meetDate: string\n): Array<PointsCategoryResults> => {\n  // Generate a map from category to the entries within that category.\n  // The map is populated by iterating over each entry and having the entry\n  // append itself to per-category lists.\n  let categoryMap = new Map();\n  for (let i = 0; i < entries.length; i++) {\n    const e = entries[i];\n\n    // Remember consistent properties.\n    const sex = e.sex;\n    let equipment: Equipment = e.equipment;\n\n    // If the results combine Sleeves and Wraps, promote Sleeves to Wraps.\n    if (combineSleevesAndWraps && equipment === \"Sleeves\") {\n      equipment = \"Wraps\";\n    }\n\n    // Iterate over each event, adding to the map.\n    for (let evidx = 0; evidx < e.events.length; evidx++) {\n      const event = e.events[evidx];\n      const category = { sex, event, equipment };\n      const key = categoryToKey(category);\n\n      const catEntries = categoryMap.get(key);\n      catEntries === undefined ? categoryMap.set(key, [e]) : catEntries.push(e);\n    }\n  }\n\n  // Iterate over each category and assign a Place to the entries therein.\n  let results = [];\n  for (let [key, catEntries] of categoryMap) {\n    const category = keyToCategory(key);\n    const orderedEntries = sortByFormulaPlaceInCategory(catEntries, category, formula, ageCoefficients, inKg, meetDate);\n    results.push({ category, orderedEntries });\n  }\n\n  sortPointsCategoryResults(results);\n  return results;\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Displays the results by points.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Card from \"react-bootstrap/Card\";\nimport Table from \"react-bootstrap/Table\";\n\nimport { getAllRankings } from \"../../logic/pointsPlace\";\nimport { getWeightClassStr, getWeightClassLbsStr } from \"../../reducers/meetReducer\";\nimport {\n  getBest5SquatKg,\n  getBest5BenchKg,\n  getBest5DeadliftKg,\n  getFinalEventTotalKg,\n  entryHasLifted\n} from \"../../logic/entry\";\nimport { getString, localizeEquipment, localizeEvent, localizeSex } from \"../../logic/strings\";\nimport { kg2lbs, displayNumber, displayPoints, displayWeight } from \"../../logic/units\";\n\nimport { getPoints, getAgeAdjustedPoints } from \"../../logic/coefficients/coefficients\";\n\nimport { PointsCategory, PointsCategoryResults } from \"../../logic/pointsPlace\";\nimport { AgeCoefficients, Entry, Formula, Language, Sex } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { checkExhausted } from \"../../types/utils\";\nimport { fosterMcCulloch } from \"../../logic/coefficients/foster-mcculloch\";\n\ninterface StateProps {\n  inKg: boolean;\n  meetName: string;\n  meetDate: string;\n  formula: Formula;\n  combineSleevesAndWraps: boolean;\n  lengthDays: number;\n  weightClassesKgMen: Array<number>;\n  weightClassesKgWomen: Array<number>;\n  weightClassesKgMx: Array<number>;\n  language: Language;\n  entries: Array<Entry>;\n}\n\n// Overloads this component so it can render different types of \"Best Lifter\" categories.\nexport type AgePointsCategory = \"BestLifter\" | \"BestMastersLifter\" | \"BestJuniorsLifter\";\n\ninterface OwnProps {\n  day: string | number; // Really a number, 0 meaning \"all\".\n  ageCoefficients: AgeCoefficients; // In OwnProps so that caller can disable it.\n  agePointsCategory: AgePointsCategory;\n}\n\ntype Props = StateProps & OwnProps;\n\nconst mapSexToClasses = (sex: Sex, props: Props): Array<number> => {\n  switch (sex) {\n    case \"M\":\n      return props.weightClassesKgMen;\n    case \"F\":\n      return props.weightClassesKgWomen;\n    case \"Mx\":\n      return props.weightClassesKgMx;\n    default:\n      checkExhausted(sex);\n      return props.weightClassesKgMen;\n  }\n};\n\nclass ByPoints extends React.Component<Props> {\n  renderEntryRow = (entry: Entry, category: PointsCategory, key: number): JSX.Element | null => {\n    // Skip no-show lifters.\n    if (!entryHasLifted(entry)) return null;\n\n    // Skip DQ'd lifters. Meet directors have reported that it's embarrassing\n    // to the DQ'd lifter to have that projected.\n    const totalKg = getFinalEventTotalKg(entry, category.event);\n    if (totalKg === 0) return null;\n\n    const inKg = this.props.inKg;\n    const language = this.props.language;\n\n    // The place proceeds in order by key, except for DQ entries.\n    const rank = totalKg === 0 ? getString(\"results.lifter-disqualified\", language) : displayNumber(key + 1, language);\n\n    const points: number = getAgeAdjustedPoints(\n      this.props.ageCoefficients,\n      this.props.meetDate,\n      this.props.formula,\n      entry,\n      category.event,\n      totalKg,\n      inKg\n    );\n\n    let pointsStr = \"\";\n    if (totalKg !== 0 && points === 0) {\n      pointsStr = getString(\"results.value-not-applicable\", language);\n    } else if (totalKg !== 0 && points !== 0) {\n      pointsStr = displayPoints(points, language);\n    }\n\n    const classes = mapSexToClasses(entry.sex, this.props);\n    const wtcls = inKg\n      ? getWeightClassStr(classes, entry.bodyweightKg, language)\n      : getWeightClassLbsStr(classes, entry.bodyweightKg);\n    const bw = inKg ? entry.bodyweightKg : kg2lbs(entry.bodyweightKg);\n\n    const squatKg = getBest5SquatKg(entry);\n    const squat = inKg ? squatKg : kg2lbs(squatKg);\n\n    const benchKg = getBest5BenchKg(entry);\n    const bench = inKg ? benchKg : kg2lbs(benchKg);\n\n    const deadliftKg = getBest5DeadliftKg(entry);\n    const deadlift = inKg ? deadliftKg : kg2lbs(deadliftKg);\n\n    const total = inKg ? totalKg : kg2lbs(totalKg);\n\n    return (\n      <tr key={key}>\n        <td>{rank}</td>\n        <td>{entry.name}</td>\n        <td>{localizeSex(entry.sex, language)}</td>\n        <td>{localizeEquipment(entry.equipment, language)}</td>\n        <td>{entry.bodyweightKg === 0 ? null : wtcls}</td>\n        <td>{entry.bodyweightKg === 0 ? null : displayWeight(bw, language)}</td>\n        <td>{entry.age === 0 ? null : displayNumber(entry.age, language)}</td>\n        <td>{squatKg === 0 ? \"\" : displayWeight(squat, language)}</td>\n        <td>{benchKg === 0 ? \"\" : displayWeight(bench, language)}</td>\n        <td>{deadliftKg === 0 ? \"\" : displayWeight(deadlift, language)}</td>\n        <td>{totalKg === 0 ? \"\" : displayWeight(total, language)}</td>\n        <td>{pointsStr}</td>\n      </tr>\n    );\n  };\n\n  mapSexToLabel = (sex: Sex, language: Language): string => {\n    switch (sex) {\n      case \"M\":\n        return getString(\"results.mens\", language);\n      case \"F\":\n        return getString(\"results.womens\", language);\n      case \"Mx\":\n        return getString(\"results.mxs\", language);\n      default:\n        checkExhausted(sex);\n        return \"\";\n    }\n  };\n\n  renderCategoryResults = (results: PointsCategoryResults, key: number): JSX.Element | null => {\n    const { category, orderedEntries } = results;\n    const language = this.props.language;\n    const sex: string = this.mapSexToLabel(category.sex, language);\n\n    // Gather rows.\n    let rows = [];\n    for (let i = 0; i < orderedEntries.length; i++) {\n      const row = this.renderEntryRow(orderedEntries[i], category, i);\n      if (row !== null) {\n        rows.push(row);\n      }\n    }\n\n    // If all lifters were No-Show, skip displaying this category.\n    if (rows.length === 0) {\n      return null;\n    }\n\n    let eqpstr: string = localizeEquipment(category.equipment, language);\n    if (this.props.combineSleevesAndWraps) {\n      eqpstr = getString(\"results.combined-sleeves-wraps\", language);\n    }\n\n    const template = getString(\"results.category-template\", language);\n    const categoryString = template\n      .replace(\"{sex}\", sex)\n      .replace(\"{equipment}\", eqpstr)\n      .replace(\"{event}\", localizeEvent(category.event, language));\n\n    return (\n      <Card key={key}>\n        <Card.Header>{categoryString}</Card.Header>\n        <Card.Body>\n          <Table striped hover size=\"sm\">\n            <thead>\n              <tr>\n                <th>{getString(\"results.column-rank\", language)}</th>\n                <th>{getString(\"lifting.column-lifter\", language)}</th>\n                <th>{getString(\"results.column-sex\", language)}</th>\n                <th>{getString(\"results.column-equipment\", language)}</th>\n                <th>{getString(\"lifting.column-weightclass\", language)}</th>\n                <th>{getString(\"lifting.column-bodyweight\", language)}</th>\n                <th>{getString(\"lifting.column-age\", language)}</th>\n                <th>{getString(\"flight-order.squat-column-header\", language)}</th>\n                <th>{getString(\"flight-order.bench-column-header\", language)}</th>\n                <th>{getString(\"flight-order.deadlift-column-header\", language)}</th>\n                <th>{getString(\"lifting.column-finaltotal\", language)}</th>\n                <th>\n                  {this.props.ageCoefficients === \"None\"\n                    ? getString(\"lifting.column-finalpoints\", language)\n                    : getString(\"results.column-age-points\", language)}\n                </th>\n              </tr>\n            </thead>\n            <tbody>{rows}</tbody>\n          </Table>\n        </Card.Body>\n      </Card>\n    );\n  };\n\n  render() {\n    let entries = this.props.entries;\n\n    // If this is for Best Masters lifter, just include non-standard-aged lifters.\n    if (this.props.agePointsCategory !== \"BestLifter\") {\n      entries = entries.filter(e => {\n        // Filter out based on age.\n        switch (this.props.agePointsCategory) {\n          case \"BestLifter\":\n            break;\n          case \"BestMastersLifter\":\n            // The coefficients logic below will handle older lifters\n            // according to the chosen age coefficient system.\n            if (e.age <= 27) {\n              return false;\n            }\n            break;\n          case \"BestJuniorsLifter\":\n            // The coefficients logic below will handle older lifters\n            // according to the chosen age coefficient system.\n            if (e.age >= 27) {\n              return false;\n            }\n            break;\n          default:\n            checkExhausted(this.props.agePointsCategory);\n            break;\n        }\n\n        // Only include lifters who get an age bump.\n        switch (this.props.ageCoefficients) {\n          case \"None\":\n            return true;\n          case \"FosterMcCulloch\":\n            return fosterMcCulloch(e.age) !== 1.0;\n          default:\n            checkExhausted(this.props.ageCoefficients);\n            return true;\n        }\n      });\n    }\n\n    const results = getAllRankings(\n      entries,\n      this.props.formula,\n      this.props.ageCoefficients,\n      this.props.combineSleevesAndWraps,\n      this.props.inKg,\n      this.props.meetDate\n    );\n\n    let categoryCards = [];\n    for (let i = 0; i < results.length; i++) {\n      const panel = this.renderCategoryResults(results[i], i);\n      if (panel !== null) {\n        categoryCards.push(panel);\n      }\n    }\n\n    return <div>{categoryCards}</div>;\n  }\n}\n\nconst mapStateToProps = (state: GlobalState, ownProps: OwnProps): StateProps => {\n  const day = Number(ownProps.day);\n  let entries = state.registration.entries;\n  if (day > 0) {\n    entries = entries.filter(e => e.day === day);\n  }\n\n  return {\n    inKg: state.meet.inKg,\n    meetName: state.meet.name,\n    meetDate: state.meet.date,\n    formula: state.meet.formula,\n    combineSleevesAndWraps: state.meet.combineSleevesAndWraps,\n    lengthDays: state.meet.lengthDays,\n    weightClassesKgMen: state.meet.weightClassesKgMen,\n    weightClassesKgWomen: state.meet.weightClassesKgWomen,\n    weightClassesKgMx: state.meet.weightClassesKgMx,\n    language: state.language,\n    entries: entries\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ByPoints);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// This code allows calculating team points for the IrishPF.\n// The calculation is as follows:\n//  For each category, the team of the first place lifter gets 3 points.\n//  For each category, the team of any second place lifter gets 2 points.\n//  For each category, the team of any third place lifter gets 1 point.\n\nimport { Entry, Event } from \"../types/dataTypes\";\nimport { getFinalResults } from \"./divisionPlace\";\nimport { getFinalEventTotalKg } from \"./entry\";\n\nexport type Place = number | \"DQ\";\n\n// Wraps up all the information for a team in one place.\nexport type TeamResults = {\n  team: string;\n  cumulativePoints: number;\n};\n\n// Constructor.\nconst makeTeamResults = (team: string): TeamResults => {\n  return {\n    team: team,\n    cumulativePoints: 0\n  };\n};\n\n// Helper function to accumulate points and stuff in the team map.\nconst accumulate = (\n  teamMap: Map<string, TeamResults>,\n  orderedEntries: Array<Entry>,\n  event: Event,\n  index: number\n): void => {\n  if (index >= 3) return; // Only count first three places.\n  if (index >= orderedEntries.length) return;\n\n  // Don't count lifters without a team.\n  const entry = orderedEntries[index];\n  if (!entry.team) return;\n\n  // Don't count DQ lifters.\n  if (getFinalEventTotalKg(entry, event) <= 0) return;\n\n  // Assign points! The object gets mutated directly, no need to update the map.\n  let results = teamMap.get(entry.team);\n  if (results) {\n    if (index === 0) results.cumulativePoints += 3;\n    else if (index === 1) results.cumulativePoints += 2;\n    else if (index === 2) results.cumulativePoints += 1;\n  }\n};\n\nexport const getFinalTeamResults = (\n  entries: Array<Entry>,\n  weightClassesKgMen: Array<number>,\n  weightClassesKgWomen: Array<number>,\n  weightClassesKgMx: Array<number>,\n  combineSleevesAndWraps: boolean\n): Array<TeamResults> => {\n  let results = getFinalResults(\n    entries,\n    weightClassesKgMen,\n    weightClassesKgWomen,\n    weightClassesKgMx,\n    combineSleevesAndWraps\n  );\n\n  // Make a map of Team to TeamResults.\n  // This ensures that every team is already in the map, simplifying code below.\n  let teamMap = new Map();\n  for (let i = 0; i < entries.length; ++i) {\n    const entry = entries[i];\n    if (entry.team && !teamMap.has(entry.team)) {\n      teamMap.set(entry.team, makeTeamResults(entry.team));\n    }\n  }\n\n  // For each Category, award points to designated teams, if any.\n  for (let i = 0; i < results.length; ++i) {\n    const catResults = results[i];\n    const event = catResults.category.event;\n    const orderedEntries = catResults.orderedEntries;\n\n    accumulate(teamMap, orderedEntries, event, 0);\n    accumulate(teamMap, orderedEntries, event, 1);\n    accumulate(teamMap, orderedEntries, event, 2);\n  }\n\n  // Return a sorted array by cumulativePoints.\n  let teamResults: Array<TeamResults> = [];\n  for (let [key, obj] of teamMap) {\n    teamResults.push(obj);\n  }\n\n  // Sort by cumulativePoints, higher points first.\n  teamResults.sort((a, b) => {\n    return b.cumulativePoints - a.cumulativePoints;\n  });\n\n  return teamResults;\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Displays the results by team.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Card from \"react-bootstrap/Card\";\nimport Table from \"react-bootstrap/Table\";\n\nimport { getFinalTeamResults } from \"../../logic/teamPlace\";\nimport { getWeightClassStr, getWeightClassLbsStr, wtclsStrKg2Lbs } from \"../../reducers/meetReducer\";\nimport {\n  getBest5SquatKg,\n  getBest5BenchKg,\n  getBest5DeadliftKg,\n  getFinalEventTotalKg,\n  entryHasLifted\n} from \"../../logic/entry\";\nimport { kg2lbs, displayWeight, displayPoints, displayNumber } from \"../../logic/units\";\n\nimport { getString, localizeEquipment, localizeEvent, localizeWeightClassStr } from \"../../logic/strings\";\nimport { getPoints } from \"../../logic/coefficients/coefficients\";\n\nimport { Category } from \"../../logic/divisionPlace\";\nimport { TeamResults } from \"../../logic/teamPlace\";\nimport { Entry, Formula, Language, Sex } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { checkExhausted } from \"../../types/utils\";\n\ninterface StateProps {\n  inKg: boolean;\n  showAlternateUnits: boolean;\n  meetName: string;\n  formula: Formula;\n  combineSleevesAndWraps: boolean;\n  lengthDays: number;\n  weightClassesKgMen: Array<number>;\n  weightClassesKgWomen: Array<number>;\n  weightClassesKgMx: Array<number>;\n  language: Language;\n  entries: Array<Entry>;\n}\n\ninterface OwnProps {\n  day: string | number; // Really a number, 0 meaning \"all\".\n}\n\ntype Props = StateProps & OwnProps;\n\nconst mapSexToClasses = (sex: Sex, props: Props): Array<number> => {\n  switch (sex) {\n    case \"M\":\n      return props.weightClassesKgMen;\n    case \"F\":\n      return props.weightClassesKgWomen;\n    case \"Mx\":\n      return props.weightClassesKgMx;\n    default:\n      checkExhausted(sex);\n      return props.weightClassesKgMen;\n  }\n};\n\nclass ByTeam extends React.Component<Props> {\n  render() {\n    const language = this.props.language;\n\n    const results = getFinalTeamResults(\n      this.props.entries,\n      this.props.weightClassesKgMen,\n      this.props.weightClassesKgWomen,\n      this.props.weightClassesKgMx,\n      this.props.combineSleevesAndWraps\n    );\n\n    let rows = [];\n    for (let i = 0; i < results.length; ++i) {\n      const teamResults = results[i];\n      rows.push(\n        <tr>\n          <td>{teamResults.cumulativePoints > 0 ? i + 1 : \"\"}</td>\n          <td>{teamResults.team}</td>\n          <td>{teamResults.cumulativePoints}</td>\n        </tr>\n      );\n    }\n\n    return (\n      <div>\n        <Card>\n          <Card.Header>Results by Team</Card.Header>\n          <Card.Body>\n            <Table hover size=\"sm\">\n              <thead>\n                <tr>\n                  <th>{getString(\"lifting.column-place\", language)}</th>\n                  <th>Club</th>\n                  <th>{getString(\"lifting.column-finalpoints\", language)}</th>\n                </tr>\n              </thead>\n              <tbody>{rows}</tbody>\n            </Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState, ownProps: OwnProps): StateProps => {\n  const day = Number(ownProps.day);\n  let entries = state.registration.entries;\n  if (day > 0) {\n    entries = entries.filter(e => e.day === day);\n  }\n\n  return {\n    inKg: state.meet.inKg,\n    showAlternateUnits: state.meet.showAlternateUnits,\n    meetName: state.meet.name,\n    formula: state.meet.formula,\n    combineSleevesAndWraps: state.meet.combineSleevesAndWraps,\n    lengthDays: state.meet.lengthDays,\n    weightClassesKgMen: state.meet.weightClassesKgMen,\n    weightClassesKgWomen: state.meet.weightClassesKgWomen,\n    weightClassesKgMx: state.meet.weightClassesKgMx,\n    language: state.language,\n    entries: entries\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ByTeam);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Exports data to a CSV format easily importable by OpenPowerlifting.\n\nimport { csvString, Csv } from \"./csv\";\nimport { getFinalResults } from \"../divisionPlace\";\nimport { wtclsStrKg2Lbs } from \"../../reducers/meetReducer\";\nimport {\n  getAge,\n  getBest3SquatKg,\n  getBest3BenchKg,\n  getBest3DeadliftKg,\n  getFinalEventTotalKg,\n  entryHasLifted,\n  MAX_ATTEMPTS\n} from \"../entry\";\nimport { displayWeight, kg2lbs } from \"../units\";\n\nimport { Category, CategoryResults } from \"../divisionPlace\";\nimport { Entry, Equipment } from \"../../types/dataTypes\";\nimport { GlobalState, MeetState } from \"../../types/stateTypes\";\nimport { checkExhausted } from \"../../types/utils\";\n\nconst makeMeetCsv = (meet: MeetState): Csv => {\n  let csv = new Csv();\n  csv.fieldnames = [\"Federation\", \"Date\", \"MeetCountry\", \"MeetState\", \"MeetTown\", \"MeetName\", \"Formula\"];\n\n  let row: Array<string> = [\n    csvString(meet.federation),\n    csvString(meet.date),\n    csvString(meet.country),\n    csvString(meet.state),\n    csvString(meet.city),\n    csvString(meet.name),\n    csvString(meet.formula)\n  ];\n  csv.rows = [row];\n\n  // An optional RuleSet column may be provided.\n  if (meet.combineSleevesAndWraps === true) {\n    csv.fieldnames.push(\"RuleSet\");\n    csv.rows[0].push(\"CombineRawAndWraps\");\n  }\n\n  return csv;\n};\n\nconst makeEntriesCsv = (state: GlobalState): Csv => {\n  const inKg: boolean = state.meet.inKg;\n  const unit: string = inKg ? \"Kg\" : \"LBS\";\n\n  let csv = new Csv();\n\n  let squatFieldnames = [];\n  for (let i = 0; i < MAX_ATTEMPTS; i++) {\n    squatFieldnames.push(\"Squat\" + (i + 1) + unit);\n  }\n  squatFieldnames.push(\"Best3Squat\" + unit);\n\n  let benchFieldnames = [];\n  for (let i = 0; i < MAX_ATTEMPTS; i++) {\n    benchFieldnames.push(\"Bench\" + (i + 1) + unit);\n  }\n  benchFieldnames.push(\"Best3Bench\" + unit);\n\n  let deadliftFieldnames = [];\n  for (let i = 0; i < MAX_ATTEMPTS; i++) {\n    deadliftFieldnames.push(\"Deadlift\" + (i + 1) + unit);\n  }\n  deadliftFieldnames.push(\"Best3Deadlift\" + unit);\n\n  csv.fieldnames = Array.prototype.concat(\n    [\"Place\", \"Name\", \"Instagram\", \"Sex\", \"BirthDate\", \"Age\", \"Country\", \"State\"],\n    [\"Equipment\", \"Division\", \"Bodyweight\" + unit, \"WeightClass\" + unit],\n    squatFieldnames,\n    benchFieldnames,\n    deadliftFieldnames,\n    [\"Total\" + unit, \"Event\", \"Team\"]\n  );\n\n  const results: Array<CategoryResults> = getFinalResults(\n    state.registration.entries,\n    state.meet.weightClassesKgMen,\n    state.meet.weightClassesKgWomen,\n    state.meet.weightClassesKgMx,\n    state.meet.combineSleevesAndWraps\n  );\n\n  for (let i = 0; i < results.length; i++) {\n    const { category, orderedEntries } = results[i];\n\n    for (let j = 0; j < orderedEntries.length; j++) {\n      addEntriesRow(csv, category, inKg, state.meet.date, orderedEntries[j], j);\n    }\n  }\n\n  return csv;\n};\n\nconst standardizeEquipment = (eq: Equipment): string => {\n  switch (eq) {\n    case \"Bare\":\n      return \"Raw\";\n    case \"Sleeves\":\n      return \"Raw\";\n    case \"Wraps\":\n      return \"Wraps\";\n    case \"Single-ply\":\n      return \"Single-ply\";\n    case \"Multi-ply\":\n      return \"Multi-ply\";\n    default:\n      checkExhausted(eq);\n      return \"Raw\";\n  }\n};\n\nconst addEntriesRow = (csv: Csv, category: Category, inKg: boolean, meetDate: string, entry: Entry, index: number) => {\n  const unit: string = inKg ? \"Kg\" : \"LBS\";\n  const finalEventTotalKg = getFinalEventTotalKg(entry, category.event);\n\n  // Helper functions to keep things one-liners below. Handles Kg/Lbs conversion.\n  const weight = (kg: number): string => {\n    return displayWeight(inKg ? kg : kg2lbs(kg));\n  };\n  const wtcls = (cls: string): string => {\n    return inKg ? cls : wtclsStrKg2Lbs(cls);\n  };\n\n  // Initialize an empty row with all columns available.\n  let row: Array<string> = Array(csv.fieldnames.length).fill(\"\");\n\n  if (!entryHasLifted(entry)) {\n    row[csv.index(\"Place\")] = \"NS\"; // No-Show.\n  } else {\n    row[csv.index(\"Place\")] = finalEventTotalKg === 0 ? \"DQ\" : csvString(index + 1);\n  }\n\n  row[csv.index(\"Name\")] = csvString(entry.name);\n  row[csv.index(\"Instagram\")] = csvString(entry.instagram);\n  row[csv.index(\"Sex\")] = csvString(entry.sex);\n  row[csv.index(\"BirthDate\")] = csvString(entry.birthDate);\n  row[csv.index(\"Age\")] = csvString(getAge(entry, meetDate));\n  row[csv.index(\"Country\")] = csvString(entry.country);\n  row[csv.index(\"State\")] = csvString(entry.state);\n  row[csv.index(\"Equipment\")] = csvString(standardizeEquipment(entry.equipment));\n  row[csv.index(\"Division\")] = csvString(category.division);\n  row[csv.index(\"Bodyweight\" + unit)] = csvString(weight(entry.bodyweightKg));\n  row[csv.index(\"WeightClass\" + unit)] = csvString(wtcls(category.weightClassStr));\n  row[csv.index(\"Total\" + unit)] = csvString(weight(finalEventTotalKg));\n  row[csv.index(\"Event\")] = csvString(category.event);\n  row[csv.index(\"Team\")] = csvString(entry.team);\n\n  // Squat.\n  if (category.event.includes(\"S\")) {\n    row[csv.index(\"Best3Squat\" + unit)] = csvString(weight(getBest3SquatKg(entry)));\n    for (let i = 0; i < MAX_ATTEMPTS; i++) {\n      const field = \"Squat\" + (i + 1) + unit;\n      row[csv.index(field)] = csvString(weight(entry.squatKg[i] * entry.squatStatus[i]));\n    }\n  }\n\n  // Bench.\n  if (category.event.includes(\"B\")) {\n    row[csv.index(\"Best3Bench\" + unit)] = csvString(weight(getBest3BenchKg(entry)));\n    for (let i = 0; i < MAX_ATTEMPTS; i++) {\n      const field = \"Bench\" + (i + 1) + unit;\n      row[csv.index(field)] = csvString(weight(entry.benchKg[i] * entry.benchStatus[i]));\n    }\n  }\n\n  // Deadlift.\n  if (category.event.includes(\"D\")) {\n    row[csv.index(\"Best3Deadlift\" + unit)] = csvString(weight(getBest3DeadliftKg(entry)));\n    for (let i = 0; i < MAX_ATTEMPTS; i++) {\n      const field = \"Deadlift\" + (i + 1) + unit;\n      row[csv.index(field)] = csvString(weight(entry.deadliftKg[i] * entry.deadliftStatus[i]));\n    }\n  }\n\n  csv.rows.push(row);\n};\n\nexport const exportAsOplCsv = (state: GlobalState): string => {\n  const meetCsv: Csv = makeMeetCsv(state.meet);\n\n  let entriesCsv: Csv = makeEntriesCsv(state);\n  entriesCsv.removeEmptyColumns();\n\n  const versionStr = \"OPL Format v1,Submit by email:,issues@openpowerlifting.org\";\n\n  return versionStr + \"\\n\\n\" + meetCsv.toString() + \"\\n\" + entriesCsv.toString();\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Exports data to a spreadsheet format used by the USAPL.\n\nimport { csvString, Csv } from \"./csv\";\nimport { getFinalResults } from \"../divisionPlace\";\nimport { displayWeight } from \"../units\";\n\nimport { Category, CategoryResults } from \"../divisionPlace\";\nimport { Entry, Event } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { checkExhausted } from \"../../types/utils\";\n\n// Translates the event from our format to the NextLifter format.\nconst translateEvent = (ev: Event): string => {\n  switch (ev) {\n    // Variants present in the NextLifter software.\n    case \"SBD\":\n      return \"PL\";\n    case \"BD\":\n      return \"PP\";\n    case \"S\":\n      return \"SQ\";\n    case \"B\":\n      return \"BP\";\n    case \"D\":\n      return \"DL\";\n\n    // These variants aren't selectable in NextLifter, so the USAPL doesn't use them.\n    case \"SB\":\n      return \"SB\";\n    case \"SD\":\n      return \"SD\";\n    default:\n      checkExhausted(ev);\n      return ev;\n  }\n};\n\n// Converts the ISO8601 entry.birthDate to USAPL MM/DD/YYYY format.\nconst makeBirthDate = (entry: Entry): string => {\n  if (entry.birthDate === undefined || entry.birthDate === \"\") {\n    return \"\";\n  }\n  let [year, month, day]: Array<string> = entry.birthDate.split(\"-\");\n  return month + \"/\" + day + \"/\" + year;\n};\n\n// Given an Entry and its index in the CategoryResults.orderedEntries,\n// render all that information as a one-liner CSV string.\nconst addDataRow = (csv: Csv, category: Category, entry: Entry) => {\n  const hasSquat: boolean = category.event.includes(\"S\");\n  const hasBench: boolean = category.event.includes(\"B\");\n  const hasDL: boolean = category.event.includes(\"D\");\n\n  // Initialize an empty row with all columns available.\n  let row: Array<string> = Array(csv.fieldnames.length).fill(\"\");\n\n  row[csv.index(\"Name\")] = csvString(entry.name);\n  row[csv.index(\"Team\")] = csvString(entry.team);\n  row[csv.index(\"Div\")] = csvString(category.division);\n  row[csv.index(\"Bwt - kg\")] = csvString(displayWeight(entry.bodyweightKg));\n  row[csv.index(\"IPF Wt Cls\")] = csvString(category.weightClassStr);\n  row[csv.index(\"DOB\")] = csvString(makeBirthDate(entry));\n  row[csv.index(\"Squat 1\")] = csvString(displayWeight(hasSquat ? entry.squatKg[0] * entry.squatStatus[0] : 0));\n  row[csv.index(\"Squat 2\")] = csvString(displayWeight(hasSquat ? entry.squatKg[1] * entry.squatStatus[1] : 0));\n  row[csv.index(\"Squat 3\")] = csvString(displayWeight(hasSquat ? entry.squatKg[2] * entry.squatStatus[2] : 0));\n  row[csv.index(\"Bench 1\")] = csvString(displayWeight(hasBench ? entry.benchKg[0] * entry.benchStatus[0] : 0));\n  row[csv.index(\"Bench 2\")] = csvString(displayWeight(hasBench ? entry.benchKg[1] * entry.benchStatus[1] : 0));\n  row[csv.index(\"Bench 3\")] = csvString(displayWeight(hasBench ? entry.benchKg[2] * entry.benchStatus[2] : 0));\n  row[csv.index(\"Deadlift 1\")] = csvString(displayWeight(hasDL ? entry.deadliftKg[0] * entry.deadliftStatus[0] : 0));\n  row[csv.index(\"Deadlift 2\")] = csvString(displayWeight(hasDL ? entry.deadliftKg[1] * entry.deadliftStatus[1] : 0));\n  row[csv.index(\"Deadlift 3\")] = csvString(displayWeight(hasDL ? entry.deadliftKg[2] * entry.deadliftStatus[2] : 0));\n  row[csv.index(\"Event\")] = csvString(translateEvent(category.event));\n  row[csv.index(\"State\")] = csvString(entry.state);\n  row[csv.index(\"MemberID\")] = csvString(entry.memberId);\n  // TODO: Drug Test.\n\n  csv.rows.push(row);\n};\n\nexport const exportAsUSAPLCsv = (state: GlobalState): string => {\n  let csv = new Csv();\n  csv.fieldnames = [\n    \"Name\",\n    \"Team\",\n    \"Div\", // Division.\n    \"Bwt - kg\", // Bodyweight, kg.\n    \"IPF Wt Cls\", // IPF Weight Class (SHW as \"120+\", same format).\n    \"DOB\", // Date of Birth, in MM/DD/YYYY format.\n    \"Squat 1\", // Units unspecified, but seem to be kg.\n    \"Squat 2\",\n    \"Squat 3\",\n    \"Bench 1\",\n    \"Bench 2\",\n    \"Bench 3\",\n    \"Deadlift 1\",\n    \"Deadlift 2\",\n    \"Deadlift 3\",\n    \"Event\", // In NextLifter format (PL, BO, etc.).\n    \"State\", // USA state of residence of the lifter, as abbreviation.\n    \"MemberID\",\n    \"Drug Test\" // \"Y\" if a test was performed, blank otherwise.\n  ];\n\n  const results: Array<CategoryResults> = getFinalResults(\n    state.registration.entries,\n    state.meet.weightClassesKgMen,\n    state.meet.weightClassesKgWomen,\n    state.meet.weightClassesKgMx,\n    state.meet.combineSleevesAndWraps\n  );\n\n  for (let i = 0; i < results.length; i++) {\n    const { category, orderedEntries } = results[i];\n\n    for (let j = 0; j < orderedEntries.length; j++) {\n      addDataRow(csv, category, orderedEntries[j]);\n    }\n  }\n\n  return csv.toString();\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// The parent component of the Results page, contained by the ResultsContainer.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport FormControl from \"react-bootstrap/FormControl\";\n\nimport { saveAs } from \"file-saver\";\n\nimport ByDivision from \"./ByDivision\";\nimport ByPoints from \"./ByPoints\";\nimport ByTeam from \"./ByTeam\";\nimport ErrorModal from \"../ErrorModal\";\n\nimport { mergePlatform } from \"../../actions/registrationActions\";\n\nimport { liftingPresentOnPlatform, getWhetherPlatformsHaveLifted } from \"../../logic/entry\";\nimport { getString } from \"../../logic/strings\";\nimport { exportAsOplCsv } from \"../../logic/export/oplcsv\";\nimport { exportAsUSAPLCsv } from \"../../logic/export/usapl\";\n\nimport { Entry, Language } from \"../../types/dataTypes\";\nimport { GlobalState } from \"../../types/stateTypes\";\n\nimport styles from \"./ResultsView.module.scss\";\nimport { FormControlTypeHack, checkExhausted, assertString } from \"../../types/utils\";\nimport { Dispatch } from \"redux\";\nconst marginStyle = { margin: \"0 20px 0 20px\" };\n\ninterface StateProps {\n  global: GlobalState;\n  language: Language;\n}\n\ninterface DispatchProps {\n  mergePlatform: (day: number, platform: number, platformEntries: Array<Entry>) => void;\n}\n\ntype Props = StateProps & DispatchProps;\ntype ResultsBy = \"Division\" | \"Points\" | \"Team\" | \"BestMastersLifter\" | \"BestJuniorsLifter\";\n\ninterface InternalState {\n  day: number;\n  by: ResultsBy;\n  // Controls the ErrorModal popup. Shown when error !== \"\".\n  error: string;\n}\n\n// FIXME: Unfortunate use of globals :/ I don't have a better idea.\n// This is to pass information from the merge button click handler to the\n// file loader click handler.\nlet globalMergeDay: number = 0;\nlet globalMergePlatform: number = 0;\n\nclass ResultsView extends React.Component<Props, InternalState> {\n  constructor(props: Props) {\n    super(props);\n\n    this.handleDayChange = this.handleDayChange.bind(this);\n    this.handleByChange = this.handleByChange.bind(this);\n    this.handleExportAsOplCsvClick = this.handleExportAsOplCsvClick.bind(this);\n    this.handleExportAsUSAPLCsvClick = this.handleExportAsUSAPLCsvClick.bind(this);\n    this.handleExportPlatformClick = this.handleExportPlatformClick.bind(this);\n    this.handleMergePlatformClick = this.handleMergePlatformClick.bind(this);\n    this.handleLoadFileInput = this.handleLoadFileInput.bind(this);\n    this.closeErrorModal = this.closeErrorModal.bind(this);\n    this.makePlatformMergeButtons = this.makePlatformMergeButtons.bind(this);\n\n    this.state = {\n      day: 0, // Meaning \"all\". Flow complained about mixing numbers and strings.\n      by: \"Division\",\n      error: \"\"\n    };\n  }\n\n  makeDayOptions = () => {\n    const language = this.props.language;\n    let options = [\n      <option key={\"all\"} value={0}>\n        {getString(\"results.all-days-together\", language)}\n      </option>\n    ];\n\n    const justDayTemplate = getString(\"results.just-day-n\", language);\n    for (let day = 1; day <= this.props.global.meet.lengthDays; day++) {\n      options.push(\n        <option key={day} value={day}>\n          {justDayTemplate.replace(\"{N}\", String(day))}\n        </option>\n      );\n    }\n    return options;\n  };\n\n  handleDayChange = (event: React.FormEvent<FormControlTypeHack>) => {\n    const day = Number(event.currentTarget.value);\n    if (this.state.day !== day) {\n      this.setState({ day: day });\n    }\n  };\n\n  handleByChange = (event: React.FormEvent<FormControlTypeHack>) => {\n    const by = event.currentTarget.value;\n    if (this.state.by !== by && assertString(by) && assertValidResultsBy(by)) {\n      this.setState({ by: by });\n    }\n  };\n\n  handleExportAsOplCsvClick = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    // TODO: Share this logic with HomeContainer.\n    let meetname = this.props.global.meet.name;\n    if (meetname === \"\") {\n      meetname = getString(\"common.unnamed-filename\", this.props.language);\n    }\n    meetname = meetname.replace(/ /g, \"-\");\n\n    const csv: string = exportAsOplCsv(this.props.global);\n    const blob = new Blob([csv], { type: \"text/csv;charset=utf-8\" });\n    saveAs(blob, meetname + \".opl.csv\");\n  };\n\n  handleExportAsUSAPLCsvClick = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    // TODO: Share this logic with handleExportAsOplCsvClick.\n    let meetname = this.props.global.meet.name;\n    if (meetname === \"\") {\n      meetname = getString(\"common.unnamed-filename\", this.props.language);\n    }\n    meetname = meetname.replace(/ /g, \"-\");\n\n    const csv: string = exportAsUSAPLCsv(this.props.global);\n    const blob = new Blob([csv], { type: \"text/csv;charset=utf-8\" });\n    saveAs(blob, meetname + \".USAPL.csv\");\n  };\n\n  handleExportPlatformClick = (day: number, platform: number, event: Object) => {\n    // TODO: Share this logic with handleExportAsOplCsvClick.\n    const language = this.props.language;\n    let meetname = this.props.global.meet.name;\n    if (meetname === \"\") {\n      meetname = getString(\"common.unnamed-filename\", language);\n    }\n    meetname = meetname.replace(/ /g, \"-\");\n\n    const template = getString(\"results.platform-export-filename\", language);\n    const exportname = template\n      .replace(\"{day}\", String(day))\n      .replace(\"{platform}\", String(platform))\n      .replace(\"{meetName}\", meetname);\n\n    const state = JSON.stringify(this.props.global);\n    const blob = new Blob([state], { type: \"application/json;charset=utf-8\" });\n    saveAs(blob, exportname + \".export.openlifter\");\n  };\n\n  // The file input is hidden, and we want to use a button to activate it.\n  // This event handler makes a proxy call to the *real* event handler.\n  handleMergePlatformClick = (day: number, platform: number, event: Object) => {\n    const loadHelper = document.getElementById(\"loadhelper\");\n    if (loadHelper !== null) {\n      globalMergeDay = day;\n      globalMergePlatform = platform;\n      loadHelper.click();\n    }\n  };\n\n  // Called when a file is selected for merging platform data.\n  handleLoadFileInput = () => {\n    const loadHelper = document.getElementById(\"loadhelper\");\n    if (loadHelper === null || !(loadHelper instanceof HTMLInputElement) || loadHelper.files === null) {\n      return;\n    }\n\n    // Get the (day, platform) from global state.\n    const day: number = globalMergeDay;\n    const platform: number = globalMergePlatform;\n\n    // Remember the props in the onload() closure.\n    let props = this.props;\n    const language = props.language;\n\n    let rememberThis = this;\n    const selectedFile = loadHelper.files[0];\n    let reader = new FileReader();\n    reader.onload = () => {\n      let error: string | null = null;\n\n      // If this occurs, we've introduced a bug when initiating the file reader, or the read failed.\n      // Add this check as a guard so the typing is narrowed\n      if (typeof reader.result !== \"string\") {\n        window.alert(getString(\"error.internal-error\", language));\n        return;\n      }\n\n      try {\n        let obj: GlobalState = JSON.parse(reader.result);\n\n        // stateVersion must match.\n        if (obj.versions.stateVersion !== props.global.versions.stateVersion) {\n          const e = getString(\"error.version-mismatch\", language);\n          error = e\n            .replace(\"{thisVersion}\", props.global.versions.stateVersion)\n            .replace(\"{otherVersion}\", obj.versions.stateVersion);\n        } else if (obj.meet.name !== props.global.meet.name) {\n          // The meet name must match, for sanity checking.\n          const e = getString(\"error.meetname-mismatch\", language);\n          error = e.replace(\"{thisName}\", props.global.meet.name).replace(\"{otherName}\", obj.meet.name);\n        } else if (!liftingPresentOnPlatform(obj.registration.entries, day, platform)) {\n          // The meet must actually contain data from the given (day, platform).\n          const e = getString(\"error.no-platform-data\", language);\n          error = e.replace(\"{day}\", String(day)).replace(\"{platform}\", String(platform));\n        } else {\n          // Sanity checks passed: fire off a mergePlatform action!\n          const platformEntries = obj.registration.entries.filter(e => {\n            return e.day === day && e.platform === platform;\n          });\n          props.mergePlatform(day, platform, platformEntries);\n        }\n      } catch (err) {\n        error = getString(\"error.not-json\", language);\n      }\n\n      if (typeof error === \"string\") {\n        rememberThis.setState({ error: error });\n      }\n    };\n    reader.readAsText(selectedFile);\n  };\n\n  closeErrorModal = () => {\n    this.setState({ error: \"\" });\n  };\n\n  makePlatformMergeButtons = () => {\n    // Array accessed by platformsHaveLifted[day-1][platform-1].\n    const platformsHaveLifted: Array<Array<boolean>> = getWhetherPlatformsHaveLifted(\n      this.props.global.meet.platformsOnDays,\n      this.props.global.registration.entries\n    );\n\n    const language = this.props.language;\n    const combineTemplate = getString(\"results.combine-platforms-header\", language);\n    const mergeTemplate = getString(\"results.merge-platform\", language);\n    const exportTemplate = getString(\"results.export-platform\", language);\n\n    let forms = [];\n    const numDays = Math.min(this.props.global.meet.lengthDays, platformsHaveLifted.length);\n\n    for (let i = 0; i < numDays; i++) {\n      const liftedOnDay = platformsHaveLifted[i];\n\n      let buttons = [];\n      for (let j = 0; j < liftedOnDay.length; j++) {\n        const lifted = liftedOnDay[j];\n        const variant = lifted === true ? \"success\" : \"warning\";\n        const marginStyle = j > 0 ? { marginLeft: \"14px\" } : undefined;\n\n        const actionTemplate = lifted === true ? exportTemplate : mergeTemplate;\n        buttons.push(\n          <Button\n            key={i + \"-\" + j}\n            variant={variant}\n            style={marginStyle}\n            onClick={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n              lifted === true\n                ? this.handleExportPlatformClick(i + 1, j + 1, e)\n                : this.handleMergePlatformClick(i + 1, j + 1, e);\n            }}\n          >\n            {actionTemplate.replace(\"{day}\", String(i + 1)).replace(\"{platform}\", String(j + 1))}\n          </Button>\n        );\n      }\n\n      forms.push(\n        <div key={i}>\n          <div>{combineTemplate.replace(\"{N}\", String(i + 1))}</div>\n          <div>{buttons}</div>\n          {i < platformsHaveLifted.length - 1 ? <br /> : null}\n        </div>\n      );\n    }\n\n    return forms;\n  };\n\n  render() {\n    const language = this.props.language;\n    let results = null;\n    switch (this.state.by) {\n      case \"Division\":\n        results = <ByDivision key={this.state.day} day={this.state.day} />;\n        break;\n      case \"Points\":\n        results = (\n          <ByPoints key={this.state.day} day={this.state.day} ageCoefficients=\"None\" agePointsCategory=\"BestLifter\" />\n        );\n        break;\n      case \"Team\":\n        results = <ByTeam key={this.state.day} day={this.state.day} />;\n        break;\n      case \"BestMastersLifter\":\n        results = (\n          <ByPoints\n            key={this.state.day}\n            day={this.state.day}\n            ageCoefficients={this.props.global.meet.ageCoefficients}\n            agePointsCategory=\"BestMastersLifter\"\n          />\n        );\n        break;\n      case \"BestJuniorsLifter\":\n        results = (\n          <ByPoints\n            key={this.state.day}\n            day={this.state.day}\n            ageCoefficients={this.props.global.meet.ageCoefficients}\n            agePointsCategory=\"BestJuniorsLifter\"\n          />\n        );\n        break;\n      default:\n        break;\n    }\n\n    let daySelector = null;\n    if (this.props.global.meet.lengthDays > 1) {\n      daySelector = (\n        <FormControl\n          defaultValue={this.state.day.toString()}\n          as=\"select\"\n          onChange={this.handleDayChange}\n          className={`custom-select ${styles.dropdown}`}\n        >\n          {this.makeDayOptions()}\n        </FormControl>\n      );\n    }\n\n    return (\n      <div style={marginStyle}>\n        <ErrorModal\n          error={this.state.error}\n          title={getString(\"results.merge-error-title\", language)}\n          show={this.state.error !== \"\"}\n          close={this.closeErrorModal}\n        />\n\n        <Card border=\"primary\">\n          <Card.Header>\n            <FormattedMessage id=\"results.merge-platforms-card-header\" defaultMessage=\"Merge Platforms\" />\n          </Card.Header>\n          <Card.Body>\n            <div style={{ fontWeight: \"bold\" }}>\n              <FormattedMessage\n                id=\"results.merge-platforms-warning\"\n                defaultMessage=\"Merging platforms will overwrite data. Please save before merging.\"\n              />\n            </div>\n            <br />\n            {this.makePlatformMergeButtons()}\n          </Card.Body>\n        </Card>\n\n        <Card>\n          <Card.Header>\n            <FormattedMessage id=\"results.export-results-card-header\" defaultMessage=\"Export Official Results\" />\n          </Card.Header>\n          <Card.Body>\n            <Button onClick={this.handleExportAsOplCsvClick}>\n              <FormattedMessage\n                id=\"results.export-openpowerlifting-button\"\n                defaultMessage=\"Export for OpenPowerlifting\"\n              />\n            </Button>\n\n            <Button onClick={this.handleExportAsUSAPLCsvClick} style={{ marginLeft: \"14px\" }}>\n              <FormattedMessage id=\"results.export-usapl-button\" defaultMessage=\"Export for USAPL\" />\n            </Button>\n          </Card.Body>\n        </Card>\n\n        <Card border=\"info\">\n          <Card.Header>\n            <FormattedMessage id=\"results.results-card-header\" defaultMessage=\"Results For...\" />\n          </Card.Header>\n          <Card.Body className={styles.controlCard}>\n            {daySelector}\n\n            <FormControl\n              defaultValue={this.state.by}\n              as=\"select\"\n              onChange={this.handleByChange}\n              className={`custom-select ${styles.dropdown}`}\n              style={{ marginLeft: \"14px\" }}\n            >\n              <option value=\"Division\">{getString(\"results.by-division\", language)}</option>\n              <option value=\"Team\">By Team</option>\n              {this.props.global.meet.ageCoefficients !== \"None\" ? (\n                <option value=\"BestJuniorsLifter\">{getString(\"results.best-juniors-lifter\", language)}</option>\n              ) : null}\n              {this.props.global.meet.ageCoefficients !== \"None\" ? (\n                <option value=\"BestMastersLifter\">{getString(\"results.best-masters-lifter\", language)}</option>\n              ) : null}\n              <option value=\"Points\">{getString(\"results.best-lifter\", language)}</option>\n            </FormControl>\n          </Card.Body>\n        </Card>\n\n        {results}\n\n        <input\n          id=\"loadhelper\"\n          type=\"file\"\n          accept=\".openlifter,.openlifter.txt\"\n          style={{ display: \"none\" }}\n          onChange={this.handleLoadFileInput}\n        />\n      </div>\n    );\n  }\n}\n\nconst assertValidResultsBy = (value: string): value is ResultsBy => {\n  const resultsBy = value as ResultsBy;\n  switch (resultsBy) {\n    case \"BestJuniorsLifter\":\n    case \"BestMastersLifter\":\n    case \"Division\":\n    case \"Points\":\n    case \"Team\":\n      return true;\n    default:\n      checkExhausted(resultsBy);\n      throw new Error(`Expected a valid value for ResultsBy. Got \"${value}\"`);\n  }\n};\n\nconst mapStateToProps = (state: GlobalState): StateProps => {\n  return {\n    global: state,\n    language: state.language\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    mergePlatform: (day, platform, platformEntries) => dispatch(mergePlatform(day, platform, platformEntries))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ResultsView);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Container for the Results page.\n\nimport React from \"react\";\nimport ResultsView from \"../components/results/ResultsView\";\n\nclass ResultsContainer extends React.Component<{}> {\n  render() {\n    return <ResultsView />;\n  }\n}\n\nexport default ResultsContainer;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Common functions shared by the Randomize feature.\n\n// Generate a gibberish string, between 0-11 characters.\nexport const randomString = (): string => {\n  // Converts each digit to a value in base 36.\n  return Math.random()\n    .toString(36)\n    .substr(2);\n};\n\n// Generate a random integer between max and min, inclusive.\nexport const randomInt = (min: number, max: number) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\n// Generate a random floating-point number with a set number of fractional digits.\nexport const randomFixedPoint = (min: number, max: number, fixedPoints: number) => {\n  const power = Math.pow(10, fixedPoints);\n\n  // Construct an integer from [0, (max - min + 1) * 10^fixedPoints].\n  const k = Math.floor(Math.random() * (max - min + 1) * power);\n\n  // Translate it back to normal space.\n  return k / power + min;\n};\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Randomizes the Meet Setup state, for debugging.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Button from \"react-bootstrap/Button\";\n\nimport LocalizedString from \"../translations/LocalizedString\";\n\nimport { randomString, randomInt, randomFixedPoint } from \"./RandomizeHelpers\";\n\nimport {\n  setDivisions,\n  setFederation,\n  setLengthDays,\n  setMeetName,\n  setPlatformsOnDays,\n  setWeightClasses\n} from \"../../actions/meetSetupActions\";\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { Dispatch } from \"redux\";\nimport { Sex } from \"../../types/dataTypes\";\n\nconst NonsenseFederations = [\n  \"CTHULHU\",\n  \"USPLAWH\",\n  \"FIREFOX\",\n  \"PIZZAHUT\",\n  \"50% RAW\",\n  \"TODDLERS\",\n  \"COFFEE\",\n  \"THEBORG\",\n  \"LETITSNOW\"\n];\n\nconst NonsenseDivisions = [\"Masters\", \"Juniors\", \"Lawyers\", \"Infants\", \"Turtles\", \"Rabbits\"];\n\ntype Props = ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps>;\n\nclass RandomizeMeetSetupButton extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n    this.randomizeMeetSetup = this.randomizeMeetSetup.bind(this);\n  }\n\n  randomizeMeetSetup() {\n    // Set a gibberish MeetName.\n    // ==========================================\n    this.props.setMeetName(randomString() + randomString());\n\n    // Generate a nonsense federation.\n    // ==========================================\n    const fed = NonsenseFederations[randomInt(0, NonsenseFederations.length - 1)];\n    this.props.setFederation(fed);\n\n    // Generate nonsense weight classes.\n    // ==========================================\n    const numClassesMen = randomInt(5, 12);\n    const numClassesWomen = randomInt(4, 8);\n\n    let classesMen = [];\n    for (let i = 0; i < numClassesMen; i++) {\n      classesMen.push(randomFixedPoint(40, 145, 1));\n    }\n    classesMen = classesMen.sort((a, b) => Number(a) - Number(b));\n\n    let classesWomen = [];\n    for (let i = 0; i < numClassesWomen; i++) {\n      classesWomen.push(randomFixedPoint(35, 110, 1));\n    }\n    classesWomen = classesWomen.sort((a, b) => Number(a) - Number(b));\n\n    let classesMx = [];\n    for (let i = 0; i < numClassesWomen; i++) {\n      classesMx.push(randomFixedPoint(40, 120, 1));\n    }\n    classesMx = classesMx.sort((a, b) => Number(a) - Number(b));\n\n    this.props.setWeightClasses(\"M\", classesMen);\n    this.props.setWeightClasses(\"F\", classesWomen);\n    this.props.setWeightClasses(\"Mx\", classesMx);\n\n    // Generate nonsense days and platforms.\n    // ==========================================\n    const numDays = randomInt(1, 4);\n    this.props.setLengthDays(numDays);\n\n    for (let i = 0; i < numDays; i++) {\n      const day = i + 1;\n      const numPlatforms = randomInt(1, 2);\n      this.props.setPlatformsOnDays(day, numPlatforms);\n    }\n\n    // Generate nonsense divisions.\n    // ==========================================\n    const numDivisions = randomInt(1, 20);\n    let divisions = [];\n    for (let i = 0; i < numDivisions; i++) {\n      let div = NonsenseDivisions[randomInt(0, NonsenseDivisions.length - 1)];\n      if (Math.random() > 0.5) {\n        const age_lower = randomInt(1, 40);\n        const age_upper = randomInt(age_lower + 1, 99);\n        div = div + \" \" + String(age_lower) + \"-\" + String(age_upper);\n      }\n\n      // Disallow repeat divisions.\n      if (divisions.indexOf(div) === -1) {\n        divisions.push(div);\n      }\n    }\n    this.props.setDivisions(divisions);\n  }\n\n  render() {\n    return (\n      <Button onClick={this.randomizeMeetSetup}>\n        <LocalizedString id=\"nav.meet-setup\" />\n      </Button>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState) => ({\n  ...state\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    setDivisions: (divisions: Array<string>) => dispatch(setDivisions(divisions)),\n    setFederation: (federation: string) => dispatch(setFederation(federation)),\n    setLengthDays: (length: number) => dispatch(setLengthDays(length)),\n    setMeetName: (name: string) => dispatch(setMeetName(name)),\n    setPlatformsOnDays: (day: number, count: number) => dispatch(setPlatformsOnDays(day, count)),\n    setWeightClasses: (sex: Sex, classesKg: number[]) => dispatch(setWeightClasses(sex, classesKg))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RandomizeMeetSetupButton);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Randomizes the Registration page, for debugging.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\n\nimport Button from \"react-bootstrap/Button\";\n\nimport LocalizedString from \"../translations/LocalizedString\";\n\nimport { randomInt } from \"./RandomizeHelpers\";\nimport { newRegistration, deleteRegistration } from \"../../actions/registrationActions\";\n\nimport { GlobalState } from \"../../types/stateTypes\";\nimport { Event, Entry, Sex, Equipment, Flight } from \"../../types/dataTypes\";\n\nconst NonsenseFirstNames = [\n  \"Aragorn\",\n  \"Arwen\",\n  \"Aule\",\n  \"Balin\",\n  \"Beorn\",\n  \"Beregond\",\n  \"Bert\",\n  \"Bifur\",\n  \"Bilbo\",\n  \"Bofur\",\n  \"Bolg\",\n  \"Bombur\",\n  \"Boromir\",\n  \"Bregalad\",\n  \"Bullroarer\",\n  \"Bungo\",\n  \"Carc\",\n  \"Celeborn\",\n  \"Dain\",\n  \"Denethor\",\n  \"Dori\",\n  \"Dwalin\",\n  \"Elrohir\",\n  \"Elrond\",\n  \"Eomer\",\n  \"Eowyn\",\n  \"Este\",\n  \"Faramir\",\n  \"Fili\",\n  \"Fredegar\",\n  \"Frodo\",\n  \"Galadriel\",\n  \"Galion\",\n  \"Gandalf\",\n  \"Gimli\",\n  \"Gloin\",\n  \"Glorfindel\",\n  \"Golfimbul\",\n  \"Gollum\",\n  \"Gothmog\",\n  \"Grima\",\n  \"Imrahil\",\n  \"Kili\",\n  \"Legolas\",\n  \"Lorien\",\n  \"Mandos\",\n  \"Manwe\",\n  \"Melkor\",\n  \"Meriadoc\",\n  \"Nessa\",\n  \"Nienna\",\n  \"Nori\",\n  \"Oin\",\n  \"Ori\",\n  \"Orome\",\n  \"Peregrin\",\n  \"Pippin\",\n  \"Radagast\",\n  \"Roac\",\n  \"Samwise\",\n  \"Saruman\",\n  \"Sauron\",\n  \"Shelob\",\n  \"Smaug\",\n  \"Theoden\",\n  \"Thorin\",\n  \"Thranduil\",\n  \"Tom\",\n  \"Treebeard\",\n  \"Tulkas\",\n  \"Ulmo\",\n  \"Vaire\",\n  \"Vana\",\n  \"Varda\",\n  \"William\",\n  \"Yavanna\"\n];\n\nconst NonsenseLastNames = [\n  \"Black\",\n  \"Burbage\",\n  \"Carrow\",\n  \"Cattermole\",\n  \"Chang\",\n  \"Clearwater\",\n  \"Crabbe\",\n  \"Creevey\",\n  \"Crouch\",\n  \"Delacour\",\n  \"Diggory\",\n  \"Dumbledore\",\n  \"Dursley\",\n  \"Edgecombe\",\n  \"Filch\",\n  \"Flitwick\",\n  \"Fudge\",\n  \"Goyle\",\n  \"Granger\",\n  \"Grindelwald\",\n  \"Hagrid\",\n  \"Hufflepuff\",\n  \"Kettleburn\",\n  \"Lockhart\",\n  \"Longbottom\",\n  \"Lovegood\",\n  \"Lupin\",\n  \"Malfoy\",\n  \"Marchbanks\",\n  \"McGonagall\",\n  \"McLaggen\",\n  \"Moody\",\n  \"Nott\",\n  \"Ogden\",\n  \"Ollivander\",\n  \"Parkinson\",\n  \"Pettigrew\",\n  \"Peverell\",\n  \"Pince\",\n  \"Podmore\",\n  \"Pomfrey\",\n  \"Potter\",\n  \"Quirrell\",\n  \"Riddle\",\n  \"Rookwood\",\n  \"Rowle\",\n  \"Runcorn\",\n  \"Scrimgeour\",\n  \"Shacklebolt\",\n  \"Shunpike\",\n  \"Sinistra\",\n  \"Slughorn\",\n  \"Slytherin\",\n  \"Snape\",\n  \"Spinnet\",\n  \"Sprout\",\n  \"Thicknesse\",\n  \"Tonks\",\n  \"Trelawney\",\n  \"Twycross\",\n  \"Umbridge\",\n  \"Vance\",\n  \"Voldemort\",\n  \"Weasley\",\n  \"Wood\",\n  \"Yaxley\",\n  \"Zabini\"\n];\n\ntype Props = ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps>;\n\nclass RandomizeRegistrationButton extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n    this.deleteExistingRegistrations = this.deleteExistingRegistrations.bind(this);\n    this.generateEntries = this.generateEntries.bind(this);\n    this.randomizeRegistration = this.randomizeRegistration.bind(this);\n  }\n\n  deleteExistingRegistrations() {\n    const entryIds = this.props.registration.entries.map(e => e.id);\n    for (let i = 0; i < entryIds.length; i++) {\n      this.props.deleteRegistration(entryIds[i]);\n    }\n  }\n\n  // Generate entries in a flight together, in case we want to give them\n  // similar properties.\n  generateEntries(day: number, platform: number, flight: Flight) {\n    const numLifters = randomInt(6, 18);\n\n    for (let i = 0; i < numLifters; i++) {\n      // Set a nonsense Name.\n      // ==========================================\n      const firstName = NonsenseFirstNames[randomInt(0, NonsenseFirstNames.length - 1)];\n      const lastName = NonsenseLastNames[randomInt(0, NonsenseLastNames.length - 1)];\n      const name = firstName + \" \" + lastName;\n\n      // Set a random Sex.\n      // ==========================================\n      const sexes: Sex[] = [\"M\", \"F\", \"Mx\"];\n      const sex: Sex = sexes[randomInt(0, sexes.length - 1)];\n\n      // Assign a random Team.\n      // ==========================================\n      const teams: string[] = [\"Team Red\", \"Team Green\", \"Team Blue\"];\n      const team: string = teams[randomInt(0, teams.length - 1)];\n\n      // Generate random events, making most lifters SBD.\n      // ==========================================\n      let events: Event[] = [];\n      if (Math.random() < 0.5) {\n        events.push(\"SBD\");\n      }\n      if (Math.random() < 0.1) {\n        events.push(\"BD\");\n      }\n      if (Math.random() < 0.1) {\n        events.push(\"S\");\n      }\n      if (Math.random() < 0.1) {\n        events.push(\"B\");\n      }\n      if (Math.random() < 0.1) {\n        events.push(\"D\");\n      }\n      if (events.length === 0) {\n        events.push(\"SBD\");\n      }\n\n      // Generate random equipment, making most lifters SBD,\n      // being careful that it matches their events.\n      // ==========================================\n      let hasSquat = false;\n      for (let i = 0; i < events.length; i++) {\n        if (events[i].includes(\"S\")) {\n          hasSquat = true;\n          break;\n        }\n      }\n\n      const equipmentSelect = Math.random();\n      let equipment: Equipment = \"Sleeves\";\n      if (equipmentSelect < 0.7) {\n        // Nothing, sleeves default case.\n      } else if (equipmentSelect < 0.9) {\n        if (hasSquat) {\n          equipment = \"Wraps\";\n        }\n      } else if (equipmentSelect < 0.95) {\n        equipment = \"Single-ply\";\n      } else {\n        equipment = \"Multi-ply\";\n      }\n\n      // File into random divisions.\n      // ==========================================\n      let divisions = [];\n      if (this.props.meet.divisions.length > 0) {\n        const divisionsUpperBound = Math.max(1, this.props.meet.divisions.length - 1);\n        const numDivisions = randomInt(1, divisionsUpperBound);\n\n        // List of remaining available divisions.\n        let divchooser = this.props.meet.divisions.slice();\n\n        for (let i = 0; i < numDivisions; i++) {\n          const choice = randomInt(0, divchooser.length - 1);\n          divisions.push(divchooser[choice]);\n\n          // Delete the choice from the list of available divisions.\n          divchooser.splice(choice, 1);\n        }\n      }\n\n      this.props.newRegistration({\n        day: day,\n        platform: platform,\n        flight: flight,\n        name: name,\n        sex: sex,\n        team: team,\n        events: events,\n        equipment: equipment,\n        divisions: divisions\n      });\n    }\n  }\n\n  randomizeRegistration() {\n    const FLIGHTCHARS: Flight[] = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\"];\n\n    this.deleteExistingRegistrations();\n    for (let day = 1; day <= this.props.meet.lengthDays; day++) {\n      const numPlatforms = this.props.meet.platformsOnDays[day - 1];\n      for (let platform = 1; platform <= numPlatforms; platform++) {\n        const numFlights = randomInt(1, 3);\n        for (let flight = 0; flight < numFlights; flight++) {\n          this.generateEntries(day, platform, FLIGHTCHARS[flight]);\n        }\n      }\n    }\n  }\n\n  render() {\n    return (\n      <Button onClick={this.randomizeRegistration}>\n        <LocalizedString id=\"nav.registration\" />\n      </Button>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState) => ({\n  ...state\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    newRegistration: (obj: Partial<Entry>) => dispatch(newRegistration(obj)),\n    deleteRegistration: (entryId: number) => dispatch(deleteRegistration(entryId))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RandomizeRegistrationButton);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Randomizes the Registration page, for debugging.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\n\nimport Button from \"react-bootstrap/Button\";\n\nimport LocalizedString from \"../translations/LocalizedString\";\n\nimport { randomInt, randomFixedPoint } from \"./RandomizeHelpers\";\nimport { lbs2kg } from \"../../logic/units\";\n\nimport { updateRegistration } from \"../../actions/registrationActions\";\nimport { enterAttempt } from \"../../actions/liftingActions\";\n\nimport { GlobalState, MeetState, RegistrationState } from \"../../types/stateTypes\";\nimport { Lift } from \"../../types/dataTypes\";\n\ninterface StateProps {\n  meet: MeetState;\n  registration: RegistrationState;\n}\n\ninterface DispatchProps {\n  updateRegistration: (entryId: number, obj: Object) => void;\n  enterAttempt: (entryId: number, lift: Lift, attemptOneIndexed: number, weightKg: number) => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\nclass RandomizeWeighinsButton extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n    this.randomizeWeighins = this.randomizeWeighins.bind(this);\n  }\n\n  randomAttempt = () => {\n    const multiple = 2.5;\n    if (this.props.meet.inKg) {\n      return Math.floor(randomFixedPoint(25, 360, 1) / multiple) * multiple;\n    } else {\n      return lbs2kg(Math.floor(randomFixedPoint(55, 800, 1) / multiple) * multiple);\n    }\n  };\n\n  randomizeWeighins = () => {\n    const entries = this.props.registration.entries;\n    const inKg: boolean = this.props.meet.inKg;\n\n    for (let i = 0; i < entries.length; i++) {\n      const entry = entries[i];\n\n      // Get a random bodyweight.\n      // ==========================================\n      const bodyweightKg = inKg ? randomFixedPoint(20, 150, 1) : lbs2kg(randomFixedPoint(40, 320, 1));\n      this.props.updateRegistration(entry.id, {\n        bodyweightKg: bodyweightKg\n      });\n\n      // Get a random age.\n      const age = randomInt(5, 79);\n      this.props.updateRegistration(entry.id, {\n        age: age\n      });\n\n      // Figure out which events we're generating information for.\n      // ==========================================\n      let hasSquat = false;\n      let hasBench = false;\n      let hasDeadlift = false;\n      for (let j = 0; j < entry.events.length; j++) {\n        const e = entry.events[j];\n        if (e.includes(\"S\")) {\n          hasSquat = true;\n        }\n        if (e.includes(\"B\")) {\n          hasBench = true;\n        }\n        if (e.includes(\"D\")) {\n          hasDeadlift = true;\n        }\n      }\n\n      // Set attempts.\n      // ==========================================\n      if (hasSquat) {\n        this.props.enterAttempt(entry.id, \"S\", 1, this.randomAttempt());\n      }\n      if (hasBench) {\n        this.props.enterAttempt(entry.id, \"B\", 1, this.randomAttempt());\n      }\n      if (hasDeadlift) {\n        this.props.enterAttempt(entry.id, \"D\", 1, this.randomAttempt());\n      }\n\n      // Set rack info.\n      // ==========================================\n      if (hasSquat) {\n        const height = String(randomInt(2, 18));\n        const pos = Math.random() < 0.9 ? \"out\" : \"in\";\n        this.props.updateRegistration(entry.id, {\n          squatRackInfo: height + pos\n        });\n      }\n\n      if (hasBench) {\n        const height = String(randomInt(0, 12));\n        const safety = String(randomInt(0, 4));\n        this.props.updateRegistration(entry.id, {\n          benchRackInfo: height + \"/\" + safety\n        });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <Button onClick={this.randomizeWeighins}>\n        <LocalizedString id=\"nav.weigh-ins\" />\n      </Button>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState): StateProps => ({\n  meet: state.meet,\n  registration: state.registration\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  updateRegistration: (entryId, obj) => dispatch(updateRegistration(entryId, obj)),\n  enterAttempt: (entryId, lift, attemptOneIndexed, weightKg) =>\n    dispatch(enterAttempt(entryId, lift, attemptOneIndexed, weightKg))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RandomizeWeighinsButton);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Tools for manipulating state information to aid debugging.\n\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { connect } from \"react-redux\";\n\nimport Button from \"react-bootstrap/Button\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Card from \"react-bootstrap/Card\";\n\nimport RandomizeMeetSetupButton from \"./RandomizeMeetSetup\";\nimport RandomizeRegistrationButton from \"./RandomizeRegistration\";\nimport RandomizeWeighinsButton from \"./RandomizeWeighins\";\n\nimport { GlobalState } from \"../../types/stateTypes\";\n\nclass StateTools extends React.Component<ReturnType<typeof mapStateToProps>> {\n  // The simplest possible way to implement a Reset button.\n  reInitializeRedux = () => {\n    localStorage.clear();\n    window.location.reload();\n  };\n\n  render() {\n    return (\n      <div>\n        <Card>\n          <Card.Header>\n            <FormattedMessage id=\"debug.generator-card-header\" defaultMessage=\"Generate Random Valid Data\" />\n          </Card.Header>\n          <Card.Body>\n            <Button style={{ marginRight: \"15px\" }} variant=\"danger\" onClick={this.reInitializeRedux}>\n              <FormattedMessage id=\"debug.button-reset\" defaultMessage=\"Reset\" />\n            </Button>\n            <ButtonGroup>\n              <RandomizeMeetSetupButton />\n              <RandomizeRegistrationButton />\n              <RandomizeWeighinsButton />\n            </ButtonGroup>\n          </Card.Body>\n        </Card>\n\n        <Card border=\"info\">\n          <Card.Header>\n            <FormattedMessage id=\"debug.state-card-header\" defaultMessage=\"Redux State\" />\n          </Card.Header>\n          <Card.Body>\n            <pre>{JSON.stringify(this.props, null, 2)}</pre>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GlobalState) => ({\n  ...state\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(StateTools);\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// A page dedicated to debugging tools.\n\nimport React from \"react\";\nimport StateTools from \"../components/debug/StateTools\";\n\nconst DebugContainer = () => {\n  return (\n    <div style={{ marginRight: \"20px\", marginLeft: \"20px\" }}>\n      <StateTools />\n    </div>\n  );\n};\n\nexport default DebugContainer;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Card from \"react-bootstrap/Card\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\n\n// Extracted out so that <pre> renders linebreaks properly.\nconst licenseText =\n  \"This program is free software: you can redistribute it and/or modify\\n\" +\n  \"it under the terms of the GNU Affero General Public License as\\n\" +\n  \"published by the Free Software Foundation, either version 3 of the\\n\" +\n  \"License, or (at your option) any later version.\\n\" +\n  \"\\n\" +\n  \"This program is distributed in the hope that it will be useful,\\n\" +\n  \"but WITHOUT ANY WARRANTY; without even the implied warranty of\\n\" +\n  \"MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n\" +\n  \"GNU Affero General Public License for more details.\";\n\nclass AboutContainer extends React.Component<{}> {\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col md={6}>\n            <Card>\n              <Card.Header>\n                <FormattedMessage id=\"about.credits-header\" defaultMessage=\"Credits\" />\n              </Card.Header>\n              <Card.Body>\n                <p>\n                  <FormattedMessage\n                    id=\"about.made-by\"\n                    defaultMessage=\"OpenLifter is made by the OpenPowerlifting project.\"\n                  />\n                </p>\n                <p>\n                  <a href=\"https://www.openpowerlifting.org\" rel=\"noopener noreferrer\" target=\"_blank\">\n                    OpenPowerlifting.org\n                  </a>\n                </p>\n                <p>\n                  <FormattedMessage id=\"about.credits-intro\" defaultMessage=\"Thanks to:\" />\n                  <ul>\n                    <li>Irene Aguilar &mdash; Spanish localization</li>\n                    <li>Romina Basting &mdash; German localization</li>\n                    <li>Mike Beelen &mdash; Dutch localization</li>\n                    <li>Jerônimo Cavalcante &mdash; Portuguese localization</li>\n                    <li>Arman Danielyan &mdash; Russian localization</li>\n                    <li>Tommy DeFea &mdash; Graphic design</li>\n                    <li>Alper Dokucu &mdash; Turkish localization</li>\n                    <li>Trystan Oakley &mdash; Testing</li>\n                    <li>Jared Klopper &mdash; Programming</li>\n                    <li>Kai Ma &mdash; Simplified Chinese localization</li>\n                    <li>Rodney Marsh &mdash; Programming</li>\n                    <li>Matt Pearce &mdash; Coefficient calculations</li>\n                    <li>David Sacras &mdash; Portuguese localization</li>\n                    <li>Alan Sambol &mdash; Croatian localization</li>\n                    <li>Milena Schaefer &mdash; German localization</li>\n                    <li>Sean Stangl &mdash; Programming and maintenance</li>\n                    <li>Michael Vessia &mdash; Programming and maintenance</li>\n                    <li>Andrius Virbičianskas &mdash; Lithuanian localization</li>\n                    <li>Sarah Wellberg &mdash; UX design and testing</li>\n                    <li>Jo Whiteley &mdash; Testing</li>\n                  </ul>\n                </p>\n              </Card.Body>\n            </Card>\n          </Col>\n\n          <Col md={6}>\n            <Card>\n              <Card.Header>\n                <FormattedMessage id=\"about.license-header\" defaultMessage=\"License\" />\n              </Card.Header>\n              <Card.Body>\n                <p>\n                  <FormattedMessage\n                    id=\"about.copyright\"\n                    defaultMessage=\"OpenLifter is Copyright (C) 2018-2019 The OpenPowerlifting Project.\"\n                  />\n                </p>\n                <p>\n                  <FormattedMessage\n                    id=\"about.freedom-intro\"\n                    defaultMessage=\"OpenLifter is Free Software. Free Software grants you the following freedoms:\"\n                  />\n                </p>\n                <ol>\n                  <li>\n                    <FormattedMessage\n                      id=\"about.freedom-0\"\n                      defaultMessage=\"The freedom to run the program as you wish, for any purpose.\"\n                    />\n                  </li>\n                  <li>\n                    <FormattedMessage\n                      id=\"about.freedom-1\"\n                      defaultMessage=\"The freedom to study how the program works, and change it as you wish.\"\n                    />\n                  </li>\n                  <li>\n                    <FormattedMessage\n                      id=\"about.freedom-2\"\n                      defaultMessage=\"The freedom to redistribute copies so you can help others.\"\n                    />\n                  </li>\n                  <li>\n                    <FormattedMessage\n                      id=\"about.freedom-3\"\n                      defaultMessage=\"The freedom to distribute copies of your modified versions to others.\"\n                    />\n                  </li>\n                </ol>\n                <p>\n                  <FormattedMessage\n                    id=\"about.freedom-quick-summary\"\n                    defaultMessage=\"The AGPLv3+ license we use means that if you distribute this software or host it on a server, you must give your users the same rights we give you, including full source code. In addition, AGPLv3+ code must remain free/libre, and cannot be included in proprietary software or in free/libre software with a weaker or incompatible license.\"\n                  />\n                </p>\n                <p>\n                  <FormattedMessage\n                    id=\"about.agpl-short-english-intro\"\n                    defaultMessage=\"Here is the short English license blurb:\"\n                  />\n                </p>\n                <pre>{licenseText}</pre>\n                <a href=\"https://www.gnu.org/licenses/agpl-3.0.en.html\" rel=\"noopener noreferrer\" target=\"_blank\">\n                  <FormattedMessage\n                    id=\"about.link-full-agpl-license\"\n                    defaultMessage=\"Full Text of the GNU Affero General Public License, Version 3\"\n                  />\n                </a>\n                <br />\n                <a href=\"https://www.gnu.org/licenses/gpl-faq.html\" rel=\"noopener noreferrer\" target=\"_blank\">\n                  <FormattedMessage id=\"about.link-gnu-faq\" defaultMessage=\"FAQ about GNU Licenses\" />\n                </a>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default AboutContainer;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// The RootContainer manually implements route parsing from GET parameters.\n//\n// The issue is that because OpenLifter is statically hosted, only the base\n// \"/\" route actually contains the index.html of the application. The other\n// routes (such as \"/lifting\") have index.html files that redirect to \"/\".\n//\n// We've changed things so that \"/lifting/index.html\" redirects to \"/?lifting\".\n// But React Router isn't able to route based on GET parameters.\n//\n// Therefore it's set up so that \"/\" routes to this RootContainer,\n// and the RootContainer inspects the GET parameters and renders the\n// appropriate container.\n\nimport React from \"react\";\n\nimport HomeContainer from \"./HomeContainer\";\nimport MeetSetupContainer from \"./MeetSetupContainer\";\nimport RegistrationContainer from \"./RegistrationContainer\";\nimport WeighinsContainer from \"./WeighinsContainer\";\nimport LiftingContainer from \"./LiftingContainer\";\nimport FlightOrderContainer from \"./FlightOrderContainer\";\nimport ResultsContainer from \"./ResultsContainer\";\nimport DebugContainer from \"./DebugContainer\";\nimport AboutContainer from \"./AboutContainer\";\n\nclass RootContainer extends React.Component {\n  render() {\n    if (typeof window.location.search !== \"string\") {\n      return <HomeContainer />;\n    }\n\n    switch (window.location.search) {\n      case \"?meet-setup\":\n        return <MeetSetupContainer />;\n      case \"?registration\":\n        return <RegistrationContainer />;\n      case \"?weigh-ins\":\n        return <WeighinsContainer />;\n      case \"?flight-order\":\n        return <FlightOrderContainer />;\n      case \"?lifting\":\n        return <LiftingContainer />;\n      case \"?results\":\n        return <ResultsContainer />;\n      case \"?debug\":\n        return <DebugContainer />;\n      case \"?about\":\n        return <AboutContainer />;\n      default:\n        return <HomeContainer />;\n    }\n  }\n}\n\nexport default RootContainer;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// Defines the Navigation component for navigating between pages using react-router.\n\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\n\n// The LinkContainer is used to wrap Components that change the URL,\n// hooking them up with the Router.\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nconst Navigation = () => {\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n      <Navbar.Brand>\n        <img alt=\"OpenLifter\" src=\"openlifter-white.svg\" height=\"20\" />\n      </Navbar.Brand>\n\n      {/* Navbar uses Toggle and Collapse to automatically create a hamburger menu\n          in case of overflow on small screens.*/}\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse>\n        <Nav>\n          <LinkContainer exact to=\"/\">\n            <Nav.Link>\n              <FormattedMessage id=\"nav.home\" defaultMessage=\"Home\" />\n            </Nav.Link>\n          </LinkContainer>\n          <LinkContainer to=\"/meet-setup\">\n            <Nav.Link>\n              <FormattedMessage id=\"nav.meet-setup\" defaultMessage=\"Meet Setup\" />\n            </Nav.Link>\n          </LinkContainer>\n          <LinkContainer to=\"/registration\">\n            <Nav.Link>\n              <FormattedMessage id=\"nav.registration\" defaultMessage=\"Registration\" />\n            </Nav.Link>\n          </LinkContainer>\n          <LinkContainer to=\"/weigh-ins\">\n            <Nav.Link>\n              <FormattedMessage id=\"nav.weigh-ins\" defaultMessage=\"Weigh-ins\" />\n            </Nav.Link>\n          </LinkContainer>\n          <LinkContainer to=\"/flight-order\">\n            <Nav.Link>\n              <FormattedMessage id=\"nav.flight-order\" defaultMessage=\"Flight Order\" />\n            </Nav.Link>\n          </LinkContainer>\n          <LinkContainer to=\"/lifting\">\n            <Nav.Link>\n              <FormattedMessage id=\"nav.lifting\" defaultMessage=\"Lifting\" />\n            </Nav.Link>\n          </LinkContainer>\n          <LinkContainer to=\"/results\">\n            <Nav.Link>\n              <FormattedMessage id=\"nav.results\" defaultMessage=\"Results\" />\n            </Nav.Link>\n          </LinkContainer>\n          <LinkContainer to=\"/debug\">\n            <Nav.Link>\n              <FormattedMessage id=\"nav.debug\" defaultMessage=\"Debug\" />\n            </Nav.Link>\n          </LinkContainer>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default Navigation;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport configureStore from \"./store\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport OpenLifterIntlProvider from \"./components/translations/OpenLifterIntlProvider\";\n\nimport RootContainer from \"./containers/RootContainer\";\nimport MeetSetupContainer from \"./containers/MeetSetupContainer\";\nimport RegistrationContainer from \"./containers/RegistrationContainer\";\nimport WeighinsContainer from \"./containers/WeighinsContainer\";\nimport LiftingContainer from \"./containers/LiftingContainer\";\nimport FlightOrderContainer from \"./containers/FlightOrderContainer\";\nimport ResultsContainer from \"./containers/ResultsContainer\";\nimport DebugContainer from \"./containers/DebugContainer\";\nimport AboutContainer from \"./containers/AboutContainer\";\nimport Navigation from \"./components/Navigation\";\n\nclass App extends React.Component {\n  render() {\n    let { store, persistor } = configureStore();\n\n    return (\n      // Provider is a React component from the react-redux library.\n      // Its purpose is to \"provide\" the given store to its child components.\n      // Because the Provider wraps the whole App here, the store is global state.\n      //\n      // Switch iterates over its children (Routes) and renders the first one that matches the current path name\n      //\n      // Route takes a path and a component, and renders the given component if the current path matches the specified path.\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <OpenLifterIntlProvider>\n            <Router basename={process.env.REACT_APP_ROUTER_BASENAME}>\n              <div>\n                <Navigation />\n                <Switch>\n                  <Route exact path=\"/\" component={RootContainer} />\n                  <Route path=\"/meet-setup\" component={MeetSetupContainer} />\n                  <Route path=\"/registration\" component={RegistrationContainer} />\n                  <Route path=\"/weigh-ins\" component={WeighinsContainer} />\n                  <Route path=\"/flight-order\" component={FlightOrderContainer} />\n                  <Route path=\"/lifting\" component={LiftingContainer} />\n                  <Route path=\"/results\" component={ResultsContainer} />\n                  <Route path=\"/debug\" component={DebugContainer} />\n                  <Route path=\"/about\" component={AboutContainer} />\n                </Switch>\n              </div>\n            </Router>\n          </OpenLifterIntlProvider>\n        </PersistGate>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// vim: set ts=2 sts=2 sw=2 et:\n//\n// This file is part of OpenLifter, simple Powerlifting meet software.\n// Copyright (C) 2019 The OpenPowerlifting Project.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as\n// published by the Free Software Foundation, either version 3 of the\n// License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport * as serviceWorker from \"./serviceWorker\";\nimport App from \"./App\";\n\nimport \"./index.css\";\nimport \"./bootstrap-custom/bootstrap.scss\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst rootElement = document.getElementById(\"root\");\nif (rootElement !== null) {\n  ReactDOM.render(<App />, rootElement);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LeftCard_container__2XjgL\",\"activeCard\":\"LeftCard_activeCard__1M9K6\",\"loadingBar\":\"LeftCard_loadingBar__2trT4\",\"attemptText\":\"LeftCard_attemptText__1JsZg\",\"barArea\":\"LeftCard_barArea__3OqZl\",\"nextText\":\"LeftCard_nextText__2cIaN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"liftingView\":\"LiftingView_liftingView__W3VXA\",\"middleParentContainer\":\"LiftingView_middleParentContainer__1ysAw\",\"leftCardContainer\":\"LiftingView_leftCardContainer__2banw\",\"rightCardContainer\":\"LiftingView_rightCardContainer__1sjfd\"};"],"sourceRoot":""}